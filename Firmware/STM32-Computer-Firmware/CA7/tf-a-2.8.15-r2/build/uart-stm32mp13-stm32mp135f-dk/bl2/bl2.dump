
/home/lubuntu/Dokument/GitHub/STM32-Computer/Firmware/STM32-Computer-Firmware/CA7/tf-a-2.8.15-r2/tf-a-stm32mp-v2.8.15-stm32mp-r2/../build/uart-stm32mp13-stm32mp135f-dk/bl2/bl2.elf:     file format elf32-littlearm
/home/lubuntu/Dokument/GitHub/STM32-Computer/Firmware/STM32-Computer-Firmware/CA7/tf-a-2.8.15-r2/tf-a-stm32mp-v2.8.15-stm32mp-r2/../build/uart-stm32mp13-stm32mp135f-dk/bl2/bl2.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2ffe4000

Program Header:
    LOAD off    0x00001000 vaddr 0x2ffe4000 paddr 0x2ffe4000 align 2**12
         filesz 0x00010000 memsz 0x00010000 flags r-x
    LOAD off    0x00011000 vaddr 0x2fff4000 paddr 0x2fff4000 align 2**12
         filesz 0x000007dc memsz 0x00004000 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00010000  2ffe4000  2ffe4000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000007dc  2fff4000  2fff4000  00011000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fff4800  2fff4800  000117dc  2**6
                  ALLOC
  3 .bss          000008e0  2fff5400  2fff5400  000117dc  2**5
                  ALLOC
  4 xlat_table    00002000  2fff6000  2fff6000  000117dc  2**12
                  ALLOC
  5 .debug_info   00048272  00000000  00000000  000117dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 0000d7ef  00000000  00000000  00059a4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00001f98  00000000  00000000  00067240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0001fec8  00000000  00000000  000691d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000a260  00000000  00000000  000890a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      00000012  00000000  00000000  00093300  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000035  00000000  00000000  00093312  2**0
                  CONTENTS, READONLY
 12 .debug_ranges 00005cf8  00000000  00000000  00093348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  000051fc  00000000  00000000  00099040  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0002df75  00000000  00000000  0009e23c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
2ffe4000 l    d  ro	00000000 ro
2fff4000 l    d  .data	00000000 .data
2fff4800 l    d  stacks	00000000 stacks
2fff5400 l    d  .bss	00000000 .bss
2fff6000 l    d  xlat_table	00000000 xlat_table
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 bl2_el3_entrypoint.o
2ffe40f0 l       ro	00000000 do_primary_cold_boot
00000000 l    df *ABS*	00000000 bl2_run_next_image.o
00000000 l    df *ABS*	00000000 cpu_helpers.o
2ffe4228 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 spinlock.o
00000000 l    df *ABS*	00000000 platform_up_stack.o
2fff4800 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 stm32mp1_critic_power_wrapper.o
2fff463c l       .data	00000000 saved_sp
2fff4640 l       .data	00000000 saved_vbar
2fff4644 l       .data	00000000 saved_mvbar
00000000 l    df *ABS*	00000000 debug.o
2fff3c45 l       ro	00000000 assert_msg1
2fff3c53 l       ro	00000000 assert_msg2
2ffe43cc l       ro	00000000 _assert_loop
2ffe43ac l       ro	00000000 dec_print_loop
2fff3c5a l       ro	00000000 panic_msg
2fff3c6b l       ro	00000000 panic_end
2ffe4460 l       ro	00000000 _panic_handler
00000000 l    df *ABS*	00000000 cache_helpers.o
2ffe44dc l       ro	00000000 exit_loop_cimvac
2ffe44c8 l       ro	00000000 loop_cimvac
2ffe4518 l       ro	00000000 exit_loop_cmvac
2ffe4504 l       ro	00000000 loop_cmvac
2ffe4554 l       ro	00000000 exit_loop_imvac
2ffe4540 l       ro	00000000 loop_imvac
2ffe4558 l     F ro	000000c8 do_dcsw_op
2ffe4608 l       ro	00000000 dcsw_loop_table
2ffe456c l       ro	00000000 loop1
2ffe45e4 l       ro	00000000 level_done
2ffe45b0 l       ro	00000000 loop2
2ffe45c8 l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 misc_helpers.o
2ffe469c l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 enable_mmu.o
00000000 l    df *ABS*	00000000 stm32_console.o
2ffe47e4 l       ro	00000000 core_init_fail
2ffe47c8 l       ro	00000000 teack_loop
2ffe4838 l       ro	00000000 register_fail
2ffe4884 l       ro	00000000 putc_error
2ffe4850 l       ro	00000000 txe_loop
2ffe486c l       ro	00000000 tc_loop
2ffe48d0 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 cortex_a7.o
2ffe4910 l     F ro	00000014 cortex_a7_enable_smp
2ffe4924 l     F ro	00000004 cortex_a7_reset_func
2fff3cbe l       ro	00000000 cortex_a7_errata_list_start
2fff3cbe l       ro	00000000 cortex_a7_errata_list_end
00000000 l    df *ABS*	00000000 stm32mp1_helper.o
2ffe4950 l       ro	00000000 other_exception_lbl
2fff3ce8 l       ro	00000000 undefined_str
2ffe4970 l       ro	00000000 print_exception_info
2fff3d06 l       ro	00000000 exception_start_str
2fff3d19 l       ro	00000000 exception_end_str
2fff3d4d l       ro	00000000 end_error_str
2fff3cbe l       ro	00000000 prefetch_abort_str
2fff3d37 l       ro	00000000 ifsr_str
2fff3d42 l       ro	00000000 ifar_str
2fff3cd5 l       ro	00000000 data_abort_str
2fff3d21 l       ro	00000000 dfsr_str
2fff3d2c l       ro	00000000 dfar_str
00000000 l    df *ABS*	00000000 bl2_image_load_v2.c
00000000 l    df *ABS*	00000000 bl2_main.c
00000000 l    df *ABS*	00000000 desc_image_load.c
2fff5540 l     O .bss	0000000c next_bl_params
2fff554c l     O .bss	0000000c bl_load_info
2fff168b l     O ro	00000003 CSWTCH.28
00000000 l    df *ABS*	00000000 fdt_wrappers.c
2ffedd98 l     F ro	00000004 fdt32_to_cpu
2ffedd98 l     F ro	00000004 cpu_to_fdt32
00000000 l    df *ABS*	00000000 io_fip.c
2ffeddec l     F ro	00000004 device_type_fip
2ffe50c0 l     F ro	00000020 fip_file_close
2fff5400 l     O .bss	00000030 current_fip_file
2ffe50e0 l     F ro	0000009c fip_dev_init
2fff556c l     O .bss	00000004 backend_image_spec
2fff5570 l     O .bss	00000004 backend_dev_handle
2ffe517c l     F ro	000000b4 fip_file_read
2ffe5230 l     F ro	00000024 fip_file_len
2ffe5254 l     F ro	000000f0 fip_file_open
2fff18bd l     O ro	00000010 uuid_null.0
2ffe5344 l     F ro	00000050 fip_dev_close
2fff5564 l     O .bss	00000008 state_pool
2fff5558 l     O .bss	00000004 fip_dev_count
2ffe5394 l     F ro	0000004c fip_dev_open
2fff555c l     O .bss	00000008 dev_info_pool
2ffefec0 l     O ro	00000024 fip_dev_funcs
2ffefee4 l     O ro	00000004 fip_dev_connector
00000000 l    df *ABS*	00000000 io_memmap.c
2ffeddf0 l     F ro	00000004 device_type_memmap
2ffeddf4 l     F ro	00000004 memmap_dev_close
2ffe540c l     F ro	00000060 memmap_block_write
2ffe546c l     F ro	00000064 memmap_block_read
2ffe54d0 l     F ro	0000001c memmap_dev_open
2fff4048 l     O .data	00000008 memmap_dev_info
2ffe54ec l     F ro	00000020 memmap_block_len
2ffe550c l     F ro	00000038 memmap_block_seek
2ffe5544 l     F ro	00000024 memmap_block_close
2fff5430 l     O .bss	00000018 current_memmap_file
2ffe5568 l     F ro	0000004c memmap_block_open
2ffeff0c l     O ro	00000004 memmap_dev_connector
2ffefee8 l     O ro	00000024 memmap_dev_funcs
00000000 l    df *ABS*	00000000 io_storage.c
2ffeddf8 l     F ro	00000018 is_valid_dev
2ffede10 l     F ro	00000010 is_valid_entity
2ffe55dc l     F ro	00000040 free_entity.isra.0
2fff557c l     O .bss	00000010 entity_map
2fff5578 l     O .bss	00000004 entity_count
2fff5574 l     O .bss	00000004 dev_count
2fff558c l     O .bss	00000020 entity_pool
00000000 l    df *ABS*	00000000 stm32mp1_ddr.c
2ffede20 l     F ro	00000022 stm32mp1_mode_register_write.isra.0
2ffede42 l     F ro	0000003a stm32mp1_ddrphy_idone_wait
2ffede7c l     F ro	0000007e stm32mp1_wait_operating_mode
2ffeff10 l     O ro	00000060 ddr_registers
2fff0d58 l     O ro	00000064 ddr_reg
2fff0d28 l     O ro	00000030 ddr_timing
2fff0cd8 l     O ro	0000002c ddr_perf
2fff0d04 l     O ro	00000024 ddr_map
2fff0cb4 l     O ro	00000024 ddrphy_reg
2fff0c8c l     O ro	00000028 ddrphy_timing
00000000 l    df *ABS*	00000000 stm32mp1_ram.c
2ffe5ce8 l     F ro	0000015c stm32mp1_ddr_setup
2fff1a8d l     O ro	00000013 __func__.0
2fff5448 l     O .bss	00000020 ddr_priv_data
2fff5ba8 l     O .bss	00000001 ddr_self_refresh
00000000 l    df *ABS*	00000000 stm32mp_ram.c
2fff1b2b l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 stm32_mce.c
2ffe5f74 l     F ro	00000070 check_region_settings
2ffe6100 l     F ro	00000068 stm32_mce_configure_region.part.0
2ffe6168 l     F ro	000000d0 fconf_populate_mce
2fff3da8 l     O ro	0000000c mce_config__populator
00000000 l    df *ABS*	00000000 stm32_uart.c
2ffe6238 l     F ro	00000050 stm32_uart_wait_flag
2fff0dbc l     O ro	00000018 presc_table
00000000 l    df *ABS*	00000000 fconf.c
00000000 l    df *ABS*	00000000 fconf_dyn_cfg_getter.c
2fff4050 l     O .data	00000010 dtb_info_pool
2fff55ac l     O .bss	00000060 dtb_infos
2fff3db4 l     O ro	0000000c dyn_cfg__populator
00000000 l    df *ABS*	00000000 optee_utils.c
2ffe663c l     F ro	00000060 parse_optee_image
00000000 l    df *ABS*	00000000 bl2_io_storage.c
2fff5618 l     O .bss	00000004 fip_dev_con
2fff5614 l     O .bss	00000004 memmap_dev_con
00000000 l    df *ABS*	00000000 stm32cubeprogrammer_uart.c
2ffe69c4 l     F ro	00000020 uart_send_result
2ffe69e4 l     F ro	00000028 uart_write
2ffe6a0c l     F ro	00000054 uart_read_8
2fff5ba9 l     O .bss	00000001 init_done.0
2fff22a8 l     O ro	00000006 command_tab
00000000 l    df *ABS*	00000000 stm32mp_fconf_io.c
2ffeffe4 l     O ro	00000038 load_info
2fff4060 l     O .data	00000010 fconf_stm32mp_uuids_pool
2fff3dc0 l     O ro	0000000c stm32mp_io__populator
2fff5baa l     O .bss	00000070 fconf_stm32mp_uuids
00000000 l    df *ABS*	00000000 bl2_plat_setup.c
2fff268c l     O ro	000001d5 debug_msg
00000000 l    df *ABS*	00000000 plat_ddr.c
00000000 l    df *ABS*	00000000 stm32mp1_critic_power.c
00000000 l    df *ABS*	00000000 stm32mp1_fconf_firewall.c
2ffee0b8 l     F ro	00000004 fdt32_to_cpu
2ffe76d0 l     F ro	000000cc fconf_populate_stm32mp1_firewall
2fff567c l     O .bss	00000004 nb_regions
2fff3dcc l     O ro	0000000c stm32mp1_firewall__populator
00000000 l    df *ABS*	00000000 bl_common.c
00000000 l    df *ABS*	00000000 tf_log.c
2fff44b4 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fff002c l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 uuid.c
2ffee27a l     F ro	0000002e hex_val
2ffee2a8 l     F ro	0000003a read_hex.part.0
00000000 l    df *ABS*	00000000 stm32mp_common.c
2ffe7bc0 l     F ro	00000034 stm32_get_bootinfo_cell.isra.0
2fff5698 l     O .bss	00000004 boot_ctx_address
2fff5ba4 l     O .bss	00000002 boot_itf_selected
2fff5694 l     O .bss	00000004 boot_action_saved
2fff569c l     O .bss	00000004 lock
2fff5c1a l     O .bss	00000001 initialized.1
2fff5684 l     O .bss	0000000c s_boot_mode.0
2fff5690 l     O .bss	00000004 itf.4
2fff56a0 l     O .bss	00000018 console
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fff4000 l     O .data	00000048 tf_xlat_ctx
2fff5468 l     O .bss	000000c0 tf_mmap
2fff6000 l     O xlat_table	00002000 tf_xlat_tables
2fff56b8 l     O .bss	00000008 tf_mapped_regions
2fff5cc0 l     O .bss	00000020 tf_base_xlat_table
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2ffee3dc l     F ro	00000124 mmap_add_region_check
2ffee500 l     F ro	0000001a xlat_clean_dcache_range
2ffe80dc l     F ro	00000028 xlat_table_get_index
2ffe8104 l     F ro	0000013c xlat_tables_unmap_region
2ffe8304 l     F ro	000001d8 xlat_tables_map_region
00000000 l    df *ABS*	00000000 clk.c
2fff56c0 l     O .bss	00000004 ops
00000000 l    df *ABS*	00000000 delay_timer.c
2fff56c4 l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2ffee540 l     F ro	00000008 get_timer_value
2fff56c8 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp_ddr.c
2fff5c1c l     O .bss	00000001 axi_port_reenable_request
2fff5c1b l     O .bss	00000001 host_interface_reenable_request
00000000 l    df *ABS*	00000000 stm32_gpio.c
2ffee686 l     F ro	00000004 fdt32_to_cpu
2ffe8d10 l     F ro	000000f0 set_gpio.constprop.0
00000000 l    df *ABS*	00000000 nvmem.c
2fff56d4 l     O .bss	0000000c nvmem_dev_array
2fff2daf l     O ro	00000012 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_tamp_nvram_core.c
2ffee6b2 l     F ro	00000004 fdt32_to_cpu
2ffe9120 l     F ro	00000064 stm32_tamp_nvram_write_bkp
2ffe9184 l     F ro	00000064 stm32_tamp_nvram_read_bkp.constprop.0.isra.0
2ffe91e8 l     F ro	000000a4 stm32_tamp_nvram_read_cell
2ffe928c l     F ro	000000c4 stm32_tamp_nvram_write_cell
2fff56ec l     O .bss	0000002c nvram_drv_data
2fff56e0 l     O .bss	0000000c static_bkpreg_zones_end.0
2fff0040 l     O ro	00000008 stm32_tamp_nvram_nvmem_ops
00000000 l    df *ABS*	00000000 regulator_core.c
2ffee710 l     F ro	00000004 fdt32_to_cpu
2ffee714 l     F ro	0000000a unlock_driver.isra.0
2ffee71e l     F ro	0000000a lock_driver.isra.0
2fff30f8 l     O ro	00000016 __func__.1
2fff5718 l     O .bss	0000017c rdev_array
2fff30df l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 regulator_fixed.c
2ffee72e l     F ro	00000004 fixed_set_state
2ffee732 l     F ro	00000004 fixed_get_state
2fff5894 l     O .bss	00000068 data
2fff44b8 l     O .data	00000020 fixed_ops
2fff3163 l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2ffee736 l     F ro	00000004 fdt32_to_cpu
2ffe99c4 l     F ro	00000024 fdt_get_node_parent_address_cells
2fff5900 l     O .bss	00000004 fdt
2fff58fc l     O .bss	00000004 size.1
2fff3275 l     O ro	00000010 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_fconf_fuse.c
2ffe9df4 l     F ro	00000128 fconf_populate_stm32mp_fuse_provisioning
2fff3dd8 l     O ro	0000000c stm32mp_fuse__populator
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2ffe9f1c l     F ro	00000038 get_part_number
2fff5904 l     O .bss	00000004 part_number.1
2ffefe60 l     O ro	00000060 stm32mp1_mmap
2fff0048 l     O ro	00000020 stm32mp1_uart_addresses
2fff4773 l     O .data	00000001 state.0
00000000 l    df *ABS*	00000000 tzc400.c
2fff5908 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 bsec2.c
2ffea4e0 l     F ro	00000028 is_otp_invalid_mode
2ffea508 l     F ro	00000018 bsec_lock
2fff5910 l     O .bss	00000004 bsec_spinlock
2ffea520 l     F ro	00000018 bsec_unlock
2ffea538 l     F ro	00000058 bsec_power_safmem
2ffea590 l     F ro	00000018 otp_bank_offset
2ffea5a8 l     F ro	00000034 bsec_check_error
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff352c l     O ro	0000000a CSWTCH.37
00000000 l    df *ABS*	00000000 stm32_i2c.c
2ffee92c l     F ro	00000044 i2c_wait_flag
2ffeab38 l     F ro	0000002c i2c_transfer_config.isra.0
2ffee970 l     F ro	0000008c i2c_ack_failed
2ffee9fc l     F ro	00000042 i2c_wait_txis
2ffeea3e l     F ro	00000042 i2c_wait_stop
2ffeab64 l     F ro	000001f0 i2c_read.constprop.0
2ffead54 l     F ro	00000218 i2c_write
2fff0068 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fff5914 l     O .bss	00000018 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2ffeb624 l     F ro	00000024 dt_get_pmic_node
2fff44dc l     O .data	00000004 node.2
2ffeeaae l     F ro	00000006 pmic_list_voltages
2ffeeab4 l     F ro	00000006 pmic_get_voltage
2ffeeaba l     F ro	00000006 pmic_set_voltage
2ffeeac0 l     F ro	0000000a pmic_get_state
2ffeeaca l     F ro	00000044 pmic_set_flag
2ffeeb0e l     F ro	0000000c pmic_set_state
2fff44e0 l     O .data	00000004 status.3
2fff44d8 l     O .data	00000004 i2c_node.1
2fff592c l     O .bss	00000004 pmic_i2c_addr
2fff5930 l     O .bss	00000024 i2c_handle
2fff00c8 l     O ro	00000118 pmic_regs
2fff37fc l     O ro	0000000e __func__.0
2fff01e0 l     O ro	00000020 pmic_ops
00000000 l    df *ABS*	00000000 stpmic1.c
2ffeb8e4 l     F ro	00000044 get_regulator_data
2fff0200 l     O ro	00000118 regulators_table
2fff5c1d l     O .bss	00000001 ldo3_special_mode
2fff0e4a l     O ro	00000002 ldo3_special_mode_table
2fff5ba6 l     O .bss	00000002 pmic_i2c_addr
2fff5954 l     O .bss	00000004 pmic_i2c_handle
2fff1022 l     O ro	00000080 buck1_voltage_table
2fff0fd8 l     O ro	0000004a buck2_voltage_table
2fff0f68 l     O ro	00000070 buck3_voltage_table
2fff0eee l     O ro	0000007a buck4_voltage_table
2fff0ebc l     O ro	00000032 ldo1_voltage_table
2fff0e8a l     O ro	00000032 ldo2_voltage_table
2fff0e4c l     O ro	0000003e ldo3_voltage_table
2fff0dd8 l     O ro	00000002 ldo4_voltage_table
2fff0e0c l     O ro	0000003e ldo5_voltage_table
2fff0dda l     O ro	00000032 ldo6_voltage_table
2fff0dd6 l     O ro	00000002 vref_ddr_voltage_table
2fff0dd4 l     O ro	00000002 fixed_5v_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
2ffebd7c l     F ro	00000054 enable_io_comp_cell_finish
2ffebdd0 l     F ro	00000078 sdmmc_is_low_voltage
00000000 l    df *ABS*	00000000 stm32mp_tamp_nvram_mp1.c
2fff0318 l     O ro	00000008 stm32mp1_tamp_nvram
2fff44e4 l     O .data	0000000c mp1_bkpreg_access
2fff0320 l     O ro	00000018 mp1_zone_cfg_fields
00000000 l    df *ABS*	00000000 clk-stm32-core.c
2ffeecbe l     F ro	00000016 _clk_lock
2ffeecd4 l     F ro	00000016 _clk_unlock
2fff5958 l     O .bss	00000004 stm32_clock_data
2fff5960 l     O .bss	00000004 reg_lock
2ffeee02 l     F ro	0000000a clk_stm32_osc_recalc_rate
2ffeee0c l     F ro	00000020 clk_gate_is_enabled
2ffeee2c l     F ro	00000026 clk_gate_disable
2ffeee52 l     F ro	00000022 clk_gate_enable
2ffec030 l     F ro	00000020 _clk_get_ops
2ffeeed4 l     F ro	00000026 timer_recalc_rate
2ffeeefa l     F ro	0000000c clk_fixed_rate_recalc
2ffec108 l     F ro	00000028 clk_stm32_get_parent
2ffec130 l     F ro	00000028 clk_stm32_get_rate
2ffef090 l     F ro	0000003e _clk_stm32_enable_core
2fff595c l     O .bss	00000004 refcount_lock
2ffec180 l     F ro	00000028 clk_stm32_enable
2ffec214 l     F ro	00000028 clk_stm32_disable
2ffec23c l     F ro	00000028 clk_stm32_is_enabled
2fff3996 l     O ro	0000001a __func__.1
2fff397b l     O ro	0000001b __func__.0
2fff03fc l     O ro	00000014 stm32mp_clk_ops
00000000 l    df *ABS*	00000000 clk-stm32mp13.c
2ffef356 l     F ro	00000016 clk_stm32_composite_gate_is_enabled
2ffef36c l     F ro	00000016 clk_stm32_composite_gate_enable
2ffec3e8 l     F ro	00000024 clk_stm32_pll_is_enabled
2fff090c l     O ro	00000020 stm32_mp13_clk_pll
2ffec40c l     F ro	00000064 clk_stm32_pll_recalc_rate
2ffef382 l     F ro	00000016 clk_stm32_composite_gate_disable
2ffef398 l     F ro	0000001a clk_stm32_composite_recalc_rate
2ffec470 l     F ro	00000078 _clk_stm32_pll_enable
2ffec4e8 l     F ro	00000020 clk_stm32_pll_enable
2ffec508 l     F ro	0000007c _clk_stm32_pll_disable
2ffec584 l     F ro	00000020 clk_stm32_pll_disable
2ffec5a4 l     F ro	0000015c clk_stm32_pll_init
2fff3ab0 l     O ro	00000006 stm32mp1_pll
2fff4594 l     O .data	000000a8 stm32mp13_osc_data
2fff4528 l     O .data	00000020 stm32mp13_clock_pdata
2fff44f0 l     O .data	00000038 stm32mp13_clock_data
2fff0448 l     O ro	0000048c stm32mp13_clk
2fff0a64 l     O ro	00000228 parent_mp13
2fff112e l     O ro	00000238 gates_mp13
2fff092c l     O ro	00000138 dividers_mp13
2fff5c20 l     O .bss	00000061 refcounts_mp13
2fff4564 l     O .data	00000030 ops_array_mp13
2fff5a84 l     O .bss	00000048 mp13_osci
2fff5acc l     O .bss	000000c0 mp13_pll
2fff59cc l     O .bss	000000b8 mp13_clksrc
2fff5964 l     O .bss	00000068 mp13_clkdiv
2fff5b8c l     O .bss	00000004 __compound_literal.57
2fff5c1f l     O .bss	00000001 __compound_literal.61
2fff47da l     O .data	00000001 __compound_literal.59
2fff47d9 l     O .data	00000001 __compound_literal.63
2fff47d8 l     O .data	00000001 __compound_literal.65
2fff47d7 l     O .data	00000001 __compound_literal.67
2fff47d6 l     O .data	00000001 __compound_literal.69
2fff47d1 l     O .data	00000002 __compound_literal.77
2fff47d5 l     O .data	00000001 __compound_literal.73
2fff47d3 l     O .data	00000002 __compound_literal.75
2fff5c1e l     O .bss	00000001 __compound_literal.79
2fff47d0 l     O .data	00000001 __compound_literal.80
2fff47cf l     O .data	00000001 __compound_literal.81
2fff47ce l     O .data	00000001 __compound_literal.82
2fff47cc l     O .data	00000002 __compound_literal.83
2fff47cb l     O .data	00000001 __compound_literal.84
2fff47c9 l     O .data	00000002 __compound_literal.86
2fff47c7 l     O .data	00000002 __compound_literal.87
2fff47c5 l     O .data	00000002 __compound_literal.88
2fff47c3 l     O .data	00000002 __compound_literal.89
2fff47c1 l     O .data	00000002 __compound_literal.90
2fff47bf l     O .data	00000002 __compound_literal.91
2fff47bd l     O .data	00000002 __compound_literal.92
2fff47bb l     O .data	00000002 __compound_literal.93
2fff47b9 l     O .data	00000002 __compound_literal.94
2fff47b6 l     O .data	00000001 __compound_literal.101
2fff47b5 l     O .data	00000001 __compound_literal.103
2fff47b4 l     O .data	00000001 __compound_literal.105
2fff47b3 l     O .data	00000001 __compound_literal.107
2fff47b2 l     O .data	00000001 __compound_literal.109
2fff47b1 l     O .data	00000001 __compound_literal.111
2fff47b8 l     O .data	00000001 __compound_literal.96
2fff47b7 l     O .data	00000001 __compound_literal.98
2fff4558 l     O .data	00000008 __compound_literal.113
2fff4550 l     O .data	00000008 __compound_literal.115
2fff4548 l     O .data	00000008 __compound_literal.117
2fff4560 l     O .data	00000004 __compound_literal.71
2fff4778 l     O .data	00000002 __compound_literal.229
2fff4776 l     O .data	00000002 __compound_literal.230
2fff4774 l     O .data	00000002 __compound_literal.231
2fff47b0 l     O .data	00000001 __compound_literal.119
2fff47af l     O .data	00000001 __compound_literal.121
2fff47ae l     O .data	00000001 __compound_literal.123
2fff47ad l     O .data	00000001 __compound_literal.125
2fff47ac l     O .data	00000001 __compound_literal.127
2fff47ab l     O .data	00000001 __compound_literal.129
2fff47aa l     O .data	00000001 __compound_literal.131
2fff47a9 l     O .data	00000001 __compound_literal.133
2fff47a8 l     O .data	00000001 __compound_literal.135
2fff47a7 l     O .data	00000001 __compound_literal.137
2fff47a6 l     O .data	00000001 __compound_literal.139
2fff47a5 l     O .data	00000001 __compound_literal.141
2fff47a4 l     O .data	00000001 __compound_literal.143
2fff47a3 l     O .data	00000001 __compound_literal.145
2fff47a2 l     O .data	00000001 __compound_literal.147
2fff47a1 l     O .data	00000001 __compound_literal.149
2fff47a0 l     O .data	00000001 __compound_literal.151
2fff479f l     O .data	00000001 __compound_literal.153
2fff479e l     O .data	00000001 __compound_literal.155
2fff479d l     O .data	00000001 __compound_literal.157
2fff479c l     O .data	00000001 __compound_literal.159
2fff479b l     O .data	00000001 __compound_literal.161
2fff479a l     O .data	00000001 __compound_literal.163
2fff4799 l     O .data	00000001 __compound_literal.165
2fff4798 l     O .data	00000001 __compound_literal.167
2fff4797 l     O .data	00000001 __compound_literal.169
2fff4796 l     O .data	00000001 __compound_literal.171
2fff4795 l     O .data	00000001 __compound_literal.173
2fff4794 l     O .data	00000001 __compound_literal.175
2fff4793 l     O .data	00000001 __compound_literal.177
2fff4792 l     O .data	00000001 __compound_literal.179
2fff4791 l     O .data	00000001 __compound_literal.181
2fff4790 l     O .data	00000001 __compound_literal.183
2fff478f l     O .data	00000001 __compound_literal.185
2fff478e l     O .data	00000001 __compound_literal.187
2fff478d l     O .data	00000001 __compound_literal.189
2fff478c l     O .data	00000001 __compound_literal.191
2fff478b l     O .data	00000001 __compound_literal.193
2fff478a l     O .data	00000001 __compound_literal.195
2fff4789 l     O .data	00000001 __compound_literal.197
2fff4788 l     O .data	00000001 __compound_literal.199
2fff4787 l     O .data	00000001 __compound_literal.201
2fff4786 l     O .data	00000001 __compound_literal.203
2fff4785 l     O .data	00000001 __compound_literal.205
2fff4784 l     O .data	00000001 __compound_literal.207
2fff4783 l     O .data	00000001 __compound_literal.209
2fff4782 l     O .data	00000001 __compound_literal.211
2fff4781 l     O .data	00000001 __compound_literal.213
2fff4780 l     O .data	00000001 __compound_literal.215
2fff477f l     O .data	00000001 __compound_literal.217
2fff477e l     O .data	00000001 __compound_literal.219
2fff477d l     O .data	00000001 __compound_literal.221
2fff477c l     O .data	00000001 __compound_literal.223
2fff477b l     O .data	00000001 __compound_literal.225
2fff477a l     O .data	00000001 __compound_literal.227
2fff08f0 l     O ro	0000001c clk_stm32_pll_ops
2fff08d4 l     O ro	0000001c clk_stm32_composite_ops
2fff464c l     O .data	00000004 __compound_literal.53
2fff4648 l     O .data	00000004 __compound_literal.54
2fff465a l     O .data	00000004 __compound_literal.49
2fff4656 l     O .data	00000004 __compound_literal.50
2fff4650 l     O .data	00000006 __compound_literal.51
2fff110a l     O ro	00000024 axi_div_table
2fff10c6 l     O ro	00000044 mlahb_div_table
2fff10a2 l     O ro	00000024 apb_div_table
2fff14b0 l     O ro	00000008 MPU_src
2fff46f4 l     O .data	00000006 __compound_literal.20
2fff14aa l     O ro	00000006 AXI_src
2fff4760 l     O .data	00000006 __compound_literal.2
2fff14a2 l     O ro	00000008 MLAHBS_src
2fff46fa l     O .data	00000006 __compound_literal.19
2fff14c6 l     O ro	00000004 PLL12_src
2fff46ee l     O .data	00000006 __compound_literal.21
2fff14c0 l     O ro	00000006 PLL3_src
2fff46e8 l     O .data	00000006 __compound_literal.22
2fff14b8 l     O ro	00000008 PLL4_src
2fff46e2 l     O .data	00000006 __compound_literal.23
2fff14e0 l     O ro	00000008 RTC_src
2fff46d0 l     O .data	00000006 __compound_literal.26
2fff14d6 l     O ro	0000000a MCO1_src
2fff4706 l     O .data	00000006 __compound_literal.17
2fff14ca l     O ro	0000000c MCO2_src
2fff4700 l     O .data	00000006 __compound_literal.18
2fff149a l     O ro	00000008 CKPER_src
2fff475a l     O .data	00000006 __compound_literal.3
2fff13ba l     O ro	00000006 ADC1_src
2fff476c l     O .data	00000006 __compound_literal.0
2fff13b4 l     O ro	00000006 ADC2_src
2fff4766 l     O .data	00000006 __compound_literal.1
2fff136e l     O ro	00000008 DCMIPP_src
2fff4754 l     O .data	00000006 __compound_literal.4
2fff13a0 l     O ro	00000004 ETH1_src
2fff474e l     O .data	00000006 __compound_literal.5
2fff139c l     O ro	00000004 ETH2_src
2fff4748 l     O .data	00000006 __compound_literal.6
2fff13c6 l     O ro	00000008 FDCAN_src
2fff4742 l     O .data	00000006 __compound_literal.7
2fff1382 l     O ro	00000008 FMC_src
2fff473c l     O .data	00000006 __compound_literal.8
2fff1492 l     O ro	00000008 I2C12_src
2fff4736 l     O .data	00000006 __compound_literal.9
2fff148a l     O ro	00000008 I2C3_src
2fff4730 l     O .data	00000006 __compound_literal.10
2fff1482 l     O ro	00000008 I2C4_src
2fff472a l     O .data	00000006 __compound_literal.11
2fff147a l     O ro	00000008 I2C5_src
2fff4724 l     O .data	00000006 __compound_literal.12
2fff1404 l     O ro	0000000c LPTIM1_src
2fff471e l     O .data	00000006 __compound_literal.13
2fff13fa l     O ro	0000000a LPTIM2_src
2fff4718 l     O .data	00000006 __compound_literal.14
2fff13f0 l     O ro	0000000a LPTIM3_src
2fff4712 l     O .data	00000006 __compound_literal.15
2fff13e4 l     O ro	0000000c LPTIM45_src
2fff470c l     O .data	00000006 __compound_literal.16
2fff138a l     O ro	00000008 QSPI_src
2fff46dc l     O .data	00000006 __compound_literal.24
2fff137a l     O ro	00000008 RNG1_src
2fff46d6 l     O .data	00000006 __compound_literal.25
2fff1366 l     O ro	00000008 SAES_src
2fff46ca l     O .data	00000006 __compound_literal.27
2fff13da l     O ro	0000000a SAI1_src
2fff46c4 l     O .data	00000006 __compound_literal.28
2fff13ce l     O ro	0000000c SAI2_src
2fff46be l     O .data	00000006 __compound_literal.29
2fff13ac l     O ro	00000008 SDMMC1_src
2fff46b8 l     O .data	00000006 __compound_literal.30
2fff13a4 l     O ro	00000008 SDMMC2_src
2fff46b2 l     O .data	00000006 __compound_literal.31
2fff13c0 l     O ro	00000006 SPDIF_src
2fff46ac l     O .data	00000006 __compound_literal.32
2fff1470 l     O ro	0000000a SPI1_src
2fff46a6 l     O .data	00000006 __compound_literal.33
2fff1466 l     O ro	0000000a SPI23_src
2fff46a0 l     O .data	00000006 __compound_literal.34
2fff145a l     O ro	0000000c SPI4_src
2fff469a l     O .data	00000006 __compound_literal.35
2fff1450 l     O ro	0000000a SPI5_src
2fff4694 l     O .data	00000006 __compound_literal.36
2fff1376 l     O ro	00000004 STGEN_src
2fff468e l     O .data	00000006 __compound_literal.37
2fff1444 l     O ro	0000000c UART1_src
2fff4688 l     O .data	00000006 __compound_literal.38
2fff1438 l     O ro	0000000c UART2_src
2fff4682 l     O .data	00000006 __compound_literal.39
2fff142e l     O ro	0000000a UART35_src
2fff467c l     O .data	00000006 __compound_literal.40
2fff1424 l     O ro	0000000a UART4_src
2fff4676 l     O .data	00000006 __compound_literal.41
2fff141a l     O ro	0000000a UART6_src
2fff4670 l     O .data	00000006 __compound_literal.42
2fff1410 l     O ro	0000000a UART78_src
2fff466a l     O .data	00000006 __compound_literal.43
2fff1392 l     O ro	00000004 USBO_src
2fff4664 l     O .data	00000006 __compound_literal.44
2fff1396 l     O ro	00000006 USBPHY_src
2fff465e l     O .data	00000006 __compound_literal.45
00000000 l    df *ABS*	00000000 stm32_rng.c
2ffecefc l     F ro	00000034 seed_error_recovery
2fff5b90 l     O .bss	00000008 stm32_rng
00000000 l    df *ABS*	00000000 stm32_saes.c
2ffef3ba l     F ro	0000000e clear_computation_completed
2ffef3c8 l     F ro	0000002c saes_end
2ffed118 l     F ro	00000058 wait_computation_completed
2fff3bd7 l     O ro	0000001b __func__.1
2ffed170 l     F ro	000000e0 restore_context
2fff5b98 l     O .bss	0000000c saes_pdata
2fff3bf2 l     O ro	0000000b __func__.2
2fff3bc5 l     O ro	00000012 __func__.0
00000000 l    df *ABS*	00000000 aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 fdt.c
2ffef3f4 l     F ro	00000018 fdt32_ld
00000000 l    df *ABS*	00000000 fdt_addresses.c
2ffef636 l     F ro	0000002a fdt_cells
00000000 l    df *ABS*	00000000 fdt_ro.c
2ffef660 l     F ro	00000018 fdt32_ld
2ffef678 l     F ro	00000032 nextprop_
2ffef6aa l     F ro	00000004 fdt32_ld_.isra.0
2ffef6ae l     F ro	00000034 fdt_get_property_by_offset_
2ffef80c l     F ro	0000007c fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 printf.c
2ffefc22 l     F ro	00000082 unsigned_num_print.part.0
00000000 l    df *ABS*	00000000 snprintf.c
2ffefcbe l     F ro	000000ca unsigned_num_print
00000000 l    df *ABS*	00000000 bl2_arch_setup.c
00000000 l    df *ABS*	00000000 stm32mp_ddr_test.c
00000000 l    df *ABS*	00000000 plat_image_load.c
00000000 l    df *ABS*	00000000 plat_bl_common.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 <stdin>
00000000 l    df *ABS*	00000000 bl2_el3_exceptions.o
00000000 l    df *ABS*	00000000 plat_bl2_mem_params_desc.c
2fff428c l     O .data	00000228 bl2_mem_params_descs
2fff3e20 l     F ro	00000008 __bl2_run_next_image_from_thumb
2fff3e28 l     F ro	00000008 __flush_dcache_range_from_thumb
2fff3e30 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fff3e38 l     F ro	00000008 __console_register_from_arm
2fff3e40 l     F ro	00000008 __clean_dcache_range_from_thumb
2fff3e48 l     F ro	00000008 __spin_unlock_from_thumb
2fff3e50 l     F ro	00000008 __spin_lock_from_thumb
2ffee0bc g     F ro	00000014 putchar
2ffea79c g     F ro	000001c4 ddr_sw_self_refresh_exit
2ffef078 g     F ro	00000018 clk_stm32_enable_call_ops
2ffe967c g     F ro	000000e0 regulator_list_voltages
2ffe7a38 g     F ro	0000001c console_set_scope
2ffed790 g     F ro	0000001c fdt_address_cells
2ffee536 g     F ro	0000000a mdelay
2ffe7c64 g     F ro	00000018 stm32mp_pwr_regs_lock
2ffeecea g     F ro	00000028 _clk_stm32_gate_disable
2ffef436 g     F ro	00000054 fdt_offset_ptr
2ffeea9c g     F ro	00000012 stm32_i2c_mem_read
2fff5cc0 g       .bss	00000000 __PMF_TIMESTAMP_START__
2ffe9594 g     F ro	00000030 regulator_enable
2ffe79f8 g     F ro	00000040 console_register
2ffe41a8 g     F ro	00000034 reset_handler
2ffedf14 g     F ro	0000001e stm32mp_ddr_test_data_bus
2ffe4634 g     F ro	00000064 zeromem
2fff14e8 g     O ro	00000034 version_string
2ffea630 g     F ro	00000034 bsec_read_sr_lock
2ffee51a g     F ro	00000018 mmap_add_ctx
2ffe7954 g     F ro	00000020 print_entry_point_info
2ffefca4 g     F ro	0000001a printf
2ffeeb1a g     F ro	00000016 pmic_switch_off
2ffe89cc g     F ro	00000024 clk_is_enabled
2ffe85c8 g     F ro	00000154 mmap_add_dynamic_region_ctx
2ffe7c34 g     F ro	0000000c stm32mp_get_boot_ctx_address
2fff5528 g     O .bss	00000018 mmu_cfg_params
2ffee534 g     F ro	00000002 xlat_tables_print
2ffebfa8 g     F ro	00000088 clk_stm32_osc_init
2ffe94d4 g     F ro	0000004c regulator_get_by_name
2ffec158 g     F ro	00000028 _clk_stm32_enable
2ffe604c g     F ro	00000090 stm32_mce_write_master_key
2fff4000 g       ro	00000000 __RW_START__
2ffe6614 g     F ro	00000028 dyn_cfg_dtb_info_getter
2ffea664 g     F ro	00000034 bsec_read_sw_lock
2ffeb534 g     F ro	00000040 stm32_iwdg_refresh
2fff6000 g       xlat_table	00000000 __XLAT_TABLE_START__
2fff4070 g     O .data	00000214 policies
2ffef888 g     F ro	00000040 fdt_getprop_namelen
2ffe9f54 g     F ro	0000001c configure_mmu
2ffef7dc g     F ro	00000018 fdt_first_property_offset
2ffee06c g     F ro	00000004 bl2_el3_early_platform_setup
2ffe8034 g     F ro	00000028 mmap_add_dynamic_region
2ffef0ce g     F ro	0000001a clk_stm32_disable_call_ops
2ffe4368 g     F ro	0000006c asm_assert
2ffe9064 g     F ro	00000090 nvmem_get_cell_by_index
2ffe65f4 g     F ro	00000020 dyn_cfg_dtb_info_get_index
2ffea698 g     F ro	0000004c bsec_write_otp
2ffe4434 g     F ro	00000034 do_panic
2ffe4494 g     F ro	00000010 report_data_abort
2ffefbb4 g     F ro	0000002c memmove
2ffefa22 g     F ro	00000020 fdt_parent_offset
2ffe7618 g     F ro	000000b8 stm32_pwr_down_wfi_load
2ffe7f54 g     F ro	000000ac setup_mmu_cfg
2ffefd88 g     F ro	0000001a snprintf
2ffebf54 g     F ro	00000010 stm32mp_syscfg_boot_mode_enable
2ffee760 g     F ro	00000004 stm32mp_is_wakeup_from_standby
2ffe871c g     F ro	00000104 mmap_remove_dynamic_region_ctx
2ffeefec g     F ro	0000005e _clk_stm32_get_rate
2ffe8e00 g     F ro	00000240 dt_set_pinctrl_config
2ffea490 g     F ro	00000050 tzc400_disable_filters
2ffef97e g     F ro	0000001a fdt_path_offset
2fff561c g     O .bss	00000004 storage_dev_handle
2ffeec8a g     F ro	0000001c stm32_get_zdata_from_context
2ffe7ad4  w    F ro	00000024 plat_log_get_prefix
2ffeb968 g     F ro	00000028 stpmic1_register_read
2ffe492c g     F ro	00000054 plat_report_exception
2ffe64e8 g     F ro	0000010c fconf_populate_dtb_registry
2fff151c g     O ro	0000001e build_message
2ffe9414 g     F ro	000000c0 stm32_tamp_nvram_init
2ffeefc6 g     F ro	00000026 clk_get_index
2ffe806c g     F ro	0000003c init_xlat_tables
2ffeed12 g     F ro	00000024 _clk_stm32_gate_enable
2fff4000 g       .data	00000000 __DATA_START__
2ffebf84 g     F ro	0000000c clk_stm32_get_priv
2ffe9fa4 g     F ro	00000018 stm32_get_gpio_bank_clock
2ffe4d54 g     F ro	00000030 get_bl_mem_params_node
2ffed7ac g     F ro	000000b0 fdt_get_string
2ffea618 g     F ro	0000000c bsec_read_debug_conf
2ffe47ec g     F ro	00000050 console_stm32_register
2ffebf44 g     F ro	00000010 stm32mp_syscfg_get_chip_dev_id
2ffef2b8 g     F ro	00000018 clk_oscillator_wait_ready
2ffe7c40 g     F ro	0000000c stm32mp_get_boot_itf_selected
2ffee03c g     F ro	0000002c stm32_uart_getc
2ffe7e80 g     F ro	00000028 xlat_arch_regime_get_xn_desc
2ffeb67c g     F ro	0000010c initialize_pmic_i2c
2ffe8bd4 g     F ro	00000010 stm32mp_stgen_restore_rate
2ffef3b6 g     F ro	00000004 stm32mp1_clk_rcc_regs_unlock
2ffe6a60 g     F ro	000003f8 stm32cubeprog_uart_load
2ffee63a g     F ro	0000004c stm32mp_ddr_wait_refresh_update_done_ack
2ffefb30 g     F ro	00000036 fdt_node_offset_by_compatible
2ffe6f30 g     F ro	00000050 bl2_platform_setup
2ffedfb8 g     F ro	0000002e stm32mp_ddr_check_size
2ffeed36 g     F ro	00000012 _clk_get
2ffe5e44 g     F ro	00000044 stm32mp1_ddr_clk_enable
2ffe4b5c g       ro	00000000 __TEXT_RESIDENT_END__
2ffeef06 g     F ro	0000003e clk_mux_get_parent
2ffe7d84 g     F ro	0000004c stm32_get_boot_interface
2ffecfc4 g     F ro	00000154 stm32_rng_init
2ffefb9e g     F ro	00000016 memcpy
2ffebf9c g     F ro	0000000c clk_stm32_rcc_regs_unlock
2ffe7c54 g     F ro	00000008 stm32mp_ddrphyc_base
2ffe4cf4 g     F ro	0000001c flush_bl_params_desc
2ffe4634 g     F ro	00000064 zero_normalmem
2ffe4f70 g     F ro	00000088 fdtw_read_string
2ffed62c g     F ro	00000024 __aeabi_uldivmod
2fff0410 g     O ro	0000001c clk_gate_ops
2ffe977c g     F ro	00000180 regulator_register
2ffeeea2 g     F ro	00000032 clk_stm32_gate_disable
2ffeb788 g     F ro	000000f0 initialize_pmic
2ffebbb4 g     F ro	00000014 stpmic1_bind_i2c
2ffe4928 g     F ro	00000004 platform_mem_init
2ffee6e0 g     F ro	00000030 stm32_tamp_nvram_reg_field_read
2ffe4484 g     F ro	00000010 report_prefetch_abort
2ffea5dc g     F ro	0000003c bsec_probe
2fff042c g     O ro	0000001c clk_mux_ops
2ffee768 g     F ro	0000002c bsec_read_otp
2fff0354 g     O ro	0000001c clk_stm32_osc_ops
2ffedab8 g     F ro	000002d0 vsnprintf
2ffe8028 g     F ro	0000000c mmap_add
2ffeeb5e g     F ro	0000002e stpmic1_register_update
2ffe7c5c g     F ro	00000008 stm32mp_pwr_base
2ffee2e2 g     F ro	00000006 plat_get_syscnt_freq2
2ffe9f8c g     F ro	00000018 stm32_get_gpio_bank_offset
2ffe4b48 g     F ro	00000014 plat_panic_handler
2ffee070 g     F ro	00000004 plat_flush_next_bl_params
2fff3da8 g       ro	00000000 __RT_SVC_DESCS_START__
2ffef744 g     F ro	0000007a fdt_subnode_offset_namelen
2ffec368 g     F ro	00000044 clk_stm32_osc_gate_disable
2ffebd48 g     F ro	00000034 stm32mp1_pm_save_mce_region
2ffea960 g     F ro	00000018 ddr_read_sr_mode
2fff5400 g       stacks	00000000 __STACKS_END__
2ffee0a8 g     F ro	00000010 stm32_pwr_call_optee_ep
2ffefa04 g     F ro	0000001e fdt_node_depth
2ffec3ac g     F ro	0000003c clk_stm32_init
2fff5cc0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2ffea1d4 g     F ro	00000028 stm32_iwdg_get_instance
2ffee0fa g     F ro	00000180 __udivmoddi4
2ffe44e0 g     F ro	0000003c clean_dcache_range
2ffe9fbc g     F ro	00000014 get_uart_address
2ffe9ac4 g     F ro	00000088 dt_fill_device_info
2ffe9aa4 g     F ro	00000020 dt_set_stdout_pinctrl
2ffee548 g     F ro	0000000e stm32mp_ddr_start_sw_done
2ffe8be4 g     F ro	00000048 stm32mp_ddr_set_reg
2fff4288 g     O .data	00000004 bl_mem_params_desc_ptr
2ffe57b0 g     F ro	00000034 io_size
2ffe60dc g     F ro	00000010 stm32_mce_lock_master_key
2ffef426 g     F ro	00000010 fdt_header_size
2ffe6e58 g     F ro	000000d8 fconf_populate_stm32mp_io_policies
2ffee590 g     F ro	0000000e stm32mp_ddr_enable_axi_port
2ffe95c4 g     F ro	0000004c regulator_get_voltage
2ffef24a g     F ro	00000016 clk_stm32_divider_recalc
2ffe5644 g     F ro	00000028 io_dev_open
2ffe49e8 g     F ro	00000048 plat_report_data_abort
2ffe4278  w    F ro	0000000c plat_set_my_stack
2fff3da8 g       ro	00000000 __RT_SVC_DESCS_END__
2ffef530 g     F ro	00000024 fdt_check_node_offset_
2ffed4f0 g     F ro	0000013c stm32_saes_update
2ffe9520 g     F ro	00000074 regulator_get_by_supply_name
2ffe4d10 g     F ro	00000044 get_bl_params_node_index
2ffe4288 g     F ro	00000074 stm32_pwr_down_wfi_wrapper
2ffe4400 g     F ro	00000034 asm_print_hex
2ffe8c84 g     F ro	0000004c stm32mp_ddr_set_qd3_update_conditions
2ffee556 g     F ro	0000003a stm32mp_ddr_wait_sw_done_ack
000008e0 g       *ABS*	00000000 __BSS_SIZE__
2ffe43e4 g     F ro	0000001c asm_print_str
2ffe9040 g     F ro	00000024 nvmem_driver_register
2ffeedbe g     F ro	00000044 clk_oscillator_set_drive
2ffe4b30 g     F ro	00000008 plat_crash_console_flush
2ffea22c g     F ro	00000048 stm32mp_bkpram_get_access
2ffee0d0  w    F ro	00000004 plat_error_handler
2ffea624 g     F ro	0000000c bsec_write_scratch
2ffe7c4c g     F ro	00000008 stm32mp_ddrctrl_base
2ffefe30 g     F ro	00000014 strnlen
2ffef8c8 g     F ro	00000022 fdt_getprop
2ffef04a g     F ro	0000001a _clk_stm32_get_parent_rate
2fff560c g     O .bss	00000008 image_block_spec
2ffecc40 g     F ro	000002bc stm32mp1_clk_probe
2ffe7348 g     F ro	00000228 bl2_plat_handle_post_image_load
2fff3e58 g       ro	00000000 __RO_END_UNALIGNED__
2ffe7a54 g     F ro	00000058 console_putc
2ffe4a4c g     F ro	00000004 plat_secondary_cold_boot_setup
2ffe585c g     F ro	0000048c stm32mp1_ddr_init
2ffe7d28 g     F ro	0000002c stm32_display_board_info
2ffefe44 g     F ro	0000001a strrchr
2ffeec52 g     F ro	00000014 stm32mp_system_reset
2ffee6a2 g     F ro	00000010 nvmem_cell_write
2fff03c4 g     O ro	0000001c clk_stm32_gate_ops
2ffe4a70 g     F ro	000000a0 plat_crash_console_init
2ffe44a4 g     F ro	0000003c flush_dcache_range
2ffec264 g     F ro	0000002c clk_stm32_enable_critical_clocks
2fff0338 g     O ro	0000001c clk_stm32_osc_nogate_ops
2ffeb404 g     F ro	00000130 stm32_i2c_is_device_ready
2ffe669c g     F ro	00000024 optee_header_is_valid
2ffe60ec g     F ro	00000014 stm32_mce_is_hw_encryption_functional
2ffe8a90 g     F ro	00000028 timer_init
2ffe4dd8 g     F ro	000000c0 get_next_bl_params_from_mem_params_desc
2ffefa84 g     F ro	00000046 fdt_stringlist_contains
2ffee68a g     F ro	00000018 nvmem_cell_read
2ffea190 g     F ro	00000044 stm32mp_is_auth_supported
2ffeeba0 g     F ro	00000014 stpmic1_regulator_enable
2ffec050 g     F ro	0000002c fixed_factor_recalc_rate
2fff3de4 g       ro	00000000 __PMF_SVC_DESCS_END__
2ffee3aa g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff47dc g       .data	00000000 __RELA_END__
2fff47dc g       .data	00000000 __RELA_START__
2ffec290 g     F ro	00000094 clk_stm32_set_div
2ffe67d4 g     F ro	00000010 open_fip
2ffee5e6 g     F ro	0000004a stm32mp_ddr_disable_host_interface
2ffeb990 g     F ro	00000090 stpmic1_regulator_voltage_get
2ffed90c g     F ro	000001ac vprintf
2ffe4f00 g     F ro	00000070 fdt_read_uint32_array
2ffee3b0 g     F ro	0000001c is_dcache_enabled
2ffe8cd0 g     F ro	00000040 stm32mp_ddr_unset_qd3_update_conditions
2ffe4620 g     F ro	00000014 dcsw_op_all
2ffe4a40 g     F ro	00000004 plat_reset_handler
2ffe6288 g     F ro	00000198 stm32_uart_init
2fff0370 g     O ro	0000001c clk_stm32_fixed_rate_ops
2ffef7be g     F ro	0000001e fdt_subnode_offset
2ffe41e0 g     F ro	0000004c get_cpu_ops_ptr
2ffee074 g     F ro	00000004 plat_get_bl_image_load_info
2ffe7bf4 g     F ro	00000040 stm32mp_save_boot_ctx_address
2ffe7824 g     F ro	00000130 load_auth_image
2ffefb66 g     F ro	0000001c memchr
2ffeec34 g     F ro	0000001e stpmic1_get_version
2ffeb928 g     F ro	00000040 stpmic1_regulator_levels_mv
2ffef1d6 g     F ro	00000074 _clk_stm32_divider_recalc
2ffef2d6 g     F ro	00000020 _clk_stm32_gate_is_enabled
2fff8000 g       xlat_table	00000000 __BL2_END__
2fff038c g     O ro	0000001c clk_timer_ops
2ffe7ed8 g     F ro	0000003c xlat_arch_current_el
2ffe8b88 g     F ro	0000004c stm32mp_stgen_config
2ffef998 g     F ro	0000006c fdt_supernode_atdepth_offset
2ffe9c94 g     F ro	00000030 dt_get_board_model
2ffeddac g     F ro	00000018 fdt_read_uint32_default
00000000 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2ffee392 g     F ro	00000010 xlat_arch_get_pas
2ffee6b6 g     F ro	0000002a stm32_tamp_nvram_reg_get_zone
2ffed250 g     F ro	00000094 stm32_saes_driver_init
2ffef60c g     F ro	0000002a fdt_next_subnode
2ffef10c g     F ro	000000a8 _clk_stm32_set_parent
2ffe7cb4 g     F ro	00000030 stm32_get_otp_value_from_idx
2ffebf74 g     F ro	00000008 stm32_tamp_nvram_get_cdata
2fff47dc g       .data	00000000 __DATA_RAM_END__
2ffe6420 g     F ro	00000088 fconf_populate
2ffe9cc4 g     F ro	000000a8 dt_find_otp_name
2fff5cc0 g       .bss	00000000 __PMF_PERCPU_TIMESTAMP_END__
2ffefdd0 g     F ro	00000028 strlcpy
2ffe4c74 g     F ro	0000004c bl2_main
2ffefe08 g     F ro	00000028 strncmp
2fff5624 g     O .bss	00000058 handle
2fff47dc g       .data	00000000 __DATA_END__
2ffe4404 g       ro	00000000 asm_print_hex_bits
2fff5cc0 g       .bss	00000000 __BASE_XLAT_TABLE_START__
2fff3de4 g       ro	00000000 __CPU_OPS_START__
2ffebb48 g     F ro	00000030 stpmic1_regulator_bypass_mode_set
2ffe8a20 g     F ro	00000070 udelay
2ffe9b74 g     F ro	00000028 dt_get_stdout_uart_info
2ffef554 g     F ro	00000024 fdt_check_prop_offset_
2ffeed48 g     F ro	00000018 clk_oscillator_get_data
2ffe451c g     F ro	0000003c inv_dcache_range
2fff4772 g     O .data	00000001 console_state
2ffe4844 g     F ro	00000048 console_stm32_core_putc
2ffebd20 g     F ro	00000028 stm32_restore_ddr_training_area
2ffe4000 g     F ro	00000140 bl2_entrypoint
2ffef0e8 g     F ro	00000024 _clk_stm32_is_enabled
2ffe48ac g     F ro	0000003c console_stm32_core_flush
2ffe8ad0 g     F ro	00000054 generic_delay_timer_init
2ffe7570 g     F ro	0000004c bl2_el3_plat_prepare_exit
2ffe4310 g     F ro	00000044 stm32_pwr_back_from_stop2
2ffe8ab8 g     F ro	00000018 generic_delay_timer_init_args
2fff5cc0 g       .bss	00000000 __BAKERY_LOCK_END__
2ffefb82 g     F ro	0000001c memcmp
2ffee2e8 g     F ro	00000006 stm32mp_rcc_base
2ffe5e88 g     F ro	0000000c stm32mp1_ddr_is_restored
2ffebb78 g     F ro	0000003c stpmic1_active_discharge_mode_set
2ffee73a g     F ro	00000022 dt_get_pwr_vdd_voltage
2ffe8240 g     F ro	000000c4 xlat_desc
2ffef8ea g     F ro	00000094 fdt_path_offset_namelen
2ffef7f4 g     F ro	00000018 fdt_next_property_offset
2ffeffb8 g     O ro	0000002c init
2ffe4a50 g     F ro	0000001c plat_is_my_cpu_primary
2ffe9b4c g     F ro	00000028 dt_get_node
2fff5ce0 g       .bss	00000000 __BSS_END__
2fff3df4 g       ro	00000000 __CPU_OPS_END__
2ffe779c g     F ro	0000002c stm32mp1_arch_security_setup
2ffea428 g     F ro	00000068 tzc400_enable_filters
2ffeec10 g     F ro	00000024 stpmic1_regulator_icc_set
2ffe4a44 g     F ro	00000008 plat_get_my_entrypoint
2ffe5764 g     F ro	0000004c io_seek
2ffefa42 g     F ro	00000042 fdt_node_offset_by_phandle
2ffe582c g     F ro	00000030 io_close
2ffee0da g     F ro	00000020 __ctzdi2
2ffe8b24 g     F ro	00000034 fdt_get_clock_id
2ffea3e4 g     F ro	00000044 tzc400_update_filters
2ffebf90 g     F ro	0000000c clk_stm32_rcc_regs_lock
2ffea320 g     F ro	000000c4 tzc400_configure_region
2ffeef44 g     F ro	00000028 _clk_stm32_set_parent_by_index
2ffe99e8 g     F ro	00000014 dt_open_and_check
2ffe46b4 g     F ro	00000008 disable_mmu_icache_secure
2ffec07c g     F ro	0000008c clk_mux_set_parent
2ffeeca6 g     F ro	00000018 stm32mp_syscfg_enable_io_compensation_finish
2ffee01c g     F ro	00000020 stm32_uart_flush
2ffedff0 g     F ro	0000002c stm32_uart_putc
2fff3df4 g       ro	00000000 __GOT_END__
2ffefbe0 g     F ro	00000042 memset
2ffef064 g     F ro	00000014 _stm32_clk_is_flags
2ffee5d8 g     F ro	0000000e stm32mp_ddr_enable_host_interface
2fff3de4 g       ro	00000000 __PARSER_LIB_DESCS_END__
2fff5cc0 g       .bss	00000000 __BAKERY_LOCK_START__
2ffe6f80 g     F ro	000003c8 bl2_el3_plat_arch_setup
2fff3e00 g       ro	00000000 bl2_vector_table
2ffe4160 g     F ro	00000048 bl2_run_next_image
2ffe98fc g     F ro	000000c8 fixed_regulator_register
2ffeddc4 g     F ro	00000028 fdt_read_uint64
2ffe488c g     F ro	0000001c console_stm32_putc
2ffebf64 g     F ro	00000010 stm32mp_syscfg_boot_mode_disable
2fff4284 g     O .data	00000004 bl_mem_params_desc_num
2ffee764 g     F ro	00000004 stm32mp_skip_boot_device_after_standby
2ffebe48 g     F ro	00000028 stm32mp_syscfg_enable_io_compensation_start
2ffee0d4  w    F ro	00000002 bl2_plat_preload_setup
2ffee7b6 g     F ro	00000010 ddr_get_io_calibration_val
2ffee3a2 g     F ro	00000008 xlat_arch_get_max_supported_pa
2ffe4b5c g     F ro	00000118 bl2_load_images
2ffe80a8 g     F ro	00000034 enable_mmu_svc_mon
2ffea978 g     F ro	000001c0 ddr_set_sr_mode
2ffee630 g     F ro	0000000a stm32mp_ddr_sw_selfref_exit
2ffedd88 g     F ro	00000002 bl2_arch_setup
2fff3df4 g       ro	00000000 __GOT_START__
2ffe5f20 g     F ro	00000054 stm32mp_ddr_dt_get_param
2ffed85c g     F ro	00000044 fdt_get_phandle
2ffef260 g     F ro	00000058 _clk_stm32_gate_wait_ready
00000000 g       *ABS*	00000000 __PERCPU_TIMESTAMP_SIZE__
2ffefdb8 g     F ro	00000018 strcmp
2ffeb574 g     F ro	000000b0 stm32_iwdg_init
2ffe975c g     F ro	00000020 regulator_get_range
2ffe64a8 g     F ro	00000040 set_config_info
2ffe75bc g     F ro	0000005c stm32mp_board_ddr_power_init
2ffea274 g     F ro	00000024 tzc400_set_action
2ffeba80 g     F ro	00000098 stpmic1_regulator_voltage_set
2ffedefa g     F ro	0000001a stm32mp_ddr_test_rw_access
2ffeeb8c g     F ro	0000000a stpmic1_powerctrl_on
2fff3de4 g       ro	00000000 __FCONF_POPULATOR_END__
2ffe4740 g     F ro	000000ac console_stm32_core_init
2ffe4cc0 g     F ro	00000034 flush_bl_params_desc_args
2ffebc88 g     F ro	00000044 stm32_pm_get_optee_ep
2ffe89a8 g     F ro	00000024 clk_get_rate
2ffe4698 g     F ro	0000001c disable_mmu_secure
2ffeaf6c g     F ro	00000064 stm32_i2c_get_setup_from_fdt
2fff03e0 g     O ro	0000001c clk_stm32_divider_ops
2ffeba20 g     F ro	00000060 stpmic1_register_write
2ffe5ed0 g     F ro	00000050 stm32mp_ddr_dt_get_info
2ffeeb30 g     F ro	0000002e stpmic1_is_regulator_enabled
2ffe48ec g     F ro	0000001c console_stm32_flush
2ffe7af8 g     F ro	000000c8 read_uuid
2fff5ce0 g       .bss	00000000 __BASE_XLAT_TABLE_END__
2ffed6c4 g     F ro	000000cc fdt_check_header
2ffe90f4 g     F ro	0000002c nvmem_get_cell_by_name
2ffe7aac g     F ro	00000028 console_flush
2ffee2fe g     F ro	0000001e stm32mp_map_ddr_non_cacheable
2ffee3cc g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff4000 g       ro	00000000 __RO_END__
2ffe566c g     F ro	00000034 io_dev_init
2ffebb18 g     F ro	00000030 stpmic1_regulator_sink_mode_set
2ffe67e4 g     F ro	00000010 open_storage
2ffef6e2 g     F ro	00000062 fdt_get_name
2ffe9c64 g     F ro	00000030 dt_get_vdd_regulator
2ffe9a10 g     F ro	00000020 fdt_check_node
2ffe57e4 g     F ro	00000048 io_read
2ffe504c g     F ro	00000074 fdt_get_stdout_node_offset
2ffe4260 g     F ro	00000018 spin_unlock
2ffef5e6 g     F ro	00000026 fdt_first_subnode
2fff5400 g       .bss	00000000 __BSS_START__
2fff4000 g       .data	00000000 __DATA_RAM_START__
2ffe4000 g       ro	00000000 __RO_START__
2ffeebec g     F ro	00000024 stpmic1_regulator_mask_reset_set
2ffedf32 g     F ro	00000086 stm32mp_ddr_test_addr_bus
2ffe84dc g     F ro	000000ec mmap_add_region_ctx
2ffee0d6  w    F ro	00000004 plat_try_next_boot_source
2ffee75c g     F ro	00000004 stm32mp_get_chip_dev_id
2fff3de4 g       ro	00000000 __PMF_SVC_DESCS_START__
2ffe4b3c g     F ro	00000008 plat_crash_console_putc
2ffe56d0 g     F ro	00000094 io_open
2ffef578 g     F ro	0000006e fdt_next_node
2ffea13c g     F ro	00000054 stm32mp_check_closed_device
2ffeeb96 g     F ro	0000000a stpmic1_switch_off
2ffedd8a g     F ro	0000000e bl2_el3_setup
2ffebc28 g     F ro	00000060 stm32mp_reset_deassert
2ffe99fc g     F ro	00000014 fdt_get_address
2ffef1b4 g     F ro	00000022 clk_stm32_div_get_value
2ffe423c g     F ro	00000024 spin_lock
2ffe79d0 g     F ro	00000028 console_is_registered
2ffe89f0 g     F ro	00000030 clk_register
2ffe7c7c g     F ro	00000018 stm32mp_pwr_regs_unlock
2ffe9b9c g     F ro	00000070 dt_match_instance_by_compatible
2ffee794 g     F ro	00000022 ddr_enable_clock
2ffe9c0c g     F ro	00000058 dt_get_ddr_size
2ffe7f14 g     F ro	00000040 is_mmu_enabled_ctx
2ffea6e4 g     F ro	000000b8 bsec_shadow_read_otp
2ffe6980 g     F ro	00000044 plat_get_image_source
2ffe8984 g     F ro	00000024 clk_disable
2ffea298 g     F ro	0000005c tzc400_init
2ffe7974 g     F ro	0000005c tf_log
2fff5620 g     O .bss	00000004 fip_dev_handle
2ffe561c g     F ro	00000028 io_register_device
2ffebccc g     F ro	00000054 stm32_context_save_bl2_param
2fff3da8 g       ro	00000000 __FCONF_POPULATOR_START__
2ffee7c6 g     F ro	00000166 ddr_standby_sr_entry
2ffe66c0 g     F ro	00000114 parse_optee_header
2ffeb8a8 g     F ro	0000003c pmic_voltages_init
2ffe4e98 g     F ro	00000068 populate_next_bl_params_config
2fff8000 g       xlat_table	00000000 __RW_END__
2ffe9f70 g     F ro	0000001c stm32_get_gpio_bank_base
2ffe9a30 g     F ro	00000074 fdt_get_status
2ffee088 g     F ro	00000020 stm32_pwr_cstop_critic_exit
2ffebbc8 g     F ro	00000060 stm32mp_reset_assert
2ffef3b2 g     F ro	00000004 stm32mp1_clk_rcc_regs_lock
2ffeed60 g     F ro	0000003c clk_oscillator_set_bypass
2ffee328 g     F ro	0000006a stm32_save_boot_info
2ffe4990 g     F ro	00000048 plat_report_prefetch_abort
2ffef30c g     F ro	00000014 clk_stm32_osc_gate_is_enabled
2ffedd9c g     F ro	00000010 fdt_read_uint32
2ffe4d84 g     F ro	00000054 get_bl_load_info_from_mem_params_desc
2fff4800 g       stacks	00000000 __STACKS_START__
2ffe77c8 g     F ro	0000005c stm32mp1_security_setup
2ffe4ff8 g     F ro	00000054 fdtw_read_uuid
2ffe9fd0 g     F ro	0000012c stm32mp_get_soc_name
2ffeed9c g     F ro	00000022 clk_oscillator_set_css
2ffef48a g     F ro	000000a6 fdt_next_tag
2fff5cc0 g       .bss	00000000 __PMF_TIMESTAMP_END__
2ffea0fc g     F ro	0000001c stm32mp_print_cpuinfo
2ffe4000 g       ro	00000000 __TEXT_RESIDENT_START__
2ffe8c2c g     F ro	00000058 stm32mp_ddr_sw_selfref_entry
2ffebf7c g     F ro	00000008 stm32_tamp_nvram_get_access_rights
2ffe8820 g     F ro	00000140 init_xlat_tables_ctx
2ffeb878 g     F ro	00000030 print_pmic_info_and_debug
2ffebf34 g     F ro	00000010 stm32mp_syscfg_get_chip_version
2ffeafd0 g     F ro	00000434 stm32_i2c_init
2ffeea80 g     F ro	0000001c stm32_i2c_mem_write
2fff8000 g       xlat_table	00000000 __XLAT_TABLE_END__
2ffe6910 g     F ro	00000070 bl2_plat_handle_pre_image_load
2ffed8a0 g     F ro	0000002c fdt_get_alias_namelen
2ffe9350 g     F ro	000000c4 stm32_tamp_nvram_update_rights
2ffee2ee g     F ro	00000010 stm32mp_lock_available
2ffe8b58 g     F ro	00000030 fdt_get_uart_clock_freq
2fff03a8 g     O ro	0000001c clk_fixed_factor_ops
2ffe55b4 g     F ro	00000028 register_io_dev_memmap
2ffeef6c g     F ro	0000005a _clk_stm32_get_parent
2ffef2f6 g     F ro	00000016 clk_stm32_gate_is_enabled
2ffefdf8 g     F ro	00000010 strlen
2ffec700 g     F ro	00000540 stm32mp1_clk_init
2ffecf30 g     F ro	00000094 stm32_rng_read
2ffe4470 g     F ro	00000014 report_exception
2ffe7c94 g     F ro	00000020 stm32_get_otp_index
2ffe7ea8 g     F ro	00000030 xlat_arch_tlbi_va
2ffea1fc g     F ro	00000030 stm32_iwdg_get_otp_config
2ffeb648 g     F ro	00000034 dt_pmic_status
2ffef320 g     F ro	00000036 stm32_clk_parse_fdt_by_name
2ffe56a0 g     F ro	00000030 io_dev_close
2ffed8f4 g     F ro	00000018 __assert
2ffefda2 g     F ro	00000016 strchr
2ffee532 g     F ro	00000002 xlat_mmap_print
2ffe53e0 g     F ro	0000002c register_io_dev_fip
2ffee59e g     F ro	0000003a stm32mp_ddr_disable_axi_port
2ffeebb4 g     F ro	00000014 stpmic1_regulator_disable
2ffe5e94 g     F ro	0000003c stm32mp1_ddr_probe
2ffeebc8 g     F ro	00000024 stpmic1_regulator_pull_down_set
2ffeee74 g     F ro	0000002e clk_stm32_gate_enable
2ffe46c0 g     F ro	00000074 enable_mmu_direct_svc_mon
2ffea2f4 g     F ro	0000002c tzc400_configure_region0
2ffe7dd0 g     F ro	000000b0 stm32mp_uart_console_setup
2ffed650 g     F ro	00000074 fdt_ro_probe_
2ffefaca g     F ro	00000066 fdt_stringlist_search
2ffe8960 g     F ro	00000024 clk_enable
2ffe9610 g     F ro	0000006c regulator_set_voltage
2ffed8cc g     F ro	00000028 fdt_node_check_compatible
2ffe67f4 g     F ro	0000011c stm32mp_io_setup
2ffeec66 g     F ro	00000024 stm32_clean_context
2ffe7d54 g     F ro	00000030 stm32_get_boot_mode_cell
2ffe805c g     F ro	00000010 mmap_remove_dynamic_region
2ffe7ce4 g     F ro	00000044 stm32_get_otp_value
2ffe9d6c g     F ro	00000088 dt_get_otp_by_phandle
2fff5680 g     O .bss	00000004 console_list
2ffee31c g     F ro	0000000c stm32mp_unmap_ddr
2ffea118 g     F ro	00000024 stm32mp_print_boardinfo
2ffef2d0 g     F ro	00000006 clk_oscillator_wait_ready_on
2ffee078 g     F ro	00000010 plat_get_next_bl_params
2ffef40c g     F ro	0000001a fdt_header_size_
2ffee728 g     F ro	00000006 regulator_set_min_voltage
2ffee068 g     F ro	00000004 plat_try_backup_partitions
2ffed2e4 g     F ro	0000020c stm32_saes_init
2fff5cc0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2ffe8000 g     F ro	00000028 mmap_add_region
2ffebe70 g     F ro	000000c4 stm32mp_syscfg_init
2ffe5fe4 g     F ro	00000068 stm32_mce_init
2fff3de4 g       ro	00000000 __PARSER_LIB_DESCS_START__
2ffedfe6 g     F ro	0000000a stm32_uart_stop
2ffec324 g     F ro	00000044 clk_stm32_osc_gate_enable
2ffec1a8 g     F ro	0000006c _clk_stm32_disable



Disassembly of section ro:

2ffe4000 <bl2_entrypoint>:
2ffe4000:	e1a09000 	mov	r9, r0
2ffe4004:	e1a0a001 	mov	sl, r1
2ffe4008:	e1a0b002 	mov	fp, r2
2ffe400c:	e1a0c003 	mov	ip, r3
2ffe4010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffe4014:	e3100001 	tst	r0, #1
2ffe4018:	0a000002 	beq	2ffe4028 <bl2_entrypoint+0x28>
2ffe401c:	e59f011c 	ldr	r0, [pc, #284]	@ 2ffe4140 <do_primary_cold_boot+0x50>
2ffe4020:	e3a010f7 	mov	r1, #247	@ 0xf7
2ffe4024:	ea0000cf 	b	2ffe4368 <asm_assert>
2ffe4028:	e59f0114 	ldr	r0, [pc, #276]	@ 2ffe4144 <do_primary_cold_boot+0x54>
2ffe402c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe4030:	f57ff06f 	isb	sy
2ffe4034:	f1020016 	cps	#22
2ffe4038:	f57ff06f 	isb	sy
2ffe403c:	eb000280 	bl	2ffe4a44 <plat_get_my_entrypoint>
2ffe4040:	e3500000 	cmp	r0, #0
2ffe4044:	112fff10 	bxne	r0
2ffe4048:	e59f00f8 	ldr	r0, [pc, #248]	@ 2ffe4148 <do_primary_cold_boot+0x58>
2ffe404c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffe4050:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffe4054:	f57ff06f 	isb	sy
2ffe4058:	eb000052 	bl	2ffe41a8 <reset_handler>
2ffe405c:	e59f10e8 	ldr	r1, [pc, #232]	@ 2ffe414c <do_primary_cold_boot+0x5c>
2ffe4060:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffe4064:	e1800001 	orr	r0, r0, r1
2ffe4068:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe406c:	f57ff06f 	isb	sy
2ffe4070:	e3a00c02 	mov	r0, #512	@ 0x200
2ffe4074:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffe4078:	f1080100 	cpsie	a
2ffe407c:	f57ff06f 	isb	sy
2ffe4080:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffe4084:	e2000807 	and	r0, r0, #458752	@ 0x70000
2ffe4088:	e3800b03 	orr	r0, r0, #3072	@ 0xc00
2ffe408c:	ee101f51 	mrc	15, 0, r1, cr0, cr1, {2}
2ffe4090:	e7e31651 	ubfx	r1, r1, #12, #4
2ffe4094:	e3510001 	cmp	r1, #1
2ffe4098:	1a000000 	bne	2ffe40a0 <bl2_entrypoint+0xa0>
2ffe409c:	e3800601 	orr	r0, r0, #1048576	@ 0x100000
2ffe40a0:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffe40a4:	f57ff06f 	isb	sy
2ffe40a8:	e3a0060f 	mov	r0, #15728640	@ 0xf00000
2ffe40ac:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffe40b0:	f57ff06f 	isb	sy
2ffe40b4:	e3a00020 	mov	r0, #32
2ffe40b8:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffe40bc:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffe40c0:	e200040f 	and	r0, r0, #251658240	@ 0xf000000
2ffe40c4:	e3500401 	cmp	r0, #16777216	@ 0x1000000
2ffe40c8:	1a000002 	bne	2ffe40d8 <bl2_entrypoint+0xd8>
2ffe40cc:	e10f0000 	mrs	r0, CPSR
2ffe40d0:	e3800602 	orr	r0, r0, #2097152	@ 0x200000
2ffe40d4:	e12ff000 	msr	CPSR_fsxc, r0
2ffe40d8:	eb00025c 	bl	2ffe4a50 <plat_is_my_cpu_primary>
2ffe40dc:	e3500000 	cmp	r0, #0
2ffe40e0:	1a000002 	bne	2ffe40f0 <do_primary_cold_boot>
2ffe40e4:	eb000258 	bl	2ffe4a4c <plat_secondary_cold_boot_setup>
2ffe40e8:	eb000296 	bl	2ffe4b48 <plat_panic_handler>
2ffe40ec:	e320f000 	nop	{0}

2ffe40f0 <do_primary_cold_boot>:
2ffe40f0:	eb00020c 	bl	2ffe4928 <platform_mem_init>
2ffe40f4:	e59f0054 	ldr	r0, [pc, #84]	@ 2ffe4150 <do_primary_cold_boot+0x60>
2ffe40f8:	e59f1054 	ldr	r1, [pc, #84]	@ 2ffe4154 <do_primary_cold_boot+0x64>
2ffe40fc:	e0411000 	sub	r1, r1, r0
2ffe4100:	eb000105 	bl	2ffe451c <inv_dcache_range>
2ffe4104:	e1a0700c 	mov	r7, ip
2ffe4108:	e59f0048 	ldr	r0, [pc, #72]	@ 2ffe4158 <do_primary_cold_boot+0x68>
2ffe410c:	e59f1048 	ldr	r1, [pc, #72]	@ 2ffe415c <do_primary_cold_boot+0x6c>
2ffe4110:	e0411000 	sub	r1, r1, r0
2ffe4114:	eb000146 	bl	2ffe4634 <zero_normalmem>
2ffe4118:	e1a0c007 	mov	ip, r7
2ffe411c:	eb000055 	bl	2ffe4278 <plat_set_my_stack>
2ffe4120:	e1a00009 	mov	r0, r9
2ffe4124:	e1a0100a 	mov	r1, sl
2ffe4128:	e1a0200b 	mov	r2, fp
2ffe412c:	e1a0300c 	mov	r3, ip
2ffe4130:	fb002714 	blx	2ffedd8a <bl2_el3_setup>
2ffe4134:	fa0002ce 	blx	2ffe4c74 <bl2_main>
2ffe4138:	eb000282 	bl	2ffe4b48 <plat_panic_handler>
2ffe413c:	e320f000 	nop	{0}
2ffe4140:	2fff3bfd 	.word	0x2fff3bfd
2ffe4144:	00c50038 	.word	0x00c50038
2ffe4148:	2fff3e00 	.word	0x2fff3e00
2ffe414c:	00001002 	.word	0x00001002
2ffe4150:	2fff4000 	.word	0x2fff4000
2ffe4154:	2fff8000 	.word	0x2fff8000
2ffe4158:	2fff5400 	.word	0x2fff5400
2ffe415c:	2fff5ce0 	.word	0x2fff5ce0

2ffe4160 <bl2_run_next_image>:
2ffe4160:	e1a08000 	mov	r8, r0
2ffe4164:	eb000152 	bl	2ffe46b4 <disable_mmu_icache_secure>
2ffe4168:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffe416c:	f57ff04f 	dsb	sy
2ffe4170:	f57ff06f 	isb	sy
2ffe4174:	e1a00008 	mov	r0, r8
2ffe4178:	fa000cfc 	blx	2ffe7570 <bl2_el3_plat_prepare_exit>
2ffe417c:	e598e008 	ldr	lr, [r8, #8]
2ffe4180:	e598100c 	ldr	r1, [r8, #12]
2ffe4184:	e163f001 	msr	SPSR_xc, r1
2ffe4188:	f1020013 	cps	#19
2ffe418c:	e598e010 	ldr	lr, [r8, #16]
2ffe4190:	f1020016 	cps	#22
2ffe4194:	e2888014 	add	r8, r8, #20
2ffe4198:	e898000f 	ldm	r8, {r0, r1, r2, r3}
2ffe419c:	e160006e 	eret
2ffe41a0:	f57ff047 	dsb	un
2ffe41a4:	f57ff06f 	isb	sy

2ffe41a8 <reset_handler>:
2ffe41a8:	e1a0800e 	mov	r8, lr
2ffe41ac:	eb000223 	bl	2ffe4a40 <plat_reset_handler>
2ffe41b0:	eb00000a 	bl	2ffe41e0 <get_cpu_ops_ptr>
2ffe41b4:	e3500000 	cmp	r0, #0
2ffe41b8:	1a000002 	bne	2ffe41c8 <reset_handler+0x20>
2ffe41bc:	e59f0018 	ldr	r0, [pc, #24]	@ 2ffe41dc <reset_handler+0x34>
2ffe41c0:	e3a01024 	mov	r1, #36	@ 0x24
2ffe41c4:	ea000067 	b	2ffe4368 <asm_assert>
2ffe41c8:	e5901004 	ldr	r1, [r0, #4]
2ffe41cc:	e3510000 	cmp	r1, #0
2ffe41d0:	e1a0e008 	mov	lr, r8
2ffe41d4:	112fff11 	bxne	r1
2ffe41d8:	e12fff1e 	bx	lr
2ffe41dc:	2fff3c26 	.word	0x2fff3c26

2ffe41e0 <get_cpu_ops_ptr>:
2ffe41e0:	e59f4044 	ldr	r4, [pc, #68]	@ 2ffe422c <error_exit+0x4>
2ffe41e4:	e59f5044 	ldr	r5, [pc, #68]	@ 2ffe4230 <error_exit+0x8>
2ffe41e8:	e3a00000 	mov	r0, #0
2ffe41ec:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffe41f0:	e59f303c 	ldr	r3, [pc, #60]	@ 2ffe4234 <error_exit+0xc>
2ffe41f4:	e0022003 	and	r2, r2, r3
2ffe41f8:	e1540005 	cmp	r4, r5
2ffe41fc:	2a000009 	bcs	2ffe4228 <error_exit>
2ffe4200:	e4941010 	ldr	r1, [r4], #16
2ffe4204:	e0011003 	and	r1, r1, r3
2ffe4208:	e1510002 	cmp	r1, r2
2ffe420c:	1afffff9 	bne	2ffe41f8 <get_cpu_ops_ptr+0x18>
2ffe4210:	e2440010 	sub	r0, r4, #16
2ffe4214:	e3500000 	cmp	r0, #0
2ffe4218:	1a000002 	bne	2ffe4228 <error_exit>
2ffe421c:	e59f0014 	ldr	r0, [pc, #20]	@ 2ffe4238 <error_exit+0x10>
2ffe4220:	e3a0109c 	mov	r1, #156	@ 0x9c
2ffe4224:	ea00004f 	b	2ffe4368 <asm_assert>

2ffe4228 <error_exit>:
2ffe4228:	e12fff1e 	bx	lr
2ffe422c:	2fff3de4 	.word	0x2fff3de4
2ffe4230:	2fff3df4 	.word	0x2fff3df4
2ffe4234:	ff00fff0 	.word	0xff00fff0
2ffe4238:	2fff3c26 	.word	0x2fff3c26

2ffe423c <spin_lock>:
2ffe423c:	e3a02001 	mov	r2, #1
2ffe4240:	e1901f9f 	ldrex	r1, [r0]
2ffe4244:	e3510000 	cmp	r1, #0
2ffe4248:	1320f002 	wfene
2ffe424c:	01801f92 	strexeq	r1, r2, [r0]
2ffe4250:	03510000 	cmpeq	r1, #0
2ffe4254:	1afffff9 	bne	2ffe4240 <spin_lock+0x4>
2ffe4258:	f57ff05f 	dmb	sy
2ffe425c:	e12fff1e 	bx	lr

2ffe4260 <spin_unlock>:
2ffe4260:	e3a01000 	mov	r1, #0
2ffe4264:	f57ff05f 	dmb	sy
2ffe4268:	e5801000 	str	r1, [r0]
2ffe426c:	f57ff04f 	dsb	sy
2ffe4270:	e320f004 	sev
2ffe4274:	e12fff1e 	bx	lr

2ffe4278 <plat_set_my_stack>:
2ffe4278:	e59f0004 	ldr	r0, [pc, #4]	@ 2ffe4284 <plat_set_my_stack+0xc>
2ffe427c:	e1a0d000 	mov	sp, r0
2ffe4280:	e12fff1e 	bx	lr
2ffe4284:	2fff5400 	.word	0x2fff5400

2ffe4288 <stm32_pwr_down_wfi_wrapper>:
2ffe4288:	e92d4070 	push	{r4, r5, r6, lr}
2ffe428c:	e1a02000 	mov	r2, r0
2ffe4290:	e1a03001 	mov	r3, r1
2ffe4294:	e59f1060 	ldr	r1, [pc, #96]	@ 2ffe42fc <stm32_pwr_down_wfi_wrapper+0x74>
2ffe4298:	e581d000 	str	sp, [r1]
2ffe429c:	e59f105c 	ldr	r1, [pc, #92]	@ 2ffe4300 <stm32_pwr_down_wfi_wrapper+0x78>
2ffe42a0:	ee1c0f10 	mrc	15, 0, r0, cr12, cr0, {0}
2ffe42a4:	e5810000 	str	r0, [r1]
2ffe42a8:	e59f1054 	ldr	r1, [pc, #84]	@ 2ffe4304 <stm32_pwr_down_wfi_wrapper+0x7c>
2ffe42ac:	ee1c0f30 	mrc	15, 0, r0, cr12, cr0, {1}
2ffe42b0:	e5810000 	str	r0, [r1]
2ffe42b4:	e59f104c 	ldr	r1, [pc, #76]	@ 2ffe4308 <stm32_pwr_down_wfi_wrapper+0x80>
2ffe42b8:	ee0c1f10 	mcr	15, 0, r1, cr12, cr0, {0}
2ffe42bc:	ee0c1f30 	mcr	15, 0, r1, cr12, cr0, {1}
2ffe42c0:	e59fd044 	ldr	sp, [pc, #68]	@ 2ffe430c <stm32_pwr_down_wfi_wrapper+0x84>
2ffe42c4:	e1a00002 	mov	r0, r2
2ffe42c8:	e1a01003 	mov	r1, r3
2ffe42cc:	fa000cd1 	blx	2ffe7618 <stm32_pwr_down_wfi_load>
2ffe42d0:	e59f1024 	ldr	r1, [pc, #36]	@ 2ffe42fc <stm32_pwr_down_wfi_wrapper+0x74>
2ffe42d4:	e591d000 	ldr	sp, [r1]
2ffe42d8:	e59f1020 	ldr	r1, [pc, #32]	@ 2ffe4300 <stm32_pwr_down_wfi_wrapper+0x78>
2ffe42dc:	e5910000 	ldr	r0, [r1]
2ffe42e0:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffe42e4:	e59f1018 	ldr	r1, [pc, #24]	@ 2ffe4304 <stm32_pwr_down_wfi_wrapper+0x7c>
2ffe42e8:	e5910000 	ldr	r0, [r1]
2ffe42ec:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffe42f0:	f57ff04f 	dsb	sy
2ffe42f4:	f57ff06f 	isb	sy
2ffe42f8:	e8bd8070 	pop	{r4, r5, r6, pc}
2ffe42fc:	2fff463c 	.word	0x2fff463c
2ffe4300:	2fff4640 	.word	0x2fff4640
2ffe4304:	2fff4644 	.word	0x2fff4644
2ffe4308:	2fff3e00 	.word	0x2fff3e00
2ffe430c:	2fff5400 	.word	0x2fff5400

2ffe4310 <stm32_pwr_back_from_stop2>:
2ffe4310:	f1020016 	cps	#22
2ffe4314:	e59fd038 	ldr	sp, [pc, #56]	@ 2ffe4354 <stm32_pwr_back_from_stop2+0x44>
2ffe4318:	e59f1038 	ldr	r1, [pc, #56]	@ 2ffe4358 <stm32_pwr_back_from_stop2+0x48>
2ffe431c:	ee0c1f10 	mcr	15, 0, r1, cr12, cr0, {0}
2ffe4320:	ee0c1f30 	mcr	15, 0, r1, cr12, cr0, {1}
2ffe4324:	fa002757 	blx	2ffee088 <stm32_pwr_cstop_critic_exit>
2ffe4328:	e59f102c 	ldr	r1, [pc, #44]	@ 2ffe435c <stm32_pwr_back_from_stop2+0x4c>
2ffe432c:	e591d000 	ldr	sp, [r1]
2ffe4330:	e59f1028 	ldr	r1, [pc, #40]	@ 2ffe4360 <stm32_pwr_back_from_stop2+0x50>
2ffe4334:	e5910000 	ldr	r0, [r1]
2ffe4338:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffe433c:	e59f1020 	ldr	r1, [pc, #32]	@ 2ffe4364 <stm32_pwr_back_from_stop2+0x54>
2ffe4340:	e5910000 	ldr	r0, [r1]
2ffe4344:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffe4348:	f57ff04f 	dsb	sy
2ffe434c:	f57ff06f 	isb	sy
2ffe4350:	fa002754 	blx	2ffee0a8 <stm32_pwr_call_optee_ep>
2ffe4354:	2fff5400 	.word	0x2fff5400
2ffe4358:	2fff3e00 	.word	0x2fff3e00
2ffe435c:	2fff463c 	.word	0x2fff463c
2ffe4360:	2fff4640 	.word	0x2fff4640
2ffe4364:	2fff4644 	.word	0x2fff4644

2ffe4368 <asm_assert>:
2ffe4368:	e1a05000 	mov	r5, r0
2ffe436c:	e1a06001 	mov	r6, r1
2ffe4370:	eb0001be 	bl	2ffe4a70 <plat_crash_console_init>
2ffe4374:	e3500000 	cmp	r0, #0
2ffe4378:	0a000013 	beq	2ffe43cc <_assert_loop>
2ffe437c:	e59f4050 	ldr	r4, [pc, #80]	@ 2ffe43d4 <_assert_loop+0x8>
2ffe4380:	eb000017 	bl	2ffe43e4 <asm_print_str>
2ffe4384:	e1a04005 	mov	r4, r5
2ffe4388:	eb000015 	bl	2ffe43e4 <asm_print_str>
2ffe438c:	e59f4044 	ldr	r4, [pc, #68]	@ 2ffe43d8 <_assert_loop+0xc>
2ffe4390:	eb000013 	bl	2ffe43e4 <asm_print_str>
2ffe4394:	e59f4040 	ldr	r4, [pc, #64]	@ 2ffe43dc <_assert_loop+0x10>
2ffe4398:	e1160004 	tst	r6, r4
2ffe439c:	1a00000a 	bne	2ffe43cc <_assert_loop>
2ffe43a0:	e1a04006 	mov	r4, r6
2ffe43a4:	e3a0600a 	mov	r6, #10
2ffe43a8:	e59f5030 	ldr	r5, [pc, #48]	@ 2ffe43e0 <_assert_loop+0x14>

2ffe43ac <dec_print_loop>:
2ffe43ac:	e730f514 	udiv	r0, r4, r5
2ffe43b0:	e0644590 	mls	r4, r0, r5, r4
2ffe43b4:	e2800030 	add	r0, r0, #48	@ 0x30
2ffe43b8:	eb0001df 	bl	2ffe4b3c <plat_crash_console_putc>
2ffe43bc:	e735f615 	udiv	r5, r5, r6
2ffe43c0:	e3550000 	cmp	r5, #0
2ffe43c4:	1afffff8 	bne	2ffe43ac <dec_print_loop>
2ffe43c8:	eb0001d8 	bl	2ffe4b30 <plat_crash_console_flush>

2ffe43cc <_assert_loop>:
2ffe43cc:	eb0001dd 	bl	2ffe4b48 <plat_panic_handler>
2ffe43d0:	e320f000 	nop	{0}
2ffe43d4:	2fff3c45 	.word	0x2fff3c45
2ffe43d8:	2fff3c53 	.word	0x2fff3c53
2ffe43dc:	ffff0000 	.word	0xffff0000
2ffe43e0:	00002710 	.word	0x00002710

2ffe43e4 <asm_print_str>:
2ffe43e4:	e1a0700e 	mov	r7, lr
2ffe43e8:	e4d40001 	ldrb	r0, [r4], #1
2ffe43ec:	e3500000 	cmp	r0, #0
2ffe43f0:	0a000001 	beq	2ffe43fc <asm_print_str+0x18>
2ffe43f4:	eb0001d0 	bl	2ffe4b3c <plat_crash_console_putc>
2ffe43f8:	eafffffa 	b	2ffe43e8 <asm_print_str+0x4>
2ffe43fc:	e12fff17 	bx	r7

2ffe4400 <asm_print_hex>:
2ffe4400:	e3a05020 	mov	r5, #32

2ffe4404 <asm_print_hex_bits>:
2ffe4404:	e1a0700e 	mov	r7, lr
2ffe4408:	e2455004 	sub	r5, r5, #4
2ffe440c:	e1a00534 	lsr	r0, r4, r5
2ffe4410:	e200000f 	and	r0, r0, #15
2ffe4414:	e350000a 	cmp	r0, #10
2ffe4418:	3a000000 	bcc	2ffe4420 <asm_print_hex_bits+0x1c>
2ffe441c:	e2800027 	add	r0, r0, #39	@ 0x27
2ffe4420:	e2800030 	add	r0, r0, #48	@ 0x30
2ffe4424:	eb0001c4 	bl	2ffe4b3c <plat_crash_console_putc>
2ffe4428:	e3550000 	cmp	r5, #0
2ffe442c:	1afffff5 	bne	2ffe4408 <asm_print_hex_bits+0x4>
2ffe4430:	e12fff17 	bx	r7

2ffe4434 <do_panic>:
2ffe4434:	e24e6004 	sub	r6, lr, #4
2ffe4438:	eb00018c 	bl	2ffe4a70 <plat_crash_console_init>
2ffe443c:	e3500000 	cmp	r0, #0
2ffe4440:	0a000006 	beq	2ffe4460 <_panic_handler>
2ffe4444:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe4468 <_panic_handler+0x8>
2ffe4448:	ebffffe5 	bl	2ffe43e4 <asm_print_str>
2ffe444c:	e1a04006 	mov	r4, r6
2ffe4450:	ebffffea 	bl	2ffe4400 <asm_print_hex>
2ffe4454:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe446c <_panic_handler+0xc>
2ffe4458:	ebffffe1 	bl	2ffe43e4 <asm_print_str>
2ffe445c:	eb0001b3 	bl	2ffe4b30 <plat_crash_console_flush>

2ffe4460 <_panic_handler>:
2ffe4460:	e1a0e006 	mov	lr, r6
2ffe4464:	ea0001b7 	b	2ffe4b48 <plat_panic_handler>
2ffe4468:	2fff3c5a 	.word	0x2fff3c5a
2ffe446c:	2fff3c6b 	.word	0x2fff3c6b

2ffe4470 <report_exception>:
2ffe4470:	e10f0000 	mrs	r0, CPSR
2ffe4474:	e200001f 	and	r0, r0, #31
2ffe4478:	eb00012b 	bl	2ffe492c <plat_report_exception>
2ffe447c:	eb0001b1 	bl	2ffe4b48 <plat_panic_handler>
2ffe4480:	e320f000 	nop	{0}

2ffe4484 <report_prefetch_abort>:
2ffe4484:	e1040300 	mrs	r0, LR_abt
2ffe4488:	eb000140 	bl	2ffe4990 <plat_report_prefetch_abort>
2ffe448c:	eb0001ad 	bl	2ffe4b48 <plat_panic_handler>
2ffe4490:	e320f000 	nop	{0}

2ffe4494 <report_data_abort>:
2ffe4494:	e1040300 	mrs	r0, LR_abt
2ffe4498:	eb000152 	bl	2ffe49e8 <plat_report_data_abort>
2ffe449c:	eb0001a9 	bl	2ffe4b48 <plat_panic_handler>
2ffe44a0:	e320f000 	nop	{0}

2ffe44a4 <flush_dcache_range>:
2ffe44a4:	e3510000 	cmp	r1, #0
2ffe44a8:	0a00000b 	beq	2ffe44dc <exit_loop_cimvac>
2ffe44ac:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe44b0:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe44b4:	e3a02004 	mov	r2, #4
2ffe44b8:	e1a02312 	lsl	r2, r2, r3
2ffe44bc:	e0801001 	add	r1, r0, r1
2ffe44c0:	e2423001 	sub	r3, r2, #1
2ffe44c4:	e1c00003 	bic	r0, r0, r3

2ffe44c8 <loop_cimvac>:
2ffe44c8:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2ffe44cc:	e0800002 	add	r0, r0, r2
2ffe44d0:	e1500001 	cmp	r0, r1
2ffe44d4:	3afffffb 	bcc	2ffe44c8 <loop_cimvac>
2ffe44d8:	f57ff04f 	dsb	sy

2ffe44dc <exit_loop_cimvac>:
2ffe44dc:	e12fff1e 	bx	lr

2ffe44e0 <clean_dcache_range>:
2ffe44e0:	e3510000 	cmp	r1, #0
2ffe44e4:	0a00000b 	beq	2ffe4518 <exit_loop_cmvac>
2ffe44e8:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe44ec:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe44f0:	e3a02004 	mov	r2, #4
2ffe44f4:	e1a02312 	lsl	r2, r2, r3
2ffe44f8:	e0801001 	add	r1, r0, r1
2ffe44fc:	e2423001 	sub	r3, r2, #1
2ffe4500:	e1c00003 	bic	r0, r0, r3

2ffe4504 <loop_cmvac>:
2ffe4504:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2ffe4508:	e0800002 	add	r0, r0, r2
2ffe450c:	e1500001 	cmp	r0, r1
2ffe4510:	3afffffb 	bcc	2ffe4504 <loop_cmvac>
2ffe4514:	f57ff04f 	dsb	sy

2ffe4518 <exit_loop_cmvac>:
2ffe4518:	e12fff1e 	bx	lr

2ffe451c <inv_dcache_range>:
2ffe451c:	e3510000 	cmp	r1, #0
2ffe4520:	0a00000b 	beq	2ffe4554 <exit_loop_imvac>
2ffe4524:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe4528:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe452c:	e3a02004 	mov	r2, #4
2ffe4530:	e1a02312 	lsl	r2, r2, r3
2ffe4534:	e0801001 	add	r1, r0, r1
2ffe4538:	e2423001 	sub	r3, r2, #1
2ffe453c:	e1c00003 	bic	r0, r0, r3

2ffe4540 <loop_imvac>:
2ffe4540:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2ffe4544:	e0800002 	add	r0, r0, r2
2ffe4548:	e1500001 	cmp	r0, r1
2ffe454c:	3afffffb 	bcc	2ffe4540 <loop_imvac>
2ffe4550:	f57ff04f 	dsb	sy

2ffe4554 <exit_loop_imvac>:
2ffe4554:	e12fff1e 	bx	lr

2ffe4558 <do_dcsw_op>:
2ffe4558:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2ffe455c:	ee108fd2 	mrc	15, 0, r8, cr0, cr2, {6}
2ffe4560:	e7e38c58 	ubfx	r8, r8, #24, #4
2ffe4564:	e28fb09c 	add	fp, pc, #156	@ 0x9c
2ffe4568:	e08b6180 	add	r6, fp, r0, lsl #3

2ffe456c <loop1>:
2ffe456c:	e081a0a1 	add	sl, r1, r1, lsr #1
2ffe4570:	e1a0ca32 	lsr	ip, r2, sl
2ffe4574:	e20cc007 	and	ip, ip, #7
2ffe4578:	e35c0002 	cmp	ip, #2
2ffe457c:	3a000018 	bcc	2ffe45e4 <level_done>
2ffe4580:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2ffe4584:	f57ff06f 	isb	sy
2ffe4588:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2ffe458c:	e20ca007 	and	sl, ip, #7
2ffe4590:	e28aa004 	add	sl, sl, #4
2ffe4594:	e3580000 	cmp	r8, #0
2ffe4598:	0a000001 	beq	2ffe45a4 <loop1+0x38>
2ffe459c:	e7f441dc 	ubfx	r4, ip, #3, #21
2ffe45a0:	ea000000 	b	2ffe45a8 <loop1+0x3c>
2ffe45a4:	e7e941dc 	ubfx	r4, ip, #3, #10
2ffe45a8:	e16f5f14 	clz	r5, r4
2ffe45ac:	e1a09004 	mov	r9, r4

2ffe45b0 <loop2>:
2ffe45b0:	e3580000 	cmp	r8, #0
2ffe45b4:	0a000002 	beq	2ffe45c4 <loop2+0x14>
2ffe45b8:	ee30cf50 	mrc	15, 1, ip, cr0, cr0, {2}
2ffe45bc:	e7f7705c 	ubfx	r7, ip, #0, #24
2ffe45c0:	ea000000 	b	2ffe45c8 <loop3>
2ffe45c4:	e7ee76dc 	ubfx	r7, ip, #13, #15

2ffe45c8 <loop3>:
2ffe45c8:	e1810519 	orr	r0, r1, r9, lsl r5
2ffe45cc:	e1800a17 	orr	r0, r0, r7, lsl sl
2ffe45d0:	e12fff36 	blx	r6
2ffe45d4:	e2577001 	subs	r7, r7, #1
2ffe45d8:	2afffffa 	bcs	2ffe45c8 <loop3>
2ffe45dc:	e2599001 	subs	r9, r9, #1
2ffe45e0:	2afffff2 	bcs	2ffe45b0 <loop2>

2ffe45e4 <level_done>:
2ffe45e4:	e2811002 	add	r1, r1, #2
2ffe45e8:	e1530001 	cmp	r3, r1
2ffe45ec:	f57ff04f 	dsb	sy
2ffe45f0:	8affffdd 	bhi	2ffe456c <loop1>
2ffe45f4:	e3a06000 	mov	r6, #0
2ffe45f8:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2ffe45fc:	f57ff04f 	dsb	sy
2ffe4600:	f57ff06f 	isb	sy
2ffe4604:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2ffe4608 <dcsw_loop_table>:
2ffe4608:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2ffe460c:	e12fff1e 	bx	lr
2ffe4610:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2ffe4614:	e12fff1e 	bx	lr
2ffe4618:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2ffe461c:	e12fff1e 	bx	lr

2ffe4620 <dcsw_op_all>:
2ffe4620:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2ffe4624:	e7e23c52 	ubfx	r3, r2, #24, #3
2ffe4628:	e1a03083 	lsl	r3, r3, #1
2ffe462c:	e3a01000 	mov	r1, #0
2ffe4630:	eaffffc8 	b	2ffe4558 <do_dcsw_op>

2ffe4634 <zero_normalmem>:
2ffe4634:	e3a02000 	mov	r2, #0
2ffe4638:	e0801001 	add	r1, r0, r1
2ffe463c:	e3100007 	tst	r0, #7
2ffe4640:	0a000007 	beq	2ffe4664 <zero_normalmem+0x30>
2ffe4644:	e380c007 	orr	ip, r0, #7
2ffe4648:	e29cc001 	adds	ip, ip, #1
2ffe464c:	0a00000b 	beq	2ffe4680 <zero_normalmem+0x4c>
2ffe4650:	e15c0001 	cmp	ip, r1
2ffe4654:	2a000009 	bcs	2ffe4680 <zero_normalmem+0x4c>
2ffe4658:	e4c02001 	strb	r2, [r0], #1
2ffe465c:	e150000c 	cmp	r0, ip
2ffe4660:	1afffffc 	bne	2ffe4658 <zero_normalmem+0x24>
2ffe4664:	e3c1c007 	bic	ip, r1, #7
2ffe4668:	e150000c 	cmp	r0, ip
2ffe466c:	2a000003 	bcs	2ffe4680 <zero_normalmem+0x4c>
2ffe4670:	e3a03000 	mov	r3, #0
2ffe4674:	e8a0000c 	stmia	r0!, {r2, r3}
2ffe4678:	e150000c 	cmp	r0, ip
2ffe467c:	3afffffc 	bcc	2ffe4674 <zero_normalmem+0x40>
2ffe4680:	e1500001 	cmp	r0, r1
2ffe4684:	0a000002 	beq	2ffe4694 <zero_normalmem+0x60>
2ffe4688:	e4c02001 	strb	r2, [r0], #1
2ffe468c:	e1500001 	cmp	r0, r1
2ffe4690:	1afffffc 	bne	2ffe4688 <zero_normalmem+0x54>
2ffe4694:	e12fff1e 	bx	lr

2ffe4698 <disable_mmu_secure>:
2ffe4698:	e3a01005 	mov	r1, #5

2ffe469c <do_disable_mmu>:
2ffe469c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffe46a0:	e1c00001 	bic	r0, r0, r1
2ffe46a4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe46a8:	f57ff06f 	isb	sy
2ffe46ac:	f57ff04f 	dsb	sy
2ffe46b0:	e12fff1e 	bx	lr

2ffe46b4 <disable_mmu_icache_secure>:
2ffe46b4:	e51f1000 	ldr	r1, [pc, #-0]	@ 2ffe46bc <disable_mmu_icache_secure+0x8>
2ffe46b8:	eafffff7 	b	2ffe469c <do_disable_mmu>
2ffe46bc:	00001005 	.word	0x00001005

2ffe46c0 <enable_mmu_direct_svc_mon>:
2ffe46c0:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffe46c4:	e3110001 	tst	r1, #1
2ffe46c8:	0a000002 	beq	2ffe46d8 <enable_mmu_direct_svc_mon+0x18>
2ffe46cc:	e59f0060 	ldr	r0, [pc, #96]	@ 2ffe4734 <enable_mmu_direct_svc_mon+0x74>
2ffe46d0:	e3a01014 	mov	r1, #20
2ffe46d4:	eaffff23 	b	2ffe4368 <asm_assert>
2ffe46d8:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffe46dc:	e1a03000 	mov	r3, r0
2ffe46e0:	e59f0050 	ldr	r0, [pc, #80]	@ 2ffe4738 <enable_mmu_direct_svc_mon+0x78>
2ffe46e4:	e5901000 	ldr	r1, [r0]
2ffe46e8:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2ffe46ec:	e5902008 	ldr	r2, [r0, #8]
2ffe46f0:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2ffe46f4:	e5901010 	ldr	r1, [r0, #16]
2ffe46f8:	e5902014 	ldr	r2, [r0, #20]
2ffe46fc:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2ffe4700:	e3a01000 	mov	r1, #0
2ffe4704:	e3a02000 	mov	r2, #0
2ffe4708:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2ffe470c:	f57ff04b 	dsb	ish
2ffe4710:	f57ff06f 	isb	sy
2ffe4714:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffe4718:	e59f201c 	ldr	r2, [pc, #28]	@ 2ffe473c <enable_mmu_direct_svc_mon+0x7c>
2ffe471c:	e1811002 	orr	r1, r1, r2
2ffe4720:	e3130001 	tst	r3, #1
2ffe4724:	13c11004 	bicne	r1, r1, #4
2ffe4728:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2ffe472c:	f57ff06f 	isb	sy
2ffe4730:	e12fff1e 	bx	lr
2ffe4734:	2fff3c6e 	.word	0x2fff3c6e
2ffe4738:	2fff5528 	.word	0x2fff5528
2ffe473c:	00080005 	.word	0x00080005

2ffe4740 <console_stm32_core_init>:
2ffe4740:	e3500000 	cmp	r0, #0
2ffe4744:	0a000026 	beq	2ffe47e4 <core_init_fail>
2ffe4748:	e3510000 	cmp	r1, #0
2ffe474c:	0a000024 	beq	2ffe47e4 <core_init_fail>
2ffe4750:	e3520000 	cmp	r2, #0
2ffe4754:	0a000022 	beq	2ffe47e4 <core_init_fail>
2ffe4758:	e5903000 	ldr	r3, [r0]
2ffe475c:	e3c33001 	bic	r3, r3, #1
2ffe4760:	e5803000 	str	r3, [r0]
2ffe4764:	e3833282 	orr	r3, r3, #536870920	@ 0x20000008
2ffe4768:	e5803000 	str	r3, [r0]
2ffe476c:	e5903004 	ldr	r3, [r0, #4]
2ffe4770:	e3c33a03 	bic	r3, r3, #12288	@ 0x3000
2ffe4774:	e5803004 	str	r3, [r0, #4]
2ffe4778:	e1a030a2 	lsr	r3, r2, #1
2ffe477c:	e0813003 	add	r3, r1, r3
2ffe4780:	e733f213 	udiv	r3, r3, r2
2ffe4784:	e3530010 	cmp	r3, #16
2ffe4788:	8a000009 	bhi	2ffe47b4 <console_stm32_core_init+0x74>
2ffe478c:	e1a030a2 	lsr	r3, r2, #1
2ffe4790:	e0833081 	add	r3, r3, r1, lsl #1
2ffe4794:	e733f213 	udiv	r3, r3, r2
2ffe4798:	e203100f 	and	r1, r3, #15
2ffe479c:	e1a010a1 	lsr	r1, r1, #1
2ffe47a0:	e3c3300f 	bic	r3, r3, #15
2ffe47a4:	e1833001 	orr	r3, r3, r1
2ffe47a8:	e5901000 	ldr	r1, [r0]
2ffe47ac:	e3811902 	orr	r1, r1, #32768	@ 0x8000
2ffe47b0:	e5801000 	str	r1, [r0]
2ffe47b4:	e580300c 	str	r3, [r0, #12]
2ffe47b8:	e5903000 	ldr	r3, [r0]
2ffe47bc:	e3833001 	orr	r3, r3, #1
2ffe47c0:	e5803000 	str	r3, [r0]
2ffe47c4:	e3a02a01 	mov	r2, #4096	@ 0x1000

2ffe47c8 <teack_loop>:
2ffe47c8:	e2522001 	subs	r2, r2, #1
2ffe47cc:	0a000004 	beq	2ffe47e4 <core_init_fail>
2ffe47d0:	e590301c 	ldr	r3, [r0, #28]
2ffe47d4:	e3130602 	tst	r3, #2097152	@ 0x200000
2ffe47d8:	0afffffa 	beq	2ffe47c8 <teack_loop>
2ffe47dc:	e3a00001 	mov	r0, #1
2ffe47e0:	e12fff1e 	bx	lr

2ffe47e4 <core_init_fail>:
2ffe47e4:	e3a00000 	mov	r0, #0
2ffe47e8:	e12fff1e 	bx	lr

2ffe47ec <console_stm32_register>:
2ffe47ec:	e92d4010 	push	{r4, lr}
2ffe47f0:	e1a04003 	mov	r4, r3
2ffe47f4:	e3540000 	cmp	r4, #0
2ffe47f8:	0a00000e 	beq	2ffe4838 <register_fail>
2ffe47fc:	e5840014 	str	r0, [r4, #20]
2ffe4800:	ebffffce 	bl	2ffe4740 <console_stm32_core_init>
2ffe4804:	e3500000 	cmp	r0, #0
2ffe4808:	0a00000a 	beq	2ffe4838 <register_fail>
2ffe480c:	e1a00004 	mov	r0, r4
2ffe4810:	e8bd4010 	pop	{r4, lr}
2ffe4814:	e59f1020 	ldr	r1, [pc, #32]	@ 2ffe483c <register_fail+0x4>
2ffe4818:	e5801008 	str	r1, [r0, #8]
2ffe481c:	e3a01000 	mov	r1, #0
2ffe4820:	e580100c 	str	r1, [r0, #12]
2ffe4824:	e59f1014 	ldr	r1, [pc, #20]	@ 2ffe4840 <register_fail+0x8>
2ffe4828:	e5801010 	str	r1, [r0, #16]
2ffe482c:	e3a01005 	mov	r1, #5
2ffe4830:	e5801004 	str	r1, [r0, #4]
2ffe4834:	ea003d7f 	b	2fff3e38 <__console_register_from_arm>

2ffe4838 <register_fail>:
2ffe4838:	e8bd8010 	pop	{r4, pc}
2ffe483c:	2ffe488c 	.word	0x2ffe488c
2ffe4840:	2ffe48ec 	.word	0x2ffe48ec

2ffe4844 <console_stm32_core_putc>:
2ffe4844:	e3510000 	cmp	r1, #0
2ffe4848:	0a00000d 	beq	2ffe4884 <putc_error>
2ffe484c:	e3a03a01 	mov	r3, #4096	@ 0x1000

2ffe4850 <txe_loop>:
2ffe4850:	e2533001 	subs	r3, r3, #1
2ffe4854:	0a00000a 	beq	2ffe4884 <putc_error>
2ffe4858:	e591201c 	ldr	r2, [r1, #28]
2ffe485c:	e3120080 	tst	r2, #128	@ 0x80
2ffe4860:	0afffffa 	beq	2ffe4850 <txe_loop>
2ffe4864:	e5810028 	str	r0, [r1, #40]	@ 0x28
2ffe4868:	e3a03a01 	mov	r3, #4096	@ 0x1000

2ffe486c <tc_loop>:
2ffe486c:	e2533001 	subs	r3, r3, #1
2ffe4870:	0a000003 	beq	2ffe4884 <putc_error>
2ffe4874:	e591201c 	ldr	r2, [r1, #28]
2ffe4878:	e3120040 	tst	r2, #64	@ 0x40
2ffe487c:	0afffffa 	beq	2ffe486c <tc_loop>
2ffe4880:	e12fff1e 	bx	lr

2ffe4884 <putc_error>:
2ffe4884:	e3e00000 	mvn	r0, #0
2ffe4888:	e12fff1e 	bx	lr

2ffe488c <console_stm32_putc>:
2ffe488c:	e3510000 	cmp	r1, #0
2ffe4890:	1a000002 	bne	2ffe48a0 <console_stm32_putc+0x14>
2ffe4894:	e59f000c 	ldr	r0, [pc, #12]	@ 2ffe48a8 <console_stm32_putc+0x1c>
2ffe4898:	e3a010ca 	mov	r1, #202	@ 0xca
2ffe489c:	eafffeb1 	b	2ffe4368 <asm_assert>
2ffe48a0:	e5911014 	ldr	r1, [r1, #20]
2ffe48a4:	eaffffe6 	b	2ffe4844 <console_stm32_core_putc>
2ffe48a8:	2fff3c96 	.word	0x2fff3c96

2ffe48ac <console_stm32_core_flush>:
2ffe48ac:	e3500000 	cmp	r0, #0
2ffe48b0:	1a000002 	bne	2ffe48c0 <console_stm32_core_flush+0x14>
2ffe48b4:	e59f002c 	ldr	r0, [pc, #44]	@ 2ffe48e8 <txe_loop_3+0x18>
2ffe48b8:	e3a010ef 	mov	r1, #239	@ 0xef
2ffe48bc:	eafffea9 	b	2ffe4368 <asm_assert>
2ffe48c0:	e5901000 	ldr	r1, [r0]
2ffe48c4:	e3110001 	tst	r1, #1
2ffe48c8:	0a000005 	beq	2ffe48e4 <txe_loop_3+0x14>
2ffe48cc:	e3a02a01 	mov	r2, #4096	@ 0x1000

2ffe48d0 <txe_loop_3>:
2ffe48d0:	e2522001 	subs	r2, r2, #1
2ffe48d4:	0a000002 	beq	2ffe48e4 <txe_loop_3+0x14>
2ffe48d8:	e590101c 	ldr	r1, [r0, #28]
2ffe48dc:	e3110080 	tst	r1, #128	@ 0x80
2ffe48e0:	0afffffa 	beq	2ffe48d0 <txe_loop_3>
2ffe48e4:	e12fff1e 	bx	lr
2ffe48e8:	2fff3c96 	.word	0x2fff3c96

2ffe48ec <console_stm32_flush>:
2ffe48ec:	e3500000 	cmp	r0, #0
2ffe48f0:	1a000002 	bne	2ffe4900 <console_stm32_flush+0x14>
2ffe48f4:	e59f000c 	ldr	r0, [pc, #12]	@ 2ffe4908 <console_stm32_flush+0x1c>
2ffe48f8:	e59f100c 	ldr	r1, [pc, #12]	@ 2ffe490c <console_stm32_flush+0x20>
2ffe48fc:	eafffe99 	b	2ffe4368 <asm_assert>
2ffe4900:	e5900014 	ldr	r0, [r0, #20]
2ffe4904:	eaffffe8 	b	2ffe48ac <console_stm32_core_flush>
2ffe4908:	2fff3c96 	.word	0x2fff3c96
2ffe490c:	0000010d 	.word	0x0000010d

2ffe4910 <cortex_a7_enable_smp>:
2ffe4910:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2ffe4914:	e3800040 	orr	r0, r0, #64	@ 0x40
2ffe4918:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2ffe491c:	f57ff06f 	isb	sy
2ffe4920:	e12fff1e 	bx	lr

2ffe4924 <cortex_a7_reset_func>:
2ffe4924:	eafffff9 	b	2ffe4910 <cortex_a7_enable_smp>

2ffe4928 <platform_mem_init>:
2ffe4928:	e12fff1e 	bx	lr

2ffe492c <plat_report_exception>:
2ffe492c:	e1a0800e 	mov	r8, lr
2ffe4930:	e3500017 	cmp	r0, #23
2ffe4934:	0a000010 	beq	2ffe497c <print_exception_info+0xc>
2ffe4938:	e350001b 	cmp	r0, #27
2ffe493c:	1a000003 	bne	2ffe4950 <other_exception_lbl>
2ffe4940:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe4980 <print_exception_info+0x10>
2ffe4944:	ebfffea6 	bl	2ffe43e4 <asm_print_str>
2ffe4948:	e1064300 	mrs	r4, LR_und
2ffe494c:	ea000007 	b	2ffe4970 <print_exception_info>

2ffe4950 <other_exception_lbl>:
2ffe4950:	e1a09000 	mov	r9, r0
2ffe4954:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe4984 <print_exception_info+0x14>
2ffe4958:	ebfffea1 	bl	2ffe43e4 <asm_print_str>
2ffe495c:	e1a04009 	mov	r4, r9
2ffe4960:	ebfffea6 	bl	2ffe4400 <asm_print_hex>
2ffe4964:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe4988 <print_exception_info+0x18>
2ffe4968:	ebfffe9d 	bl	2ffe43e4 <asm_print_str>
2ffe496c:	e1a04006 	mov	r4, r6

2ffe4970 <print_exception_info>:
2ffe4970:	ebfffea2 	bl	2ffe4400 <asm_print_hex>
2ffe4974:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe498c <print_exception_info+0x1c>
2ffe4978:	ebfffe99 	bl	2ffe43e4 <asm_print_str>
2ffe497c:	e12fff18 	bx	r8
2ffe4980:	2fff3ce8 	.word	0x2fff3ce8
2ffe4984:	2fff3d06 	.word	0x2fff3d06
2ffe4988:	2fff3d19 	.word	0x2fff3d19
2ffe498c:	2fff3d4d 	.word	0x2fff3d4d

2ffe4990 <plat_report_prefetch_abort>:
2ffe4990:	e1a0800e 	mov	r8, lr
2ffe4994:	e1a09000 	mov	r9, r0
2ffe4998:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe49d8 <plat_report_prefetch_abort+0x48>
2ffe499c:	ebfffe90 	bl	2ffe43e4 <asm_print_str>
2ffe49a0:	e1a04009 	mov	r4, r9
2ffe49a4:	e2444004 	sub	r4, r4, #4
2ffe49a8:	ebfffe94 	bl	2ffe4400 <asm_print_hex>
2ffe49ac:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe49dc <plat_report_prefetch_abort+0x4c>
2ffe49b0:	ebfffe8b 	bl	2ffe43e4 <asm_print_str>
2ffe49b4:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2ffe49b8:	ebfffe90 	bl	2ffe4400 <asm_print_hex>
2ffe49bc:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe49e0 <plat_report_prefetch_abort+0x50>
2ffe49c0:	ebfffe87 	bl	2ffe43e4 <asm_print_str>
2ffe49c4:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2ffe49c8:	ebfffe8c 	bl	2ffe4400 <asm_print_hex>
2ffe49cc:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe49e4 <plat_report_prefetch_abort+0x54>
2ffe49d0:	ebfffe83 	bl	2ffe43e4 <asm_print_str>
2ffe49d4:	e12fff18 	bx	r8
2ffe49d8:	2fff3cbe 	.word	0x2fff3cbe
2ffe49dc:	2fff3d37 	.word	0x2fff3d37
2ffe49e0:	2fff3d42 	.word	0x2fff3d42
2ffe49e4:	2fff3d4d 	.word	0x2fff3d4d

2ffe49e8 <plat_report_data_abort>:
2ffe49e8:	e1a0800e 	mov	r8, lr
2ffe49ec:	e1a09000 	mov	r9, r0
2ffe49f0:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe4a30 <plat_report_data_abort+0x48>
2ffe49f4:	ebfffe7a 	bl	2ffe43e4 <asm_print_str>
2ffe49f8:	e1a04009 	mov	r4, r9
2ffe49fc:	e2444008 	sub	r4, r4, #8
2ffe4a00:	ebfffe7e 	bl	2ffe4400 <asm_print_hex>
2ffe4a04:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe4a34 <plat_report_data_abort+0x4c>
2ffe4a08:	ebfffe75 	bl	2ffe43e4 <asm_print_str>
2ffe4a0c:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2ffe4a10:	ebfffe7a 	bl	2ffe4400 <asm_print_hex>
2ffe4a14:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe4a38 <plat_report_data_abort+0x50>
2ffe4a18:	ebfffe71 	bl	2ffe43e4 <asm_print_str>
2ffe4a1c:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2ffe4a20:	ebfffe76 	bl	2ffe4400 <asm_print_hex>
2ffe4a24:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe4a3c <plat_report_data_abort+0x54>
2ffe4a28:	ebfffe6d 	bl	2ffe43e4 <asm_print_str>
2ffe4a2c:	e12fff18 	bx	r8
2ffe4a30:	2fff3cd5 	.word	0x2fff3cd5
2ffe4a34:	2fff3d21 	.word	0x2fff3d21
2ffe4a38:	2fff3d2c 	.word	0x2fff3d2c
2ffe4a3c:	2fff3d4d 	.word	0x2fff3d4d

2ffe4a40 <plat_reset_handler>:
2ffe4a40:	e12fff1e 	bx	lr

2ffe4a44 <plat_get_my_entrypoint>:
2ffe4a44:	e3a00000 	mov	r0, #0
2ffe4a48:	e12fff1e 	bx	lr

2ffe4a4c <plat_secondary_cold_boot_setup>:
2ffe4a4c:	eafffffe 	b	2ffe4a4c <plat_secondary_cold_boot_setup>

2ffe4a50 <plat_is_my_cpu_primary>:
2ffe4a50:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffe4a54:	e59f1010 	ldr	r1, [pc, #16]	@ 2ffe4a6c <plat_is_my_cpu_primary+0x1c>
2ffe4a58:	e0000001 	and	r0, r0, r1
2ffe4a5c:	e3500000 	cmp	r0, #0
2ffe4a60:	03a00001 	moveq	r0, #1
2ffe4a64:	13a00000 	movne	r0, #0
2ffe4a68:	e12fff1e 	bx	lr
2ffe4a6c:	0000ffff 	.word	0x0000ffff

2ffe4a70 <plat_crash_console_init>:
2ffe4a70:	e59f1098 	ldr	r1, [pc, #152]	@ 2ffe4b10 <plat_crash_console_init+0xa0>
2ffe4a74:	e3a02801 	mov	r2, #65536	@ 0x10000
2ffe4a78:	e5812000 	str	r2, [r1]
2ffe4a7c:	e5910000 	ldr	r0, [r1]
2ffe4a80:	e0102002 	ands	r2, r0, r2
2ffe4a84:	0afffffc 	beq	2ffe4a7c <plat_crash_console_init+0xc>
2ffe4a88:	e5812004 	str	r2, [r1, #4]
2ffe4a8c:	e5910000 	ldr	r0, [r1]
2ffe4a90:	e0102002 	ands	r2, r0, r2
2ffe4a94:	1afffffc 	bne	2ffe4a8c <plat_crash_console_init+0x1c>
2ffe4a98:	e59f1074 	ldr	r1, [pc, #116]	@ 2ffe4b14 <plat_crash_console_init+0xa4>
2ffe4a9c:	e5912000 	ldr	r2, [r1]
2ffe4aa0:	e3822008 	orr	r2, r2, #8
2ffe4aa4:	e5812000 	str	r2, [r1]
2ffe4aa8:	e59f1068 	ldr	r1, [pc, #104]	@ 2ffe4b18 <plat_crash_console_init+0xa8>
2ffe4aac:	e5912000 	ldr	r2, [r1]
2ffe4ab0:	e3c22a03 	bic	r2, r2, #12288	@ 0x3000
2ffe4ab4:	e3822a02 	orr	r2, r2, #8192	@ 0x2000
2ffe4ab8:	e5812000 	str	r2, [r1]
2ffe4abc:	e5912008 	ldr	r2, [r1, #8]
2ffe4ac0:	e3c22a03 	bic	r2, r2, #12288	@ 0x3000
2ffe4ac4:	e5812008 	str	r2, [r1, #8]
2ffe4ac8:	e591200c 	ldr	r2, [r1, #12]
2ffe4acc:	e3c22a03 	bic	r2, r2, #12288	@ 0x3000
2ffe4ad0:	e581200c 	str	r2, [r1, #12]
2ffe4ad4:	e5912020 	ldr	r2, [r1, #32]
2ffe4ad8:	e3c2240f 	bic	r2, r2, #251658240	@ 0xf000000
2ffe4adc:	e3822302 	orr	r2, r2, #134217728	@ 0x8000000
2ffe4ae0:	e5812020 	str	r2, [r1, #32]
2ffe4ae4:	e59f1030 	ldr	r1, [pc, #48]	@ 2ffe4b1c <plat_crash_console_init+0xac>
2ffe4ae8:	e3a02002 	mov	r2, #2
2ffe4aec:	e5812000 	str	r2, [r1]
2ffe4af0:	e59f1028 	ldr	r1, [pc, #40]	@ 2ffe4b20 <plat_crash_console_init+0xb0>
2ffe4af4:	e5912000 	ldr	r2, [r1]
2ffe4af8:	e3822801 	orr	r2, r2, #65536	@ 0x10000
2ffe4afc:	e5812000 	str	r2, [r1]
2ffe4b00:	e59f001c 	ldr	r0, [pc, #28]	@ 2ffe4b24 <plat_crash_console_init+0xb4>
2ffe4b04:	e59f101c 	ldr	r1, [pc, #28]	@ 2ffe4b28 <plat_crash_console_init+0xb8>
2ffe4b08:	e59f201c 	ldr	r2, [pc, #28]	@ 2ffe4b2c <plat_crash_console_init+0xbc>
2ffe4b0c:	eaffff0b 	b	2ffe4740 <console_stm32_core_init>
2ffe4b10:	500006a0 	.word	0x500006a0
2ffe4b14:	50000768 	.word	0x50000768
2ffe4b18:	50005000 	.word	0x50005000
2ffe4b1c:	5000061c 	.word	0x5000061c
2ffe4b20:	50000700 	.word	0x50000700
2ffe4b24:	40010000 	.word	0x40010000
2ffe4b28:	03d09000 	.word	0x03d09000
2ffe4b2c:	0001c200 	.word	0x0001c200

2ffe4b30 <plat_crash_console_flush>:
2ffe4b30:	e51f0000 	ldr	r0, [pc, #-0]	@ 2ffe4b38 <plat_crash_console_flush+0x8>
2ffe4b34:	eaffff5c 	b	2ffe48ac <console_stm32_core_flush>
2ffe4b38:	40010000 	.word	0x40010000

2ffe4b3c <plat_crash_console_putc>:
2ffe4b3c:	e51f1000 	ldr	r1, [pc, #-0]	@ 2ffe4b44 <plat_crash_console_putc+0x8>
2ffe4b40:	eaffff3f 	b	2ffe4844 <console_stm32_core_putc>
2ffe4b44:	40010000 	.word	0x40010000

2ffe4b48 <plat_panic_handler>:
2ffe4b48:	e10f0000 	mrs	r0, CPSR
2ffe4b4c:	e200001f 	and	r0, r0, #31
2ffe4b50:	ebffff75 	bl	2ffe492c <plat_report_exception>
2ffe4b54:	e1a0e006 	mov	lr, r6
2ffe4b58:	eafffffe 	b	2ffe4b58 <plat_panic_handler+0x10>

2ffe4b5c <bl2_load_images>:
2ffe4b5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe4b60:	f009 fa88 	bl	2ffee074 <plat_get_bl_image_load_info>
2ffe4b64:	b918      	cbnz	r0, 2ffe4b6e <bl2_load_images+0x12>
2ffe4b66:	2125      	movs	r1, #37	@ 0x25
2ffe4b68:	483a      	ldr	r0, [pc, #232]	@ (2ffe4c54 <bl2_load_images+0xf8>)
2ffe4b6a:	f008 fec3 	bl	2ffed8f4 <__assert>
2ffe4b6e:	6884      	ldr	r4, [r0, #8]
2ffe4b70:	b90c      	cbnz	r4, 2ffe4b76 <bl2_load_images+0x1a>
2ffe4b72:	2126      	movs	r1, #38	@ 0x26
2ffe4b74:	e7f8      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4b76:	7803      	ldrb	r3, [r0, #0]
2ffe4b78:	2b04      	cmp	r3, #4
2ffe4b7a:	d11b      	bne.n	2ffe4bb4 <bl2_load_images+0x58>
2ffe4b7c:	7843      	ldrb	r3, [r0, #1]
2ffe4b7e:	2b01      	cmp	r3, #1
2ffe4b80:	d91a      	bls.n	2ffe4bb8 <bl2_load_images+0x5c>
2ffe4b82:	4f35      	ldr	r7, [pc, #212]	@ (2ffe4c58 <bl2_load_images+0xfc>)
2ffe4b84:	2600      	movs	r6, #0
2ffe4b86:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 2ffe4c5c <bl2_load_images+0x100>
2ffe4b8a:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 2ffe4c60 <bl2_load_images+0x104>
2ffe4b8e:	6863      	ldr	r3, [r4, #4]
2ffe4b90:	685b      	ldr	r3, [r3, #4]
2ffe4b92:	075a      	lsls	r2, r3, #29
2ffe4b94:	d504      	bpl.n	2ffe4ba0 <bl2_load_images+0x44>
2ffe4b96:	b18e      	cbz	r6, 2ffe4bbc <bl2_load_images+0x60>
2ffe4b98:	4640      	mov	r0, r8
2ffe4b9a:	f002 feeb 	bl	2ffe7974 <tf_log>
2ffe4b9e:	2601      	movs	r6, #1
2ffe4ba0:	6820      	ldr	r0, [r4, #0]
2ffe4ba2:	f001 feb5 	bl	2ffe6910 <bl2_plat_handle_pre_image_load>
2ffe4ba6:	4605      	mov	r5, r0
2ffe4ba8:	b170      	cbz	r0, 2ffe4bc8 <bl2_load_images+0x6c>
2ffe4baa:	4601      	mov	r1, r0
2ffe4bac:	482d      	ldr	r0, [pc, #180]	@ (2ffe4c64 <bl2_load_images+0x108>)
2ffe4bae:	f002 fee1 	bl	2ffe7974 <tf_log>
2ffe4bb2:	e01c      	b.n	2ffe4bee <bl2_load_images+0x92>
2ffe4bb4:	2127      	movs	r1, #39	@ 0x27
2ffe4bb6:	e7d7      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4bb8:	2128      	movs	r1, #40	@ 0x28
2ffe4bba:	e7d5      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4bbc:	4638      	mov	r0, r7
2ffe4bbe:	f002 fed9 	bl	2ffe7974 <tf_log>
2ffe4bc2:	f002 f9b5 	bl	2ffe6f30 <bl2_platform_setup>
2ffe4bc6:	e7ea      	b.n	2ffe4b9e <bl2_load_images+0x42>
2ffe4bc8:	e9d4 1300 	ldrd	r1, r3, [r4]
2ffe4bcc:	685b      	ldr	r3, [r3, #4]
2ffe4bce:	079b      	lsls	r3, r3, #30
2ffe4bd0:	d410      	bmi.n	2ffe4bf4 <bl2_load_images+0x98>
2ffe4bd2:	4825      	ldr	r0, [pc, #148]	@ (2ffe4c68 <bl2_load_images+0x10c>)
2ffe4bd4:	f002 fece 	bl	2ffe7974 <tf_log>
2ffe4bd8:	e9d4 0100 	ldrd	r0, r1, [r4]
2ffe4bdc:	f002 fe22 	bl	2ffe7824 <load_auth_image>
2ffe4be0:	4605      	mov	r5, r0
2ffe4be2:	b150      	cbz	r0, 2ffe4bfa <bl2_load_images+0x9e>
2ffe4be4:	6821      	ldr	r1, [r4, #0]
2ffe4be6:	4602      	mov	r2, r0
2ffe4be8:	4820      	ldr	r0, [pc, #128]	@ (2ffe4c6c <bl2_load_images+0x110>)
2ffe4bea:	f002 fec3 	bl	2ffe7974 <tf_log>
2ffe4bee:	4628      	mov	r0, r5
2ffe4bf0:	f009 fa6e 	bl	2ffee0d0 <plat_error_handler>
2ffe4bf4:	4648      	mov	r0, r9
2ffe4bf6:	f002 febd 	bl	2ffe7974 <tf_log>
2ffe4bfa:	6820      	ldr	r0, [r4, #0]
2ffe4bfc:	f002 fba4 	bl	2ffe7348 <bl2_plat_handle_post_image_load>
2ffe4c00:	4605      	mov	r5, r0
2ffe4c02:	b110      	cbz	r0, 2ffe4c0a <bl2_load_images+0xae>
2ffe4c04:	4601      	mov	r1, r0
2ffe4c06:	481a      	ldr	r0, [pc, #104]	@ (2ffe4c70 <bl2_load_images+0x114>)
2ffe4c08:	e7d1      	b.n	2ffe4bae <bl2_load_images+0x52>
2ffe4c0a:	68a4      	ldr	r4, [r4, #8]
2ffe4c0c:	2c00      	cmp	r4, #0
2ffe4c0e:	d1be      	bne.n	2ffe4b8e <bl2_load_images+0x32>
2ffe4c10:	f009 fa32 	bl	2ffee078 <plat_get_next_bl_params>
2ffe4c14:	4604      	mov	r4, r0
2ffe4c16:	b908      	cbnz	r0, 2ffe4c1c <bl2_load_images+0xc0>
2ffe4c18:	215f      	movs	r1, #95	@ 0x5f
2ffe4c1a:	e7a5      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4c1c:	6883      	ldr	r3, [r0, #8]
2ffe4c1e:	b90b      	cbnz	r3, 2ffe4c24 <bl2_load_images+0xc8>
2ffe4c20:	2160      	movs	r1, #96	@ 0x60
2ffe4c22:	e7a1      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4c24:	7802      	ldrb	r2, [r0, #0]
2ffe4c26:	2a05      	cmp	r2, #5
2ffe4c28:	d001      	beq.n	2ffe4c2e <bl2_load_images+0xd2>
2ffe4c2a:	2161      	movs	r1, #97	@ 0x61
2ffe4c2c:	e79c      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4c2e:	7842      	ldrb	r2, [r0, #1]
2ffe4c30:	2a01      	cmp	r2, #1
2ffe4c32:	d801      	bhi.n	2ffe4c38 <bl2_load_images+0xdc>
2ffe4c34:	2162      	movs	r1, #98	@ 0x62
2ffe4c36:	e797      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4c38:	689b      	ldr	r3, [r3, #8]
2ffe4c3a:	b90b      	cbnz	r3, 2ffe4c40 <bl2_load_images+0xe4>
2ffe4c3c:	2163      	movs	r1, #99	@ 0x63
2ffe4c3e:	e793      	b.n	2ffe4b68 <bl2_load_images+0xc>
2ffe4c40:	695a      	ldr	r2, [r3, #20]
2ffe4c42:	b902      	cbnz	r2, 2ffe4c46 <bl2_load_images+0xea>
2ffe4c44:	6158      	str	r0, [r3, #20]
2ffe4c46:	f009 fa13 	bl	2ffee070 <plat_flush_next_bl_params>
2ffe4c4a:	68a3      	ldr	r3, [r4, #8]
2ffe4c4c:	6898      	ldr	r0, [r3, #8]
2ffe4c4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe4c52:	bf00      	nop
2ffe4c54:	2fff153a 	.word	0x2fff153a
2ffe4c58:	2fff1577 	.word	0x2fff1577
2ffe4c5c:	2fff1552 	.word	0x2fff1552
2ffe4c60:	2fff1604 	.word	0x2fff1604
2ffe4c64:	2fff1593 	.word	0x2fff1593
2ffe4c68:	2fff15c2 	.word	0x2fff15c2
2ffe4c6c:	2fff15dd 	.word	0x2fff15dd
2ffe4c70:	2fff1624 	.word	0x2fff1624

2ffe4c74 <bl2_main>:
2ffe4c74:	b510      	push	{r4, lr}
2ffe4c76:	4c0e      	ldr	r4, [pc, #56]	@ (2ffe4cb0 <bl2_main+0x3c>)
2ffe4c78:	490e      	ldr	r1, [pc, #56]	@ (2ffe4cb4 <bl2_main+0x40>)
2ffe4c7a:	4620      	mov	r0, r4
2ffe4c7c:	f002 fe7a 	bl	2ffe7974 <tf_log>
2ffe4c80:	490d      	ldr	r1, [pc, #52]	@ (2ffe4cb8 <bl2_main+0x44>)
2ffe4c82:	4620      	mov	r0, r4
2ffe4c84:	f002 fe76 	bl	2ffe7974 <tf_log>
2ffe4c88:	f009 f87e 	bl	2ffedd88 <bl2_arch_setup>
2ffe4c8c:	f009 fa22 	bl	2ffee0d4 <bl2_plat_preload_setup>
2ffe4c90:	f7ff ff64 	bl	2ffe4b5c <bl2_load_images>
2ffe4c94:	4604      	mov	r4, r0
2ffe4c96:	4809      	ldr	r0, [pc, #36]	@ (2ffe4cbc <bl2_main+0x48>)
2ffe4c98:	f002 fe6c 	bl	2ffe7974 <tf_log>
2ffe4c9c:	4620      	mov	r0, r4
2ffe4c9e:	f002 fe59 	bl	2ffe7954 <print_entry_point_info>
2ffe4ca2:	f002 ff03 	bl	2ffe7aac <console_flush>
2ffe4ca6:	4620      	mov	r0, r4
2ffe4ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe4cac:	f00f b8b8 	b.w	2fff3e20 <__bl2_run_next_image_from_thumb>
2ffe4cb0:	2fff1654 	.word	0x2fff1654
2ffe4cb4:	2fff14e8 	.word	0x2fff14e8
2ffe4cb8:	2fff151c 	.word	0x2fff151c
2ffe4cbc:	2fff165e 	.word	0x2fff165e

2ffe4cc0 <flush_bl_params_desc_args>:
2ffe4cc0:	b510      	push	{r4, lr}
2ffe4cc2:	4614      	mov	r4, r2
2ffe4cc4:	b918      	cbnz	r0, 2ffe4cce <flush_bl_params_desc_args+0xe>
2ffe4cc6:	2125      	movs	r1, #37	@ 0x25
2ffe4cc8:	4809      	ldr	r0, [pc, #36]	@ (2ffe4cf0 <flush_bl_params_desc_args+0x30>)
2ffe4cca:	f008 fe13 	bl	2ffed8f4 <__assert>
2ffe4cce:	b909      	cbnz	r1, 2ffe4cd4 <flush_bl_params_desc_args+0x14>
2ffe4cd0:	2126      	movs	r1, #38	@ 0x26
2ffe4cd2:	e7f9      	b.n	2ffe4cc8 <flush_bl_params_desc_args+0x8>
2ffe4cd4:	b90a      	cbnz	r2, 2ffe4cda <flush_bl_params_desc_args+0x1a>
2ffe4cd6:	2127      	movs	r1, #39	@ 0x27
2ffe4cd8:	e7f6      	b.n	2ffe4cc8 <flush_bl_params_desc_args+0x8>
2ffe4cda:	235c      	movs	r3, #92	@ 0x5c
2ffe4cdc:	4359      	muls	r1, r3
2ffe4cde:	f7ff ebe2 	blx	2ffe44a4 <flush_dcache_range>
2ffe4ce2:	4620      	mov	r0, r4
2ffe4ce4:	210c      	movs	r1, #12
2ffe4ce6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe4cea:	f00f b89d 	b.w	2fff3e28 <__flush_dcache_range_from_thumb>
2ffe4cee:	bf00      	nop
2ffe4cf0:	2fff1672 	.word	0x2fff1672

2ffe4cf4 <flush_bl_params_desc>:
2ffe4cf4:	4b03      	ldr	r3, [pc, #12]	@ (2ffe4d04 <flush_bl_params_desc+0x10>)
2ffe4cf6:	4a04      	ldr	r2, [pc, #16]	@ (2ffe4d08 <flush_bl_params_desc+0x14>)
2ffe4cf8:	6819      	ldr	r1, [r3, #0]
2ffe4cfa:	4b04      	ldr	r3, [pc, #16]	@ (2ffe4d0c <flush_bl_params_desc+0x18>)
2ffe4cfc:	6818      	ldr	r0, [r3, #0]
2ffe4cfe:	f7ff bfdf 	b.w	2ffe4cc0 <flush_bl_params_desc_args>
2ffe4d02:	bf00      	nop
2ffe4d04:	2fff4284 	.word	0x2fff4284
2ffe4d08:	2fff5540 	.word	0x2fff5540
2ffe4d0c:	2fff4288 	.word	0x2fff4288

2ffe4d10 <get_bl_params_node_index>:
2ffe4d10:	b538      	push	{r3, r4, r5, lr}
2ffe4d12:	1c43      	adds	r3, r0, #1
2ffe4d14:	d00a      	beq.n	2ffe4d2c <get_bl_params_node_index+0x1c>
2ffe4d16:	4b0c      	ldr	r3, [pc, #48]	@ (2ffe4d48 <get_bl_params_node_index+0x38>)
2ffe4d18:	245c      	movs	r4, #92	@ 0x5c
2ffe4d1a:	681a      	ldr	r2, [r3, #0]
2ffe4d1c:	4b0b      	ldr	r3, [pc, #44]	@ (2ffe4d4c <get_bl_params_node_index+0x3c>)
2ffe4d1e:	6819      	ldr	r1, [r3, #0]
2ffe4d20:	2300      	movs	r3, #0
2ffe4d22:	429a      	cmp	r2, r3
2ffe4d24:	d106      	bne.n	2ffe4d34 <get_bl_params_node_index+0x24>
2ffe4d26:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe4d2a:	e009      	b.n	2ffe4d40 <get_bl_params_node_index+0x30>
2ffe4d2c:	4808      	ldr	r0, [pc, #32]	@ (2ffe4d50 <get_bl_params_node_index+0x40>)
2ffe4d2e:	2138      	movs	r1, #56	@ 0x38
2ffe4d30:	f008 fde0 	bl	2ffed8f4 <__assert>
2ffe4d34:	fb04 f503 	mul.w	r5, r4, r3
2ffe4d38:	594d      	ldr	r5, [r1, r5]
2ffe4d3a:	4285      	cmp	r5, r0
2ffe4d3c:	d101      	bne.n	2ffe4d42 <get_bl_params_node_index+0x32>
2ffe4d3e:	4618      	mov	r0, r3
2ffe4d40:	bd38      	pop	{r3, r4, r5, pc}
2ffe4d42:	3301      	adds	r3, #1
2ffe4d44:	e7ed      	b.n	2ffe4d22 <get_bl_params_node_index+0x12>
2ffe4d46:	bf00      	nop
2ffe4d48:	2fff4284 	.word	0x2fff4284
2ffe4d4c:	2fff4288 	.word	0x2fff4288
2ffe4d50:	2fff1672 	.word	0x2fff1672

2ffe4d54 <get_bl_mem_params_node>:
2ffe4d54:	b508      	push	{r3, lr}
2ffe4d56:	1c43      	adds	r3, r0, #1
2ffe4d58:	d103      	bne.n	2ffe4d62 <get_bl_mem_params_node+0xe>
2ffe4d5a:	4808      	ldr	r0, [pc, #32]	@ (2ffe4d7c <get_bl_mem_params_node+0x28>)
2ffe4d5c:	214a      	movs	r1, #74	@ 0x4a
2ffe4d5e:	f008 fdc9 	bl	2ffed8f4 <__assert>
2ffe4d62:	f7ff ffd5 	bl	2ffe4d10 <get_bl_params_node_index>
2ffe4d66:	1e03      	subs	r3, r0, #0
2ffe4d68:	bfb1      	iteee	lt
2ffe4d6a:	2000      	movlt	r0, #0
2ffe4d6c:	4a04      	ldrge	r2, [pc, #16]	@ (2ffe4d80 <get_bl_mem_params_node+0x2c>)
2ffe4d6e:	6810      	ldrge	r0, [r2, #0]
2ffe4d70:	225c      	movge	r2, #92	@ 0x5c
2ffe4d72:	bfa8      	it	ge
2ffe4d74:	fb02 0003 	mlage	r0, r2, r3, r0
2ffe4d78:	bd08      	pop	{r3, pc}
2ffe4d7a:	bf00      	nop
2ffe4d7c:	2fff1672 	.word	0x2fff1672
2ffe4d80:	2fff4288 	.word	0x2fff4288

2ffe4d84 <get_bl_load_info_from_mem_params_desc>:
2ffe4d84:	4b10      	ldr	r3, [pc, #64]	@ (2ffe4dc8 <get_bl_load_info_from_mem_params_desc+0x44>)
2ffe4d86:	b510      	push	{r4, lr}
2ffe4d88:	6818      	ldr	r0, [r3, #0]
2ffe4d8a:	b1d8      	cbz	r0, 2ffe4dc4 <get_bl_load_info_from_mem_params_desc+0x40>
2ffe4d8c:	4b0f      	ldr	r3, [pc, #60]	@ (2ffe4dcc <get_bl_load_info_from_mem_params_desc+0x48>)
2ffe4d8e:	4c10      	ldr	r4, [pc, #64]	@ (2ffe4dd0 <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffe4d90:	681b      	ldr	r3, [r3, #0]
2ffe4d92:	4a10      	ldr	r2, [pc, #64]	@ (2ffe4dd4 <get_bl_load_info_from_mem_params_desc+0x50>)
2ffe4d94:	f103 0140 	add.w	r1, r3, #64	@ 0x40
2ffe4d98:	3304      	adds	r3, #4
2ffe4d9a:	6022      	str	r2, [r4, #0]
2ffe4d9c:	2200      	movs	r2, #0
2ffe4d9e:	60a1      	str	r1, [r4, #8]
2ffe4da0:	6062      	str	r2, [r4, #4]
2ffe4da2:	f853 4c04 	ldr.w	r4, [r3, #-4]
2ffe4da6:	3201      	adds	r2, #1
2ffe4da8:	4290      	cmp	r0, r2
2ffe4daa:	600c      	str	r4, [r1, #0]
2ffe4dac:	604b      	str	r3, [r1, #4]
2ffe4dae:	d905      	bls.n	2ffe4dbc <get_bl_load_info_from_mem_params_desc+0x38>
2ffe4db0:	f103 0498 	add.w	r4, r3, #152	@ 0x98
2ffe4db4:	335c      	adds	r3, #92	@ 0x5c
2ffe4db6:	608c      	str	r4, [r1, #8]
2ffe4db8:	4621      	mov	r1, r4
2ffe4dba:	e7f2      	b.n	2ffe4da2 <get_bl_load_info_from_mem_params_desc+0x1e>
2ffe4dbc:	d001      	beq.n	2ffe4dc2 <get_bl_load_info_from_mem_params_desc+0x3e>
2ffe4dbe:	335c      	adds	r3, #92	@ 0x5c
2ffe4dc0:	e7ef      	b.n	2ffe4da2 <get_bl_load_info_from_mem_params_desc+0x1e>
2ffe4dc2:	4803      	ldr	r0, [pc, #12]	@ (2ffe4dd0 <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffe4dc4:	bd10      	pop	{r4, pc}
2ffe4dc6:	bf00      	nop
2ffe4dc8:	2fff4284 	.word	0x2fff4284
2ffe4dcc:	2fff4288 	.word	0x2fff4288
2ffe4dd0:	2fff554c 	.word	0x2fff554c
2ffe4dd4:	000c0204 	.word	0x000c0204

2ffe4dd8 <get_next_bl_params_from_mem_params_desc>:
2ffe4dd8:	4b2a      	ldr	r3, [pc, #168]	@ (2ffe4e84 <get_next_bl_params_from_mem_params_desc+0xac>)
2ffe4dda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe4dde:	681c      	ldr	r4, [r3, #0]
2ffe4de0:	2c00      	cmp	r4, #0
2ffe4de2:	d049      	beq.n	2ffe4e78 <get_next_bl_params_from_mem_params_desc+0xa0>
2ffe4de4:	4b28      	ldr	r3, [pc, #160]	@ (2ffe4e88 <get_next_bl_params_from_mem_params_desc+0xb0>)
2ffe4de6:	2000      	movs	r0, #0
2ffe4de8:	215c      	movs	r1, #92	@ 0x5c
2ffe4dea:	681d      	ldr	r5, [r3, #0]
2ffe4dec:	fb01 5300 	mla	r3, r1, r0, r5
2ffe4df0:	69da      	ldr	r2, [r3, #28]
2ffe4df2:	f002 0218 	and.w	r2, r2, #24
2ffe4df6:	2a18      	cmp	r2, #24
2ffe4df8:	d112      	bne.n	2ffe4e20 <get_next_bl_params_from_mem_params_desc+0x48>
2ffe4dfa:	4a24      	ldr	r2, [pc, #144]	@ (2ffe4e8c <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe4dfc:	334c      	adds	r3, #76	@ 0x4c
2ffe4dfe:	6093      	str	r3, [r2, #8]
2ffe4e00:	4b22      	ldr	r3, [pc, #136]	@ (2ffe4e8c <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe4e02:	f04f 085c 	mov.w	r8, #92	@ 0x5c
2ffe4e06:	4a22      	ldr	r2, [pc, #136]	@ (2ffe4e90 <get_next_bl_params_from_mem_params_desc+0xb8>)
2ffe4e08:	601a      	str	r2, [r3, #0]
2ffe4e0a:	2200      	movs	r2, #0
2ffe4e0c:	605a      	str	r2, [r3, #4]
2ffe4e0e:	4616      	mov	r6, r2
2ffe4e10:	fb08 f000 	mul.w	r0, r8, r0
2ffe4e14:	182b      	adds	r3, r5, r0
2ffe4e16:	69d9      	ldr	r1, [r3, #28]
2ffe4e18:	0709      	lsls	r1, r1, #28
2ffe4e1a:	d40f      	bmi.n	2ffe4e3c <get_next_bl_params_from_mem_params_desc+0x64>
2ffe4e1c:	21ab      	movs	r1, #171	@ 0xab
2ffe4e1e:	e006      	b.n	2ffe4e2e <get_next_bl_params_from_mem_params_desc+0x56>
2ffe4e20:	3001      	adds	r0, #1
2ffe4e22:	4284      	cmp	r4, r0
2ffe4e24:	d1e2      	bne.n	2ffe4dec <get_next_bl_params_from_mem_params_desc+0x14>
2ffe4e26:	4b19      	ldr	r3, [pc, #100]	@ (2ffe4e8c <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe4e28:	689b      	ldr	r3, [r3, #8]
2ffe4e2a:	b91b      	cbnz	r3, 2ffe4e34 <get_next_bl_params_from_mem_params_desc+0x5c>
2ffe4e2c:	219d      	movs	r1, #157	@ 0x9d
2ffe4e2e:	4819      	ldr	r0, [pc, #100]	@ (2ffe4e94 <get_next_bl_params_from_mem_params_desc+0xbc>)
2ffe4e30:	f008 fd60 	bl	2ffed8f4 <__assert>
2ffe4e34:	2000      	movs	r0, #0
2ffe4e36:	e7e3      	b.n	2ffe4e00 <get_next_bl_params_from_mem_params_desc+0x28>
2ffe4e38:	463a      	mov	r2, r7
2ffe4e3a:	e7e9      	b.n	2ffe4e10 <get_next_bl_params_from_mem_params_desc+0x38>
2ffe4e3c:	5829      	ldr	r1, [r5, r0]
2ffe4e3e:	f103 074c 	add.w	r7, r3, #76	@ 0x4c
2ffe4e42:	64d9      	str	r1, [r3, #76]	@ 0x4c
2ffe4e44:	1d19      	adds	r1, r3, #4
2ffe4e46:	6519      	str	r1, [r3, #80]	@ 0x50
2ffe4e48:	f103 0118 	add.w	r1, r3, #24
2ffe4e4c:	6559      	str	r1, [r3, #84]	@ 0x54
2ffe4e4e:	b122      	cbz	r2, 2ffe4e5a <get_next_bl_params_from_mem_params_desc+0x82>
2ffe4e50:	68d1      	ldr	r1, [r2, #12]
2ffe4e52:	b109      	cbz	r1, 2ffe4e58 <get_next_bl_params_from_mem_params_desc+0x80>
2ffe4e54:	21b7      	movs	r1, #183	@ 0xb7
2ffe4e56:	e7ea      	b.n	2ffe4e2e <get_next_bl_params_from_mem_params_desc+0x56>
2ffe4e58:	60d7      	str	r7, [r2, #12]
2ffe4e5a:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
2ffe4e5c:	1c43      	adds	r3, r0, #1
2ffe4e5e:	d00e      	beq.n	2ffe4e7e <get_next_bl_params_from_mem_params_desc+0xa6>
2ffe4e60:	f7ff ff56 	bl	2ffe4d10 <get_bl_params_node_index>
2ffe4e64:	b108      	cbz	r0, 2ffe4e6a <get_next_bl_params_from_mem_params_desc+0x92>
2ffe4e66:	4284      	cmp	r4, r0
2ffe4e68:	d801      	bhi.n	2ffe4e6e <get_next_bl_params_from_mem_params_desc+0x96>
2ffe4e6a:	21c7      	movs	r1, #199	@ 0xc7
2ffe4e6c:	e7df      	b.n	2ffe4e2e <get_next_bl_params_from_mem_params_desc+0x56>
2ffe4e6e:	3601      	adds	r6, #1
2ffe4e70:	42b4      	cmp	r4, r6
2ffe4e72:	d1e1      	bne.n	2ffe4e38 <get_next_bl_params_from_mem_params_desc+0x60>
2ffe4e74:	21cc      	movs	r1, #204	@ 0xcc
2ffe4e76:	e7da      	b.n	2ffe4e2e <get_next_bl_params_from_mem_params_desc+0x56>
2ffe4e78:	4620      	mov	r0, r4
2ffe4e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe4e7e:	4803      	ldr	r0, [pc, #12]	@ (2ffe4e8c <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe4e80:	e7fb      	b.n	2ffe4e7a <get_next_bl_params_from_mem_params_desc+0xa2>
2ffe4e82:	bf00      	nop
2ffe4e84:	2fff4284 	.word	0x2fff4284
2ffe4e88:	2fff4288 	.word	0x2fff4288
2ffe4e8c:	2fff5540 	.word	0x2fff5540
2ffe4e90:	000c0205 	.word	0x000c0205
2ffe4e94:	2fff1672 	.word	0x2fff1672

2ffe4e98 <populate_next_bl_params_config>:
2ffe4e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe4e9a:	4605      	mov	r5, r0
2ffe4e9c:	b918      	cbnz	r0, 2ffe4ea6 <populate_next_bl_params_config+0xe>
2ffe4e9e:	4816      	ldr	r0, [pc, #88]	@ (2ffe4ef8 <populate_next_bl_params_config+0x60>)
2ffe4ea0:	21dd      	movs	r1, #221	@ 0xdd
2ffe4ea2:	f008 fd27 	bl	2ffed8f4 <__assert>
2ffe4ea6:	2002      	movs	r0, #2
2ffe4ea8:	f7ff ff54 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe4eac:	4604      	mov	r4, r0
2ffe4eae:	b100      	cbz	r0, 2ffe4eb2 <populate_next_bl_params_config+0x1a>
2ffe4eb0:	68c4      	ldr	r4, [r0, #12]
2ffe4eb2:	68ae      	ldr	r6, [r5, #8]
2ffe4eb4:	4f11      	ldr	r7, [pc, #68]	@ (2ffe4efc <populate_next_bl_params_config+0x64>)
2ffe4eb6:	4635      	mov	r5, r6
2ffe4eb8:	b905      	cbnz	r5, 2ffe4ebc <populate_next_bl_params_config+0x24>
2ffe4eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe4ebc:	682b      	ldr	r3, [r5, #0]
2ffe4ebe:	3b03      	subs	r3, #3
2ffe4ec0:	2b02      	cmp	r3, #2
2ffe4ec2:	d80f      	bhi.n	2ffe4ee4 <populate_next_bl_params_config+0x4c>
2ffe4ec4:	5cf8      	ldrb	r0, [r7, r3]
2ffe4ec6:	f7ff ff45 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe4eca:	b100      	cbz	r0, 2ffe4ece <populate_next_bl_params_config+0x36>
2ffe4ecc:	68c0      	ldr	r0, [r0, #12]
2ffe4ece:	68ab      	ldr	r3, [r5, #8]
2ffe4ed0:	42b5      	cmp	r5, r6
2ffe4ed2:	699a      	ldr	r2, [r3, #24]
2ffe4ed4:	d108      	bne.n	2ffe4ee8 <populate_next_bl_params_config+0x50>
2ffe4ed6:	b902      	cbnz	r2, 2ffe4eda <populate_next_bl_params_config+0x42>
2ffe4ed8:	6198      	str	r0, [r3, #24]
2ffe4eda:	69da      	ldr	r2, [r3, #28]
2ffe4edc:	b902      	cbnz	r2, 2ffe4ee0 <populate_next_bl_params_config+0x48>
2ffe4ede:	61dc      	str	r4, [r3, #28]
2ffe4ee0:	68ed      	ldr	r5, [r5, #12]
2ffe4ee2:	e7e9      	b.n	2ffe4eb8 <populate_next_bl_params_config+0x20>
2ffe4ee4:	2000      	movs	r0, #0
2ffe4ee6:	e7f2      	b.n	2ffe4ece <populate_next_bl_params_config+0x36>
2ffe4ee8:	6959      	ldr	r1, [r3, #20]
2ffe4eea:	b901      	cbnz	r1, 2ffe4eee <populate_next_bl_params_config+0x56>
2ffe4eec:	6158      	str	r0, [r3, #20]
2ffe4eee:	2a00      	cmp	r2, #0
2ffe4ef0:	d1f6      	bne.n	2ffe4ee0 <populate_next_bl_params_config+0x48>
2ffe4ef2:	619c      	str	r4, [r3, #24]
2ffe4ef4:	e7f4      	b.n	2ffe4ee0 <populate_next_bl_params_config+0x48>
2ffe4ef6:	bf00      	nop
2ffe4ef8:	2fff1672 	.word	0x2fff1672
2ffe4efc:	2fff168b 	.word	0x2fff168b

2ffe4f00 <fdt_read_uint32_array>:
2ffe4f00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe4f02:	461c      	mov	r4, r3
2ffe4f04:	9d08      	ldr	r5, [sp, #32]
2ffe4f06:	b918      	cbnz	r0, 2ffe4f10 <fdt_read_uint32_array+0x10>
2ffe4f08:	2120      	movs	r1, #32
2ffe4f0a:	4817      	ldr	r0, [pc, #92]	@ (2ffe4f68 <fdt_read_uint32_array+0x68>)
2ffe4f0c:	f008 fcf2 	bl	2ffed8f4 <__assert>
2ffe4f10:	b90a      	cbnz	r2, 2ffe4f16 <fdt_read_uint32_array+0x16>
2ffe4f12:	2121      	movs	r1, #33	@ 0x21
2ffe4f14:	e7f9      	b.n	2ffe4f0a <fdt_read_uint32_array+0xa>
2ffe4f16:	b90d      	cbnz	r5, 2ffe4f1c <fdt_read_uint32_array+0x1c>
2ffe4f18:	2122      	movs	r1, #34	@ 0x22
2ffe4f1a:	e7f6      	b.n	2ffe4f0a <fdt_read_uint32_array+0xa>
2ffe4f1c:	2900      	cmp	r1, #0
2ffe4f1e:	da01      	bge.n	2ffe4f24 <fdt_read_uint32_array+0x24>
2ffe4f20:	2123      	movs	r1, #35	@ 0x23
2ffe4f22:	e7f2      	b.n	2ffe4f0a <fdt_read_uint32_array+0xa>
2ffe4f24:	ab01      	add	r3, sp, #4
2ffe4f26:	f00a fccf 	bl	2ffef8c8 <fdt_getprop>
2ffe4f2a:	4602      	mov	r2, r0
2ffe4f2c:	b1c0      	cbz	r0, 2ffe4f60 <fdt_read_uint32_array+0x60>
2ffe4f2e:	9b01      	ldr	r3, [sp, #4]
2ffe4f30:	ebb4 0f93 	cmp.w	r4, r3, lsr #2
2ffe4f34:	d806      	bhi.n	2ffe4f44 <fdt_read_uint32_array+0x44>
2ffe4f36:	eb00 0484 	add.w	r4, r0, r4, lsl #2
2ffe4f3a:	3d04      	subs	r5, #4
2ffe4f3c:	42a2      	cmp	r2, r4
2ffe4f3e:	d108      	bne.n	2ffe4f52 <fdt_read_uint32_array+0x52>
2ffe4f40:	2000      	movs	r0, #0
2ffe4f42:	e004      	b.n	2ffe4f4e <fdt_read_uint32_array+0x4e>
2ffe4f44:	4809      	ldr	r0, [pc, #36]	@ (2ffe4f6c <fdt_read_uint32_array+0x6c>)
2ffe4f46:	f002 fd15 	bl	2ffe7974 <tf_log>
2ffe4f4a:	f06f 000e 	mvn.w	r0, #14
2ffe4f4e:	b003      	add	sp, #12
2ffe4f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe4f52:	f852 0b04 	ldr.w	r0, [r2], #4
2ffe4f56:	f008 ff1f 	bl	2ffedd98 <cpu_to_fdt32>
2ffe4f5a:	f845 0f04 	str.w	r0, [r5, #4]!
2ffe4f5e:	e7ed      	b.n	2ffe4f3c <fdt_read_uint32_array+0x3c>
2ffe4f60:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe4f64:	e7f3      	b.n	2ffe4f4e <fdt_read_uint32_array+0x4e>
2ffe4f66:	bf00      	nop
2ffe4f68:	2fff168e 	.word	0x2fff168e
2ffe4f6c:	2fff16a4 	.word	0x2fff16a4

2ffe4f70 <fdtw_read_string>:
2ffe4f70:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffe4f74:	4689      	mov	r9, r1
2ffe4f76:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
2ffe4f7a:	4614      	mov	r4, r2
2ffe4f7c:	461e      	mov	r6, r3
2ffe4f7e:	4607      	mov	r7, r0
2ffe4f80:	b918      	cbnz	r0, 2ffe4f8a <fdtw_read_string+0x1a>
2ffe4f82:	2196      	movs	r1, #150	@ 0x96
2ffe4f84:	4819      	ldr	r0, [pc, #100]	@ (2ffe4fec <fdtw_read_string+0x7c>)
2ffe4f86:	f008 fcb5 	bl	2ffed8f4 <__assert>
2ffe4f8a:	2900      	cmp	r1, #0
2ffe4f8c:	da01      	bge.n	2ffe4f92 <fdtw_read_string+0x22>
2ffe4f8e:	2197      	movs	r1, #151	@ 0x97
2ffe4f90:	e7f8      	b.n	2ffe4f84 <fdtw_read_string+0x14>
2ffe4f92:	b90a      	cbnz	r2, 2ffe4f98 <fdtw_read_string+0x28>
2ffe4f94:	2198      	movs	r1, #152	@ 0x98
2ffe4f96:	e7f5      	b.n	2ffe4f84 <fdtw_read_string+0x14>
2ffe4f98:	b90b      	cbnz	r3, 2ffe4f9e <fdtw_read_string+0x2e>
2ffe4f9a:	2199      	movs	r1, #153	@ 0x99
2ffe4f9c:	e7f2      	b.n	2ffe4f84 <fdtw_read_string+0x14>
2ffe4f9e:	f1b8 0f00 	cmp.w	r8, #0
2ffe4fa2:	d101      	bne.n	2ffe4fa8 <fdtw_read_string+0x38>
2ffe4fa4:	219a      	movs	r1, #154	@ 0x9a
2ffe4fa6:	e7ed      	b.n	2ffe4f84 <fdtw_read_string+0x14>
2ffe4fa8:	4610      	mov	r0, r2
2ffe4faa:	2500      	movs	r5, #0
2ffe4fac:	f00a ff24 	bl	2ffefdf8 <strlen>
2ffe4fb0:	9500      	str	r5, [sp, #0]
2ffe4fb2:	4603      	mov	r3, r0
2ffe4fb4:	4649      	mov	r1, r9
2ffe4fb6:	4622      	mov	r2, r4
2ffe4fb8:	4638      	mov	r0, r7
2ffe4fba:	f00a fc65 	bl	2ffef888 <fdt_getprop_namelen>
2ffe4fbe:	4601      	mov	r1, r0
2ffe4fc0:	b940      	cbnz	r0, 2ffe4fd4 <fdtw_read_string+0x64>
2ffe4fc2:	480b      	ldr	r0, [pc, #44]	@ (2ffe4ff0 <fdtw_read_string+0x80>)
2ffe4fc4:	4621      	mov	r1, r4
2ffe4fc6:	f002 fcd5 	bl	2ffe7974 <tf_log>
2ffe4fca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe4fce:	b003      	add	sp, #12
2ffe4fd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe4fd4:	4642      	mov	r2, r8
2ffe4fd6:	4630      	mov	r0, r6
2ffe4fd8:	f00a fefa 	bl	2ffefdd0 <strlcpy>
2ffe4fdc:	4580      	cmp	r8, r0
2ffe4fde:	d802      	bhi.n	2ffe4fe6 <fdtw_read_string+0x76>
2ffe4fe0:	4804      	ldr	r0, [pc, #16]	@ (2ffe4ff4 <fdtw_read_string+0x84>)
2ffe4fe2:	4621      	mov	r1, r4
2ffe4fe4:	e7ef      	b.n	2ffe4fc6 <fdtw_read_string+0x56>
2ffe4fe6:	4628      	mov	r0, r5
2ffe4fe8:	e7f1      	b.n	2ffe4fce <fdtw_read_string+0x5e>
2ffe4fea:	bf00      	nop
2ffe4fec:	2fff168e 	.word	0x2fff168e
2ffe4ff0:	2fff16bf 	.word	0x2fff16bf
2ffe4ff4:	2fff16e2 	.word	0x2fff16e2

2ffe4ff8 <fdtw_read_uuid>:
2ffe4ff8:	b570      	push	{r4, r5, r6, lr}
2ffe4ffa:	b08c      	sub	sp, #48	@ 0x30
2ffe4ffc:	9e10      	ldr	r6, [sp, #64]	@ 0x40
2ffe4ffe:	b918      	cbnz	r0, 2ffe5008 <fdtw_read_uuid+0x10>
2ffe5000:	21b6      	movs	r1, #182	@ 0xb6
2ffe5002:	4811      	ldr	r0, [pc, #68]	@ (2ffe5048 <fdtw_read_uuid+0x50>)
2ffe5004:	f008 fc76 	bl	2ffed8f4 <__assert>
2ffe5008:	b90a      	cbnz	r2, 2ffe500e <fdtw_read_uuid+0x16>
2ffe500a:	21b7      	movs	r1, #183	@ 0xb7
2ffe500c:	e7f9      	b.n	2ffe5002 <fdtw_read_uuid+0xa>
2ffe500e:	b90e      	cbnz	r6, 2ffe5014 <fdtw_read_uuid+0x1c>
2ffe5010:	21b8      	movs	r1, #184	@ 0xb8
2ffe5012:	e7f6      	b.n	2ffe5002 <fdtw_read_uuid+0xa>
2ffe5014:	2900      	cmp	r1, #0
2ffe5016:	da01      	bge.n	2ffe501c <fdtw_read_uuid+0x24>
2ffe5018:	21b9      	movs	r1, #185	@ 0xb9
2ffe501a:	e7f2      	b.n	2ffe5002 <fdtw_read_uuid+0xa>
2ffe501c:	2b0f      	cmp	r3, #15
2ffe501e:	d90f      	bls.n	2ffe5040 <fdtw_read_uuid+0x48>
2ffe5020:	2325      	movs	r3, #37	@ 0x25
2ffe5022:	9300      	str	r3, [sp, #0]
2ffe5024:	ab02      	add	r3, sp, #8
2ffe5026:	f7ff ffa3 	bl	2ffe4f70 <fdtw_read_string>
2ffe502a:	b938      	cbnz	r0, 2ffe503c <fdtw_read_uuid+0x44>
2ffe502c:	a902      	add	r1, sp, #8
2ffe502e:	4630      	mov	r0, r6
2ffe5030:	f002 fd62 	bl	2ffe7af8 <read_uuid>
2ffe5034:	2800      	cmp	r0, #0
2ffe5036:	bf18      	it	ne
2ffe5038:	f06f 000e 	mvnne.w	r0, #14
2ffe503c:	b00c      	add	sp, #48	@ 0x30
2ffe503e:	bd70      	pop	{r4, r5, r6, pc}
2ffe5040:	f06f 0015 	mvn.w	r0, #21
2ffe5044:	e7fa      	b.n	2ffe503c <fdtw_read_uuid+0x44>
2ffe5046:	bf00      	nop
2ffe5048:	2fff168e 	.word	0x2fff168e

2ffe504c <fdt_get_stdout_node_offset>:
2ffe504c:	4919      	ldr	r1, [pc, #100]	@ (2ffe50b4 <fdt_get_stdout_node_offset+0x68>)
2ffe504e:	b538      	push	{r3, r4, r5, lr}
2ffe5050:	4605      	mov	r5, r0
2ffe5052:	f00a fc94 	bl	2ffef97e <fdt_path_offset>
2ffe5056:	1e01      	subs	r1, r0, #0
2ffe5058:	da05      	bge.n	2ffe5066 <fdt_get_stdout_node_offset+0x1a>
2ffe505a:	4917      	ldr	r1, [pc, #92]	@ (2ffe50b8 <fdt_get_stdout_node_offset+0x6c>)
2ffe505c:	4628      	mov	r0, r5
2ffe505e:	f00a fc8e 	bl	2ffef97e <fdt_path_offset>
2ffe5062:	1e01      	subs	r1, r0, #0
2ffe5064:	db22      	blt.n	2ffe50ac <fdt_get_stdout_node_offset+0x60>
2ffe5066:	4a15      	ldr	r2, [pc, #84]	@ (2ffe50bc <fdt_get_stdout_node_offset+0x70>)
2ffe5068:	2300      	movs	r3, #0
2ffe506a:	4628      	mov	r0, r5
2ffe506c:	f00a fc2c 	bl	2ffef8c8 <fdt_getprop>
2ffe5070:	4604      	mov	r4, r0
2ffe5072:	b1d8      	cbz	r0, 2ffe50ac <fdt_get_stdout_node_offset+0x60>
2ffe5074:	213a      	movs	r1, #58	@ 0x3a
2ffe5076:	f00a fe94 	bl	2ffefda2 <strchr>
2ffe507a:	b960      	cbnz	r0, 2ffe5096 <fdt_get_stdout_node_offset+0x4a>
2ffe507c:	4620      	mov	r0, r4
2ffe507e:	f00a febb 	bl	2ffefdf8 <strlen>
2ffe5082:	4602      	mov	r2, r0
2ffe5084:	7823      	ldrb	r3, [r4, #0]
2ffe5086:	4621      	mov	r1, r4
2ffe5088:	4628      	mov	r0, r5
2ffe508a:	2b2f      	cmp	r3, #47	@ 0x2f
2ffe508c:	d105      	bne.n	2ffe509a <fdt_get_stdout_node_offset+0x4e>
2ffe508e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe5092:	f00a bc2a 	b.w	2ffef8ea <fdt_path_offset_namelen>
2ffe5096:	1b02      	subs	r2, r0, r4
2ffe5098:	e7f4      	b.n	2ffe5084 <fdt_get_stdout_node_offset+0x38>
2ffe509a:	f008 fc01 	bl	2ffed8a0 <fdt_get_alias_namelen>
2ffe509e:	4601      	mov	r1, r0
2ffe50a0:	b120      	cbz	r0, 2ffe50ac <fdt_get_stdout_node_offset+0x60>
2ffe50a2:	4628      	mov	r0, r5
2ffe50a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe50a8:	f00a bc69 	b.w	2ffef97e <fdt_path_offset>
2ffe50ac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe50b0:	bd38      	pop	{r3, r4, r5, pc}
2ffe50b2:	bf00      	nop
2ffe50b4:	2fff1714 	.word	0x2fff1714
2ffe50b8:	2fff1723 	.word	0x2fff1723
2ffe50bc:	2fff172b 	.word	0x2fff172b

2ffe50c0 <fip_file_close>:
2ffe50c0:	b510      	push	{r4, lr}
2ffe50c2:	4604      	mov	r4, r0
2ffe50c4:	4805      	ldr	r0, [pc, #20]	@ (2ffe50dc <fip_file_close+0x1c>)
2ffe50c6:	e9d0 3206 	ldrd	r3, r2, [r0, #24]
2ffe50ca:	4313      	orrs	r3, r2
2ffe50cc:	d002      	beq.n	2ffe50d4 <fip_file_close+0x14>
2ffe50ce:	2130      	movs	r1, #48	@ 0x30
2ffe50d0:	f7ff eab0 	blx	2ffe4634 <zero_normalmem>
2ffe50d4:	2000      	movs	r0, #0
2ffe50d6:	6060      	str	r0, [r4, #4]
2ffe50d8:	bd10      	pop	{r4, pc}
2ffe50da:	bf00      	nop
2ffe50dc:	2fff5400 	.word	0x2fff5400

2ffe50e0 <fip_dev_init>:
2ffe50e0:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe50e2:	460c      	mov	r4, r1
2ffe50e4:	b087      	sub	sp, #28
2ffe50e6:	b918      	cbnz	r0, 2ffe50f0 <fip_dev_init+0x10>
2ffe50e8:	481d      	ldr	r0, [pc, #116]	@ (2ffe5160 <fip_dev_init+0x80>)
2ffe50ea:	21e1      	movs	r1, #225	@ 0xe1
2ffe50ec:	f008 fc02 	bl	2ffed8f4 <__assert>
2ffe50f0:	4f1c      	ldr	r7, [pc, #112]	@ (2ffe5164 <fip_dev_init+0x84>)
2ffe50f2:	4e1d      	ldr	r6, [pc, #116]	@ (2ffe5168 <fip_dev_init+0x88>)
2ffe50f4:	6845      	ldr	r5, [r0, #4]
2ffe50f6:	463a      	mov	r2, r7
2ffe50f8:	4631      	mov	r1, r6
2ffe50fa:	4620      	mov	r0, r4
2ffe50fc:	f001 fc40 	bl	2ffe6980 <plat_get_image_source>
2ffe5100:	4602      	mov	r2, r0
2ffe5102:	b140      	cbz	r0, 2ffe5116 <fip_dev_init+0x36>
2ffe5104:	4819      	ldr	r0, [pc, #100]	@ (2ffe516c <fip_dev_init+0x8c>)
2ffe5106:	4621      	mov	r1, r4
2ffe5108:	f06f 0401 	mvn.w	r4, #1
2ffe510c:	f002 fc32 	bl	2ffe7974 <tf_log>
2ffe5110:	4620      	mov	r0, r4
2ffe5112:	b007      	add	sp, #28
2ffe5114:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe5116:	6839      	ldr	r1, [r7, #0]
2ffe5118:	466a      	mov	r2, sp
2ffe511a:	6830      	ldr	r0, [r6, #0]
2ffe511c:	f000 fad8 	bl	2ffe56d0 <io_open>
2ffe5120:	4602      	mov	r2, r0
2ffe5122:	b110      	cbz	r0, 2ffe512a <fip_dev_init+0x4a>
2ffe5124:	4812      	ldr	r0, [pc, #72]	@ (2ffe5170 <fip_dev_init+0x90>)
2ffe5126:	4621      	mov	r1, r4
2ffe5128:	e7ee      	b.n	2ffe5108 <fip_dev_init+0x28>
2ffe512a:	9800      	ldr	r0, [sp, #0]
2ffe512c:	ab01      	add	r3, sp, #4
2ffe512e:	2210      	movs	r2, #16
2ffe5130:	a902      	add	r1, sp, #8
2ffe5132:	f000 fb57 	bl	2ffe57e4 <io_read>
2ffe5136:	4604      	mov	r4, r0
2ffe5138:	b938      	cbnz	r0, 2ffe514a <fip_dev_init+0x6a>
2ffe513a:	4b0e      	ldr	r3, [pc, #56]	@ (2ffe5174 <fip_dev_init+0x94>)
2ffe513c:	9a02      	ldr	r2, [sp, #8]
2ffe513e:	429a      	cmp	r2, r3
2ffe5140:	d107      	bne.n	2ffe5152 <fip_dev_init+0x72>
2ffe5142:	9b03      	ldr	r3, [sp, #12]
2ffe5144:	b12b      	cbz	r3, 2ffe5152 <fip_dev_init+0x72>
2ffe5146:	9b05      	ldr	r3, [sp, #20]
2ffe5148:	80ab      	strh	r3, [r5, #4]
2ffe514a:	9800      	ldr	r0, [sp, #0]
2ffe514c:	f000 fb6e 	bl	2ffe582c <io_close>
2ffe5150:	e7de      	b.n	2ffe5110 <fip_dev_init+0x30>
2ffe5152:	4809      	ldr	r0, [pc, #36]	@ (2ffe5178 <fip_dev_init+0x98>)
2ffe5154:	f06f 0401 	mvn.w	r4, #1
2ffe5158:	f002 fc0c 	bl	2ffe7974 <tf_log>
2ffe515c:	e7f5      	b.n	2ffe514a <fip_dev_init+0x6a>
2ffe515e:	bf00      	nop
2ffe5160:	2fff1737 	.word	0x2fff1737
2ffe5164:	2fff556c 	.word	0x2fff556c
2ffe5168:	2fff5570 	.word	0x2fff5570
2ffe516c:	2fff174b 	.word	0x2fff174b
2ffe5170:	2fff177c 	.word	0x2fff177c
2ffe5174:	aa640001 	.word	0xaa640001
2ffe5178:	2fff17a0 	.word	0x2fff17a0

2ffe517c <fip_file_read>:
2ffe517c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe5180:	460f      	mov	r7, r1
2ffe5182:	4690      	mov	r8, r2
2ffe5184:	461e      	mov	r6, r3
2ffe5186:	4604      	mov	r4, r0
2ffe5188:	b920      	cbnz	r0, 2ffe5194 <fip_file_read+0x18>
2ffe518a:	f44f 71c2 	mov.w	r1, #388	@ 0x184
2ffe518e:	4822      	ldr	r0, [pc, #136]	@ (2ffe5218 <fip_file_read+0x9c>)
2ffe5190:	f008 fbb0 	bl	2ffed8f4 <__assert>
2ffe5194:	b913      	cbnz	r3, 2ffe519c <fip_file_read+0x20>
2ffe5196:	f240 1185 	movw	r1, #389	@ 0x185
2ffe519a:	e7f8      	b.n	2ffe518e <fip_file_read+0x12>
2ffe519c:	6843      	ldr	r3, [r0, #4]
2ffe519e:	b913      	cbnz	r3, 2ffe51a6 <fip_file_read+0x2a>
2ffe51a0:	f44f 71c3 	mov.w	r1, #390	@ 0x186
2ffe51a4:	e7f3      	b.n	2ffe518e <fip_file_read+0x12>
2ffe51a6:	4b1d      	ldr	r3, [pc, #116]	@ (2ffe521c <fip_file_read+0xa0>)
2ffe51a8:	aa01      	add	r2, sp, #4
2ffe51aa:	6819      	ldr	r1, [r3, #0]
2ffe51ac:	4b1c      	ldr	r3, [pc, #112]	@ (2ffe5220 <fip_file_read+0xa4>)
2ffe51ae:	6818      	ldr	r0, [r3, #0]
2ffe51b0:	f000 fa8e 	bl	2ffe56d0 <io_open>
2ffe51b4:	4603      	mov	r3, r0
2ffe51b6:	b148      	cbz	r0, 2ffe51cc <fip_file_read+0x50>
2ffe51b8:	4601      	mov	r1, r0
2ffe51ba:	f06f 0401 	mvn.w	r4, #1
2ffe51be:	4819      	ldr	r0, [pc, #100]	@ (2ffe5224 <fip_file_read+0xa8>)
2ffe51c0:	f002 fbd8 	bl	2ffe7974 <tf_log>
2ffe51c4:	4620      	mov	r0, r4
2ffe51c6:	b002      	add	sp, #8
2ffe51c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe51cc:	6865      	ldr	r5, [r4, #4]
2ffe51ce:	9801      	ldr	r0, [sp, #4]
2ffe51d0:	69a9      	ldr	r1, [r5, #24]
2ffe51d2:	682a      	ldr	r2, [r5, #0]
2ffe51d4:	440a      	add	r2, r1
2ffe51d6:	2101      	movs	r1, #1
2ffe51d8:	f000 fac4 	bl	2ffe5764 <io_seek>
2ffe51dc:	b140      	cbz	r0, 2ffe51f0 <fip_file_read+0x74>
2ffe51de:	4812      	ldr	r0, [pc, #72]	@ (2ffe5228 <fip_file_read+0xac>)
2ffe51e0:	f002 fbc8 	bl	2ffe7974 <tf_log>
2ffe51e4:	f06f 0401 	mvn.w	r4, #1
2ffe51e8:	9801      	ldr	r0, [sp, #4]
2ffe51ea:	f000 fb1f 	bl	2ffe582c <io_close>
2ffe51ee:	e7e9      	b.n	2ffe51c4 <fip_file_read+0x48>
2ffe51f0:	9801      	ldr	r0, [sp, #4]
2ffe51f2:	466b      	mov	r3, sp
2ffe51f4:	4642      	mov	r2, r8
2ffe51f6:	4639      	mov	r1, r7
2ffe51f8:	f000 faf4 	bl	2ffe57e4 <io_read>
2ffe51fc:	4604      	mov	r4, r0
2ffe51fe:	b120      	cbz	r0, 2ffe520a <fip_file_read+0x8e>
2ffe5200:	4601      	mov	r1, r0
2ffe5202:	480a      	ldr	r0, [pc, #40]	@ (2ffe522c <fip_file_read+0xb0>)
2ffe5204:	f002 fbb6 	bl	2ffe7974 <tf_log>
2ffe5208:	e7ec      	b.n	2ffe51e4 <fip_file_read+0x68>
2ffe520a:	9a00      	ldr	r2, [sp, #0]
2ffe520c:	6032      	str	r2, [r6, #0]
2ffe520e:	682b      	ldr	r3, [r5, #0]
2ffe5210:	4413      	add	r3, r2
2ffe5212:	602b      	str	r3, [r5, #0]
2ffe5214:	e7e8      	b.n	2ffe51e8 <fip_file_read+0x6c>
2ffe5216:	bf00      	nop
2ffe5218:	2fff1737 	.word	0x2fff1737
2ffe521c:	2fff556c 	.word	0x2fff556c
2ffe5220:	2fff5570 	.word	0x2fff5570
2ffe5224:	2fff17ce 	.word	0x2fff17ce
2ffe5228:	2fff17e8 	.word	0x2fff17e8
2ffe522c:	2fff1808 	.word	0x2fff1808

2ffe5230 <fip_file_len>:
2ffe5230:	b508      	push	{r3, lr}
2ffe5232:	b920      	cbnz	r0, 2ffe523e <fip_file_len+0xe>
2ffe5234:	f240 1171 	movw	r1, #369	@ 0x171
2ffe5238:	4805      	ldr	r0, [pc, #20]	@ (2ffe5250 <fip_file_len+0x20>)
2ffe523a:	f008 fb5b 	bl	2ffed8f4 <__assert>
2ffe523e:	b911      	cbnz	r1, 2ffe5246 <fip_file_len+0x16>
2ffe5240:	f44f 71b9 	mov.w	r1, #370	@ 0x172
2ffe5244:	e7f8      	b.n	2ffe5238 <fip_file_len+0x8>
2ffe5246:	6843      	ldr	r3, [r0, #4]
2ffe5248:	2000      	movs	r0, #0
2ffe524a:	6a1b      	ldr	r3, [r3, #32]
2ffe524c:	600b      	str	r3, [r1, #0]
2ffe524e:	bd08      	pop	{r3, pc}
2ffe5250:	2fff1737 	.word	0x2fff1737

2ffe5254 <fip_file_open>:
2ffe5254:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffe5258:	4616      	mov	r6, r2
2ffe525a:	460f      	mov	r7, r1
2ffe525c:	b921      	cbnz	r1, 2ffe5268 <fip_file_open+0x14>
2ffe525e:	f44f 7193 	mov.w	r1, #294	@ 0x126
2ffe5262:	482e      	ldr	r0, [pc, #184]	@ (2ffe531c <fip_file_open+0xc8>)
2ffe5264:	f008 fb46 	bl	2ffed8f4 <__assert>
2ffe5268:	b912      	cbnz	r2, 2ffe5270 <fip_file_open+0x1c>
2ffe526a:	f240 1127 	movw	r1, #295	@ 0x127
2ffe526e:	e7f8      	b.n	2ffe5262 <fip_file_open+0xe>
2ffe5270:	4d2b      	ldr	r5, [pc, #172]	@ (2ffe5320 <fip_file_open+0xcc>)
2ffe5272:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
2ffe5276:	4313      	orrs	r3, r2
2ffe5278:	d008      	beq.n	2ffe528c <fip_file_open+0x38>
2ffe527a:	482a      	ldr	r0, [pc, #168]	@ (2ffe5324 <fip_file_open+0xd0>)
2ffe527c:	f06f 0416 	mvn.w	r4, #22
2ffe5280:	f002 fb78 	bl	2ffe7974 <tf_log>
2ffe5284:	4620      	mov	r0, r4
2ffe5286:	b003      	add	sp, #12
2ffe5288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe528c:	4b26      	ldr	r3, [pc, #152]	@ (2ffe5328 <fip_file_open+0xd4>)
2ffe528e:	466a      	mov	r2, sp
2ffe5290:	6819      	ldr	r1, [r3, #0]
2ffe5292:	4b26      	ldr	r3, [pc, #152]	@ (2ffe532c <fip_file_open+0xd8>)
2ffe5294:	6818      	ldr	r0, [r3, #0]
2ffe5296:	f000 fa1b 	bl	2ffe56d0 <io_open>
2ffe529a:	4601      	mov	r1, r0
2ffe529c:	b128      	cbz	r0, 2ffe52aa <fip_file_open+0x56>
2ffe529e:	4824      	ldr	r0, [pc, #144]	@ (2ffe5330 <fip_file_open+0xdc>)
2ffe52a0:	f06f 0401 	mvn.w	r4, #1
2ffe52a4:	f002 fb66 	bl	2ffe7974 <tf_log>
2ffe52a8:	e7ec      	b.n	2ffe5284 <fip_file_open+0x30>
2ffe52aa:	9800      	ldr	r0, [sp, #0]
2ffe52ac:	2210      	movs	r2, #16
2ffe52ae:	2300      	movs	r3, #0
2ffe52b0:	2101      	movs	r1, #1
2ffe52b2:	f000 fa57 	bl	2ffe5764 <io_seek>
2ffe52b6:	b9b0      	cbnz	r0, 2ffe52e6 <fip_file_open+0x92>
2ffe52b8:	f8df 9078 	ldr.w	r9, [pc, #120]	@ 2ffe5334 <fip_file_open+0xe0>
2ffe52bc:	f105 0808 	add.w	r8, r5, #8
2ffe52c0:	491d      	ldr	r1, [pc, #116]	@ (2ffe5338 <fip_file_open+0xe4>)
2ffe52c2:	ab01      	add	r3, sp, #4
2ffe52c4:	9800      	ldr	r0, [sp, #0]
2ffe52c6:	2228      	movs	r2, #40	@ 0x28
2ffe52c8:	f000 fa8c 	bl	2ffe57e4 <io_read>
2ffe52cc:	4604      	mov	r4, r0
2ffe52ce:	b980      	cbnz	r0, 2ffe52f2 <fip_file_open+0x9e>
2ffe52d0:	2210      	movs	r2, #16
2ffe52d2:	4639      	mov	r1, r7
2ffe52d4:	4640      	mov	r0, r8
2ffe52d6:	f00a fc54 	bl	2ffefb82 <memcmp>
2ffe52da:	4604      	mov	r4, r0
2ffe52dc:	b988      	cbnz	r0, 2ffe5302 <fip_file_open+0xae>
2ffe52de:	f848 0c08 	str.w	r0, [r8, #-8]
2ffe52e2:	6075      	str	r5, [r6, #4]
2ffe52e4:	e009      	b.n	2ffe52fa <fip_file_open+0xa6>
2ffe52e6:	4815      	ldr	r0, [pc, #84]	@ (2ffe533c <fip_file_open+0xe8>)
2ffe52e8:	f002 fb44 	bl	2ffe7974 <tf_log>
2ffe52ec:	f06f 0401 	mvn.w	r4, #1
2ffe52f0:	e003      	b.n	2ffe52fa <fip_file_open+0xa6>
2ffe52f2:	4601      	mov	r1, r0
2ffe52f4:	4812      	ldr	r0, [pc, #72]	@ (2ffe5340 <fip_file_open+0xec>)
2ffe52f6:	f002 fb3d 	bl	2ffe7974 <tf_log>
2ffe52fa:	9800      	ldr	r0, [sp, #0]
2ffe52fc:	f000 fa96 	bl	2ffe582c <io_close>
2ffe5300:	e7c0      	b.n	2ffe5284 <fip_file_open+0x30>
2ffe5302:	2210      	movs	r2, #16
2ffe5304:	4649      	mov	r1, r9
2ffe5306:	4640      	mov	r0, r8
2ffe5308:	f00a fc3b 	bl	2ffefb82 <memcmp>
2ffe530c:	2800      	cmp	r0, #0
2ffe530e:	d1d7      	bne.n	2ffe52c0 <fip_file_open+0x6c>
2ffe5310:	2200      	movs	r2, #0
2ffe5312:	2300      	movs	r3, #0
2ffe5314:	e9c5 2306 	strd	r2, r3, [r5, #24]
2ffe5318:	e7e8      	b.n	2ffe52ec <fip_file_open+0x98>
2ffe531a:	bf00      	nop
2ffe531c:	2fff1737 	.word	0x2fff1737
2ffe5320:	2fff5400 	.word	0x2fff5400
2ffe5324:	2fff1826 	.word	0x2fff1826
2ffe5328:	2fff556c 	.word	0x2fff556c
2ffe532c:	2fff5570 	.word	0x2fff5570
2ffe5330:	2fff1856 	.word	0x2fff1856
2ffe5334:	2fff18bd 	.word	0x2fff18bd
2ffe5338:	2fff5408 	.word	0x2fff5408
2ffe533c:	2fff1883 	.word	0x2fff1883
2ffe5340:	2fff18a3 	.word	0x2fff18a3

2ffe5344 <fip_dev_close>:
2ffe5344:	4b0e      	ldr	r3, [pc, #56]	@ (2ffe5380 <fip_dev_close+0x3c>)
2ffe5346:	b510      	push	{r4, lr}
2ffe5348:	2400      	movs	r4, #0
2ffe534a:	601c      	str	r4, [r3, #0]
2ffe534c:	4b0d      	ldr	r3, [pc, #52]	@ (2ffe5384 <fip_dev_close+0x40>)
2ffe534e:	601c      	str	r4, [r3, #0]
2ffe5350:	b918      	cbnz	r0, 2ffe535a <fip_dev_close+0x16>
2ffe5352:	480d      	ldr	r0, [pc, #52]	@ (2ffe5388 <fip_dev_close+0x44>)
2ffe5354:	21ab      	movs	r1, #171	@ 0xab
2ffe5356:	f008 facd 	bl	2ffed8f4 <__assert>
2ffe535a:	6840      	ldr	r0, [r0, #4]
2ffe535c:	4b0b      	ldr	r3, [pc, #44]	@ (2ffe538c <fip_dev_close+0x48>)
2ffe535e:	6802      	ldr	r2, [r0, #0]
2ffe5360:	681b      	ldr	r3, [r3, #0]
2ffe5362:	429a      	cmp	r2, r3
2ffe5364:	d108      	bne.n	2ffe5378 <fip_dev_close+0x34>
2ffe5366:	2108      	movs	r1, #8
2ffe5368:	f7ff e964 	blx	2ffe4634 <zero_normalmem>
2ffe536c:	4a08      	ldr	r2, [pc, #32]	@ (2ffe5390 <fip_dev_close+0x4c>)
2ffe536e:	4620      	mov	r0, r4
2ffe5370:	6813      	ldr	r3, [r2, #0]
2ffe5372:	3b01      	subs	r3, #1
2ffe5374:	6013      	str	r3, [r2, #0]
2ffe5376:	bd10      	pop	{r4, pc}
2ffe5378:	f06f 0001 	mvn.w	r0, #1
2ffe537c:	e7fb      	b.n	2ffe5376 <fip_dev_close+0x32>
2ffe537e:	bf00      	nop
2ffe5380:	2fff5570 	.word	0x2fff5570
2ffe5384:	2fff556c 	.word	0x2fff556c
2ffe5388:	2fff1737 	.word	0x2fff1737
2ffe538c:	2fff5564 	.word	0x2fff5564
2ffe5390:	2fff5558 	.word	0x2fff5558

2ffe5394 <fip_dev_open>:
2ffe5394:	b570      	push	{r4, r5, r6, lr}
2ffe5396:	4604      	mov	r4, r0
2ffe5398:	b919      	cbnz	r1, 2ffe53a2 <fip_dev_open+0xe>
2ffe539a:	21c4      	movs	r1, #196	@ 0xc4
2ffe539c:	480b      	ldr	r0, [pc, #44]	@ (2ffe53cc <fip_dev_open+0x38>)
2ffe539e:	f008 faa9 	bl	2ffed8f4 <__assert>
2ffe53a2:	4d0b      	ldr	r5, [pc, #44]	@ (2ffe53d0 <fip_dev_open+0x3c>)
2ffe53a4:	682b      	ldr	r3, [r5, #0]
2ffe53a6:	b96b      	cbnz	r3, 2ffe53c4 <fip_dev_open+0x30>
2ffe53a8:	4a0a      	ldr	r2, [pc, #40]	@ (2ffe53d4 <fip_dev_open+0x40>)
2ffe53aa:	6810      	ldr	r0, [r2, #0]
2ffe53ac:	b940      	cbnz	r0, 2ffe53c0 <fip_dev_open+0x2c>
2ffe53ae:	4b0a      	ldr	r3, [pc, #40]	@ (2ffe53d8 <fip_dev_open+0x44>)
2ffe53b0:	4e0a      	ldr	r6, [pc, #40]	@ (2ffe53dc <fip_dev_open+0x48>)
2ffe53b2:	605a      	str	r2, [r3, #4]
2ffe53b4:	601e      	str	r6, [r3, #0]
2ffe53b6:	2601      	movs	r6, #1
2ffe53b8:	6014      	str	r4, [r2, #0]
2ffe53ba:	602e      	str	r6, [r5, #0]
2ffe53bc:	600b      	str	r3, [r1, #0]
2ffe53be:	bd70      	pop	{r4, r5, r6, pc}
2ffe53c0:	2198      	movs	r1, #152	@ 0x98
2ffe53c2:	e7eb      	b.n	2ffe539c <fip_dev_open+0x8>
2ffe53c4:	f06f 000b 	mvn.w	r0, #11
2ffe53c8:	e7f9      	b.n	2ffe53be <fip_dev_open+0x2a>
2ffe53ca:	bf00      	nop
2ffe53cc:	2fff1737 	.word	0x2fff1737
2ffe53d0:	2fff5558 	.word	0x2fff5558
2ffe53d4:	2fff5564 	.word	0x2fff5564
2ffe53d8:	2fff555c 	.word	0x2fff555c
2ffe53dc:	2ffefec0 	.word	0x2ffefec0

2ffe53e0 <register_io_dev_fip>:
2ffe53e0:	b510      	push	{r4, lr}
2ffe53e2:	4604      	mov	r4, r0
2ffe53e4:	b920      	cbnz	r0, 2ffe53f0 <register_io_dev_fip+0x10>
2ffe53e6:	4806      	ldr	r0, [pc, #24]	@ (2ffe5400 <register_io_dev_fip+0x20>)
2ffe53e8:	f44f 71e4 	mov.w	r1, #456	@ 0x1c8
2ffe53ec:	f008 fa82 	bl	2ffed8f4 <__assert>
2ffe53f0:	4804      	ldr	r0, [pc, #16]	@ (2ffe5404 <register_io_dev_fip+0x24>)
2ffe53f2:	f000 f913 	bl	2ffe561c <io_register_device>
2ffe53f6:	b908      	cbnz	r0, 2ffe53fc <register_io_dev_fip+0x1c>
2ffe53f8:	4b03      	ldr	r3, [pc, #12]	@ (2ffe5408 <register_io_dev_fip+0x28>)
2ffe53fa:	6023      	str	r3, [r4, #0]
2ffe53fc:	bd10      	pop	{r4, pc}
2ffe53fe:	bf00      	nop
2ffe5400:	2fff1737 	.word	0x2fff1737
2ffe5404:	2fff555c 	.word	0x2fff555c
2ffe5408:	2ffefee4 	.word	0x2ffefee4

2ffe540c <memmap_block_write>:
2ffe540c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe5410:	4615      	mov	r5, r2
2ffe5412:	461f      	mov	r7, r3
2ffe5414:	b918      	cbnz	r0, 2ffe541e <memmap_block_write+0x12>
2ffe5416:	21cb      	movs	r1, #203	@ 0xcb
2ffe5418:	4813      	ldr	r0, [pc, #76]	@ (2ffe5468 <memmap_block_write+0x5c>)
2ffe541a:	f008 fa6b 	bl	2ffed8f4 <__assert>
2ffe541e:	b90b      	cbnz	r3, 2ffe5424 <memmap_block_write+0x18>
2ffe5420:	21cc      	movs	r1, #204	@ 0xcc
2ffe5422:	e7f9      	b.n	2ffe5418 <memmap_block_write+0xc>
2ffe5424:	6844      	ldr	r4, [r0, #4]
2ffe5426:	f04f 0800 	mov.w	r8, #0
2ffe542a:	e9d4 0602 	ldrd	r0, r6, [r4, #8]
2ffe542e:	eb10 0902 	adds.w	r9, r0, r2
2ffe5432:	f156 0600 	adcs.w	r6, r6, #0
2ffe5436:	bf28      	it	cs
2ffe5438:	f04f 0801 	movcs.w	r8, #1
2ffe543c:	f1b8 0f00 	cmp.w	r8, #0
2ffe5440:	d104      	bne.n	2ffe544c <memmap_block_write+0x40>
2ffe5442:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
2ffe5446:	454a      	cmp	r2, r9
2ffe5448:	41b3      	sbcs	r3, r6
2ffe544a:	d201      	bcs.n	2ffe5450 <memmap_block_write+0x44>
2ffe544c:	21d2      	movs	r1, #210	@ 0xd2
2ffe544e:	e7e3      	b.n	2ffe5418 <memmap_block_write+0xc>
2ffe5450:	6863      	ldr	r3, [r4, #4]
2ffe5452:	462a      	mov	r2, r5
2ffe5454:	4418      	add	r0, r3
2ffe5456:	f00a fba2 	bl	2ffefb9e <memcpy>
2ffe545a:	603d      	str	r5, [r7, #0]
2ffe545c:	4640      	mov	r0, r8
2ffe545e:	e9c4 9602 	strd	r9, r6, [r4, #8]
2ffe5462:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe5466:	bf00      	nop
2ffe5468:	2fff18cd 	.word	0x2fff18cd

2ffe546c <memmap_block_read>:
2ffe546c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe5470:	468c      	mov	ip, r1
2ffe5472:	4615      	mov	r5, r2
2ffe5474:	461f      	mov	r7, r3
2ffe5476:	b918      	cbnz	r0, 2ffe5480 <memmap_block_read+0x14>
2ffe5478:	21af      	movs	r1, #175	@ 0xaf
2ffe547a:	4814      	ldr	r0, [pc, #80]	@ (2ffe54cc <memmap_block_read+0x60>)
2ffe547c:	f008 fa3a 	bl	2ffed8f4 <__assert>
2ffe5480:	b90b      	cbnz	r3, 2ffe5486 <memmap_block_read+0x1a>
2ffe5482:	21b0      	movs	r1, #176	@ 0xb0
2ffe5484:	e7f9      	b.n	2ffe547a <memmap_block_read+0xe>
2ffe5486:	6844      	ldr	r4, [r0, #4]
2ffe5488:	f04f 0800 	mov.w	r8, #0
2ffe548c:	e9d4 1602 	ldrd	r1, r6, [r4, #8]
2ffe5490:	eb11 0902 	adds.w	r9, r1, r2
2ffe5494:	f156 0600 	adcs.w	r6, r6, #0
2ffe5498:	bf28      	it	cs
2ffe549a:	f04f 0801 	movcs.w	r8, #1
2ffe549e:	f1b8 0f00 	cmp.w	r8, #0
2ffe54a2:	d104      	bne.n	2ffe54ae <memmap_block_read+0x42>
2ffe54a4:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
2ffe54a8:	454a      	cmp	r2, r9
2ffe54aa:	41b3      	sbcs	r3, r6
2ffe54ac:	d201      	bcs.n	2ffe54b2 <memmap_block_read+0x46>
2ffe54ae:	21b6      	movs	r1, #182	@ 0xb6
2ffe54b0:	e7e3      	b.n	2ffe547a <memmap_block_read+0xe>
2ffe54b2:	6863      	ldr	r3, [r4, #4]
2ffe54b4:	462a      	mov	r2, r5
2ffe54b6:	4660      	mov	r0, ip
2ffe54b8:	4419      	add	r1, r3
2ffe54ba:	f00a fb70 	bl	2ffefb9e <memcpy>
2ffe54be:	603d      	str	r5, [r7, #0]
2ffe54c0:	4640      	mov	r0, r8
2ffe54c2:	e9c4 9602 	strd	r9, r6, [r4, #8]
2ffe54c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe54ca:	bf00      	nop
2ffe54cc:	2fff18cd 	.word	0x2fff18cd

2ffe54d0 <memmap_dev_open>:
2ffe54d0:	b508      	push	{r3, lr}
2ffe54d2:	b919      	cbnz	r1, 2ffe54dc <memmap_dev_open+0xc>
2ffe54d4:	4803      	ldr	r0, [pc, #12]	@ (2ffe54e4 <memmap_dev_open+0x14>)
2ffe54d6:	2154      	movs	r1, #84	@ 0x54
2ffe54d8:	f008 fa0c 	bl	2ffed8f4 <__assert>
2ffe54dc:	4b02      	ldr	r3, [pc, #8]	@ (2ffe54e8 <memmap_dev_open+0x18>)
2ffe54de:	2000      	movs	r0, #0
2ffe54e0:	600b      	str	r3, [r1, #0]
2ffe54e2:	bd08      	pop	{r3, pc}
2ffe54e4:	2fff18cd 	.word	0x2fff18cd
2ffe54e8:	2fff4048 	.word	0x2fff4048

2ffe54ec <memmap_block_len>:
2ffe54ec:	b508      	push	{r3, lr}
2ffe54ee:	b918      	cbnz	r0, 2ffe54f8 <memmap_block_len+0xc>
2ffe54f0:	219f      	movs	r1, #159	@ 0x9f
2ffe54f2:	4805      	ldr	r0, [pc, #20]	@ (2ffe5508 <memmap_block_len+0x1c>)
2ffe54f4:	f008 f9fe 	bl	2ffed8f4 <__assert>
2ffe54f8:	b909      	cbnz	r1, 2ffe54fe <memmap_block_len+0x12>
2ffe54fa:	21a0      	movs	r1, #160	@ 0xa0
2ffe54fc:	e7f9      	b.n	2ffe54f2 <memmap_block_len+0x6>
2ffe54fe:	6843      	ldr	r3, [r0, #4]
2ffe5500:	2000      	movs	r0, #0
2ffe5502:	691b      	ldr	r3, [r3, #16]
2ffe5504:	600b      	str	r3, [r1, #0]
2ffe5506:	bd08      	pop	{r3, pc}
2ffe5508:	2fff18cd 	.word	0x2fff18cd

2ffe550c <memmap_block_seek>:
2ffe550c:	2901      	cmp	r1, #1
2ffe550e:	b510      	push	{r4, lr}
2ffe5510:	d113      	bne.n	2ffe553a <memmap_block_seek+0x2e>
2ffe5512:	b918      	cbnz	r0, 2ffe551c <memmap_block_seek+0x10>
2ffe5514:	218b      	movs	r1, #139	@ 0x8b
2ffe5516:	480a      	ldr	r0, [pc, #40]	@ (2ffe5540 <memmap_block_seek+0x34>)
2ffe5518:	f008 f9ec 	bl	2ffed8f4 <__assert>
2ffe551c:	6841      	ldr	r1, [r0, #4]
2ffe551e:	2b00      	cmp	r3, #0
2ffe5520:	db05      	blt.n	2ffe552e <memmap_block_seek+0x22>
2ffe5522:	e9d1 4004 	ldrd	r4, r0, [r1, #16]
2ffe5526:	42a2      	cmp	r2, r4
2ffe5528:	eb73 0000 	sbcs.w	r0, r3, r0
2ffe552c:	d301      	bcc.n	2ffe5532 <memmap_block_seek+0x26>
2ffe552e:	2190      	movs	r1, #144	@ 0x90
2ffe5530:	e7f1      	b.n	2ffe5516 <memmap_block_seek+0xa>
2ffe5532:	2000      	movs	r0, #0
2ffe5534:	e9c1 2302 	strd	r2, r3, [r1, #8]
2ffe5538:	bd10      	pop	{r4, pc}
2ffe553a:	f06f 0001 	mvn.w	r0, #1
2ffe553e:	e7fb      	b.n	2ffe5538 <memmap_block_seek+0x2c>
2ffe5540:	2fff18cd 	.word	0x2fff18cd

2ffe5544 <memmap_block_close>:
2ffe5544:	b510      	push	{r4, lr}
2ffe5546:	b918      	cbnz	r0, 2ffe5550 <memmap_block_close+0xc>
2ffe5548:	4805      	ldr	r0, [pc, #20]	@ (2ffe5560 <memmap_block_close+0x1c>)
2ffe554a:	21e3      	movs	r1, #227	@ 0xe3
2ffe554c:	f008 f9d2 	bl	2ffed8f4 <__assert>
2ffe5550:	2400      	movs	r4, #0
2ffe5552:	2118      	movs	r1, #24
2ffe5554:	6044      	str	r4, [r0, #4]
2ffe5556:	4803      	ldr	r0, [pc, #12]	@ (2ffe5564 <memmap_block_close+0x20>)
2ffe5558:	f7ff e86c 	blx	2ffe4634 <zero_normalmem>
2ffe555c:	4620      	mov	r0, r4
2ffe555e:	bd10      	pop	{r4, pc}
2ffe5560:	2fff18cd 	.word	0x2fff18cd
2ffe5564:	2fff5430 	.word	0x2fff5430

2ffe5568 <memmap_block_open>:
2ffe5568:	b538      	push	{r3, r4, r5, lr}
2ffe556a:	4b0f      	ldr	r3, [pc, #60]	@ (2ffe55a8 <memmap_block_open+0x40>)
2ffe556c:	6818      	ldr	r0, [r3, #0]
2ffe556e:	b9a0      	cbnz	r0, 2ffe559a <memmap_block_open+0x32>
2ffe5570:	b919      	cbnz	r1, 2ffe557a <memmap_block_open+0x12>
2ffe5572:	2170      	movs	r1, #112	@ 0x70
2ffe5574:	480d      	ldr	r0, [pc, #52]	@ (2ffe55ac <memmap_block_open+0x44>)
2ffe5576:	f008 f9bd 	bl	2ffed8f4 <__assert>
2ffe557a:	b90a      	cbnz	r2, 2ffe5580 <memmap_block_open+0x18>
2ffe557c:	2171      	movs	r1, #113	@ 0x71
2ffe557e:	e7f9      	b.n	2ffe5574 <memmap_block_open+0xc>
2ffe5580:	2401      	movs	r4, #1
2ffe5582:	2500      	movs	r5, #0
2ffe5584:	601c      	str	r4, [r3, #0]
2ffe5586:	680c      	ldr	r4, [r1, #0]
2ffe5588:	6849      	ldr	r1, [r1, #4]
2ffe558a:	605c      	str	r4, [r3, #4]
2ffe558c:	2400      	movs	r4, #0
2ffe558e:	e9c3 4502 	strd	r4, r5, [r3, #8]
2ffe5592:	e9c3 1004 	strd	r1, r0, [r3, #16]
2ffe5596:	6053      	str	r3, [r2, #4]
2ffe5598:	bd38      	pop	{r3, r4, r5, pc}
2ffe559a:	4805      	ldr	r0, [pc, #20]	@ (2ffe55b0 <memmap_block_open+0x48>)
2ffe559c:	f002 f9ea 	bl	2ffe7974 <tf_log>
2ffe55a0:	f06f 000b 	mvn.w	r0, #11
2ffe55a4:	e7f8      	b.n	2ffe5598 <memmap_block_open+0x30>
2ffe55a6:	bf00      	nop
2ffe55a8:	2fff5430 	.word	0x2fff5430
2ffe55ac:	2fff18cd 	.word	0x2fff18cd
2ffe55b0:	2fff18e4 	.word	0x2fff18e4

2ffe55b4 <register_io_dev_memmap>:
2ffe55b4:	b510      	push	{r4, lr}
2ffe55b6:	4604      	mov	r4, r0
2ffe55b8:	b918      	cbnz	r0, 2ffe55c2 <register_io_dev_memmap+0xe>
2ffe55ba:	4805      	ldr	r0, [pc, #20]	@ (2ffe55d0 <register_io_dev_memmap+0x1c>)
2ffe55bc:	21f4      	movs	r1, #244	@ 0xf4
2ffe55be:	f008 f999 	bl	2ffed8f4 <__assert>
2ffe55c2:	4804      	ldr	r0, [pc, #16]	@ (2ffe55d4 <register_io_dev_memmap+0x20>)
2ffe55c4:	f000 f82a 	bl	2ffe561c <io_register_device>
2ffe55c8:	b908      	cbnz	r0, 2ffe55ce <register_io_dev_memmap+0x1a>
2ffe55ca:	4b03      	ldr	r3, [pc, #12]	@ (2ffe55d8 <register_io_dev_memmap+0x24>)
2ffe55cc:	6023      	str	r3, [r4, #0]
2ffe55ce:	bd10      	pop	{r4, pc}
2ffe55d0:	2fff18cd 	.word	0x2fff18cd
2ffe55d4:	2fff4048 	.word	0x2fff4048
2ffe55d8:	2ffeff0c 	.word	0x2ffeff0c

2ffe55dc <free_entity.isra.0>:
2ffe55dc:	b510      	push	{r4, lr}
2ffe55de:	b918      	cbnz	r0, 2ffe55e8 <free_entity.isra.0+0xc>
2ffe55e0:	480b      	ldr	r0, [pc, #44]	@ (2ffe5610 <free_entity.isra.0+0x34>)
2ffe55e2:	2182      	movs	r1, #130	@ 0x82
2ffe55e4:	f008 f986 	bl	2ffed8f4 <__assert>
2ffe55e8:	4a0a      	ldr	r2, [pc, #40]	@ (2ffe5614 <free_entity.isra.0+0x38>)
2ffe55ea:	2300      	movs	r3, #0
2ffe55ec:	4611      	mov	r1, r2
2ffe55ee:	f852 4b04 	ldr.w	r4, [r2], #4
2ffe55f2:	42a0      	cmp	r0, r4
2ffe55f4:	d003      	beq.n	2ffe55fe <free_entity.isra.0+0x22>
2ffe55f6:	3301      	adds	r3, #1
2ffe55f8:	2b04      	cmp	r3, #4
2ffe55fa:	d1f8      	bne.n	2ffe55ee <free_entity.isra.0+0x12>
2ffe55fc:	bd10      	pop	{r4, pc}
2ffe55fe:	2200      	movs	r2, #0
2ffe5600:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
2ffe5604:	4a04      	ldr	r2, [pc, #16]	@ (2ffe5618 <free_entity.isra.0+0x3c>)
2ffe5606:	6813      	ldr	r3, [r2, #0]
2ffe5608:	3b01      	subs	r3, #1
2ffe560a:	6013      	str	r3, [r2, #0]
2ffe560c:	e7f6      	b.n	2ffe55fc <free_entity.isra.0+0x20>
2ffe560e:	bf00      	nop
2ffe5610:	2fff1916 	.word	0x2fff1916
2ffe5614:	2fff557c 	.word	0x2fff557c
2ffe5618:	2fff5578 	.word	0x2fff5578

2ffe561c <io_register_device>:
2ffe561c:	b508      	push	{r3, lr}
2ffe561e:	b918      	cbnz	r0, 2ffe5628 <io_register_device+0xc>
2ffe5620:	4806      	ldr	r0, [pc, #24]	@ (2ffe563c <io_register_device+0x20>)
2ffe5622:	2194      	movs	r1, #148	@ 0x94
2ffe5624:	f008 f966 	bl	2ffed8f4 <__assert>
2ffe5628:	4a05      	ldr	r2, [pc, #20]	@ (2ffe5640 <io_register_device+0x24>)
2ffe562a:	6813      	ldr	r3, [r2, #0]
2ffe562c:	2b03      	cmp	r3, #3
2ffe562e:	bf9d      	ittte	ls
2ffe5630:	3301      	addls	r3, #1
2ffe5632:	2000      	movls	r0, #0
2ffe5634:	6013      	strls	r3, [r2, #0]
2ffe5636:	f06f 000b 	mvnhi.w	r0, #11
2ffe563a:	bd08      	pop	{r3, pc}
2ffe563c:	2fff1916 	.word	0x2fff1916
2ffe5640:	2fff5574 	.word	0x2fff5574

2ffe5644 <io_dev_open>:
2ffe5644:	4603      	mov	r3, r0
2ffe5646:	4608      	mov	r0, r1
2ffe5648:	b510      	push	{r4, lr}
2ffe564a:	4611      	mov	r1, r2
2ffe564c:	b91a      	cbnz	r2, 2ffe5656 <io_dev_open+0x12>
2ffe564e:	21a4      	movs	r1, #164	@ 0xa4
2ffe5650:	4805      	ldr	r0, [pc, #20]	@ (2ffe5668 <io_dev_open+0x24>)
2ffe5652:	f008 f94f 	bl	2ffed8f4 <__assert>
2ffe5656:	b123      	cbz	r3, 2ffe5662 <io_dev_open+0x1e>
2ffe5658:	681b      	ldr	r3, [r3, #0]
2ffe565a:	b113      	cbz	r3, 2ffe5662 <io_dev_open+0x1e>
2ffe565c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe5660:	4718      	bx	r3
2ffe5662:	214d      	movs	r1, #77	@ 0x4d
2ffe5664:	e7f4      	b.n	2ffe5650 <io_dev_open+0xc>
2ffe5666:	bf00      	nop
2ffe5668:	2fff1916 	.word	0x2fff1916

2ffe566c <io_dev_init>:
2ffe566c:	b570      	push	{r4, r5, r6, lr}
2ffe566e:	460d      	mov	r5, r1
2ffe5670:	4604      	mov	r4, r0
2ffe5672:	b918      	cbnz	r0, 2ffe567c <io_dev_init+0x10>
2ffe5674:	21ae      	movs	r1, #174	@ 0xae
2ffe5676:	4809      	ldr	r0, [pc, #36]	@ (2ffe569c <io_dev_init+0x30>)
2ffe5678:	f008 f93c 	bl	2ffed8f4 <__assert>
2ffe567c:	f008 fbbc 	bl	2ffeddf8 <is_valid_dev>
2ffe5680:	b908      	cbnz	r0, 2ffe5686 <io_dev_init+0x1a>
2ffe5682:	21af      	movs	r1, #175	@ 0xaf
2ffe5684:	e7f7      	b.n	2ffe5676 <io_dev_init+0xa>
2ffe5686:	6823      	ldr	r3, [r4, #0]
2ffe5688:	69db      	ldr	r3, [r3, #28]
2ffe568a:	b123      	cbz	r3, 2ffe5696 <io_dev_init+0x2a>
2ffe568c:	4629      	mov	r1, r5
2ffe568e:	4620      	mov	r0, r4
2ffe5690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe5694:	4718      	bx	r3
2ffe5696:	4618      	mov	r0, r3
2ffe5698:	bd70      	pop	{r4, r5, r6, pc}
2ffe569a:	bf00      	nop
2ffe569c:	2fff1916 	.word	0x2fff1916

2ffe56a0 <io_dev_close>:
2ffe56a0:	b510      	push	{r4, lr}
2ffe56a2:	4604      	mov	r4, r0
2ffe56a4:	b918      	cbnz	r0, 2ffe56ae <io_dev_close+0xe>
2ffe56a6:	21bf      	movs	r1, #191	@ 0xbf
2ffe56a8:	4808      	ldr	r0, [pc, #32]	@ (2ffe56cc <io_dev_close+0x2c>)
2ffe56aa:	f008 f923 	bl	2ffed8f4 <__assert>
2ffe56ae:	f008 fba3 	bl	2ffeddf8 <is_valid_dev>
2ffe56b2:	b908      	cbnz	r0, 2ffe56b8 <io_dev_close+0x18>
2ffe56b4:	21c0      	movs	r1, #192	@ 0xc0
2ffe56b6:	e7f7      	b.n	2ffe56a8 <io_dev_close+0x8>
2ffe56b8:	6823      	ldr	r3, [r4, #0]
2ffe56ba:	6a1b      	ldr	r3, [r3, #32]
2ffe56bc:	b11b      	cbz	r3, 2ffe56c6 <io_dev_close+0x26>
2ffe56be:	4620      	mov	r0, r4
2ffe56c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe56c4:	4718      	bx	r3
2ffe56c6:	4618      	mov	r0, r3
2ffe56c8:	bd10      	pop	{r4, pc}
2ffe56ca:	bf00      	nop
2ffe56cc:	2fff1916 	.word	0x2fff1916

2ffe56d0 <io_open>:
2ffe56d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe56d4:	4606      	mov	r6, r0
2ffe56d6:	4690      	mov	r8, r2
2ffe56d8:	460d      	mov	r5, r1
2ffe56da:	b101      	cbz	r1, 2ffe56de <io_open+0xe>
2ffe56dc:	b91a      	cbnz	r2, 2ffe56e6 <io_open+0x16>
2ffe56de:	21d4      	movs	r1, #212	@ 0xd4
2ffe56e0:	481c      	ldr	r0, [pc, #112]	@ (2ffe5754 <io_open+0x84>)
2ffe56e2:	f008 f907 	bl	2ffed8f4 <__assert>
2ffe56e6:	f008 fb87 	bl	2ffeddf8 <is_valid_dev>
2ffe56ea:	b908      	cbnz	r0, 2ffe56f0 <io_open+0x20>
2ffe56ec:	21d5      	movs	r1, #213	@ 0xd5
2ffe56ee:	e7f7      	b.n	2ffe56e0 <io_open+0x10>
2ffe56f0:	4919      	ldr	r1, [pc, #100]	@ (2ffe5758 <io_open+0x88>)
2ffe56f2:	680b      	ldr	r3, [r1, #0]
2ffe56f4:	2b03      	cmp	r3, #3
2ffe56f6:	d81b      	bhi.n	2ffe5730 <io_open+0x60>
2ffe56f8:	4a18      	ldr	r2, [pc, #96]	@ (2ffe575c <io_open+0x8c>)
2ffe56fa:	2400      	movs	r4, #0
2ffe56fc:	4610      	mov	r0, r2
2ffe56fe:	f852 7b04 	ldr.w	r7, [r2], #4
2ffe5702:	b1c7      	cbz	r7, 2ffe5736 <io_open+0x66>
2ffe5704:	3401      	adds	r4, #1
2ffe5706:	2c04      	cmp	r4, #4
2ffe5708:	d1f9      	bne.n	2ffe56fe <io_open+0x2e>
2ffe570a:	2173      	movs	r1, #115	@ 0x73
2ffe570c:	e7e8      	b.n	2ffe56e0 <io_open+0x10>
2ffe570e:	4629      	mov	r1, r5
2ffe5710:	463a      	mov	r2, r7
2ffe5712:	4630      	mov	r0, r6
2ffe5714:	4798      	blx	r3
2ffe5716:	4605      	mov	r5, r0
2ffe5718:	b930      	cbnz	r0, 2ffe5728 <io_open+0x58>
2ffe571a:	f849 6034 	str.w	r6, [r9, r4, lsl #3]
2ffe571e:	f8c8 7000 	str.w	r7, [r8]
2ffe5722:	4628      	mov	r0, r5
2ffe5724:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe5728:	4638      	mov	r0, r7
2ffe572a:	f7ff ff57 	bl	2ffe55dc <free_entity.isra.0>
2ffe572e:	e7f8      	b.n	2ffe5722 <io_open+0x52>
2ffe5730:	f06f 050b 	mvn.w	r5, #11
2ffe5734:	e7f5      	b.n	2ffe5722 <io_open+0x52>
2ffe5736:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 2ffe5760 <io_open+0x90>
2ffe573a:	3301      	adds	r3, #1
2ffe573c:	600b      	str	r3, [r1, #0]
2ffe573e:	6833      	ldr	r3, [r6, #0]
2ffe5740:	eb09 07c4 	add.w	r7, r9, r4, lsl #3
2ffe5744:	685b      	ldr	r3, [r3, #4]
2ffe5746:	f840 7024 	str.w	r7, [r0, r4, lsl #2]
2ffe574a:	2b00      	cmp	r3, #0
2ffe574c:	d1df      	bne.n	2ffe570e <io_open+0x3e>
2ffe574e:	21dd      	movs	r1, #221	@ 0xdd
2ffe5750:	e7c6      	b.n	2ffe56e0 <io_open+0x10>
2ffe5752:	bf00      	nop
2ffe5754:	2fff1916 	.word	0x2fff1916
2ffe5758:	2fff5578 	.word	0x2fff5578
2ffe575c:	2fff557c 	.word	0x2fff557c
2ffe5760:	2fff558c 	.word	0x2fff558c

2ffe5764 <io_seek>:
2ffe5764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe5768:	4604      	mov	r4, r0
2ffe576a:	460d      	mov	r5, r1
2ffe576c:	4617      	mov	r7, r2
2ffe576e:	461e      	mov	r6, r3
2ffe5770:	f008 fb4e 	bl	2ffede10 <is_valid_entity>
2ffe5774:	b110      	cbz	r0, 2ffe577c <io_seek+0x18>
2ffe5776:	1e6b      	subs	r3, r5, #1
2ffe5778:	2b02      	cmp	r3, #2
2ffe577a:	d903      	bls.n	2ffe5784 <io_seek+0x20>
2ffe577c:	480b      	ldr	r0, [pc, #44]	@ (2ffe57ac <io_seek+0x48>)
2ffe577e:	21ee      	movs	r1, #238	@ 0xee
2ffe5780:	f008 f8b8 	bl	2ffed8f4 <__assert>
2ffe5784:	6823      	ldr	r3, [r4, #0]
2ffe5786:	681b      	ldr	r3, [r3, #0]
2ffe5788:	f8d3 e008 	ldr.w	lr, [r3, #8]
2ffe578c:	f1be 0f00 	cmp.w	lr, #0
2ffe5790:	d007      	beq.n	2ffe57a2 <io_seek+0x3e>
2ffe5792:	463a      	mov	r2, r7
2ffe5794:	4633      	mov	r3, r6
2ffe5796:	4629      	mov	r1, r5
2ffe5798:	4620      	mov	r0, r4
2ffe579a:	46f4      	mov	ip, lr
2ffe579c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffe57a0:	4760      	bx	ip
2ffe57a2:	f06f 0012 	mvn.w	r0, #18
2ffe57a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe57aa:	bf00      	nop
2ffe57ac:	2fff1916 	.word	0x2fff1916

2ffe57b0 <io_size>:
2ffe57b0:	b570      	push	{r4, r5, r6, lr}
2ffe57b2:	4604      	mov	r4, r0
2ffe57b4:	460d      	mov	r5, r1
2ffe57b6:	f008 fb2b 	bl	2ffede10 <is_valid_entity>
2ffe57ba:	b100      	cbz	r0, 2ffe57be <io_size+0xe>
2ffe57bc:	b91d      	cbnz	r5, 2ffe57c6 <io_size+0x16>
2ffe57be:	4808      	ldr	r0, [pc, #32]	@ (2ffe57e0 <io_size+0x30>)
2ffe57c0:	21ff      	movs	r1, #255	@ 0xff
2ffe57c2:	f008 f897 	bl	2ffed8f4 <__assert>
2ffe57c6:	6823      	ldr	r3, [r4, #0]
2ffe57c8:	681b      	ldr	r3, [r3, #0]
2ffe57ca:	68db      	ldr	r3, [r3, #12]
2ffe57cc:	b123      	cbz	r3, 2ffe57d8 <io_size+0x28>
2ffe57ce:	4629      	mov	r1, r5
2ffe57d0:	4620      	mov	r0, r4
2ffe57d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe57d6:	4718      	bx	r3
2ffe57d8:	f06f 0012 	mvn.w	r0, #18
2ffe57dc:	bd70      	pop	{r4, r5, r6, pc}
2ffe57de:	bf00      	nop
2ffe57e0:	2fff1916 	.word	0x2fff1916

2ffe57e4 <io_read>:
2ffe57e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe57e8:	4604      	mov	r4, r0
2ffe57ea:	460d      	mov	r5, r1
2ffe57ec:	4616      	mov	r6, r2
2ffe57ee:	461f      	mov	r7, r3
2ffe57f0:	f008 fb0e 	bl	2ffede10 <is_valid_entity>
2ffe57f4:	b920      	cbnz	r0, 2ffe5800 <io_read+0x1c>
2ffe57f6:	480c      	ldr	r0, [pc, #48]	@ (2ffe5828 <io_read+0x44>)
2ffe57f8:	f240 1113 	movw	r1, #275	@ 0x113
2ffe57fc:	f008 f87a 	bl	2ffed8f4 <__assert>
2ffe5800:	6823      	ldr	r3, [r4, #0]
2ffe5802:	681b      	ldr	r3, [r3, #0]
2ffe5804:	f8d3 e010 	ldr.w	lr, [r3, #16]
2ffe5808:	f1be 0f00 	cmp.w	lr, #0
2ffe580c:	d007      	beq.n	2ffe581e <io_read+0x3a>
2ffe580e:	463b      	mov	r3, r7
2ffe5810:	4632      	mov	r2, r6
2ffe5812:	4629      	mov	r1, r5
2ffe5814:	4620      	mov	r0, r4
2ffe5816:	46f4      	mov	ip, lr
2ffe5818:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffe581c:	4760      	bx	ip
2ffe581e:	f06f 0012 	mvn.w	r0, #18
2ffe5822:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe5826:	bf00      	nop
2ffe5828:	2fff1916 	.word	0x2fff1916

2ffe582c <io_close>:
2ffe582c:	b538      	push	{r3, r4, r5, lr}
2ffe582e:	4605      	mov	r5, r0
2ffe5830:	f008 faee 	bl	2ffede10 <is_valid_entity>
2ffe5834:	b920      	cbnz	r0, 2ffe5840 <io_close+0x14>
2ffe5836:	4808      	ldr	r0, [pc, #32]	@ (2ffe5858 <io_close+0x2c>)
2ffe5838:	f44f 719d 	mov.w	r1, #314	@ 0x13a
2ffe583c:	f008 f85a 	bl	2ffed8f4 <__assert>
2ffe5840:	682b      	ldr	r3, [r5, #0]
2ffe5842:	681b      	ldr	r3, [r3, #0]
2ffe5844:	699c      	ldr	r4, [r3, #24]
2ffe5846:	b114      	cbz	r4, 2ffe584e <io_close+0x22>
2ffe5848:	4628      	mov	r0, r5
2ffe584a:	47a0      	blx	r4
2ffe584c:	4604      	mov	r4, r0
2ffe584e:	4628      	mov	r0, r5
2ffe5850:	f7ff fec4 	bl	2ffe55dc <free_entity.isra.0>
2ffe5854:	4620      	mov	r0, r4
2ffe5856:	bd38      	pop	{r3, r4, r5, pc}
2ffe5858:	2fff1916 	.word	0x2fff1916

2ffe585c <stm32mp1_ddr_init>:
2ffe585c:	68cb      	ldr	r3, [r1, #12]
2ffe585e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe5862:	4604      	mov	r4, r0
2ffe5864:	07df      	lsls	r7, r3, #31
2ffe5866:	460d      	mov	r5, r1
2ffe5868:	d507      	bpl.n	2ffe587a <stm32mp1_ddr_init+0x1e>
2ffe586a:	2000      	movs	r0, #0
2ffe586c:	f001 fea6 	bl	2ffe75bc <stm32mp_board_ddr_power_init>
2ffe5870:	b190      	cbz	r0, 2ffe5898 <stm32mp1_ddr_init+0x3c>
2ffe5872:	f002 f91b 	bl	2ffe7aac <console_flush>
2ffe5876:	f7fe edde 	blx	2ffe4434 <do_panic>
2ffe587a:	075e      	lsls	r6, r3, #29
2ffe587c:	d501      	bpl.n	2ffe5882 <stm32mp1_ddr_init+0x26>
2ffe587e:	2001      	movs	r0, #1
2ffe5880:	e7f4      	b.n	2ffe586c <stm32mp1_ddr_init+0x10>
2ffe5882:	0718      	lsls	r0, r3, #28
2ffe5884:	d501      	bpl.n	2ffe588a <stm32mp1_ddr_init+0x2e>
2ffe5886:	2002      	movs	r0, #2
2ffe5888:	e7f0      	b.n	2ffe586c <stm32mp1_ddr_init+0x10>
2ffe588a:	4802      	ldr	r0, [pc, #8]	@ (2ffe5894 <stm32mp1_ddr_init+0x38>)
2ffe588c:	f002 f872 	bl	2ffe7974 <tf_log>
2ffe5890:	e7ef      	b.n	2ffe5872 <stm32mp1_ddr_init+0x16>
2ffe5892:	bf00      	nop
2ffe5894:	2fff192e 	.word	0x2fff192e
2ffe5898:	69a3      	ldr	r3, [r4, #24]
2ffe589a:	f895 113c 	ldrb.w	r1, [r5, #316]	@ 0x13c
2ffe589e:	68da      	ldr	r2, [r3, #12]
2ffe58a0:	b119      	cbz	r1, 2ffe58aa <stm32mp1_ddr_init+0x4e>
2ffe58a2:	04d1      	lsls	r1, r2, #19
2ffe58a4:	d409      	bmi.n	2ffe58ba <stm32mp1_ddr_init+0x5e>
2ffe58a6:	f885 013c 	strb.w	r0, [r5, #316]	@ 0x13c
2ffe58aa:	68da      	ldr	r2, [r3, #12]
2ffe58ac:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
2ffe58b0:	60da      	str	r2, [r3, #12]
2ffe58b2:	68da      	ldr	r2, [r3, #12]
2ffe58b4:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2ffe58b8:	60da      	str	r2, [r3, #12]
2ffe58ba:	69e3      	ldr	r3, [r4, #28]
2ffe58bc:	4620      	mov	r0, r4
2ffe58be:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58c2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
2ffe58c6:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe58ca:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58ce:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
2ffe58d2:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe58d6:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58da:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
2ffe58de:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe58e2:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58e6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
2ffe58ea:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe58ee:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58f2:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
2ffe58f6:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe58fa:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe58fe:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
2ffe5902:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe5906:	6869      	ldr	r1, [r5, #4]
2ffe5908:	f000 fa9c 	bl	2ffe5e44 <stm32mp1_ddr_clk_enable>
2ffe590c:	4606      	mov	r6, r0
2ffe590e:	2800      	cmp	r0, #0
2ffe5910:	d1af      	bne.n	2ffe5872 <stm32mp1_ddr_init+0x16>
2ffe5912:	69e3      	ldr	r3, [r4, #28]
2ffe5914:	2002      	movs	r0, #2
2ffe5916:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe591a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
2ffe591e:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe5922:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe5926:	f422 2200 	bic.w	r2, r2, #524288	@ 0x80000
2ffe592a:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe592e:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe5932:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
2ffe5936:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe593a:	f003 f871 	bl	2ffe8a20 <udelay>
2ffe593e:	6922      	ldr	r2, [r4, #16]
2ffe5940:	4631      	mov	r1, r6
2ffe5942:	4620      	mov	r0, r4
2ffe5944:	f8d2 31b0 	ldr.w	r3, [r2, #432]	@ 0x1b0
2ffe5948:	f023 0301 	bic.w	r3, r3, #1
2ffe594c:	f8c2 31b0 	str.w	r3, [r2, #432]	@ 0x1b0
2ffe5950:	f105 020c 	add.w	r2, r5, #12
2ffe5954:	4bbf      	ldr	r3, [pc, #764]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe5956:	f003 f945 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe595a:	68ea      	ldr	r2, [r5, #12]
2ffe595c:	f248 0301 	movw	r3, #32769	@ 0x8001
2ffe5960:	2101      	movs	r1, #1
2ffe5962:	4620      	mov	r0, r4
2ffe5964:	4393      	bics	r3, r2
2ffe5966:	bf01      	itttt	eq
2ffe5968:	6922      	ldreq	r2, [r4, #16]
2ffe596a:	6813      	ldreq	r3, [r2, #0]
2ffe596c:	f423 4300 	biceq.w	r3, r3, #32768	@ 0x8000
2ffe5970:	6013      	streq	r3, [r2, #0]
2ffe5972:	f105 0270 	add.w	r2, r5, #112	@ 0x70
2ffe5976:	4bb7      	ldr	r3, [pc, #732]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe5978:	f003 f934 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe597c:	4bb5      	ldr	r3, [pc, #724]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe597e:	f105 02a0 	add.w	r2, r5, #160	@ 0xa0
2ffe5982:	2103      	movs	r1, #3
2ffe5984:	4620      	mov	r0, r4
2ffe5986:	f003 f92d 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe598a:	f895 313c 	ldrb.w	r3, [r5, #316]	@ 0x13c
2ffe598e:	6922      	ldr	r2, [r4, #16]
2ffe5990:	b11b      	cbz	r3, 2ffe599a <stm32mp1_ddr_init+0x13e>
2ffe5992:	6b13      	ldr	r3, [r2, #48]	@ 0x30
2ffe5994:	f043 0320 	orr.w	r3, r3, #32
2ffe5998:	6313      	str	r3, [r2, #48]	@ 0x30
2ffe599a:	f8d2 30d0 	ldr.w	r3, [r2, #208]	@ 0xd0
2ffe599e:	2102      	movs	r1, #2
2ffe59a0:	4620      	mov	r0, r4
2ffe59a2:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
2ffe59a6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffe59aa:	f8c2 30d0 	str.w	r3, [r2, #208]	@ 0xd0
2ffe59ae:	f105 02c4 	add.w	r2, r5, #196	@ 0xc4
2ffe59b2:	4ba8      	ldr	r3, [pc, #672]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe59b4:	f003 f916 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe59b8:	69e3      	ldr	r3, [r4, #28]
2ffe59ba:	2104      	movs	r1, #4
2ffe59bc:	4620      	mov	r0, r4
2ffe59be:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe59c2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
2ffe59c6:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe59ca:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe59ce:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
2ffe59d2:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe59d6:	f8d3 25c0 	ldr.w	r2, [r3, #1472]	@ 0x5c0
2ffe59da:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
2ffe59de:	f8c3 25c0 	str.w	r2, [r3, #1472]	@ 0x5c0
2ffe59e2:	f105 02f0 	add.w	r2, r5, #240	@ 0xf0
2ffe59e6:	4b9b      	ldr	r3, [pc, #620]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe59e8:	f003 f8fc 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe59ec:	4b99      	ldr	r3, [pc, #612]	@ (2ffe5c54 <stm32mp1_ddr_init+0x3f8>)
2ffe59ee:	f505 728a 	add.w	r2, r5, #276	@ 0x114
2ffe59f2:	2105      	movs	r1, #5
2ffe59f4:	4620      	mov	r0, r4
2ffe59f6:	f003 f8f5 	bl	2ffe8be4 <stm32mp_ddr_set_reg>
2ffe59fa:	68ea      	ldr	r2, [r5, #12]
2ffe59fc:	f248 0301 	movw	r3, #32769	@ 0x8001
2ffe5a00:	6960      	ldr	r0, [r4, #20]
2ffe5a02:	4393      	bics	r3, r2
2ffe5a04:	bf01      	itttt	eq
2ffe5a06:	6962      	ldreq	r2, [r4, #20]
2ffe5a08:	6c53      	ldreq	r3, [r2, #68]	@ 0x44
2ffe5a0a:	f023 0301 	biceq.w	r3, r3, #1
2ffe5a0e:	6453      	streq	r3, [r2, #68]	@ 0x44
2ffe5a10:	f008 fa17 	bl	2ffede42 <stm32mp1_ddrphy_idone_wait>
2ffe5a14:	68eb      	ldr	r3, [r5, #12]
2ffe5a16:	4a90      	ldr	r2, [pc, #576]	@ (2ffe5c58 <stm32mp1_ddr_init+0x3fc>)
2ffe5a18:	f013 0f01 	tst.w	r3, #1
2ffe5a1c:	4b8f      	ldr	r3, [pc, #572]	@ (2ffe5c5c <stm32mp1_ddr_init+0x400>)
2ffe5a1e:	bf08      	it	eq
2ffe5a20:	4613      	moveq	r3, r2
2ffe5a22:	f895 213c 	ldrb.w	r2, [r5, #316]	@ 0x13c
2ffe5a26:	b10a      	cbz	r2, 2ffe5a2c <stm32mp1_ddr_init+0x1d0>
2ffe5a28:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffe5a2c:	6966      	ldr	r6, [r4, #20]
2ffe5a2e:	f043 0301 	orr.w	r3, r3, #1
2ffe5a32:	200a      	movs	r0, #10
2ffe5a34:	6073      	str	r3, [r6, #4]
2ffe5a36:	f002 fff3 	bl	2ffe8a20 <udelay>
2ffe5a3a:	4630      	mov	r0, r6
2ffe5a3c:	f008 fa01 	bl	2ffede42 <stm32mp1_ddrphy_idone_wait>
2ffe5a40:	f895 313c 	ldrb.w	r3, [r5, #316]	@ 0x13c
2ffe5a44:	b333      	cbz	r3, 2ffe5a94 <stm32mp1_ddr_init+0x238>
2ffe5a46:	6966      	ldr	r6, [r4, #20]
2ffe5a48:	200a      	movs	r0, #10
2ffe5a4a:	f8d5 2140 	ldr.w	r2, [r5, #320]	@ 0x140
2ffe5a4e:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffe5a52:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
2ffe5a56:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffe5a5a:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffe5a5e:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
2ffe5a62:	4313      	orrs	r3, r2
2ffe5a64:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffe5a68:	69a3      	ldr	r3, [r4, #24]
2ffe5a6a:	68da      	ldr	r2, [r3, #12]
2ffe5a6c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
2ffe5a70:	60da      	str	r2, [r3, #12]
2ffe5a72:	68da      	ldr	r2, [r3, #12]
2ffe5a74:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2ffe5a78:	60da      	str	r2, [r3, #12]
2ffe5a7a:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffe5a7e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
2ffe5a82:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffe5a86:	2309      	movs	r3, #9
2ffe5a88:	6073      	str	r3, [r6, #4]
2ffe5a8a:	f002 ffc9 	bl	2ffe8a20 <udelay>
2ffe5a8e:	4630      	mov	r0, r6
2ffe5a90:	f008 f9d7 	bl	2ffede42 <stm32mp1_ddrphy_idone_wait>
2ffe5a94:	6920      	ldr	r0, [r4, #16]
2ffe5a96:	f008 fd57 	bl	2ffee548 <stm32mp_ddr_start_sw_done>
2ffe5a9a:	6920      	ldr	r0, [r4, #16]
2ffe5a9c:	f8d0 31b0 	ldr.w	r3, [r0, #432]	@ 0x1b0
2ffe5aa0:	f043 0301 	orr.w	r3, r3, #1
2ffe5aa4:	f8c0 31b0 	str.w	r3, [r0, #432]	@ 0x1b0
2ffe5aa8:	f008 fd55 	bl	2ffee556 <stm32mp_ddr_wait_sw_done_ack>
2ffe5aac:	f895 313c 	ldrb.w	r3, [r5, #316]	@ 0x13c
2ffe5ab0:	b113      	cbz	r3, 2ffe5ab8 <stm32mp1_ddr_init+0x25c>
2ffe5ab2:	6920      	ldr	r0, [r4, #16]
2ffe5ab4:	f008 fdbc 	bl	2ffee630 <stm32mp_ddr_sw_selfref_exit>
2ffe5ab8:	2101      	movs	r1, #1
2ffe5aba:	4620      	mov	r0, r4
2ffe5abc:	f008 f9de 	bl	2ffede7c <stm32mp1_wait_operating_mode>
2ffe5ac0:	68eb      	ldr	r3, [r5, #12]
2ffe5ac2:	041a      	lsls	r2, r3, #16
2ffe5ac4:	d559      	bpl.n	2ffe5b7a <stm32mp1_ddr_init+0x31e>
2ffe5ac6:	6963      	ldr	r3, [r4, #20]
2ffe5ac8:	6920      	ldr	r0, [r4, #16]
2ffe5aca:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
2ffe5acc:	6c9f      	ldr	r7, [r3, #72]	@ 0x48
2ffe5ace:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2ffe5ad2:	4a63      	ldr	r2, [pc, #396]	@ (2ffe5c60 <stm32mp1_ddr_init+0x404>)
2ffe5ad4:	f043 0302 	orr.w	r3, r3, #2
2ffe5ad8:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2ffe5adc:	f8d0 3308 	ldr.w	r3, [r0, #776]	@ 0x308
2ffe5ae0:	4013      	ands	r3, r2
2ffe5ae2:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
2ffe5ae6:	d0f9      	beq.n	2ffe5adc <stm32mp1_ddr_init+0x280>
2ffe5ae8:	f426 7611 	bic.w	r6, r6, #580	@ 0x244
2ffe5aec:	2101      	movs	r1, #1
2ffe5aee:	4632      	mov	r2, r6
2ffe5af0:	f008 f996 	bl	2ffede20 <stm32mp1_mode_register_write.isra.0>
2ffe5af4:	f427 62c0 	bic.w	r2, r7, #1536	@ 0x600
2ffe5af8:	2102      	movs	r1, #2
2ffe5afa:	f008 f991 	bl	2ffede20 <stm32mp1_mode_register_write.isra.0>
2ffe5afe:	f046 0201 	orr.w	r2, r6, #1
2ffe5b02:	2101      	movs	r1, #1
2ffe5b04:	f008 f98c 	bl	2ffede20 <stm32mp1_mode_register_write.isra.0>
2ffe5b08:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffe5b0a:	2103      	movs	r1, #3
2ffe5b0c:	f043 0320 	orr.w	r3, r3, #32
2ffe5b10:	6303      	str	r3, [r0, #48]	@ 0x30
2ffe5b12:	4620      	mov	r0, r4
2ffe5b14:	f008 f9b2 	bl	2ffede7c <stm32mp1_wait_operating_mode>
2ffe5b18:	6920      	ldr	r0, [r4, #16]
2ffe5b1a:	f008 fd15 	bl	2ffee548 <stm32mp_ddr_start_sw_done>
2ffe5b1e:	6920      	ldr	r0, [r4, #16]
2ffe5b20:	6803      	ldr	r3, [r0, #0]
2ffe5b22:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
2ffe5b26:	6003      	str	r3, [r0, #0]
2ffe5b28:	f008 fd15 	bl	2ffee556 <stm32mp_ddr_wait_sw_done_ack>
2ffe5b2c:	2096      	movs	r0, #150	@ 0x96
2ffe5b2e:	f002 ff3b 	bl	2ffe89a8 <clk_get_rate>
2ffe5b32:	4b4c      	ldr	r3, [pc, #304]	@ (2ffe5c64 <stm32mp1_ddr_init+0x408>)
2ffe5b34:	4298      	cmp	r0, r3
2ffe5b36:	6963      	ldr	r3, [r4, #20]
2ffe5b38:	6920      	ldr	r0, [r4, #16]
2ffe5b3a:	691a      	ldr	r2, [r3, #16]
2ffe5b3c:	bf94      	ite	ls
2ffe5b3e:	f422 0200 	bicls.w	r2, r2, #8388608	@ 0x800000
2ffe5b42:	f442 0200 	orrhi.w	r2, r2, #8388608	@ 0x800000
2ffe5b46:	611a      	str	r2, [r3, #16]
2ffe5b48:	695a      	ldr	r2, [r3, #20]
2ffe5b4a:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffe5b4e:	615a      	str	r2, [r3, #20]
2ffe5b50:	f8d3 21cc 	ldr.w	r2, [r3, #460]	@ 0x1cc
2ffe5b54:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffe5b58:	f8c3 21cc 	str.w	r2, [r3, #460]	@ 0x1cc
2ffe5b5c:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
2ffe5b60:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffe5b64:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
2ffe5b68:	f008 fd62 	bl	2ffee630 <stm32mp_ddr_sw_selfref_exit>
2ffe5b6c:	4620      	mov	r0, r4
2ffe5b6e:	2101      	movs	r1, #1
2ffe5b70:	f008 f984 	bl	2ffede7c <stm32mp1_wait_operating_mode>
2ffe5b74:	6920      	ldr	r0, [r4, #16]
2ffe5b76:	f008 fd2f 	bl	2ffee5d8 <stm32mp_ddr_enable_host_interface>
2ffe5b7a:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffe5b7e:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffe5b82:	6926      	ldr	r6, [r4, #16]
2ffe5b84:	4689      	mov	r9, r1
2ffe5b86:	9001      	str	r0, [sp, #4]
2ffe5b88:	4630      	mov	r0, r6
2ffe5b8a:	f008 fd2c 	bl	2ffee5e6 <stm32mp_ddr_disable_host_interface>
2ffe5b8e:	4630      	mov	r0, r6
2ffe5b90:	f008 fcda 	bl	2ffee548 <stm32mp_ddr_start_sw_done>
2ffe5b94:	6e32      	ldr	r2, [r6, #96]	@ 0x60
2ffe5b96:	4630      	mov	r0, r6
2ffe5b98:	f042 0201 	orr.w	r2, r2, #1
2ffe5b9c:	6632      	str	r2, [r6, #96]	@ 0x60
2ffe5b9e:	f008 fd4c 	bl	2ffee63a <stm32mp_ddr_wait_refresh_update_done_ack>
2ffe5ba2:	6b32      	ldr	r2, [r6, #48]	@ 0x30
2ffe5ba4:	4630      	mov	r0, r6
2ffe5ba6:	f022 0203 	bic.w	r2, r2, #3
2ffe5baa:	6332      	str	r2, [r6, #48]	@ 0x30
2ffe5bac:	f8d6 21b0 	ldr.w	r2, [r6, #432]	@ 0x1b0
2ffe5bb0:	f022 0201 	bic.w	r2, r2, #1
2ffe5bb4:	f8c6 21b0 	str.w	r2, [r6, #432]	@ 0x1b0
2ffe5bb8:	f008 fccd 	bl	2ffee556 <stm32mp_ddr_wait_sw_done_ack>
2ffe5bbc:	4630      	mov	r0, r6
2ffe5bbe:	f008 fd0b 	bl	2ffee5d8 <stm32mp_ddr_enable_host_interface>
2ffe5bc2:	68ea      	ldr	r2, [r5, #12]
2ffe5bc4:	200a      	movs	r0, #10
2ffe5bc6:	6966      	ldr	r6, [r4, #20]
2ffe5bc8:	f012 0f01 	tst.w	r2, #1
2ffe5bcc:	bf0c      	ite	eq
2ffe5bce:	f44f 72c0 	moveq.w	r2, #384	@ 0x180
2ffe5bd2:	2280      	movne	r2, #128	@ 0x80
2ffe5bd4:	f042 0201 	orr.w	r2, r2, #1
2ffe5bd8:	6072      	str	r2, [r6, #4]
2ffe5bda:	f002 ff21 	bl	2ffe8a20 <udelay>
2ffe5bde:	4630      	mov	r0, r6
2ffe5be0:	f008 f92f 	bl	2ffede42 <stm32mp1_ddrphy_idone_wait>
2ffe5be4:	6960      	ldr	r0, [r4, #20]
2ffe5be6:	f008 f92c 	bl	2ffede42 <stm32mp1_ddrphy_idone_wait>
2ffe5bea:	f895 213c 	ldrb.w	r2, [r5, #316]	@ 0x13c
2ffe5bee:	6926      	ldr	r6, [r4, #16]
2ffe5bf0:	9b01      	ldr	r3, [sp, #4]
2ffe5bf2:	2a00      	cmp	r2, #0
2ffe5bf4:	d138      	bne.n	2ffe5c68 <stm32mp1_ddr_init+0x40c>
2ffe5bf6:	6b2f      	ldr	r7, [r5, #48]	@ 0x30
2ffe5bf8:	4630      	mov	r0, r6
2ffe5bfa:	6a2d      	ldr	r5, [r5, #32]
2ffe5bfc:	f008 fcf3 	bl	2ffee5e6 <stm32mp_ddr_disable_host_interface>
2ffe5c00:	4630      	mov	r0, r6
2ffe5c02:	f008 fca1 	bl	2ffee548 <stm32mp_ddr_start_sw_done>
2ffe5c06:	07fb      	lsls	r3, r7, #31
2ffe5c08:	d406      	bmi.n	2ffe5c18 <stm32mp1_ddr_init+0x3bc>
2ffe5c0a:	6e33      	ldr	r3, [r6, #96]	@ 0x60
2ffe5c0c:	4630      	mov	r0, r6
2ffe5c0e:	f023 0301 	bic.w	r3, r3, #1
2ffe5c12:	6633      	str	r3, [r6, #96]	@ 0x60
2ffe5c14:	f008 fd11 	bl	2ffee63a <stm32mp_ddr_wait_refresh_update_done_ack>
2ffe5c18:	07aa      	lsls	r2, r5, #30
2ffe5c1a:	4630      	mov	r0, r6
2ffe5c1c:	bf42      	ittt	mi
2ffe5c1e:	6b33      	ldrmi	r3, [r6, #48]	@ 0x30
2ffe5c20:	f043 0302 	orrmi.w	r3, r3, #2
2ffe5c24:	6333      	strmi	r3, [r6, #48]	@ 0x30
2ffe5c26:	07eb      	lsls	r3, r5, #31
2ffe5c28:	bf42      	ittt	mi
2ffe5c2a:	6b33      	ldrmi	r3, [r6, #48]	@ 0x30
2ffe5c2c:	f043 0301 	orrmi.w	r3, r3, #1
2ffe5c30:	6333      	strmi	r3, [r6, #48]	@ 0x30
2ffe5c32:	f8d6 31b0 	ldr.w	r3, [r6, #432]	@ 0x1b0
2ffe5c36:	f043 0301 	orr.w	r3, r3, #1
2ffe5c3a:	f8c6 31b0 	str.w	r3, [r6, #432]	@ 0x1b0
2ffe5c3e:	f008 fc8a 	bl	2ffee556 <stm32mp_ddr_wait_sw_done_ack>
2ffe5c42:	4630      	mov	r0, r6
2ffe5c44:	f008 fcc8 	bl	2ffee5d8 <stm32mp_ddr_enable_host_interface>
2ffe5c48:	6920      	ldr	r0, [r4, #16]
2ffe5c4a:	b003      	add	sp, #12
2ffe5c4c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe5c50:	f008 bc9e 	b.w	2ffee590 <stm32mp_ddr_enable_axi_port>
2ffe5c54:	2ffeff10 	.word	0x2ffeff10
2ffe5c58:	0001005e 	.word	0x0001005e
2ffe5c5c:	0001007e 	.word	0x0001007e
2ffe5c60:	34001f1f 	.word	0x34001f1f
2ffe5c64:	05f5e0ff 	.word	0x05f5e0ff
2ffe5c68:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffe5c6c:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffe5c70:	491b      	ldr	r1, [pc, #108]	@ (2ffe5ce0 <stm32mp1_ddr_init+0x484>)
2ffe5c72:	686a      	ldr	r2, [r5, #4]
2ffe5c74:	428a      	cmp	r2, r1
2ffe5c76:	d8be      	bhi.n	2ffe5bf6 <stm32mp1_ddr_init+0x39a>
2ffe5c78:	6e77      	ldr	r7, [r6, #100]	@ 0x64
2ffe5c7a:	f3c7 470b 	ubfx	r7, r7, #16, #12
2ffe5c7e:	ea4f 1847 	mov.w	r8, r7, lsl #5
2ffe5c82:	2f00      	cmp	r7, #0
2ffe5c84:	d0b7      	beq.n	2ffe5bf6 <stm32mp1_ddr_init+0x39a>
2ffe5c86:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 2ffe5ce4 <stm32mp1_ddr_init+0x488>
2ffe5c8a:	2700      	movs	r7, #0
2ffe5c8c:	ebba 0003 	subs.w	r0, sl, r3
2ffe5c90:	463b      	mov	r3, r7
2ffe5c92:	fba0 0e0c 	umull	r0, lr, r0, ip
2ffe5c96:	eb6b 0909 	sbc.w	r9, fp, r9
2ffe5c9a:	fbb1 f2f2 	udiv	r2, r1, r2
2ffe5c9e:	fb0c e109 	mla	r1, ip, r9, lr
2ffe5ca2:	f007 ecc4 	blx	2ffed62c <__aeabi_uldivmod>
2ffe5ca6:	f118 33ff 	adds.w	r3, r8, #4294967295	@ 0xffffffff
2ffe5caa:	4642      	mov	r2, r8
2ffe5cac:	18c0      	adds	r0, r0, r3
2ffe5cae:	463b      	mov	r3, r7
2ffe5cb0:	f141 0100 	adc.w	r1, r1, #0
2ffe5cb4:	f007 ecba 	blx	2ffed62c <__aeabi_uldivmod>
2ffe5cb8:	463b      	mov	r3, r7
2ffe5cba:	463a      	mov	r2, r7
2ffe5cbc:	4291      	cmp	r1, r2
2ffe5cbe:	bf08      	it	eq
2ffe5cc0:	4298      	cmpeq	r0, r3
2ffe5cc2:	d098      	beq.n	2ffe5bf6 <stm32mp1_ddr_init+0x39a>
2ffe5cc4:	f8d6 7310 	ldr.w	r7, [r6, #784]	@ 0x310
2ffe5cc8:	07ff      	lsls	r7, r7, #31
2ffe5cca:	d4fb      	bmi.n	2ffe5cc4 <stm32mp1_ddr_init+0x468>
2ffe5ccc:	f8d6 730c 	ldr.w	r7, [r6, #780]	@ 0x30c
2ffe5cd0:	3301      	adds	r3, #1
2ffe5cd2:	f142 0200 	adc.w	r2, r2, #0
2ffe5cd6:	f047 0701 	orr.w	r7, r7, #1
2ffe5cda:	f8c6 730c 	str.w	r7, [r6, #780]	@ 0x30c
2ffe5cde:	e7ed      	b.n	2ffe5cbc <stm32mp1_ddr_init+0x460>
2ffe5ce0:	3b9aca00 	.word	0x3b9aca00
2ffe5ce4:	000f4240 	.word	0x000f4240

2ffe5ce8 <stm32mp1_ddr_setup>:
2ffe5ce8:	b570      	push	{r4, r5, r6, lr}
2ffe5cea:	b0e6      	sub	sp, #408	@ 0x198
2ffe5cec:	494a      	ldr	r1, [pc, #296]	@ (2ffe5e18 <stm32mp1_ddr_setup+0x130>)
2ffe5cee:	2248      	movs	r2, #72	@ 0x48
2ffe5cf0:	a803      	add	r0, sp, #12
2ffe5cf2:	f009 ff54 	bl	2ffefb9e <memcpy>
2ffe5cf6:	a802      	add	r0, sp, #8
2ffe5cf8:	f003 fe80 	bl	2ffe99fc <fdt_get_address>
2ffe5cfc:	2800      	cmp	r0, #0
2ffe5cfe:	f000 8087 	beq.w	2ffe5e10 <stm32mp1_ddr_setup+0x128>
2ffe5d02:	4a46      	ldr	r2, [pc, #280]	@ (2ffe5e1c <stm32mp1_ddr_setup+0x134>)
2ffe5d04:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe5d08:	9802      	ldr	r0, [sp, #8]
2ffe5d0a:	f009 ff11 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe5d0e:	1e06      	subs	r6, r0, #0
2ffe5d10:	da08      	bge.n	2ffe5d24 <stm32mp1_ddr_setup+0x3c>
2ffe5d12:	4943      	ldr	r1, [pc, #268]	@ (2ffe5e20 <stm32mp1_ddr_setup+0x138>)
2ffe5d14:	f06f 0415 	mvn.w	r4, #21
2ffe5d18:	4842      	ldr	r0, [pc, #264]	@ (2ffe5e24 <stm32mp1_ddr_setup+0x13c>)
2ffe5d1a:	f001 fe2b 	bl	2ffe7974 <tf_log>
2ffe5d1e:	4620      	mov	r0, r4
2ffe5d20:	b066      	add	sp, #408	@ 0x198
2ffe5d22:	bd70      	pop	{r4, r5, r6, pc}
2ffe5d24:	9802      	ldr	r0, [sp, #8]
2ffe5d26:	ad15      	add	r5, sp, #84	@ 0x54
2ffe5d28:	462a      	mov	r2, r5
2ffe5d2a:	4631      	mov	r1, r6
2ffe5d2c:	f000 f8d0 	bl	2ffe5ed0 <stm32mp_ddr_dt_get_info>
2ffe5d30:	1e04      	subs	r4, r0, #0
2ffe5d32:	dbf4      	blt.n	2ffe5d1e <stm32mp1_ddr_setup+0x36>
2ffe5d34:	9802      	ldr	r0, [sp, #8]
2ffe5d36:	2306      	movs	r3, #6
2ffe5d38:	9500      	str	r5, [sp, #0]
2ffe5d3a:	aa03      	add	r2, sp, #12
2ffe5d3c:	4631      	mov	r1, r6
2ffe5d3e:	f000 f8ef 	bl	2ffe5f20 <stm32mp_ddr_dt_get_param>
2ffe5d42:	1e04      	subs	r4, r0, #0
2ffe5d44:	dbeb      	blt.n	2ffe5d1e <stm32mp1_ddr_setup+0x36>
2ffe5d46:	2300      	movs	r3, #0
2ffe5d48:	f885 313c 	strb.w	r3, [r5, #316]	@ 0x13c
2ffe5d4c:	f008 fd08 	bl	2ffee760 <stm32mp_is_wakeup_from_standby>
2ffe5d50:	b130      	cbz	r0, 2ffe5d60 <stm32mp1_ddr_setup+0x78>
2ffe5d52:	2301      	movs	r3, #1
2ffe5d54:	f885 313c 	strb.w	r3, [r5, #316]	@ 0x13c
2ffe5d58:	f008 ff97 	bl	2ffeec8a <stm32_get_zdata_from_context>
2ffe5d5c:	f8c5 0140 	str.w	r0, [r5, #320]	@ 0x140
2ffe5d60:	4c31      	ldr	r4, [pc, #196]	@ (2ffe5e28 <stm32mp1_ddr_setup+0x140>)
2ffe5d62:	4629      	mov	r1, r5
2ffe5d64:	69e2      	ldr	r2, [r4, #28]
2ffe5d66:	4620      	mov	r0, r4
2ffe5d68:	f8d2 35c0 	ldr.w	r3, [r2, #1472]	@ 0x5c0
2ffe5d6c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2ffe5d70:	f8c2 35c0 	str.w	r3, [r2, #1472]	@ 0x5c0
2ffe5d74:	f7ff fd72 	bl	2ffe585c <stm32mp1_ddr_init>
2ffe5d78:	69e2      	ldr	r2, [r4, #28]
2ffe5d7a:	f8d2 35c0 	ldr.w	r3, [r2, #1472]	@ 0x5c0
2ffe5d7e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffe5d82:	f8c2 35c0 	str.w	r3, [r2, #1472]	@ 0x5c0
2ffe5d86:	68ab      	ldr	r3, [r5, #8]
2ffe5d88:	60a3      	str	r3, [r4, #8]
2ffe5d8a:	2300      	movs	r3, #0
2ffe5d8c:	60e3      	str	r3, [r4, #12]
2ffe5d8e:	f008 fab6 	bl	2ffee2fe <stm32mp_map_ddr_non_cacheable>
2ffe5d92:	b118      	cbz	r0, 2ffe5d9c <stm32mp1_ddr_setup+0xb4>
2ffe5d94:	f001 fe8a 	bl	2ffe7aac <console_flush>
2ffe5d98:	f7fe eb4c 	blx	2ffe4434 <do_panic>
2ffe5d9c:	f895 313c 	ldrb.w	r3, [r5, #316]	@ 0x13c
2ffe5da0:	b1d3      	cbz	r3, 2ffe5dd8 <stm32mp1_ddr_setup+0xf0>
2ffe5da2:	f008 f8aa 	bl	2ffedefa <stm32mp_ddr_test_rw_access>
2ffe5da6:	4601      	mov	r1, r0
2ffe5da8:	b118      	cbz	r0, 2ffe5db2 <stm32mp1_ddr_setup+0xca>
2ffe5daa:	4820      	ldr	r0, [pc, #128]	@ (2ffe5e2c <stm32mp1_ddr_setup+0x144>)
2ffe5dac:	f001 fde2 	bl	2ffe7974 <tf_log>
2ffe5db0:	e7f0      	b.n	2ffe5d94 <stm32mp1_ddr_setup+0xac>
2ffe5db2:	f005 ffb5 	bl	2ffebd20 <stm32_restore_ddr_training_area>
2ffe5db6:	f004 fdd3 	bl	2ffea960 <ddr_read_sr_mode>
2ffe5dba:	f004 fddd 	bl	2ffea978 <ddr_set_sr_mode>
2ffe5dbe:	f008 faad 	bl	2ffee31c <stm32mp_unmap_ddr>
2ffe5dc2:	4604      	mov	r4, r0
2ffe5dc4:	2800      	cmp	r0, #0
2ffe5dc6:	d1e5      	bne.n	2ffe5d94 <stm32mp1_ddr_setup+0xac>
2ffe5dc8:	4819      	ldr	r0, [pc, #100]	@ (2ffe5e30 <stm32mp1_ddr_setup+0x148>)
2ffe5dca:	2101      	movs	r1, #1
2ffe5dcc:	f895 313c 	ldrb.w	r3, [r5, #316]	@ 0x13c
2ffe5dd0:	7003      	strb	r3, [r0, #0]
2ffe5dd2:	f7fe eb68 	blx	2ffe44a4 <flush_dcache_range>
2ffe5dd6:	e7a2      	b.n	2ffe5d1e <stm32mp1_ddr_setup+0x36>
2ffe5dd8:	f008 f89c 	bl	2ffedf14 <stm32mp_ddr_test_data_bus>
2ffe5ddc:	4601      	mov	r1, r0
2ffe5dde:	b108      	cbz	r0, 2ffe5de4 <stm32mp1_ddr_setup+0xfc>
2ffe5de0:	4814      	ldr	r0, [pc, #80]	@ (2ffe5e34 <stm32mp1_ddr_setup+0x14c>)
2ffe5de2:	e7e3      	b.n	2ffe5dac <stm32mp1_ddr_setup+0xc4>
2ffe5de4:	68a8      	ldr	r0, [r5, #8]
2ffe5de6:	f008 f8a4 	bl	2ffedf32 <stm32mp_ddr_test_addr_bus>
2ffe5dea:	4601      	mov	r1, r0
2ffe5dec:	b108      	cbz	r0, 2ffe5df2 <stm32mp1_ddr_setup+0x10a>
2ffe5dee:	4812      	ldr	r0, [pc, #72]	@ (2ffe5e38 <stm32mp1_ddr_setup+0x150>)
2ffe5df0:	e7dc      	b.n	2ffe5dac <stm32mp1_ddr_setup+0xc4>
2ffe5df2:	f008 f8e1 	bl	2ffedfb8 <stm32mp_ddr_check_size>
2ffe5df6:	68aa      	ldr	r2, [r5, #8]
2ffe5df8:	4601      	mov	r1, r0
2ffe5dfa:	4282      	cmp	r2, r0
2ffe5dfc:	d903      	bls.n	2ffe5e06 <stm32mp1_ddr_setup+0x11e>
2ffe5dfe:	480f      	ldr	r0, [pc, #60]	@ (2ffe5e3c <stm32mp1_ddr_setup+0x154>)
2ffe5e00:	f001 fdb8 	bl	2ffe7974 <tf_log>
2ffe5e04:	e7c6      	b.n	2ffe5d94 <stm32mp1_ddr_setup+0xac>
2ffe5e06:	0d02      	lsrs	r2, r0, #20
2ffe5e08:	480d      	ldr	r0, [pc, #52]	@ (2ffe5e40 <stm32mp1_ddr_setup+0x158>)
2ffe5e0a:	f001 fdb3 	bl	2ffe7974 <tf_log>
2ffe5e0e:	e7d2      	b.n	2ffe5db6 <stm32mp1_ddr_setup+0xce>
2ffe5e10:	f06f 0401 	mvn.w	r4, #1
2ffe5e14:	e783      	b.n	2ffe5d1e <stm32mp1_ddr_setup+0x36>
2ffe5e16:	bf00      	nop
2ffe5e18:	2ffeff70 	.word	0x2ffeff70
2ffe5e1c:	2fff194e 	.word	0x2fff194e
2ffe5e20:	2fff1a8d 	.word	0x2fff1a8d
2ffe5e24:	2fff195f 	.word	0x2fff195f
2ffe5e28:	2fff5448 	.word	0x2fff5448
2ffe5e2c:	2fff1980 	.word	0x2fff1980
2ffe5e30:	2fff5ba8 	.word	0x2fff5ba8
2ffe5e34:	2fff19ab 	.word	0x2fff19ab
2ffe5e38:	2fff19dc 	.word	0x2fff19dc
2ffe5e3c:	2fff1a0d 	.word	0x2fff1a0d
2ffe5e40:	2fff1a3f 	.word	0x2fff1a3f

2ffe5e44 <stm32mp1_ddr_clk_enable>:
2ffe5e44:	b510      	push	{r4, lr}
2ffe5e46:	460c      	mov	r4, r1
2ffe5e48:	f008 fca4 	bl	2ffee794 <ddr_enable_clock>
2ffe5e4c:	2096      	movs	r0, #150	@ 0x96
2ffe5e4e:	f002 fdab 	bl	2ffe89a8 <clk_get_rate>
2ffe5e52:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffe5e56:	210a      	movs	r1, #10
2ffe5e58:	4363      	muls	r3, r4
2ffe5e5a:	4298      	cmp	r0, r3
2ffe5e5c:	bf8c      	ite	hi
2ffe5e5e:	1ac2      	subhi	r2, r0, r3
2ffe5e60:	1a1a      	subls	r2, r3, r0
2ffe5e62:	fbb3 f3f1 	udiv	r3, r3, r1
2ffe5e66:	429a      	cmp	r2, r3
2ffe5e68:	d90a      	bls.n	2ffe5e80 <stm32mp1_ddr_clk_enable+0x3c>
2ffe5e6a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
2ffe5e6e:	4621      	mov	r1, r4
2ffe5e70:	fbb0 f2f2 	udiv	r2, r0, r2
2ffe5e74:	4803      	ldr	r0, [pc, #12]	@ (2ffe5e84 <stm32mp1_ddr_clk_enable+0x40>)
2ffe5e76:	f001 fd7d 	bl	2ffe7974 <tf_log>
2ffe5e7a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe5e7e:	bd10      	pop	{r4, pc}
2ffe5e80:	2000      	movs	r0, #0
2ffe5e82:	e7fc      	b.n	2ffe5e7e <stm32mp1_ddr_clk_enable+0x3a>
2ffe5e84:	2fff1a5e 	.word	0x2fff1a5e

2ffe5e88 <stm32mp1_ddr_is_restored>:
2ffe5e88:	4b01      	ldr	r3, [pc, #4]	@ (2ffe5e90 <stm32mp1_ddr_is_restored+0x8>)
2ffe5e8a:	7818      	ldrb	r0, [r3, #0]
2ffe5e8c:	4770      	bx	lr
2ffe5e8e:	bf00      	nop
2ffe5e90:	2fff5ba8 	.word	0x2fff5ba8

2ffe5e94 <stm32mp1_ddr_probe>:
2ffe5e94:	b510      	push	{r4, lr}
2ffe5e96:	f001 fed9 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffe5e9a:	4c0c      	ldr	r4, [pc, #48]	@ (2ffe5ecc <stm32mp1_ddr_probe+0x38>)
2ffe5e9c:	6120      	str	r0, [r4, #16]
2ffe5e9e:	f001 fed9 	bl	2ffe7c54 <stm32mp_ddrphyc_base>
2ffe5ea2:	6160      	str	r0, [r4, #20]
2ffe5ea4:	f001 feda 	bl	2ffe7c5c <stm32mp_pwr_base>
2ffe5ea8:	61a0      	str	r0, [r4, #24]
2ffe5eaa:	f008 fa1d 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffe5eae:	61e0      	str	r0, [r4, #28]
2ffe5eb0:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffe5eb4:	2300      	movs	r3, #0
2ffe5eb6:	e9c4 2300 	strd	r2, r3, [r4]
2ffe5eba:	2200      	movs	r2, #0
2ffe5ebc:	2300      	movs	r3, #0
2ffe5ebe:	e9c4 2302 	strd	r2, r3, [r4, #8]
2ffe5ec2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe5ec6:	f7ff bf0f 	b.w	2ffe5ce8 <stm32mp1_ddr_setup>
2ffe5eca:	bf00      	nop
2ffe5ecc:	2fff5448 	.word	0x2fff5448

2ffe5ed0 <stm32mp_ddr_dt_get_info>:
2ffe5ed0:	b570      	push	{r4, r5, r6, lr}
2ffe5ed2:	1d13      	adds	r3, r2, #4
2ffe5ed4:	4614      	mov	r4, r2
2ffe5ed6:	4605      	mov	r5, r0
2ffe5ed8:	4a0e      	ldr	r2, [pc, #56]	@ (2ffe5f14 <stm32mp_ddr_dt_get_info+0x44>)
2ffe5eda:	460e      	mov	r6, r1
2ffe5edc:	f007 ff5e 	bl	2ffedd9c <fdt_read_uint32>
2ffe5ee0:	2800      	cmp	r0, #0
2ffe5ee2:	da02      	bge.n	2ffe5eea <stm32mp_ddr_dt_get_info+0x1a>
2ffe5ee4:	f06f 0015 	mvn.w	r0, #21
2ffe5ee8:	bd70      	pop	{r4, r5, r6, pc}
2ffe5eea:	f003 fe8f 	bl	2ffe9c0c <dt_get_ddr_size>
2ffe5eee:	60a0      	str	r0, [r4, #8]
2ffe5ef0:	2800      	cmp	r0, #0
2ffe5ef2:	d0f7      	beq.n	2ffe5ee4 <stm32mp_ddr_dt_get_info+0x14>
2ffe5ef4:	4a08      	ldr	r2, [pc, #32]	@ (2ffe5f18 <stm32mp_ddr_dt_get_info+0x48>)
2ffe5ef6:	4631      	mov	r1, r6
2ffe5ef8:	2300      	movs	r3, #0
2ffe5efa:	4628      	mov	r0, r5
2ffe5efc:	f009 fce4 	bl	2ffef8c8 <fdt_getprop>
2ffe5f00:	6020      	str	r0, [r4, #0]
2ffe5f02:	4601      	mov	r1, r0
2ffe5f04:	2800      	cmp	r0, #0
2ffe5f06:	d0ed      	beq.n	2ffe5ee4 <stm32mp_ddr_dt_get_info+0x14>
2ffe5f08:	4804      	ldr	r0, [pc, #16]	@ (2ffe5f1c <stm32mp_ddr_dt_get_info+0x4c>)
2ffe5f0a:	f001 fd33 	bl	2ffe7974 <tf_log>
2ffe5f0e:	2000      	movs	r0, #0
2ffe5f10:	e7ea      	b.n	2ffe5ee8 <stm32mp_ddr_dt_get_info+0x18>
2ffe5f12:	bf00      	nop
2ffe5f14:	2fff1ae9 	.word	0x2fff1ae9
2ffe5f18:	2fff1af6 	.word	0x2fff1af6
2ffe5f1c:	2fff1b02 	.word	0x2fff1b02

2ffe5f20 <stm32mp_ddr_dt_get_param>:
2ffe5f20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffe5f24:	4680      	mov	r8, r0
2ffe5f26:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
2ffe5f28:	468a      	mov	sl, r1
2ffe5f2a:	461e      	mov	r6, r3
2ffe5f2c:	4614      	mov	r4, r2
2ffe5f2e:	2700      	movs	r7, #0
2ffe5f30:	42b7      	cmp	r7, r6
2ffe5f32:	d101      	bne.n	2ffe5f38 <stm32mp_ddr_dt_get_param+0x18>
2ffe5f34:	2000      	movs	r0, #0
2ffe5f36:	e014      	b.n	2ffe5f62 <stm32mp_ddr_dt_get_param+0x42>
2ffe5f38:	6863      	ldr	r3, [r4, #4]
2ffe5f3a:	46a1      	mov	r9, r4
2ffe5f3c:	4651      	mov	r1, sl
2ffe5f3e:	4640      	mov	r0, r8
2ffe5f40:	442b      	add	r3, r5
2ffe5f42:	9300      	str	r3, [sp, #0]
2ffe5f44:	68a3      	ldr	r3, [r4, #8]
2ffe5f46:	f854 2b0c 	ldr.w	r2, [r4], #12
2ffe5f4a:	f7fe ffd9 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffe5f4e:	4603      	mov	r3, r0
2ffe5f50:	b150      	cbz	r0, 2ffe5f68 <stm32mp_ddr_dt_get_param+0x48>
2ffe5f52:	4806      	ldr	r0, [pc, #24]	@ (2ffe5f6c <stm32mp_ddr_dt_get_param+0x4c>)
2ffe5f54:	f8d9 2000 	ldr.w	r2, [r9]
2ffe5f58:	4905      	ldr	r1, [pc, #20]	@ (2ffe5f70 <stm32mp_ddr_dt_get_param+0x50>)
2ffe5f5a:	f001 fd0b 	bl	2ffe7974 <tf_log>
2ffe5f5e:	f06f 0015 	mvn.w	r0, #21
2ffe5f62:	b002      	add	sp, #8
2ffe5f64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffe5f68:	3701      	adds	r7, #1
2ffe5f6a:	e7e1      	b.n	2ffe5f30 <stm32mp_ddr_dt_get_param+0x10>
2ffe5f6c:	2fff1b0c 	.word	0x2fff1b0c
2ffe5f70:	2fff1b2b 	.word	0x2fff1b2b

2ffe5f74 <check_region_settings>:
2ffe5f74:	6803      	ldr	r3, [r0, #0]
2ffe5f76:	b510      	push	{r4, lr}
2ffe5f78:	2b01      	cmp	r3, #1
2ffe5f7a:	4604      	mov	r4, r0
2ffe5f7c:	d905      	bls.n	2ffe5f8a <check_region_settings+0x16>
2ffe5f7e:	4814      	ldr	r0, [pc, #80]	@ (2ffe5fd0 <check_region_settings+0x5c>)
2ffe5f80:	f001 fcf8 	bl	2ffe7974 <tf_log>
2ffe5f84:	f06f 0015 	mvn.w	r0, #21
2ffe5f88:	bd10      	pop	{r4, pc}
2ffe5f8a:	6843      	ldr	r3, [r0, #4]
2ffe5f8c:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
2ffe5f90:	d303      	bcc.n	2ffe5f9a <check_region_settings+0x26>
2ffe5f92:	6883      	ldr	r3, [r0, #8]
2ffe5f94:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
2ffe5f98:	d201      	bcs.n	2ffe5f9e <check_region_settings+0x2a>
2ffe5f9a:	480e      	ldr	r0, [pc, #56]	@ (2ffe5fd4 <check_region_settings+0x60>)
2ffe5f9c:	e7f0      	b.n	2ffe5f80 <check_region_settings+0xc>
2ffe5f9e:	f003 fe35 	bl	2ffe9c0c <dt_get_ddr_size>
2ffe5fa2:	6862      	ldr	r2, [r4, #4]
2ffe5fa4:	f100 4040 	add.w	r0, r0, #3221225472	@ 0xc0000000
2ffe5fa8:	3801      	subs	r0, #1
2ffe5faa:	4282      	cmp	r2, r0
2ffe5fac:	d802      	bhi.n	2ffe5fb4 <check_region_settings+0x40>
2ffe5fae:	68a3      	ldr	r3, [r4, #8]
2ffe5fb0:	4283      	cmp	r3, r0
2ffe5fb2:	d901      	bls.n	2ffe5fb8 <check_region_settings+0x44>
2ffe5fb4:	4808      	ldr	r0, [pc, #32]	@ (2ffe5fd8 <check_region_settings+0x64>)
2ffe5fb6:	e7e3      	b.n	2ffe5f80 <check_region_settings+0xc>
2ffe5fb8:	429a      	cmp	r2, r3
2ffe5fba:	d301      	bcc.n	2ffe5fc0 <check_region_settings+0x4c>
2ffe5fbc:	4807      	ldr	r0, [pc, #28]	@ (2ffe5fdc <check_region_settings+0x68>)
2ffe5fbe:	e7df      	b.n	2ffe5f80 <check_region_settings+0xc>
2ffe5fc0:	1c58      	adds	r0, r3, #1
2ffe5fc2:	4310      	orrs	r0, r2
2ffe5fc4:	b280      	uxth	r0, r0
2ffe5fc6:	2800      	cmp	r0, #0
2ffe5fc8:	d0de      	beq.n	2ffe5f88 <check_region_settings+0x14>
2ffe5fca:	4805      	ldr	r0, [pc, #20]	@ (2ffe5fe0 <check_region_settings+0x6c>)
2ffe5fcc:	e7d8      	b.n	2ffe5f80 <check_region_settings+0xc>
2ffe5fce:	bf00      	nop
2ffe5fd0:	2fff1b44 	.word	0x2fff1b44
2ffe5fd4:	2fff1b6e 	.word	0x2fff1b6e
2ffe5fd8:	2fff1b9b 	.word	0x2fff1b9b
2ffe5fdc:	2fff1bcd 	.word	0x2fff1bcd
2ffe5fe0:	2fff1c02 	.word	0x2fff1c02

2ffe5fe4 <stm32_mce_init>:
2ffe5fe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe5fe6:	204c      	movs	r0, #76	@ 0x4c
2ffe5fe8:	f002 fcba 	bl	2ffe8960 <clk_enable>
2ffe5fec:	4814      	ldr	r0, [pc, #80]	@ (2ffe6040 <stm32_mce_init+0x5c>)
2ffe5fee:	f8d0 13f4 	ldr.w	r1, [r0, #1012]	@ 0x3f4
2ffe5ff2:	f8d0 23f4 	ldr.w	r2, [r0, #1012]	@ 0x3f4
2ffe5ff6:	f3c1 1103 	ubfx	r1, r1, #4, #4
2ffe5ffa:	f8d0 33f8 	ldr.w	r3, [r0, #1016]	@ 0x3f8
2ffe5ffe:	2901      	cmp	r1, #1
2ffe6000:	f8d0 43fc 	ldr.w	r4, [r0, #1020]	@ 0x3fc
2ffe6004:	f002 020f 	and.w	r2, r2, #15
2ffe6008:	d10b      	bne.n	2ffe6022 <stm32_mce_init+0x3e>
2ffe600a:	b952      	cbnz	r2, 2ffe6022 <stm32_mce_init+0x3e>
2ffe600c:	4d0d      	ldr	r5, [pc, #52]	@ (2ffe6044 <stm32_mce_init+0x60>)
2ffe600e:	42ab      	cmp	r3, r5
2ffe6010:	d107      	bne.n	2ffe6022 <stm32_mce_init+0x3e>
2ffe6012:	f105 4524 	add.w	r5, r5, #2751463424	@ 0xa4000000
2ffe6016:	f5a5 05a2 	sub.w	r5, r5, #5308416	@ 0x510000
2ffe601a:	f5a5 550e 	sub.w	r5, r5, #9088	@ 0x2380
2ffe601e:	42ac      	cmp	r4, r5
2ffe6020:	d007      	beq.n	2ffe6032 <stm32_mce_init+0x4e>
2ffe6022:	4809      	ldr	r0, [pc, #36]	@ (2ffe6048 <stm32_mce_init+0x64>)
2ffe6024:	9400      	str	r4, [sp, #0]
2ffe6026:	f001 fca5 	bl	2ffe7974 <tf_log>
2ffe602a:	f001 fd3f 	bl	2ffe7aac <console_flush>
2ffe602e:	f7fe ea02 	blx	2ffe4434 <do_panic>
2ffe6032:	69c3      	ldr	r3, [r0, #28]
2ffe6034:	f043 0301 	orr.w	r3, r3, #1
2ffe6038:	61c3      	str	r3, [r0, #28]
2ffe603a:	b003      	add	sp, #12
2ffe603c:	bd30      	pop	{r4, r5, pc}
2ffe603e:	bf00      	nop
2ffe6040:	58001000 	.word	0x58001000
2ffe6044:	00170081 	.word	0x00170081
2ffe6048:	2fff1c35 	.word	0x2fff1c35

2ffe604c <stm32_mce_write_master_key>:
2ffe604c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe604e:	2800      	cmp	r0, #0
2ffe6050:	d035      	beq.n	2ffe60be <stm32_mce_write_master_key+0x72>
2ffe6052:	4b1e      	ldr	r3, [pc, #120]	@ (2ffe60cc <stm32_mce_write_master_key+0x80>)
2ffe6054:	681e      	ldr	r6, [r3, #0]
2ffe6056:	f016 0602 	ands.w	r6, r6, #2
2ffe605a:	d133      	bne.n	2ffe60c4 <stm32_mce_write_master_key+0x78>
2ffe605c:	4d1c      	ldr	r5, [pc, #112]	@ (2ffe60d0 <stm32_mce_write_master_key+0x84>)
2ffe605e:	f100 4428 	add.w	r4, r0, #2818572288	@ 0xa8000000
2ffe6062:	4f1c      	ldr	r7, [pc, #112]	@ (2ffe60d4 <stm32_mce_write_master_key+0x88>)
2ffe6064:	f5a4 5490 	sub.w	r4, r4, #4608	@ 0x1200
2ffe6068:	1961      	adds	r1, r4, r5
2ffe606a:	2204      	movs	r2, #4
2ffe606c:	eb0d 0002 	add.w	r0, sp, r2
2ffe6070:	9601      	str	r6, [sp, #4]
2ffe6072:	f009 fd94 	bl	2ffefb9e <memcpy>
2ffe6076:	9b01      	ldr	r3, [sp, #4]
2ffe6078:	f845 3b04 	str.w	r3, [r5], #4
2ffe607c:	42bd      	cmp	r5, r7
2ffe607e:	d1f3      	bne.n	2ffe6068 <stm32_mce_write_master_key+0x1c>
2ffe6080:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffe6084:	ec56 5f0e 	mrrc	15, 0, r5, r6, cr14
2ffe6088:	4a13      	ldr	r2, [pc, #76]	@ (2ffe60d8 <stm32_mce_write_master_key+0x8c>)
2ffe608a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
2ffe608e:	4c0f      	ldr	r4, [pc, #60]	@ (2ffe60cc <stm32_mce_write_master_key+0x80>)
2ffe6090:	2300      	movs	r3, #0
2ffe6092:	fba1 0100 	umull	r0, r1, r1, r0
2ffe6096:	f007 eaca 	blx	2ffed62c <__aeabi_uldivmod>
2ffe609a:	1940      	adds	r0, r0, r5
2ffe609c:	eb41 0106 	adc.w	r1, r1, r6
2ffe60a0:	6863      	ldr	r3, [r4, #4]
2ffe60a2:	07db      	lsls	r3, r3, #31
2ffe60a4:	d502      	bpl.n	2ffe60ac <stm32_mce_write_master_key+0x60>
2ffe60a6:	2000      	movs	r0, #0
2ffe60a8:	b003      	add	sp, #12
2ffe60aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe60ac:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe60b0:	4290      	cmp	r0, r2
2ffe60b2:	eb71 0303 	sbcs.w	r3, r1, r3
2ffe60b6:	d2f3      	bcs.n	2ffe60a0 <stm32_mce_write_master_key+0x54>
2ffe60b8:	f06f 0004 	mvn.w	r0, #4
2ffe60bc:	e7f4      	b.n	2ffe60a8 <stm32_mce_write_master_key+0x5c>
2ffe60be:	f06f 0015 	mvn.w	r0, #21
2ffe60c2:	e7f1      	b.n	2ffe60a8 <stm32_mce_write_master_key+0x5c>
2ffe60c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe60c8:	e7ee      	b.n	2ffe60a8 <stm32_mce_write_master_key+0x5c>
2ffe60ca:	bf00      	nop
2ffe60cc:	58001000 	.word	0x58001000
2ffe60d0:	58001200 	.word	0x58001200
2ffe60d4:	58001210 	.word	0x58001210
2ffe60d8:	000f4240 	.word	0x000f4240

2ffe60dc <stm32_mce_lock_master_key>:
2ffe60dc:	4a02      	ldr	r2, [pc, #8]	@ (2ffe60e8 <stm32_mce_lock_master_key+0xc>)
2ffe60de:	6813      	ldr	r3, [r2, #0]
2ffe60e0:	f043 0302 	orr.w	r3, r3, #2
2ffe60e4:	6013      	str	r3, [r2, #0]
2ffe60e6:	4770      	bx	lr
2ffe60e8:	58001000 	.word	0x58001000

2ffe60ec <stm32_mce_is_hw_encryption_functional>:
2ffe60ec:	4b03      	ldr	r3, [pc, #12]	@ (2ffe60fc <stm32_mce_is_hw_encryption_functional+0x10>)
2ffe60ee:	6858      	ldr	r0, [r3, #4]
2ffe60f0:	f080 0010 	eor.w	r0, r0, #16
2ffe60f4:	f3c0 1000 	ubfx	r0, r0, #4, #1
2ffe60f8:	4770      	bx	lr
2ffe60fa:	bf00      	nop
2ffe60fc:	58001000 	.word	0x58001000

2ffe6100 <stm32_mce_configure_region.part.0>:
2ffe6100:	4b16      	ldr	r3, [pc, #88]	@ (2ffe615c <stm32_mce_configure_region.part.0+0x5c>)
2ffe6102:	b510      	push	{r4, lr}
2ffe6104:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
2ffe6106:	4c16      	ldr	r4, [pc, #88]	@ (2ffe6160 <stm32_mce_configure_region.part.0+0x60>)
2ffe6108:	f022 0201 	bic.w	r2, r2, #1
2ffe610c:	641a      	str	r2, [r3, #64]	@ 0x40
2ffe610e:	6c59      	ldr	r1, [r3, #68]	@ 0x44
2ffe6110:	6842      	ldr	r2, [r0, #4]
2ffe6112:	b289      	uxth	r1, r1
2ffe6114:	4022      	ands	r2, r4
2ffe6116:	430a      	orrs	r2, r1
2ffe6118:	645a      	str	r2, [r3, #68]	@ 0x44
2ffe611a:	6c99      	ldr	r1, [r3, #72]	@ 0x48
2ffe611c:	6882      	ldr	r2, [r0, #8]
2ffe611e:	b289      	uxth	r1, r1
2ffe6120:	4022      	ands	r2, r4
2ffe6122:	430a      	orrs	r2, r1
2ffe6124:	649a      	str	r2, [r3, #72]	@ 0x48
2ffe6126:	6802      	ldr	r2, [r0, #0]
2ffe6128:	2a01      	cmp	r2, #1
2ffe612a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
2ffe612c:	d10d      	bne.n	2ffe614a <stm32_mce_configure_region.part.0+0x4a>
2ffe612e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
2ffe6132:	f042 0201 	orr.w	r2, r2, #1
2ffe6136:	641a      	str	r2, [r3, #64]	@ 0x40
2ffe6138:	f7ff ffd8 	bl	2ffe60ec <stm32_mce_is_hw_encryption_functional>
2ffe613c:	b960      	cbnz	r0, 2ffe6158 <stm32_mce_configure_region.part.0+0x58>
2ffe613e:	4809      	ldr	r0, [pc, #36]	@ (2ffe6164 <stm32_mce_configure_region.part.0+0x64>)
2ffe6140:	f001 fc18 	bl	2ffe7974 <tf_log>
2ffe6144:	f06f 0004 	mvn.w	r0, #4
2ffe6148:	bd10      	pop	{r4, pc}
2ffe614a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
2ffe614e:	641a      	str	r2, [r3, #64]	@ 0x40
2ffe6150:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
2ffe6152:	f042 0201 	orr.w	r2, r2, #1
2ffe6156:	641a      	str	r2, [r3, #64]	@ 0x40
2ffe6158:	2000      	movs	r0, #0
2ffe615a:	e7f5      	b.n	2ffe6148 <stm32_mce_configure_region.part.0+0x48>
2ffe615c:	58001000 	.word	0x58001000
2ffe6160:	ffff0000 	.word	0xffff0000
2ffe6164:	2fff1c6d 	.word	0x2fff1c6d

2ffe6168 <fconf_populate_mce>:
2ffe6168:	b530      	push	{r4, r5, lr}
2ffe616a:	b085      	sub	sp, #20
2ffe616c:	4605      	mov	r5, r0
2ffe616e:	f003 ffe5 	bl	2ffea13c <stm32mp_check_closed_device>
2ffe6172:	4b2c      	ldr	r3, [pc, #176]	@ (2ffe6224 <fconf_populate_mce+0xbc>)
2ffe6174:	4298      	cmp	r0, r3
2ffe6176:	d00c      	beq.n	2ffe6192 <fconf_populate_mce+0x2a>
2ffe6178:	4a2b      	ldr	r2, [pc, #172]	@ (2ffe6228 <fconf_populate_mce+0xc0>)
2ffe617a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe617e:	4628      	mov	r0, r5
2ffe6180:	f009 fcd6 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe6184:	1e04      	subs	r4, r0, #0
2ffe6186:	da0c      	bge.n	2ffe61a2 <fconf_populate_mce+0x3a>
2ffe6188:	4927      	ldr	r1, [pc, #156]	@ (2ffe6228 <fconf_populate_mce+0xc0>)
2ffe618a:	4828      	ldr	r0, [pc, #160]	@ (2ffe622c <fconf_populate_mce+0xc4>)
2ffe618c:	f001 fbf2 	bl	2ffe7974 <tf_log>
2ffe6190:	e004      	b.n	2ffe619c <fconf_populate_mce+0x34>
2ffe6192:	f003 fffd 	bl	2ffea190 <stm32mp_is_auth_supported>
2ffe6196:	2800      	cmp	r0, #0
2ffe6198:	d1ee      	bne.n	2ffe6178 <fconf_populate_mce+0x10>
2ffe619a:	2400      	movs	r4, #0
2ffe619c:	4620      	mov	r0, r4
2ffe619e:	b005      	add	sp, #20
2ffe61a0:	bd30      	pop	{r4, r5, pc}
2ffe61a2:	4a23      	ldr	r2, [pc, #140]	@ (2ffe6230 <fconf_populate_mce+0xc8>)
2ffe61a4:	4621      	mov	r1, r4
2ffe61a6:	466b      	mov	r3, sp
2ffe61a8:	4628      	mov	r0, r5
2ffe61aa:	f009 fb8d 	bl	2ffef8c8 <fdt_getprop>
2ffe61ae:	4604      	mov	r4, r0
2ffe61b0:	b930      	cbnz	r0, 2ffe61c0 <fconf_populate_mce+0x58>
2ffe61b2:	491f      	ldr	r1, [pc, #124]	@ (2ffe6230 <fconf_populate_mce+0xc8>)
2ffe61b4:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe61b8:	481e      	ldr	r0, [pc, #120]	@ (2ffe6234 <fconf_populate_mce+0xcc>)
2ffe61ba:	f001 fbdb 	bl	2ffe7974 <tf_log>
2ffe61be:	e7ed      	b.n	2ffe619c <fconf_populate_mce+0x34>
2ffe61c0:	9b00      	ldr	r3, [sp, #0]
2ffe61c2:	2203      	movs	r2, #3
2ffe61c4:	fbb3 f3f2 	udiv	r3, r3, r2
2ffe61c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
2ffe61cc:	9300      	str	r3, [sp, #0]
2ffe61ce:	2b0b      	cmp	r3, #11
2ffe61d0:	d9e3      	bls.n	2ffe619a <fconf_populate_mce+0x32>
2ffe61d2:	6802      	ldr	r2, [r0, #0]
2ffe61d4:	6843      	ldr	r3, [r0, #4]
2ffe61d6:	ba12      	rev	r2, r2
2ffe61d8:	ba1b      	rev	r3, r3
2ffe61da:	4413      	add	r3, r2
2ffe61dc:	9202      	str	r2, [sp, #8]
2ffe61de:	3b01      	subs	r3, #1
2ffe61e0:	9303      	str	r3, [sp, #12]
2ffe61e2:	6883      	ldr	r3, [r0, #8]
2ffe61e4:	a801      	add	r0, sp, #4
2ffe61e6:	ba1b      	rev	r3, r3
2ffe61e8:	9301      	str	r3, [sp, #4]
2ffe61ea:	f7ff fec3 	bl	2ffe5f74 <check_region_settings>
2ffe61ee:	b9a0      	cbnz	r0, 2ffe621a <fconf_populate_mce+0xb2>
2ffe61f0:	a801      	add	r0, sp, #4
2ffe61f2:	f7ff ff85 	bl	2ffe6100 <stm32_mce_configure_region.part.0>
2ffe61f6:	b980      	cbnz	r0, 2ffe621a <fconf_populate_mce+0xb2>
2ffe61f8:	a901      	add	r1, sp, #4
2ffe61fa:	f005 fda5 	bl	2ffebd48 <stm32mp1_pm_save_mce_region>
2ffe61fe:	9b00      	ldr	r3, [sp, #0]
2ffe6200:	2b17      	cmp	r3, #23
2ffe6202:	d9ca      	bls.n	2ffe619a <fconf_populate_mce+0x32>
2ffe6204:	68e2      	ldr	r2, [r4, #12]
2ffe6206:	6923      	ldr	r3, [r4, #16]
2ffe6208:	ba12      	rev	r2, r2
2ffe620a:	ba1b      	rev	r3, r3
2ffe620c:	4413      	add	r3, r2
2ffe620e:	9202      	str	r2, [sp, #8]
2ffe6210:	3b01      	subs	r3, #1
2ffe6212:	9303      	str	r3, [sp, #12]
2ffe6214:	6963      	ldr	r3, [r4, #20]
2ffe6216:	ba1b      	rev	r3, r3
2ffe6218:	9301      	str	r3, [sp, #4]
2ffe621a:	f001 fc47 	bl	2ffe7aac <console_flush>
2ffe621e:	f7fe e90a 	blx	2ffe4434 <do_panic>
2ffe6222:	bf00      	nop
2ffe6224:	a764d182 	.word	0xa764d182
2ffe6228:	2fff1c8d 	.word	0x2fff1c8d
2ffe622c:	2fff1c9c 	.word	0x2fff1c9c
2ffe6230:	2fff1cc5 	.word	0x2fff1cc5
2ffe6234:	2fff1cd3 	.word	0x2fff1cd3

2ffe6238 <stm32_uart_wait_flag>:
2ffe6238:	e92d 47e8 	stmdb	sp!, {r3, r5, r6, r7, r8, r9, sl, lr}
2ffe623c:	4680      	mov	r8, r0
2ffe623e:	460d      	mov	r5, r1
2ffe6240:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffe6244:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2ffe6248:	4a0e      	ldr	r2, [pc, #56]	@ (2ffe6284 <stm32_uart_wait_flag+0x4c>)
2ffe624a:	f644 6020 	movw	r0, #20000	@ 0x4e20
2ffe624e:	2300      	movs	r3, #0
2ffe6250:	464e      	mov	r6, r9
2ffe6252:	fba1 0100 	umull	r0, r1, r1, r0
2ffe6256:	f007 e9ea 	blx	2ffed62c <__aeabi_uldivmod>
2ffe625a:	f8d8 2000 	ldr.w	r2, [r8]
2ffe625e:	1983      	adds	r3, r0, r6
2ffe6260:	eb41 010a 	adc.w	r1, r1, sl
2ffe6264:	321c      	adds	r2, #28
2ffe6266:	6810      	ldr	r0, [r2, #0]
2ffe6268:	4205      	tst	r5, r0
2ffe626a:	d002      	beq.n	2ffe6272 <stm32_uart_wait_flag+0x3a>
2ffe626c:	2000      	movs	r0, #0
2ffe626e:	e8bd 87e8 	ldmia.w	sp!, {r3, r5, r6, r7, r8, r9, sl, pc}
2ffe6272:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe6276:	42b3      	cmp	r3, r6
2ffe6278:	eb71 0007 	sbcs.w	r0, r1, r7
2ffe627c:	d2f3      	bcs.n	2ffe6266 <stm32_uart_wait_flag+0x2e>
2ffe627e:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffe6282:	e7f4      	b.n	2ffe626e <stm32_uart_wait_flag+0x36>
2ffe6284:	000f4240 	.word	0x000f4240

2ffe6288 <stm32_uart_init>:
2ffe6288:	2300      	movs	r3, #0
2ffe628a:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe628c:	460e      	mov	r6, r1
2ffe628e:	9301      	str	r3, [sp, #4]
2ffe6290:	4614      	mov	r4, r2
2ffe6292:	4605      	mov	r5, r0
2ffe6294:	2800      	cmp	r0, #0
2ffe6296:	f000 80b2 	beq.w	2ffe63fe <stm32_uart_init+0x176>
2ffe629a:	2a00      	cmp	r2, #0
2ffe629c:	f000 80af 	beq.w	2ffe63fe <stm32_uart_init+0x176>
2ffe62a0:	2900      	cmp	r1, #0
2ffe62a2:	f000 80ac 	beq.w	2ffe63fe <stm32_uart_init+0x176>
2ffe62a6:	6001      	str	r1, [r0, #0]
2ffe62a8:	a801      	add	r0, sp, #4
2ffe62aa:	f003 fba7 	bl	2ffe99fc <fdt_get_address>
2ffe62ae:	b918      	cbnz	r0, 2ffe62b8 <stm32_uart_init+0x30>
2ffe62b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe62b4:	b002      	add	sp, #8
2ffe62b6:	bd70      	pop	{r4, r5, r6, pc}
2ffe62b8:	9b01      	ldr	r3, [sp, #4]
2ffe62ba:	2b00      	cmp	r3, #0
2ffe62bc:	d0f8      	beq.n	2ffe62b0 <stm32_uart_init+0x28>
2ffe62be:	4854      	ldr	r0, [pc, #336]	@ (2ffe6410 <stm32_uart_init+0x188>)
2ffe62c0:	4631      	mov	r1, r6
2ffe62c2:	f003 fc6b 	bl	2ffe9b9c <dt_match_instance_by_compatible>
2ffe62c6:	1c42      	adds	r2, r0, #1
2ffe62c8:	4606      	mov	r6, r0
2ffe62ca:	d0f1      	beq.n	2ffe62b0 <stm32_uart_init+0x28>
2ffe62cc:	f002 fd98 	bl	2ffe8e00 <dt_set_pinctrl_config>
2ffe62d0:	2800      	cmp	r0, #0
2ffe62d2:	f040 8097 	bne.w	2ffe6404 <stm32_uart_init+0x17c>
2ffe62d6:	4630      	mov	r0, r6
2ffe62d8:	f002 fc24 	bl	2ffe8b24 <fdt_get_clock_id>
2ffe62dc:	2800      	cmp	r0, #0
2ffe62de:	dbe7      	blt.n	2ffe62b0 <stm32_uart_init+0x28>
2ffe62e0:	f002 fb3e 	bl	2ffe8960 <clk_enable>
2ffe62e4:	6828      	ldr	r0, [r5, #0]
2ffe62e6:	f007 fe7e 	bl	2ffedfe6 <stm32_uart_stop>
2ffe62ea:	6863      	ldr	r3, [r4, #4]
2ffe62ec:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
2ffe62f0:	d058      	beq.n	2ffe63a4 <stm32_uart_init+0x11c>
2ffe62f2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
2ffe62f6:	d058      	beq.n	2ffe63aa <stm32_uart_init+0x122>
2ffe62f8:	2b00      	cmp	r3, #0
2ffe62fa:	bf0c      	ite	eq
2ffe62fc:	23ff      	moveq	r3, #255	@ 0xff
2ffe62fe:	2300      	movne	r3, #0
2ffe6300:	68e2      	ldr	r2, [r4, #12]
2ffe6302:	b102      	cbz	r2, 2ffe6306 <stm32_uart_init+0x7e>
2ffe6304:	085b      	lsrs	r3, r3, #1
2ffe6306:	6828      	ldr	r0, [r5, #0]
2ffe6308:	606b      	str	r3, [r5, #4]
2ffe630a:	f002 fc25 	bl	2ffe8b58 <fdt_get_uart_clock_freq>
2ffe630e:	2800      	cmp	r0, #0
2ffe6310:	d07b      	beq.n	2ffe640a <stm32_uart_init+0x182>
2ffe6312:	4b40      	ldr	r3, [pc, #256]	@ (2ffe6414 <stm32_uart_init+0x18c>)
2ffe6314:	69e1      	ldr	r1, [r4, #28]
2ffe6316:	6822      	ldr	r2, [r4, #0]
2ffe6318:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
2ffe631c:	0853      	lsrs	r3, r2, #1
2ffe631e:	fbb0 f1f1 	udiv	r1, r0, r1
2ffe6322:	fbb0 f0f2 	udiv	r0, r0, r2
2ffe6326:	280f      	cmp	r0, #15
2ffe6328:	d841      	bhi.n	2ffe63ae <stm32_uart_init+0x126>
2ffe632a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
2ffe632e:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
2ffe6332:	fbb3 f3f2 	udiv	r3, r3, r2
2ffe6336:	f3c3 0242 	ubfx	r2, r3, #1, #3
2ffe633a:	f023 030f 	bic.w	r3, r3, #15
2ffe633e:	041b      	lsls	r3, r3, #16
2ffe6340:	0c1b      	lsrs	r3, r3, #16
2ffe6342:	4313      	orrs	r3, r2
2ffe6344:	682a      	ldr	r2, [r5, #0]
2ffe6346:	60d3      	str	r3, [r2, #12]
2ffe6348:	68e2      	ldr	r2, [r4, #12]
2ffe634a:	6863      	ldr	r3, [r4, #4]
2ffe634c:	6829      	ldr	r1, [r5, #0]
2ffe634e:	4313      	orrs	r3, r2
2ffe6350:	6922      	ldr	r2, [r4, #16]
2ffe6352:	680e      	ldr	r6, [r1, #0]
2ffe6354:	4313      	orrs	r3, r2
2ffe6356:	6a22      	ldr	r2, [r4, #32]
2ffe6358:	4313      	orrs	r3, r2
2ffe635a:	4a2f      	ldr	r2, [pc, #188]	@ (2ffe6418 <stm32_uart_init+0x190>)
2ffe635c:	4032      	ands	r2, r6
2ffe635e:	4313      	orrs	r3, r2
2ffe6360:	4303      	orrs	r3, r0
2ffe6362:	600b      	str	r3, [r1, #0]
2ffe6364:	682a      	ldr	r2, [r5, #0]
2ffe6366:	68a1      	ldr	r1, [r4, #8]
2ffe6368:	6853      	ldr	r3, [r2, #4]
2ffe636a:	f003 0386 	and.w	r3, r3, #134	@ 0x86
2ffe636e:	430b      	orrs	r3, r1
2ffe6370:	6053      	str	r3, [r2, #4]
2ffe6372:	69a3      	ldr	r3, [r4, #24]
2ffe6374:	6962      	ldr	r2, [r4, #20]
2ffe6376:	431a      	orrs	r2, r3
2ffe6378:	6a23      	ldr	r3, [r4, #32]
2ffe637a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
2ffe637e:	bf02      	ittt	eq
2ffe6380:	6a63      	ldreq	r3, [r4, #36]	@ 0x24
2ffe6382:	6aa1      	ldreq	r1, [r4, #40]	@ 0x28
2ffe6384:	430b      	orreq	r3, r1
2ffe6386:	6829      	ldr	r1, [r5, #0]
2ffe6388:	bf08      	it	eq
2ffe638a:	431a      	orreq	r2, r3
2ffe638c:	688b      	ldr	r3, [r1, #8]
2ffe638e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
2ffe6392:	4313      	orrs	r3, r2
2ffe6394:	608b      	str	r3, [r1, #8]
2ffe6396:	69e1      	ldr	r1, [r4, #28]
2ffe6398:	290b      	cmp	r1, #11
2ffe639a:	d90e      	bls.n	2ffe63ba <stm32_uart_init+0x132>
2ffe639c:	481f      	ldr	r0, [pc, #124]	@ (2ffe641c <stm32_uart_init+0x194>)
2ffe639e:	21bc      	movs	r1, #188	@ 0xbc
2ffe63a0:	f007 faa8 	bl	2ffed8f4 <__assert>
2ffe63a4:	f240 13ff 	movw	r3, #511	@ 0x1ff
2ffe63a8:	e7aa      	b.n	2ffe6300 <stm32_uart_init+0x78>
2ffe63aa:	237f      	movs	r3, #127	@ 0x7f
2ffe63ac:	e7a8      	b.n	2ffe6300 <stm32_uart_init+0x78>
2ffe63ae:	440b      	add	r3, r1
2ffe63b0:	2000      	movs	r0, #0
2ffe63b2:	fbb3 f3f2 	udiv	r3, r3, r2
2ffe63b6:	b29b      	uxth	r3, r3
2ffe63b8:	e7c4      	b.n	2ffe6344 <stm32_uart_init+0xbc>
2ffe63ba:	682a      	ldr	r2, [r5, #0]
2ffe63bc:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
2ffe63be:	f023 030f 	bic.w	r3, r3, #15
2ffe63c2:	430b      	orrs	r3, r1
2ffe63c4:	62d3      	str	r3, [r2, #44]	@ 0x2c
2ffe63c6:	682a      	ldr	r2, [r5, #0]
2ffe63c8:	6813      	ldr	r3, [r2, #0]
2ffe63ca:	f043 0301 	orr.w	r3, r3, #1
2ffe63ce:	6013      	str	r3, [r2, #0]
2ffe63d0:	682c      	ldr	r4, [r5, #0]
2ffe63d2:	6823      	ldr	r3, [r4, #0]
2ffe63d4:	071b      	lsls	r3, r3, #28
2ffe63d6:	d40a      	bmi.n	2ffe63ee <stm32_uart_init+0x166>
2ffe63d8:	6820      	ldr	r0, [r4, #0]
2ffe63da:	f010 0004 	ands.w	r0, r0, #4
2ffe63de:	f43f af69 	beq.w	2ffe62b4 <stm32_uart_init+0x2c>
2ffe63e2:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
2ffe63e6:	4628      	mov	r0, r5
2ffe63e8:	f7ff ff26 	bl	2ffe6238 <stm32_uart_wait_flag>
2ffe63ec:	e762      	b.n	2ffe62b4 <stm32_uart_init+0x2c>
2ffe63ee:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
2ffe63f2:	4628      	mov	r0, r5
2ffe63f4:	f7ff ff20 	bl	2ffe6238 <stm32_uart_wait_flag>
2ffe63f8:	2800      	cmp	r0, #0
2ffe63fa:	d0ed      	beq.n	2ffe63d8 <stm32_uart_init+0x150>
2ffe63fc:	e75a      	b.n	2ffe62b4 <stm32_uart_init+0x2c>
2ffe63fe:	f06f 0015 	mvn.w	r0, #21
2ffe6402:	e757      	b.n	2ffe62b4 <stm32_uart_init+0x2c>
2ffe6404:	f06f 000e 	mvn.w	r0, #14
2ffe6408:	e754      	b.n	2ffe62b4 <stm32_uart_init+0x2c>
2ffe640a:	f06f 0012 	mvn.w	r0, #18
2ffe640e:	e751      	b.n	2ffe62b4 <stm32_uart_init+0x2c>
2ffe6410:	2fff1d09 	.word	0x2fff1d09
2ffe6414:	2fff0dbc 	.word	0x2fff0dbc
2ffe6418:	cfff69f3 	.word	0xcfff69f3
2ffe641c:	2fff1d19 	.word	0x2fff1d19

2ffe6420 <fconf_populate>:
2ffe6420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe6424:	4606      	mov	r6, r0
2ffe6426:	460d      	mov	r5, r1
2ffe6428:	b919      	cbnz	r1, 2ffe6432 <fconf_populate+0x12>
2ffe642a:	2134      	movs	r1, #52	@ 0x34
2ffe642c:	4818      	ldr	r0, [pc, #96]	@ (2ffe6490 <fconf_populate+0x70>)
2ffe642e:	f007 fa61 	bl	2ffed8f4 <__assert>
2ffe6432:	4608      	mov	r0, r1
2ffe6434:	f007 f946 	bl	2ffed6c4 <fdt_check_header>
2ffe6438:	b138      	cbz	r0, 2ffe644a <fconf_populate+0x2a>
2ffe643a:	4816      	ldr	r0, [pc, #88]	@ (2ffe6494 <fconf_populate+0x74>)
2ffe643c:	4631      	mov	r1, r6
2ffe643e:	f001 fa99 	bl	2ffe7974 <tf_log>
2ffe6442:	f001 fb33 	bl	2ffe7aac <console_flush>
2ffe6446:	f7fd eff6 	blx	2ffe4434 <do_panic>
2ffe644a:	4813      	ldr	r0, [pc, #76]	@ (2ffe6498 <fconf_populate+0x78>)
2ffe644c:	462a      	mov	r2, r5
2ffe644e:	4c13      	ldr	r4, [pc, #76]	@ (2ffe649c <fconf_populate+0x7c>)
2ffe6450:	4631      	mov	r1, r6
2ffe6452:	4f13      	ldr	r7, [pc, #76]	@ (2ffe64a0 <fconf_populate+0x80>)
2ffe6454:	f001 fa8e 	bl	2ffe7974 <tf_log>
2ffe6458:	f8df 8048 	ldr.w	r8, [pc, #72]	@ 2ffe64a4 <fconf_populate+0x84>
2ffe645c:	42bc      	cmp	r4, r7
2ffe645e:	d101      	bne.n	2ffe6464 <fconf_populate+0x44>
2ffe6460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe6464:	6863      	ldr	r3, [r4, #4]
2ffe6466:	b10b      	cbz	r3, 2ffe646c <fconf_populate+0x4c>
2ffe6468:	68a3      	ldr	r3, [r4, #8]
2ffe646a:	b90b      	cbnz	r3, 2ffe6470 <fconf_populate+0x50>
2ffe646c:	2144      	movs	r1, #68	@ 0x44
2ffe646e:	e7dd      	b.n	2ffe642c <fconf_populate+0xc>
2ffe6470:	6820      	ldr	r0, [r4, #0]
2ffe6472:	4631      	mov	r1, r6
2ffe6474:	f009 fca0 	bl	2ffefdb8 <strcmp>
2ffe6478:	b940      	cbnz	r0, 2ffe648c <fconf_populate+0x6c>
2ffe647a:	6861      	ldr	r1, [r4, #4]
2ffe647c:	4640      	mov	r0, r8
2ffe647e:	f001 fa79 	bl	2ffe7974 <tf_log>
2ffe6482:	68a3      	ldr	r3, [r4, #8]
2ffe6484:	4628      	mov	r0, r5
2ffe6486:	4798      	blx	r3
2ffe6488:	2800      	cmp	r0, #0
2ffe648a:	d1da      	bne.n	2ffe6442 <fconf_populate+0x22>
2ffe648c:	340c      	adds	r4, #12
2ffe648e:	e7e5      	b.n	2ffe645c <fconf_populate+0x3c>
2ffe6490:	2fff1d36 	.word	0x2fff1d36
2ffe6494:	2fff1d88 	.word	0x2fff1d88
2ffe6498:	2fff1db0 	.word	0x2fff1db0
2ffe649c:	2fff3da8 	.word	0x2fff3da8
2ffe64a0:	2fff3de4 	.word	0x2fff3de4
2ffe64a4:	2fff1dec 	.word	0x2fff1dec

2ffe64a8 <set_config_info>:
2ffe64a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe64aa:	4d0d      	ldr	r5, [pc, #52]	@ (2ffe64e0 <set_config_info+0x38>)
2ffe64ac:	68ec      	ldr	r4, [r5, #12]
2ffe64ae:	686e      	ldr	r6, [r5, #4]
2ffe64b0:	f104 0c01 	add.w	ip, r4, #1
2ffe64b4:	45b4      	cmp	ip, r6
2ffe64b6:	d908      	bls.n	2ffe64ca <set_config_info+0x22>
2ffe64b8:	1b32      	subs	r2, r6, r4
2ffe64ba:	2101      	movs	r1, #1
2ffe64bc:	4809      	ldr	r0, [pc, #36]	@ (2ffe64e4 <set_config_info+0x3c>)
2ffe64be:	f001 fa59 	bl	2ffe7974 <tf_log>
2ffe64c2:	f001 faf3 	bl	2ffe7aac <console_flush>
2ffe64c6:	f7fd efb6 	blx	2ffe4434 <do_panic>
2ffe64ca:	682e      	ldr	r6, [r5, #0]
2ffe64cc:	68af      	ldr	r7, [r5, #8]
2ffe64ce:	4374      	muls	r4, r6
2ffe64d0:	f8c5 c00c 	str.w	ip, [r5, #12]
2ffe64d4:	193e      	adds	r6, r7, r4
2ffe64d6:	5138      	str	r0, [r7, r4]
2ffe64d8:	60f1      	str	r1, [r6, #12]
2ffe64da:	6072      	str	r2, [r6, #4]
2ffe64dc:	60b3      	str	r3, [r6, #8]
2ffe64de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe64e0:	2fff4050 	.word	0x2fff4050
2ffe64e4:	2fff1e28 	.word	0x2fff1e28

2ffe64e8 <fconf_populate_dtb_registry>:
2ffe64e8:	4b39      	ldr	r3, [pc, #228]	@ (2ffe65d0 <fconf_populate_dtb_registry+0xe8>)
2ffe64ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe64ee:	4605      	mov	r5, r0
2ffe64f0:	689b      	ldr	r3, [r3, #8]
2ffe64f2:	b085      	sub	sp, #20
2ffe64f4:	b97b      	cbnz	r3, 2ffe6516 <fconf_populate_dtb_registry+0x2e>
2ffe64f6:	7943      	ldrb	r3, [r0, #5]
2ffe64f8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe64fc:	7902      	ldrb	r2, [r0, #4]
2ffe64fe:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
2ffe6502:	7983      	ldrb	r3, [r0, #6]
2ffe6504:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
2ffe6508:	79c3      	ldrb	r3, [r0, #7]
2ffe650a:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
2ffe650e:	2301      	movs	r3, #1
2ffe6510:	ba12      	rev	r2, r2
2ffe6512:	f7ff ffc9 	bl	2ffe64a8 <set_config_info>
2ffe6516:	4a2f      	ldr	r2, [pc, #188]	@ (2ffe65d4 <fconf_populate_dtb_registry+0xec>)
2ffe6518:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe651c:	4628      	mov	r0, r5
2ffe651e:	f009 fb07 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe6522:	1e07      	subs	r7, r0, #0
2ffe6524:	da08      	bge.n	2ffe6538 <fconf_populate_dtb_registry+0x50>
2ffe6526:	492b      	ldr	r1, [pc, #172]	@ (2ffe65d4 <fconf_populate_dtb_registry+0xec>)
2ffe6528:	463c      	mov	r4, r7
2ffe652a:	482b      	ldr	r0, [pc, #172]	@ (2ffe65d8 <fconf_populate_dtb_registry+0xf0>)
2ffe652c:	f001 fa22 	bl	2ffe7974 <tf_log>
2ffe6530:	4620      	mov	r0, r4
2ffe6532:	b005      	add	sp, #20
2ffe6534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe6538:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 2ffe65dc <fconf_populate_dtb_registry+0xf4>
2ffe653c:	4639      	mov	r1, r7
2ffe653e:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 2ffe65e0 <fconf_populate_dtb_registry+0xf8>
2ffe6542:	4628      	mov	r0, r5
2ffe6544:	f8df a09c 	ldr.w	sl, [pc, #156]	@ 2ffe65e4 <fconf_populate_dtb_registry+0xfc>
2ffe6548:	f009 f84d 	bl	2ffef5e6 <fdt_first_subnode>
2ffe654c:	4604      	mov	r4, r0
2ffe654e:	2c00      	cmp	r4, #0
2ffe6550:	da07      	bge.n	2ffe6562 <fconf_populate_dtb_registry+0x7a>
2ffe6552:	1c63      	adds	r3, r4, #1
2ffe6554:	d03a      	beq.n	2ffe65cc <fconf_populate_dtb_registry+0xe4>
2ffe6556:	4824      	ldr	r0, [pc, #144]	@ (2ffe65e8 <fconf_populate_dtb_registry+0x100>)
2ffe6558:	463a      	mov	r2, r7
2ffe655a:	2194      	movs	r1, #148	@ 0x94
2ffe655c:	f001 fa0a 	bl	2ffe7974 <tf_log>
2ffe6560:	e7e6      	b.n	2ffe6530 <fconf_populate_dtb_registry+0x48>
2ffe6562:	ab02      	add	r3, sp, #8
2ffe6564:	4642      	mov	r2, r8
2ffe6566:	4621      	mov	r1, r4
2ffe6568:	4628      	mov	r0, r5
2ffe656a:	f007 fc2b 	bl	2ffeddc4 <fdt_read_uint64>
2ffe656e:	1e06      	subs	r6, r0, #0
2ffe6570:	da04      	bge.n	2ffe657c <fconf_populate_dtb_registry+0x94>
2ffe6572:	481e      	ldr	r0, [pc, #120]	@ (2ffe65ec <fconf_populate_dtb_registry+0x104>)
2ffe6574:	4634      	mov	r4, r6
2ffe6576:	f001 f9fd 	bl	2ffe7974 <tf_log>
2ffe657a:	e7d9      	b.n	2ffe6530 <fconf_populate_dtb_registry+0x48>
2ffe657c:	f8dd b008 	ldr.w	fp, [sp, #8]
2ffe6580:	466b      	mov	r3, sp
2ffe6582:	464a      	mov	r2, r9
2ffe6584:	4621      	mov	r1, r4
2ffe6586:	4628      	mov	r0, r5
2ffe6588:	f007 fc08 	bl	2ffedd9c <fdt_read_uint32>
2ffe658c:	1e06      	subs	r6, r0, #0
2ffe658e:	dbf0      	blt.n	2ffe6572 <fconf_populate_dtb_registry+0x8a>
2ffe6590:	ab01      	add	r3, sp, #4
2ffe6592:	4652      	mov	r2, sl
2ffe6594:	4621      	mov	r1, r4
2ffe6596:	4628      	mov	r0, r5
2ffe6598:	f007 fc00 	bl	2ffedd9c <fdt_read_uint32>
2ffe659c:	1e06      	subs	r6, r0, #0
2ffe659e:	dbe8      	blt.n	2ffe6572 <fconf_populate_dtb_registry+0x8a>
2ffe65a0:	4a13      	ldr	r2, [pc, #76]	@ (2ffe65f0 <fconf_populate_dtb_registry+0x108>)
2ffe65a2:	ab02      	add	r3, sp, #8
2ffe65a4:	4621      	mov	r1, r4
2ffe65a6:	4628      	mov	r0, r5
2ffe65a8:	f007 fc0c 	bl	2ffeddc4 <fdt_read_uint64>
2ffe65ac:	b958      	cbnz	r0, 2ffe65c6 <fconf_populate_dtb_registry+0xde>
2ffe65ae:	9902      	ldr	r1, [sp, #8]
2ffe65b0:	e9dd 2300 	ldrd	r2, r3, [sp]
2ffe65b4:	4658      	mov	r0, fp
2ffe65b6:	f7ff ff77 	bl	2ffe64a8 <set_config_info>
2ffe65ba:	4621      	mov	r1, r4
2ffe65bc:	4628      	mov	r0, r5
2ffe65be:	f009 f825 	bl	2ffef60c <fdt_next_subnode>
2ffe65c2:	4604      	mov	r4, r0
2ffe65c4:	e7c3      	b.n	2ffe654e <fconf_populate_dtb_registry+0x66>
2ffe65c6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe65ca:	e7f1      	b.n	2ffe65b0 <fconf_populate_dtb_registry+0xc8>
2ffe65cc:	2400      	movs	r4, #0
2ffe65ce:	e7af      	b.n	2ffe6530 <fconf_populate_dtb_registry+0x48>
2ffe65d0:	2fff55ac 	.word	0x2fff55ac
2ffe65d4:	2fff1e66 	.word	0x2fff1e66
2ffe65d8:	2fff1c9c 	.word	0x2fff1c9c
2ffe65dc:	2fff1ec9 	.word	0x2fff1ec9
2ffe65e0:	2fff1ebd 	.word	0x2fff1ebd
2ffe65e4:	2fff33af 	.word	0x2fff33af
2ffe65e8:	2fff1ed6 	.word	0x2fff1ed6
2ffe65ec:	2fff1e81 	.word	0x2fff1e81
2ffe65f0:	2fff1ec6 	.word	0x2fff1ec6

2ffe65f4 <dyn_cfg_dtb_info_get_index>:
2ffe65f4:	4b06      	ldr	r3, [pc, #24]	@ (2ffe6610 <dyn_cfg_dtb_info_get_index+0x1c>)
2ffe65f6:	4602      	mov	r2, r0
2ffe65f8:	2000      	movs	r0, #0
2ffe65fa:	6899      	ldr	r1, [r3, #8]
2ffe65fc:	4291      	cmp	r1, r2
2ffe65fe:	d005      	beq.n	2ffe660c <dyn_cfg_dtb_info_get_index+0x18>
2ffe6600:	3001      	adds	r0, #1
2ffe6602:	3310      	adds	r3, #16
2ffe6604:	2806      	cmp	r0, #6
2ffe6606:	d1f8      	bne.n	2ffe65fa <dyn_cfg_dtb_info_get_index+0x6>
2ffe6608:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe660c:	4770      	bx	lr
2ffe660e:	bf00      	nop
2ffe6610:	2fff55ac 	.word	0x2fff55ac

2ffe6614 <dyn_cfg_dtb_info_getter>:
2ffe6614:	b510      	push	{r4, lr}
2ffe6616:	4604      	mov	r4, r0
2ffe6618:	f7ff ffec 	bl	2ffe65f4 <dyn_cfg_dtb_info_get_index>
2ffe661c:	2805      	cmp	r0, #5
2ffe661e:	d803      	bhi.n	2ffe6628 <dyn_cfg_dtb_info_getter+0x14>
2ffe6620:	4b04      	ldr	r3, [pc, #16]	@ (2ffe6634 <dyn_cfg_dtb_info_getter+0x20>)
2ffe6622:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2ffe6626:	bd10      	pop	{r4, pc}
2ffe6628:	4803      	ldr	r0, [pc, #12]	@ (2ffe6638 <dyn_cfg_dtb_info_getter+0x24>)
2ffe662a:	4621      	mov	r1, r4
2ffe662c:	f001 f9a2 	bl	2ffe7974 <tf_log>
2ffe6630:	2000      	movs	r0, #0
2ffe6632:	e7f8      	b.n	2ffe6626 <dyn_cfg_dtb_info_getter+0x12>
2ffe6634:	2fff55ac 	.word	0x2fff55ac
2ffe6638:	2fff1ef7 	.word	0x2fff1ef7

2ffe663c <parse_optee_image>:
2ffe663c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe663e:	460a      	mov	r2, r1
2ffe6640:	6849      	ldr	r1, [r1, #4]
2ffe6642:	68d5      	ldr	r5, [r2, #12]
2ffe6644:	6812      	ldr	r2, [r2, #0]
2ffe6646:	6883      	ldr	r3, [r0, #8]
2ffe6648:	6904      	ldr	r4, [r0, #16]
2ffe664a:	400a      	ands	r2, r1
2ffe664c:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
2ffe6650:	bf08      	it	eq
2ffe6652:	4619      	moveq	r1, r3
2ffe6654:	4262      	negs	r2, r4
2ffe6656:	429a      	cmp	r2, r3
2ffe6658:	d311      	bcc.n	2ffe667e <parse_optee_image+0x42>
2ffe665a:	441c      	add	r4, r3
2ffe665c:	426a      	negs	r2, r5
2ffe665e:	428a      	cmp	r2, r1
2ffe6660:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
2ffe6664:	d30b      	bcc.n	2ffe667e <parse_optee_image+0x42>
2ffe6666:	4299      	cmp	r1, r3
2ffe6668:	eb01 0205 	add.w	r2, r1, r5
2ffe666c:	f102 36ff 	add.w	r6, r2, #4294967295	@ 0xffffffff
2ffe6670:	d301      	bcc.n	2ffe6676 <parse_optee_image+0x3a>
2ffe6672:	42b7      	cmp	r7, r6
2ffe6674:	d207      	bcs.n	2ffe6686 <parse_optee_image+0x4a>
2ffe6676:	4808      	ldr	r0, [pc, #32]	@ (2ffe6698 <parse_optee_image+0x5c>)
2ffe6678:	9400      	str	r4, [sp, #0]
2ffe667a:	f001 f97b 	bl	2ffe7974 <tf_log>
2ffe667e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe6682:	b003      	add	sp, #12
2ffe6684:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe6686:	6843      	ldr	r3, [r0, #4]
2ffe6688:	6081      	str	r1, [r0, #8]
2ffe668a:	f023 0302 	bic.w	r3, r3, #2
2ffe668e:	6043      	str	r3, [r0, #4]
2ffe6690:	60c5      	str	r5, [r0, #12]
2ffe6692:	2000      	movs	r0, #0
2ffe6694:	e7f5      	b.n	2ffe6682 <parse_optee_image+0x46>
2ffe6696:	bf00      	nop
2ffe6698:	2fff1f1d 	.word	0x2fff1f1d

2ffe669c <optee_header_is_valid>:
2ffe669c:	6802      	ldr	r2, [r0, #0]
2ffe669e:	4b07      	ldr	r3, [pc, #28]	@ (2ffe66bc <optee_header_is_valid+0x20>)
2ffe66a0:	429a      	cmp	r2, r3
2ffe66a2:	d109      	bne.n	2ffe66b8 <optee_header_is_valid+0x1c>
2ffe66a4:	7903      	ldrb	r3, [r0, #4]
2ffe66a6:	2b02      	cmp	r3, #2
2ffe66a8:	d106      	bne.n	2ffe66b8 <optee_header_is_valid+0x1c>
2ffe66aa:	6880      	ldr	r0, [r0, #8]
2ffe66ac:	3801      	subs	r0, #1
2ffe66ae:	2801      	cmp	r0, #1
2ffe66b0:	bf8c      	ite	hi
2ffe66b2:	2000      	movhi	r0, #0
2ffe66b4:	2001      	movls	r0, #1
2ffe66b6:	4770      	bx	lr
2ffe66b8:	2000      	movs	r0, #0
2ffe66ba:	4770      	bx	lr
2ffe66bc:	4554504f 	.word	0x4554504f

2ffe66c0 <parse_optee_header>:
2ffe66c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffe66c4:	460f      	mov	r7, r1
2ffe66c6:	4616      	mov	r6, r2
2ffe66c8:	4605      	mov	r5, r0
2ffe66ca:	b918      	cbnz	r0, 2ffe66d4 <parse_optee_header+0x14>
2ffe66cc:	2195      	movs	r1, #149	@ 0x95
2ffe66ce:	4834      	ldr	r0, [pc, #208]	@ (2ffe67a0 <parse_optee_header+0xe0>)
2ffe66d0:	f007 f910 	bl	2ffed8f4 <__assert>
2ffe66d4:	6884      	ldr	r4, [r0, #8]
2ffe66d6:	46a0      	mov	r8, r4
2ffe66d8:	b90c      	cbnz	r4, 2ffe66de <parse_optee_header+0x1e>
2ffe66da:	2197      	movs	r1, #151	@ 0x97
2ffe66dc:	e7f7      	b.n	2ffe66ce <parse_optee_header+0xe>
2ffe66de:	4831      	ldr	r0, [pc, #196]	@ (2ffe67a4 <parse_optee_header+0xe4>)
2ffe66e0:	4621      	mov	r1, r4
2ffe66e2:	f001 f947 	bl	2ffe7974 <tf_log>
2ffe66e6:	4830      	ldr	r0, [pc, #192]	@ (2ffe67a8 <parse_optee_header+0xe8>)
2ffe66e8:	f001 f944 	bl	2ffe7974 <tf_log>
2ffe66ec:	6821      	ldr	r1, [r4, #0]
2ffe66ee:	482f      	ldr	r0, [pc, #188]	@ (2ffe67ac <parse_optee_header+0xec>)
2ffe66f0:	f001 f940 	bl	2ffe7974 <tf_log>
2ffe66f4:	7921      	ldrb	r1, [r4, #4]
2ffe66f6:	482e      	ldr	r0, [pc, #184]	@ (2ffe67b0 <parse_optee_header+0xf0>)
2ffe66f8:	f001 f93c 	bl	2ffe7974 <tf_log>
2ffe66fc:	7961      	ldrb	r1, [r4, #5]
2ffe66fe:	482d      	ldr	r0, [pc, #180]	@ (2ffe67b4 <parse_optee_header+0xf4>)
2ffe6700:	f001 f938 	bl	2ffe7974 <tf_log>
2ffe6704:	88e1      	ldrh	r1, [r4, #6]
2ffe6706:	482c      	ldr	r0, [pc, #176]	@ (2ffe67b8 <parse_optee_header+0xf8>)
2ffe6708:	f001 f934 	bl	2ffe7974 <tf_log>
2ffe670c:	68a1      	ldr	r1, [r4, #8]
2ffe670e:	482b      	ldr	r0, [pc, #172]	@ (2ffe67bc <parse_optee_header+0xfc>)
2ffe6710:	f001 f930 	bl	2ffe7974 <tf_log>
2ffe6714:	6822      	ldr	r2, [r4, #0]
2ffe6716:	4b2a      	ldr	r3, [pc, #168]	@ (2ffe67c0 <parse_optee_header+0x100>)
2ffe6718:	429a      	cmp	r2, r3
2ffe671a:	d11a      	bne.n	2ffe6752 <parse_optee_header+0x92>
2ffe671c:	7923      	ldrb	r3, [r4, #4]
2ffe671e:	2b02      	cmp	r3, #2
2ffe6720:	d117      	bne.n	2ffe6752 <parse_optee_header+0x92>
2ffe6722:	68a3      	ldr	r3, [r4, #8]
2ffe6724:	3b01      	subs	r3, #1
2ffe6726:	2b01      	cmp	r3, #1
2ffe6728:	d813      	bhi.n	2ffe6752 <parse_optee_header+0x92>
2ffe672a:	f104 090c 	add.w	r9, r4, #12
2ffe672e:	f04f 0a00 	mov.w	sl, #0
2ffe6732:	f8d8 3008 	ldr.w	r3, [r8, #8]
2ffe6736:	4553      	cmp	r3, sl
2ffe6738:	d813      	bhi.n	2ffe6762 <parse_optee_header+0xa2>
2ffe673a:	68bb      	ldr	r3, [r7, #8]
2ffe673c:	60ab      	str	r3, [r5, #8]
2ffe673e:	b11e      	cbz	r6, 2ffe6748 <parse_optee_header+0x88>
2ffe6740:	68b3      	ldr	r3, [r6, #8]
2ffe6742:	61ab      	str	r3, [r5, #24]
2ffe6744:	68f3      	ldr	r3, [r6, #12]
2ffe6746:	61eb      	str	r3, [r5, #28]
2ffe6748:	f898 3005 	ldrb.w	r3, [r8, #5]
2ffe674c:	b123      	cbz	r3, 2ffe6758 <parse_optee_header+0x98>
2ffe674e:	481d      	ldr	r0, [pc, #116]	@ (2ffe67c4 <parse_optee_header+0x104>)
2ffe6750:	e01d      	b.n	2ffe678e <parse_optee_header+0xce>
2ffe6752:	481d      	ldr	r0, [pc, #116]	@ (2ffe67c8 <parse_optee_header+0x108>)
2ffe6754:	f001 f90e 	bl	2ffe7974 <tf_log>
2ffe6758:	2000      	movs	r0, #0
2ffe675a:	2301      	movs	r3, #1
2ffe675c:	616b      	str	r3, [r5, #20]
2ffe675e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffe6762:	6963      	ldr	r3, [r4, #20]
2ffe6764:	b93b      	cbnz	r3, 2ffe6776 <parse_optee_header+0xb6>
2ffe6766:	4649      	mov	r1, r9
2ffe6768:	4638      	mov	r0, r7
2ffe676a:	f7ff ff67 	bl	2ffe663c <parse_optee_image>
2ffe676e:	b138      	cbz	r0, 2ffe6780 <parse_optee_header+0xc0>
2ffe6770:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe6774:	e7f3      	b.n	2ffe675e <parse_optee_header+0x9e>
2ffe6776:	2b01      	cmp	r3, #1
2ffe6778:	d10f      	bne.n	2ffe679a <parse_optee_header+0xda>
2ffe677a:	b95e      	cbnz	r6, 2ffe6794 <parse_optee_header+0xd4>
2ffe677c:	69a3      	ldr	r3, [r4, #24]
2ffe677e:	b92b      	cbnz	r3, 2ffe678c <parse_optee_header+0xcc>
2ffe6780:	f10a 0a01 	add.w	sl, sl, #1
2ffe6784:	3410      	adds	r4, #16
2ffe6786:	f109 0910 	add.w	r9, r9, #16
2ffe678a:	e7d2      	b.n	2ffe6732 <parse_optee_header+0x72>
2ffe678c:	480f      	ldr	r0, [pc, #60]	@ (2ffe67cc <parse_optee_header+0x10c>)
2ffe678e:	f001 f8f1 	bl	2ffe7974 <tf_log>
2ffe6792:	e7ed      	b.n	2ffe6770 <parse_optee_header+0xb0>
2ffe6794:	4649      	mov	r1, r9
2ffe6796:	4630      	mov	r0, r6
2ffe6798:	e7e7      	b.n	2ffe676a <parse_optee_header+0xaa>
2ffe679a:	480d      	ldr	r0, [pc, #52]	@ (2ffe67d0 <parse_optee_header+0x110>)
2ffe679c:	e7f7      	b.n	2ffe678e <parse_optee_header+0xce>
2ffe679e:	bf00      	nop
2ffe67a0:	2fff1f6a 	.word	0x2fff1f6a
2ffe67a4:	2fff1f82 	.word	0x2fff1f82
2ffe67a8:	2fff1f92 	.word	0x2fff1f92
2ffe67ac:	2fff1fa7 	.word	0x2fff1fa7
2ffe67b0:	2fff1fba 	.word	0x2fff1fba
2ffe67b4:	2fff1fcf 	.word	0x2fff1fcf
2ffe67b8:	2fff1fe1 	.word	0x2fff1fe1
2ffe67bc:	2fff1ff4 	.word	0x2fff1ff4
2ffe67c0:	4554504f 	.word	0x4554504f
2ffe67c4:	2fff206f 	.word	0x2fff206f
2ffe67c8:	2fff200b 	.word	0x2fff200b
2ffe67cc:	2fff2034 	.word	0x2fff2034
2ffe67d0:	2fff2053 	.word	0x2fff2053

2ffe67d4 <open_fip>:
2ffe67d4:	4b02      	ldr	r3, [pc, #8]	@ (2ffe67e0 <open_fip+0xc>)
2ffe67d6:	2100      	movs	r1, #0
2ffe67d8:	6818      	ldr	r0, [r3, #0]
2ffe67da:	f7fe bf47 	b.w	2ffe566c <io_dev_init>
2ffe67de:	bf00      	nop
2ffe67e0:	2fff5620 	.word	0x2fff5620

2ffe67e4 <open_storage>:
2ffe67e4:	4b02      	ldr	r3, [pc, #8]	@ (2ffe67f0 <open_storage+0xc>)
2ffe67e6:	2100      	movs	r1, #0
2ffe67e8:	6818      	ldr	r0, [r3, #0]
2ffe67ea:	f7fe bf3f 	b.w	2ffe566c <io_dev_init>
2ffe67ee:	bf00      	nop
2ffe67f0:	2fff561c 	.word	0x2fff561c

2ffe67f4 <stm32mp_io_setup>:
2ffe67f4:	b538      	push	{r3, r4, r5, lr}
2ffe67f6:	f001 fa1d 	bl	2ffe7c34 <stm32mp_get_boot_ctx_address>
2ffe67fa:	7843      	ldrb	r3, [r0, #1]
2ffe67fc:	4604      	mov	r4, r0
2ffe67fe:	7801      	ldrb	r1, [r0, #0]
2ffe6800:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffe6804:	1e4b      	subs	r3, r1, #1
2ffe6806:	2b06      	cmp	r3, #6
2ffe6808:	d83b      	bhi.n	2ffe6882 <stm32mp_io_setup+0x8e>
2ffe680a:	e8df f003 	tbb	[pc, r3]
2ffe680e:	2e04      	.short	0x2e04
2ffe6810:	38363032 	.word	0x38363032
2ffe6814:	34          	.byte	0x34
2ffe6815:	00          	.byte	0x00
2ffe6816:	482e      	ldr	r0, [pc, #184]	@ (2ffe68d0 <stm32mp_io_setup+0xdc>)
2ffe6818:	f001 f8ac 	bl	2ffe7974 <tf_log>
2ffe681c:	78a1      	ldrb	r1, [r4, #2]
2ffe681e:	78e3      	ldrb	r3, [r4, #3]
2ffe6820:	ea51 2103 	orrs.w	r1, r1, r3, lsl #8
2ffe6824:	d002      	beq.n	2ffe682c <stm32mp_io_setup+0x38>
2ffe6826:	482b      	ldr	r0, [pc, #172]	@ (2ffe68d4 <stm32mp_io_setup+0xe0>)
2ffe6828:	f001 f8a4 	bl	2ffe7974 <tf_log>
2ffe682c:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
2ffe6830:	f894 1078 	ldrb.w	r1, [r4, #120]	@ 0x78
2ffe6834:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffe6838:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
2ffe683c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
2ffe6840:	f894 307b 	ldrb.w	r3, [r4, #123]	@ 0x7b
2ffe6844:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffe6848:	1e4b      	subs	r3, r1, #1
2ffe684a:	2b01      	cmp	r3, #1
2ffe684c:	d802      	bhi.n	2ffe6854 <stm32mp_io_setup+0x60>
2ffe684e:	4822      	ldr	r0, [pc, #136]	@ (2ffe68d8 <stm32mp_io_setup+0xe4>)
2ffe6850:	f001 f890 	bl	2ffe7974 <tf_log>
2ffe6854:	4d21      	ldr	r5, [pc, #132]	@ (2ffe68dc <stm32mp_io_setup+0xe8>)
2ffe6856:	4628      	mov	r0, r5
2ffe6858:	f7fe fdc2 	bl	2ffe53e0 <register_io_dev_fip>
2ffe685c:	4601      	mov	r1, r0
2ffe685e:	b1b8      	cbz	r0, 2ffe6890 <stm32mp_io_setup+0x9c>
2ffe6860:	f44f 71ec 	mov.w	r1, #472	@ 0x1d8
2ffe6864:	481e      	ldr	r0, [pc, #120]	@ (2ffe68e0 <stm32mp_io_setup+0xec>)
2ffe6866:	f007 f845 	bl	2ffed8f4 <__assert>
2ffe686a:	481e      	ldr	r0, [pc, #120]	@ (2ffe68e4 <stm32mp_io_setup+0xf0>)
2ffe686c:	e7d4      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe686e:	481e      	ldr	r0, [pc, #120]	@ (2ffe68e8 <stm32mp_io_setup+0xf4>)
2ffe6870:	e7d2      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe6872:	481e      	ldr	r0, [pc, #120]	@ (2ffe68ec <stm32mp_io_setup+0xf8>)
2ffe6874:	e7d0      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe6876:	481e      	ldr	r0, [pc, #120]	@ (2ffe68f0 <stm32mp_io_setup+0xfc>)
2ffe6878:	e7ce      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe687a:	481e      	ldr	r0, [pc, #120]	@ (2ffe68f4 <stm32mp_io_setup+0x100>)
2ffe687c:	e7cc      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe687e:	481e      	ldr	r0, [pc, #120]	@ (2ffe68f8 <stm32mp_io_setup+0x104>)
2ffe6880:	e7ca      	b.n	2ffe6818 <stm32mp_io_setup+0x24>
2ffe6882:	481e      	ldr	r0, [pc, #120]	@ (2ffe68fc <stm32mp_io_setup+0x108>)
2ffe6884:	f001 f876 	bl	2ffe7974 <tf_log>
2ffe6888:	f001 f910 	bl	2ffe7aac <console_flush>
2ffe688c:	f7fd edd2 	blx	2ffe4434 <do_panic>
2ffe6890:	4a1b      	ldr	r2, [pc, #108]	@ (2ffe6900 <stm32mp_io_setup+0x10c>)
2ffe6892:	6828      	ldr	r0, [r5, #0]
2ffe6894:	f7fe fed6 	bl	2ffe5644 <io_dev_open>
2ffe6898:	7821      	ldrb	r1, [r4, #0]
2ffe689a:	7863      	ldrb	r3, [r4, #1]
2ffe689c:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffe68a0:	2905      	cmp	r1, #5
2ffe68a2:	d112      	bne.n	2ffe68ca <stm32mp_io_setup+0xd6>
2ffe68a4:	f3bf 8f5f 	dmb	sy
2ffe68a8:	4c16      	ldr	r4, [pc, #88]	@ (2ffe6904 <stm32mp_io_setup+0x110>)
2ffe68aa:	4620      	mov	r0, r4
2ffe68ac:	f7fe fe82 	bl	2ffe55b4 <register_io_dev_memmap>
2ffe68b0:	4601      	mov	r1, r0
2ffe68b2:	b110      	cbz	r0, 2ffe68ba <stm32mp_io_setup+0xc6>
2ffe68b4:	f240 11a3 	movw	r1, #419	@ 0x1a3
2ffe68b8:	e7d4      	b.n	2ffe6864 <stm32mp_io_setup+0x70>
2ffe68ba:	4a13      	ldr	r2, [pc, #76]	@ (2ffe6908 <stm32mp_io_setup+0x114>)
2ffe68bc:	6820      	ldr	r0, [r4, #0]
2ffe68be:	f7fe fec1 	bl	2ffe5644 <io_dev_open>
2ffe68c2:	b120      	cbz	r0, 2ffe68ce <stm32mp_io_setup+0xda>
2ffe68c4:	f240 11a7 	movw	r1, #423	@ 0x1a7
2ffe68c8:	e7cc      	b.n	2ffe6864 <stm32mp_io_setup+0x70>
2ffe68ca:	4810      	ldr	r0, [pc, #64]	@ (2ffe690c <stm32mp_io_setup+0x118>)
2ffe68cc:	e7da      	b.n	2ffe6884 <stm32mp_io_setup+0x90>
2ffe68ce:	bd38      	pop	{r3, r4, r5, pc}
2ffe68d0:	2fff208f 	.word	0x2fff208f
2ffe68d4:	2fff2113 	.word	0x2fff2113
2ffe68d8:	2fff2123 	.word	0x2fff2123
2ffe68dc:	2fff5618 	.word	0x2fff5618
2ffe68e0:	2fff2140 	.word	0x2fff2140
2ffe68e4:	2fff209d 	.word	0x2fff209d
2ffe68e8:	2fff20aa 	.word	0x2fff20aa
2ffe68ec:	2fff20ba 	.word	0x2fff20ba
2ffe68f0:	2fff20cb 	.word	0x2fff20cb
2ffe68f4:	2fff20dc 	.word	0x2fff20dc
2ffe68f8:	2fff20e9 	.word	0x2fff20e9
2ffe68fc:	2fff20f5 	.word	0x2fff20f5
2ffe6900:	2fff5620 	.word	0x2fff5620
2ffe6904:	2fff5614 	.word	0x2fff5614
2ffe6908:	2fff561c 	.word	0x2fff561c
2ffe690c:	2fff2160 	.word	0x2fff2160

2ffe6910 <bl2_plat_handle_pre_image_load>:
2ffe6910:	b538      	push	{r3, r4, r5, lr}
2ffe6912:	4604      	mov	r4, r0
2ffe6914:	f001 f994 	bl	2ffe7c40 <stm32mp_get_boot_itf_selected>
2ffe6918:	4605      	mov	r5, r0
2ffe691a:	f007 ff23 	bl	2ffee764 <stm32mp_skip_boot_device_after_standby>
2ffe691e:	b9f8      	cbnz	r0, 2ffe6960 <bl2_plat_handle_pre_image_load+0x50>
2ffe6920:	2d05      	cmp	r5, #5
2ffe6922:	d11f      	bne.n	2ffe6964 <bl2_plat_handle_pre_image_load+0x54>
2ffe6924:	2c01      	cmp	r4, #1
2ffe6926:	d11b      	bne.n	2ffe6960 <bl2_plat_handle_pre_image_load+0x50>
2ffe6928:	f001 f984 	bl	2ffe7c34 <stm32mp_get_boot_ctx_address>
2ffe692c:	7883      	ldrb	r3, [r0, #2]
2ffe692e:	78c0      	ldrb	r0, [r0, #3]
2ffe6930:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffe6934:	f003 fb42 	bl	2ffe9fbc <get_uart_address>
2ffe6938:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffe693c:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
2ffe6940:	2103      	movs	r1, #3
2ffe6942:	f000 f88d 	bl	2ffe6a60 <stm32cubeprog_uart_load>
2ffe6946:	b120      	cbz	r0, 2ffe6952 <bl2_plat_handle_pre_image_load+0x42>
2ffe6948:	480a      	ldr	r0, [pc, #40]	@ (2ffe6974 <bl2_plat_handle_pre_image_load+0x64>)
2ffe694a:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
2ffe694e:	f006 ffd1 	bl	2ffed8f4 <__assert>
2ffe6952:	4b09      	ldr	r3, [pc, #36]	@ (2ffe6978 <bl2_plat_handle_pre_image_load+0x68>)
2ffe6954:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
2ffe6958:	601a      	str	r2, [r3, #0]
2ffe695a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
2ffe695e:	605a      	str	r2, [r3, #4]
2ffe6960:	2000      	movs	r0, #0
2ffe6962:	bd38      	pop	{r3, r4, r5, pc}
2ffe6964:	4805      	ldr	r0, [pc, #20]	@ (2ffe697c <bl2_plat_handle_pre_image_load+0x6c>)
2ffe6966:	f001 f805 	bl	2ffe7974 <tf_log>
2ffe696a:	f001 f89f 	bl	2ffe7aac <console_flush>
2ffe696e:	f7fd ed62 	blx	2ffe4434 <do_panic>
2ffe6972:	bf00      	nop
2ffe6974:	2fff2140 	.word	0x2fff2140
2ffe6978:	2fff560c 	.word	0x2fff560c
2ffe697c:	2fff2182 	.word	0x2fff2182

2ffe6980 <plat_get_image_source>:
2ffe6980:	2812      	cmp	r0, #18
2ffe6982:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe6986:	460d      	mov	r5, r1
2ffe6988:	4616      	mov	r6, r2
2ffe698a:	d904      	bls.n	2ffe6996 <plat_get_image_source+0x16>
2ffe698c:	480b      	ldr	r0, [pc, #44]	@ (2ffe69bc <plat_get_image_source+0x3c>)
2ffe698e:	f240 21da 	movw	r1, #730	@ 0x2da
2ffe6992:	f006 ffaf 	bl	2ffed8f4 <__assert>
2ffe6996:	f8df 8028 	ldr.w	r8, [pc, #40]	@ 2ffe69c0 <plat_get_image_source+0x40>
2ffe699a:	231c      	movs	r3, #28
2ffe699c:	fb03 f400 	mul.w	r4, r3, r0
2ffe69a0:	eb08 0704 	add.w	r7, r8, r4
2ffe69a4:	69bb      	ldr	r3, [r7, #24]
2ffe69a6:	6878      	ldr	r0, [r7, #4]
2ffe69a8:	4798      	blx	r3
2ffe69aa:	b928      	cbnz	r0, 2ffe69b8 <plat_get_image_source+0x38>
2ffe69ac:	687b      	ldr	r3, [r7, #4]
2ffe69ae:	6033      	str	r3, [r6, #0]
2ffe69b0:	f858 3004 	ldr.w	r3, [r8, r4]
2ffe69b4:	681b      	ldr	r3, [r3, #0]
2ffe69b6:	602b      	str	r3, [r5, #0]
2ffe69b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe69bc:	2fff2140 	.word	0x2fff2140
2ffe69c0:	2fff4070 	.word	0x2fff4070

2ffe69c4 <uart_send_result>:
2ffe69c4:	b510      	push	{r4, lr}
2ffe69c6:	4604      	mov	r4, r0
2ffe69c8:	4805      	ldr	r0, [pc, #20]	@ (2ffe69e0 <uart_send_result+0x1c>)
2ffe69ca:	f007 fb37 	bl	2ffee03c <stm32_uart_getc>
2ffe69ce:	2800      	cmp	r0, #0
2ffe69d0:	dafa      	bge.n	2ffe69c8 <uart_send_result+0x4>
2ffe69d2:	4803      	ldr	r0, [pc, #12]	@ (2ffe69e0 <uart_send_result+0x1c>)
2ffe69d4:	4621      	mov	r1, r4
2ffe69d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe69da:	f007 bb09 	b.w	2ffedff0 <stm32_uart_putc>
2ffe69de:	bf00      	nop
2ffe69e0:	2fff5624 	.word	0x2fff5624

2ffe69e4 <uart_write>:
2ffe69e4:	b570      	push	{r4, r5, r6, lr}
2ffe69e6:	460c      	mov	r4, r1
2ffe69e8:	4e07      	ldr	r6, [pc, #28]	@ (2ffe6a08 <uart_write+0x24>)
2ffe69ea:	1e45      	subs	r5, r0, #1
2ffe69ec:	f815 1f01 	ldrb.w	r1, [r5, #1]!
2ffe69f0:	4630      	mov	r0, r6
2ffe69f2:	f007 fafd 	bl	2ffedff0 <stm32_uart_putc>
2ffe69f6:	b920      	cbnz	r0, 2ffe6a02 <uart_write+0x1e>
2ffe69f8:	3c01      	subs	r4, #1
2ffe69fa:	b2a4      	uxth	r4, r4
2ffe69fc:	2c00      	cmp	r4, #0
2ffe69fe:	d1f5      	bne.n	2ffe69ec <uart_write+0x8>
2ffe6a00:	bd70      	pop	{r4, r5, r6, pc}
2ffe6a02:	f06f 0004 	mvn.w	r0, #4
2ffe6a06:	e7fb      	b.n	2ffe6a00 <uart_write+0x1c>
2ffe6a08:	2fff5624 	.word	0x2fff5624

2ffe6a0c <uart_read_8>:
2ffe6a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe6a0e:	4605      	mov	r5, r0
2ffe6a10:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffe6a14:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe6a18:	4a0f      	ldr	r2, [pc, #60]	@ (2ffe6a58 <uart_read_8+0x4c>)
2ffe6a1a:	f644 6020 	movw	r0, #20000	@ 0x4e20
2ffe6a1e:	2300      	movs	r3, #0
2ffe6a20:	fba1 0100 	umull	r0, r1, r1, r0
2ffe6a24:	f006 ee02 	blx	2ffed62c <__aeabi_uldivmod>
2ffe6a28:	1984      	adds	r4, r0, r6
2ffe6a2a:	eb41 0607 	adc.w	r6, r1, r7
2ffe6a2e:	4f0b      	ldr	r7, [pc, #44]	@ (2ffe6a5c <uart_read_8+0x50>)
2ffe6a30:	4638      	mov	r0, r7
2ffe6a32:	f007 fb03 	bl	2ffee03c <stm32_uart_getc>
2ffe6a36:	f110 0f23 	cmn.w	r0, #35	@ 0x23
2ffe6a3a:	d108      	bne.n	2ffe6a4e <uart_read_8+0x42>
2ffe6a3c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe6a40:	4294      	cmp	r4, r2
2ffe6a42:	eb76 0303 	sbcs.w	r3, r6, r3
2ffe6a46:	d2f3      	bcs.n	2ffe6a30 <uart_read_8+0x24>
2ffe6a48:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffe6a4c:	e003      	b.n	2ffe6a56 <uart_read_8+0x4a>
2ffe6a4e:	2800      	cmp	r0, #0
2ffe6a50:	db01      	blt.n	2ffe6a56 <uart_read_8+0x4a>
2ffe6a52:	7028      	strb	r0, [r5, #0]
2ffe6a54:	2000      	movs	r0, #0
2ffe6a56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe6a58:	000f4240 	.word	0x000f4240
2ffe6a5c:	2fff5624 	.word	0x2fff5624

2ffe6a60 <stm32cubeprog_uart_load>:
2ffe6a60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffe6a64:	4698      	mov	r8, r3
2ffe6a66:	4cb2      	ldr	r4, [pc, #712]	@ (2ffe6d30 <stm32cubeprog_uart_load+0x2d0>)
2ffe6a68:	460e      	mov	r6, r1
2ffe6a6a:	4615      	mov	r5, r2
2ffe6a6c:	7823      	ldrb	r3, [r4, #0]
2ffe6a6e:	b97b      	cbnz	r3, 2ffe6a90 <stm32cubeprog_uart_load+0x30>
2ffe6a70:	4ab0      	ldr	r2, [pc, #704]	@ (2ffe6d34 <stm32cubeprog_uart_load+0x2d4>)
2ffe6a72:	4601      	mov	r1, r0
2ffe6a74:	48b0      	ldr	r0, [pc, #704]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6a76:	f7ff fc07 	bl	2ffe6288 <stm32_uart_init>
2ffe6a7a:	2800      	cmp	r0, #0
2ffe6a7c:	f040 81d9 	bne.w	2ffe6e32 <stm32cubeprog_uart_load+0x3d2>
2ffe6a80:	201f      	movs	r0, #31
2ffe6a82:	f7ff ff9f 	bl	2ffe69c4 <uart_send_result>
2ffe6a86:	2800      	cmp	r0, #0
2ffe6a88:	f040 80b9 	bne.w	2ffe6bfe <stm32cubeprog_uart_load+0x19e>
2ffe6a8c:	2301      	movs	r3, #1
2ffe6a8e:	7023      	strb	r3, [r4, #0]
2ffe6a90:	4ca9      	ldr	r4, [pc, #676]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6a92:	2700      	movs	r7, #0
2ffe6a94:	48a9      	ldr	r0, [pc, #676]	@ (2ffe6d3c <stm32cubeprog_uart_load+0x2dc>)
2ffe6a96:	4643      	mov	r3, r8
2ffe6a98:	7526      	strb	r6, [r4, #20]
2ffe6a9a:	462a      	mov	r2, r5
2ffe6a9c:	60a7      	str	r7, [r4, #8]
2ffe6a9e:	4631      	mov	r1, r6
2ffe6aa0:	60e5      	str	r5, [r4, #12]
2ffe6aa2:	f8c4 8010 	str.w	r8, [r4, #16]
2ffe6aa6:	f000 ff65 	bl	2ffe7974 <tf_log>
2ffe6aaa:	f88d 700b 	strb.w	r7, [sp, #11]
2ffe6aae:	f88d 700c 	strb.w	r7, [sp, #12]
2ffe6ab2:	f004 fd3f 	bl	2ffeb534 <stm32_iwdg_refresh>
2ffe6ab6:	f10d 000b 	add.w	r0, sp, #11
2ffe6aba:	f7ff ffa7 	bl	2ffe6a0c <uart_read_8>
2ffe6abe:	f110 0f3c 	cmn.w	r0, #60	@ 0x3c
2ffe6ac2:	d0f6      	beq.n	2ffe6ab2 <stm32cubeprog_uart_load+0x52>
2ffe6ac4:	b120      	cbz	r0, 2ffe6ad0 <stm32cubeprog_uart_load+0x70>
2ffe6ac6:	2003      	movs	r0, #3
2ffe6ac8:	f007 fd35 	bl	2ffee536 <mdelay>
2ffe6acc:	201f      	movs	r0, #31
2ffe6ace:	e101      	b.n	2ffe6cd4 <stm32cubeprog_uart_load+0x274>
2ffe6ad0:	f89d 900b 	ldrb.w	r9, [sp, #11]
2ffe6ad4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
2ffe6ad8:	d106      	bne.n	2ffe6ae8 <stm32cubeprog_uart_load+0x88>
2ffe6ada:	2079      	movs	r0, #121	@ 0x79
2ffe6adc:	f7ff ff72 	bl	2ffe69c4 <uart_send_result>
2ffe6ae0:	4897      	ldr	r0, [pc, #604]	@ (2ffe6d40 <stm32cubeprog_uart_load+0x2e0>)
2ffe6ae2:	f000 ff47 	bl	2ffe7974 <tf_log>
2ffe6ae6:	e7e0      	b.n	2ffe6aaa <stm32cubeprog_uart_load+0x4a>
2ffe6ae8:	f1b9 0f03 	cmp.w	r9, #3
2ffe6aec:	d903      	bls.n	2ffe6af6 <stm32cubeprog_uart_load+0x96>
2ffe6aee:	f009 03ef 	and.w	r3, r9, #239	@ 0xef
2ffe6af2:	2b21      	cmp	r3, #33	@ 0x21
2ffe6af4:	d1e7      	bne.n	2ffe6ac6 <stm32cubeprog_uart_load+0x66>
2ffe6af6:	a803      	add	r0, sp, #12
2ffe6af8:	f7ff ff88 	bl	2ffe6a0c <uart_read_8>
2ffe6afc:	4680      	mov	r8, r0
2ffe6afe:	2800      	cmp	r0, #0
2ffe6b00:	d1e1      	bne.n	2ffe6ac6 <stm32cubeprog_uart_load+0x66>
2ffe6b02:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6b06:	ea89 0303 	eor.w	r3, r9, r3
2ffe6b0a:	2bff      	cmp	r3, #255	@ 0xff
2ffe6b0c:	d1db      	bne.n	2ffe6ac6 <stm32cubeprog_uart_load+0x66>
2ffe6b0e:	2079      	movs	r0, #121	@ 0x79
2ffe6b10:	f7ff ff58 	bl	2ffe69c4 <uart_send_result>
2ffe6b14:	f1b9 0f03 	cmp.w	r9, #3
2ffe6b18:	d808      	bhi.n	2ffe6b2c <stm32cubeprog_uart_load+0xcc>
2ffe6b1a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
2ffe6b1e:	f1b9 0f02 	cmp.w	r9, #2
2ffe6b22:	d80e      	bhi.n	2ffe6b42 <stm32cubeprog_uart_load+0xe2>
2ffe6b24:	e8df f009 	tbb	[pc, r9]
2ffe6b28:	231c      	.short	0x231c
2ffe6b2a:	36          	.byte	0x36
2ffe6b2b:	00          	.byte	0x00
2ffe6b2c:	f1b9 0f21 	cmp.w	r9, #33	@ 0x21
2ffe6b30:	f000 8118 	beq.w	2ffe6d64 <stm32cubeprog_uart_load+0x304>
2ffe6b34:	f1b9 0f31 	cmp.w	r9, #49	@ 0x31
2ffe6b38:	d06e      	beq.n	2ffe6c18 <stm32cubeprog_uart_load+0x1b8>
2ffe6b3a:	4882      	ldr	r0, [pc, #520]	@ (2ffe6d44 <stm32cubeprog_uart_load+0x2e4>)
2ffe6b3c:	f000 ff1a 	bl	2ffe7974 <tf_log>
2ffe6b40:	e7c4      	b.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6b42:	f244 0306 	movw	r3, #16390	@ 0x4006
2ffe6b46:	2102      	movs	r1, #2
2ffe6b48:	f8ad 300c 	strh.w	r3, [sp, #12]
2ffe6b4c:	a803      	add	r0, sp, #12
2ffe6b4e:	f7ff ff49 	bl	2ffe69e4 <uart_write>
2ffe6b52:	2800      	cmp	r0, #0
2ffe6b54:	d1ba      	bne.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6b56:	487c      	ldr	r0, [pc, #496]	@ (2ffe6d48 <stm32cubeprog_uart_load+0x2e8>)
2ffe6b58:	2106      	movs	r1, #6
2ffe6b5a:	f7ff ff43 	bl	2ffe69e4 <uart_write>
2ffe6b5e:	e003      	b.n	2ffe6b68 <stm32cubeprog_uart_load+0x108>
2ffe6b60:	4875      	ldr	r0, [pc, #468]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6b62:	2100      	movs	r1, #0
2ffe6b64:	f007 fa44 	bl	2ffedff0 <stm32_uart_putc>
2ffe6b68:	2800      	cmp	r0, #0
2ffe6b6a:	d1af      	bne.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6b6c:	e0b1      	b.n	2ffe6cd2 <stm32cubeprog_uart_load+0x272>
2ffe6b6e:	4977      	ldr	r1, [pc, #476]	@ (2ffe6d4c <stm32cubeprog_uart_load+0x2ec>)
2ffe6b70:	2202      	movs	r2, #2
2ffe6b72:	a803      	add	r0, sp, #12
2ffe6b74:	f009 f813 	bl	2ffefb9e <memcpy>
2ffe6b78:	2300      	movs	r3, #0
2ffe6b7a:	f88d 300e 	strb.w	r3, [sp, #14]
2ffe6b7e:	f007 fded 	bl	2ffee75c <stm32mp_get_chip_dev_id>
2ffe6b82:	f3c0 2307 	ubfx	r3, r0, #8, #8
2ffe6b86:	2103      	movs	r1, #3
2ffe6b88:	f88d 000e 	strb.w	r0, [sp, #14]
2ffe6b8c:	a803      	add	r0, sp, #12
2ffe6b8e:	f88d 300d 	strb.w	r3, [sp, #13]
2ffe6b92:	e7e2      	b.n	2ffe6b5a <stm32cubeprog_uart_load+0xfa>
2ffe6b94:	7d23      	ldrb	r3, [r4, #20]
2ffe6b96:	2bff      	cmp	r3, #255	@ 0xff
2ffe6b98:	d134      	bne.n	2ffe6c04 <stm32cubeprog_uart_load+0x1a4>
2ffe6b9a:	486d      	ldr	r0, [pc, #436]	@ (2ffe6d50 <stm32cubeprog_uart_load+0x2f0>)
2ffe6b9c:	2140      	movs	r1, #64	@ 0x40
2ffe6b9e:	f009 f947 	bl	2ffefe30 <strnlen>
2ffe6ba2:	fa5f f880 	uxtb.w	r8, r0
2ffe6ba6:	4864      	ldr	r0, [pc, #400]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6ba8:	f108 0105 	add.w	r1, r8, #5
2ffe6bac:	b2c9      	uxtb	r1, r1
2ffe6bae:	f007 fa1f 	bl	2ffedff0 <stm32_uart_putc>
2ffe6bb2:	2800      	cmp	r0, #0
2ffe6bb4:	d18a      	bne.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6bb6:	7d21      	ldrb	r1, [r4, #20]
2ffe6bb8:	485f      	ldr	r0, [pc, #380]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6bba:	f007 fa19 	bl	2ffedff0 <stm32_uart_putc>
2ffe6bbe:	2800      	cmp	r0, #0
2ffe6bc0:	d184      	bne.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6bc2:	9503      	str	r5, [sp, #12]
2ffe6bc4:	2104      	movs	r1, #4
2ffe6bc6:	a803      	add	r0, sp, #12
2ffe6bc8:	f7ff ff0c 	bl	2ffe69e4 <uart_write>
2ffe6bcc:	2800      	cmp	r0, #0
2ffe6bce:	f47f af7d 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6bd2:	4859      	ldr	r0, [pc, #356]	@ (2ffe6d38 <stm32cubeprog_uart_load+0x2d8>)
2ffe6bd4:	4641      	mov	r1, r8
2ffe6bd6:	f007 fa0b 	bl	2ffedff0 <stm32_uart_putc>
2ffe6bda:	2800      	cmp	r0, #0
2ffe6bdc:	f47f af76 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6be0:	f1b8 0f00 	cmp.w	r8, #0
2ffe6be4:	d111      	bne.n	2ffe6c0a <stm32cubeprog_uart_load+0x1aa>
2ffe6be6:	7d23      	ldrb	r3, [r4, #20]
2ffe6be8:	2bff      	cmp	r3, #255	@ 0xff
2ffe6bea:	d172      	bne.n	2ffe6cd2 <stm32cubeprog_uart_load+0x272>
2ffe6bec:	4859      	ldr	r0, [pc, #356]	@ (2ffe6d54 <stm32cubeprog_uart_load+0x2f4>)
2ffe6bee:	f000 fec1 	bl	2ffe7974 <tf_log>
2ffe6bf2:	2079      	movs	r0, #121	@ 0x79
2ffe6bf4:	f7ff fee6 	bl	2ffe69c4 <uart_send_result>
2ffe6bf8:	2800      	cmp	r0, #0
2ffe6bfa:	f000 8115 	beq.w	2ffe6e28 <stm32cubeprog_uart_load+0x3c8>
2ffe6bfe:	b004      	add	sp, #16
2ffe6c00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffe6c04:	f04f 0800 	mov.w	r8, #0
2ffe6c08:	e7cd      	b.n	2ffe6ba6 <stm32cubeprog_uart_load+0x146>
2ffe6c0a:	4851      	ldr	r0, [pc, #324]	@ (2ffe6d50 <stm32cubeprog_uart_load+0x2f0>)
2ffe6c0c:	4641      	mov	r1, r8
2ffe6c0e:	f7ff fee9 	bl	2ffe69e4 <uart_write>
2ffe6c12:	2800      	cmp	r0, #0
2ffe6c14:	d0e7      	beq.n	2ffe6be6 <stm32cubeprog_uart_load+0x186>
2ffe6c16:	e759      	b.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c18:	f88d 800b 	strb.w	r8, [sp, #11]
2ffe6c1c:	f10d 000b 	add.w	r0, sp, #11
2ffe6c20:	f88d 800c 	strb.w	r8, [sp, #12]
2ffe6c24:	f7ff fef2 	bl	2ffe6a0c <uart_read_8>
2ffe6c28:	2800      	cmp	r0, #0
2ffe6c2a:	f47f af4f 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c2e:	f89d a00b 	ldrb.w	sl, [sp, #11]
2ffe6c32:	f04f 0903 	mov.w	r9, #3
2ffe6c36:	4680      	mov	r8, r0
2ffe6c38:	a803      	add	r0, sp, #12
2ffe6c3a:	f7ff fee7 	bl	2ffe6a0c <uart_read_8>
2ffe6c3e:	2800      	cmp	r0, #0
2ffe6c40:	f47f af44 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c44:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6c48:	f1b9 0901 	subs.w	r9, r9, #1
2ffe6c4c:	ea83 0a0a 	eor.w	sl, r3, sl
2ffe6c50:	ea43 2808 	orr.w	r8, r3, r8, lsl #8
2ffe6c54:	d1f0      	bne.n	2ffe6c38 <stm32cubeprog_uart_load+0x1d8>
2ffe6c56:	68a2      	ldr	r2, [r4, #8]
2ffe6c58:	4590      	cmp	r8, r2
2ffe6c5a:	d004      	beq.n	2ffe6c66 <stm32cubeprog_uart_load+0x206>
2ffe6c5c:	483e      	ldr	r0, [pc, #248]	@ (2ffe6d58 <stm32cubeprog_uart_load+0x2f8>)
2ffe6c5e:	4641      	mov	r1, r8
2ffe6c60:	f000 fe88 	bl	2ffe7974 <tf_log>
2ffe6c64:	e732      	b.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c66:	a803      	add	r0, sp, #12
2ffe6c68:	f7ff fed0 	bl	2ffe6a0c <uart_read_8>
2ffe6c6c:	2800      	cmp	r0, #0
2ffe6c6e:	f47f af2d 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c72:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6c76:	4553      	cmp	r3, sl
2ffe6c78:	f47f af28 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c7c:	2079      	movs	r0, #121	@ 0x79
2ffe6c7e:	f7ff fea1 	bl	2ffe69c4 <uart_send_result>
2ffe6c82:	2800      	cmp	r0, #0
2ffe6c84:	f47f af22 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c88:	a803      	add	r0, sp, #12
2ffe6c8a:	f7ff febf 	bl	2ffe6a0c <uart_read_8>
2ffe6c8e:	2800      	cmp	r0, #0
2ffe6c90:	f47f af1c 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6c94:	f89d a00c 	ldrb.w	sl, [sp, #12]
2ffe6c98:	6923      	ldr	r3, [r4, #16]
2ffe6c9a:	f10a 0801 	add.w	r8, sl, #1
2ffe6c9e:	4598      	cmp	r8, r3
2ffe6ca0:	d91e      	bls.n	2ffe6ce0 <stm32cubeprog_uart_load+0x280>
2ffe6ca2:	68e1      	ldr	r1, [r4, #12]
2ffe6ca4:	482d      	ldr	r0, [pc, #180]	@ (2ffe6d5c <stm32cubeprog_uart_load+0x2fc>)
2ffe6ca6:	4441      	add	r1, r8
2ffe6ca8:	f000 fe64 	bl	2ffe7974 <tf_log>
2ffe6cac:	7d23      	ldrb	r3, [r4, #20]
2ffe6cae:	2bff      	cmp	r3, #255	@ 0xff
2ffe6cb0:	d00f      	beq.n	2ffe6cd2 <stm32cubeprog_uart_load+0x272>
2ffe6cb2:	68e3      	ldr	r3, [r4, #12]
2ffe6cb4:	2140      	movs	r1, #64	@ 0x40
2ffe6cb6:	4a2a      	ldr	r2, [pc, #168]	@ (2ffe6d60 <stm32cubeprog_uart_load+0x300>)
2ffe6cb8:	4443      	add	r3, r8
2ffe6cba:	4825      	ldr	r0, [pc, #148]	@ (2ffe6d50 <stm32cubeprog_uart_load+0x2f0>)
2ffe6cbc:	f009 f864 	bl	2ffefd88 <snprintf>
2ffe6cc0:	f8c4 9010 	str.w	r9, [r4, #16]
2ffe6cc4:	23ff      	movs	r3, #255	@ 0xff
2ffe6cc6:	7523      	strb	r3, [r4, #20]
2ffe6cc8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffe6ccc:	60e3      	str	r3, [r4, #12]
2ffe6cce:	f8c4 9008 	str.w	r9, [r4, #8]
2ffe6cd2:	2079      	movs	r0, #121	@ 0x79
2ffe6cd4:	f7ff fe76 	bl	2ffe69c4 <uart_send_result>
2ffe6cd8:	2800      	cmp	r0, #0
2ffe6cda:	f43f aee6 	beq.w	2ffe6aaa <stm32cubeprog_uart_load+0x4a>
2ffe6cde:	e78e      	b.n	2ffe6bfe <stm32cubeprog_uart_load+0x19e>
2ffe6ce0:	a803      	add	r0, sp, #12
2ffe6ce2:	f7ff fe93 	bl	2ffe6a0c <uart_read_8>
2ffe6ce6:	2800      	cmp	r0, #0
2ffe6ce8:	f47f aef0 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6cec:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6cf0:	68e2      	ldr	r2, [r4, #12]
2ffe6cf2:	ea83 0a0a 	eor.w	sl, r3, sl
2ffe6cf6:	f802 3009 	strb.w	r3, [r2, r9]
2ffe6cfa:	f109 0901 	add.w	r9, r9, #1
2ffe6cfe:	45c8      	cmp	r8, r9
2ffe6d00:	d8ee      	bhi.n	2ffe6ce0 <stm32cubeprog_uart_load+0x280>
2ffe6d02:	a803      	add	r0, sp, #12
2ffe6d04:	f7ff fe82 	bl	2ffe6a0c <uart_read_8>
2ffe6d08:	2800      	cmp	r0, #0
2ffe6d0a:	f47f aedf 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6d0e:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6d12:	4553      	cmp	r3, sl
2ffe6d14:	f47f aeda 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6d18:	68a3      	ldr	r3, [r4, #8]
2ffe6d1a:	3301      	adds	r3, #1
2ffe6d1c:	60a3      	str	r3, [r4, #8]
2ffe6d1e:	68e3      	ldr	r3, [r4, #12]
2ffe6d20:	4443      	add	r3, r8
2ffe6d22:	60e3      	str	r3, [r4, #12]
2ffe6d24:	6923      	ldr	r3, [r4, #16]
2ffe6d26:	eba3 0308 	sub.w	r3, r3, r8
2ffe6d2a:	6123      	str	r3, [r4, #16]
2ffe6d2c:	e7d1      	b.n	2ffe6cd2 <stm32cubeprog_uart_load+0x272>
2ffe6d2e:	bf00      	nop
2ffe6d30:	2fff5ba9 	.word	0x2fff5ba9
2ffe6d34:	2ffeffb8 	.word	0x2ffeffb8
2ffe6d38:	2fff5624 	.word	0x2fff5624
2ffe6d3c:	2fff2192 	.word	0x2fff2192
2ffe6d40:	2fff21bc 	.word	0x2fff21bc
2ffe6d44:	2fff2290 	.word	0x2fff2290
2ffe6d48:	2fff22a8 	.word	0x2fff22a8
2ffe6d4c:	2fff22ae 	.word	0x2fff22ae
2ffe6d50:	2fff5639 	.word	0x2fff5639
2ffe6d54:	2fff21ce 	.word	0x2fff21ce
2ffe6d58:	2fff21dc 	.word	0x2fff21dc
2ffe6d5c:	2fff220f 	.word	0x2fff220f
2ffe6d60:	2fff2210 	.word	0x2fff2210
2ffe6d64:	f88d 800c 	strb.w	r8, [sp, #12]
2ffe6d68:	f04f 0904 	mov.w	r9, #4
2ffe6d6c:	46c2      	mov	sl, r8
2ffe6d6e:	a803      	add	r0, sp, #12
2ffe6d70:	f7ff fe4c 	bl	2ffe6a0c <uart_read_8>
2ffe6d74:	2800      	cmp	r0, #0
2ffe6d76:	f47f aea9 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6d7a:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6d7e:	f1b9 0901 	subs.w	r9, r9, #1
2ffe6d82:	ea83 0a0a 	eor.w	sl, r3, sl
2ffe6d86:	ea43 2808 	orr.w	r8, r3, r8, lsl #8
2ffe6d8a:	d1f0      	bne.n	2ffe6d6e <stm32cubeprog_uart_load+0x30e>
2ffe6d8c:	a803      	add	r0, sp, #12
2ffe6d8e:	f7ff fe3d 	bl	2ffe6a0c <uart_read_8>
2ffe6d92:	2800      	cmp	r0, #0
2ffe6d94:	f47f ae9a 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6d98:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffe6d9c:	4553      	cmp	r3, sl
2ffe6d9e:	f47f ae95 	bne.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6da2:	7d22      	ldrb	r2, [r4, #20]
2ffe6da4:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
2ffe6da8:	d01f      	beq.n	2ffe6dea <stm32cubeprog_uart_load+0x38a>
2ffe6daa:	4823      	ldr	r0, [pc, #140]	@ (2ffe6e38 <stm32cubeprog_uart_load+0x3d8>)
2ffe6dac:	4641      	mov	r1, r8
2ffe6dae:	f000 fde1 	bl	2ffe7974 <tf_log>
2ffe6db2:	7d23      	ldrb	r3, [r4, #20]
2ffe6db4:	2bff      	cmp	r3, #255	@ 0xff
2ffe6db6:	d00f      	beq.n	2ffe6dd8 <stm32cubeprog_uart_load+0x378>
2ffe6db8:	9300      	str	r3, [sp, #0]
2ffe6dba:	2140      	movs	r1, #64	@ 0x40
2ffe6dbc:	4a1f      	ldr	r2, [pc, #124]	@ (2ffe6e3c <stm32cubeprog_uart_load+0x3dc>)
2ffe6dbe:	4643      	mov	r3, r8
2ffe6dc0:	481f      	ldr	r0, [pc, #124]	@ (2ffe6e40 <stm32cubeprog_uart_load+0x3e0>)
2ffe6dc2:	f008 ffe1 	bl	2ffefd88 <snprintf>
2ffe6dc6:	f8c4 9010 	str.w	r9, [r4, #16]
2ffe6dca:	23ff      	movs	r3, #255	@ 0xff
2ffe6dcc:	7523      	strb	r3, [r4, #20]
2ffe6dce:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffe6dd2:	60e3      	str	r3, [r4, #12]
2ffe6dd4:	f8c4 9008 	str.w	r9, [r4, #8]
2ffe6dd8:	7d23      	ldrb	r3, [r4, #20]
2ffe6dda:	429e      	cmp	r6, r3
2ffe6ddc:	f47f af79 	bne.w	2ffe6cd2 <stm32cubeprog_uart_load+0x272>
2ffe6de0:	4818      	ldr	r0, [pc, #96]	@ (2ffe6e44 <stm32cubeprog_uart_load+0x3e4>)
2ffe6de2:	4631      	mov	r1, r6
2ffe6de4:	f000 fdc6 	bl	2ffe7974 <tf_log>
2ffe6de8:	e703      	b.n	2ffe6bf2 <stm32cubeprog_uart_load+0x192>
2ffe6dea:	6829      	ldr	r1, [r5, #0]
2ffe6dec:	4b16      	ldr	r3, [pc, #88]	@ (2ffe6e48 <stm32cubeprog_uart_load+0x3e8>)
2ffe6dee:	4299      	cmp	r1, r3
2ffe6df0:	d102      	bne.n	2ffe6df8 <stm32cubeprog_uart_load+0x398>
2ffe6df2:	686b      	ldr	r3, [r5, #4]
2ffe6df4:	2b00      	cmp	r3, #0
2ffe6df6:	d1ef      	bne.n	2ffe6dd8 <stm32cubeprog_uart_load+0x378>
2ffe6df8:	4814      	ldr	r0, [pc, #80]	@ (2ffe6e4c <stm32cubeprog_uart_load+0x3ec>)
2ffe6dfa:	4629      	mov	r1, r5
2ffe6dfc:	f000 fdba 	bl	2ffe7974 <tf_log>
2ffe6e00:	7d23      	ldrb	r3, [r4, #20]
2ffe6e02:	2bff      	cmp	r3, #255	@ 0xff
2ffe6e04:	f43f ae62 	beq.w	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6e08:	9300      	str	r3, [sp, #0]
2ffe6e0a:	2140      	movs	r1, #64	@ 0x40
2ffe6e0c:	4a10      	ldr	r2, [pc, #64]	@ (2ffe6e50 <stm32cubeprog_uart_load+0x3f0>)
2ffe6e0e:	462b      	mov	r3, r5
2ffe6e10:	480b      	ldr	r0, [pc, #44]	@ (2ffe6e40 <stm32cubeprog_uart_load+0x3e0>)
2ffe6e12:	f008 ffb9 	bl	2ffefd88 <snprintf>
2ffe6e16:	23ff      	movs	r3, #255	@ 0xff
2ffe6e18:	7523      	strb	r3, [r4, #20]
2ffe6e1a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffe6e1e:	60e3      	str	r3, [r4, #12]
2ffe6e20:	2300      	movs	r3, #0
2ffe6e22:	6123      	str	r3, [r4, #16]
2ffe6e24:	60a3      	str	r3, [r4, #8]
2ffe6e26:	e651      	b.n	2ffe6acc <stm32cubeprog_uart_load+0x6c>
2ffe6e28:	480a      	ldr	r0, [pc, #40]	@ (2ffe6e54 <stm32cubeprog_uart_load+0x3f4>)
2ffe6e2a:	f007 f8f7 	bl	2ffee01c <stm32_uart_flush>
2ffe6e2e:	2000      	movs	r0, #0
2ffe6e30:	e6e5      	b.n	2ffe6bfe <stm32cubeprog_uart_load+0x19e>
2ffe6e32:	f06f 0004 	mvn.w	r0, #4
2ffe6e36:	e6e2      	b.n	2ffe6bfe <stm32cubeprog_uart_load+0x19e>
2ffe6e38:	2fff2229 	.word	0x2fff2229
2ffe6e3c:	2fff222a 	.word	0x2fff222a
2ffe6e40:	2fff5639 	.word	0x2fff5639
2ffe6e44:	2fff2279 	.word	0x2fff2279
2ffe6e48:	aa640001 	.word	0xaa640001
2ffe6e4c:	2fff224d 	.word	0x2fff224d
2ffe6e50:	2fff224e 	.word	0x2fff224e
2ffe6e54:	2fff5624 	.word	0x2fff5624

2ffe6e58 <fconf_populate_stm32mp_io_policies>:
2ffe6e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe6e5c:	b089      	sub	sp, #36	@ 0x24
2ffe6e5e:	4a2b      	ldr	r2, [pc, #172]	@ (2ffe6f0c <fconf_populate_stm32mp_io_policies+0xb4>)
2ffe6e60:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe6e64:	9002      	str	r0, [sp, #8]
2ffe6e66:	f008 fe63 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe6e6a:	1e04      	subs	r4, r0, #0
2ffe6e6c:	da07      	bge.n	2ffe6e7e <fconf_populate_stm32mp_io_policies+0x26>
2ffe6e6e:	4927      	ldr	r1, [pc, #156]	@ (2ffe6f0c <fconf_populate_stm32mp_io_policies+0xb4>)
2ffe6e70:	4827      	ldr	r0, [pc, #156]	@ (2ffe6f10 <fconf_populate_stm32mp_io_policies+0xb8>)
2ffe6e72:	f000 fd7f 	bl	2ffe7974 <tf_log>
2ffe6e76:	4620      	mov	r0, r4
2ffe6e78:	b009      	add	sp, #36	@ 0x24
2ffe6e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe6e7e:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 2ffe6f14 <fconf_populate_stm32mp_io_policies+0xbc>
2ffe6e82:	2700      	movs	r7, #0
2ffe6e84:	4d24      	ldr	r5, [pc, #144]	@ (2ffe6f18 <fconf_populate_stm32mp_io_policies+0xc0>)
2ffe6e86:	f8df 9094 	ldr.w	r9, [pc, #148]	@ 2ffe6f1c <fconf_populate_stm32mp_io_policies+0xc4>
2ffe6e8a:	68eb      	ldr	r3, [r5, #12]
2ffe6e8c:	686a      	ldr	r2, [r5, #4]
2ffe6e8e:	1c59      	adds	r1, r3, #1
2ffe6e90:	4291      	cmp	r1, r2
2ffe6e92:	d908      	bls.n	2ffe6ea6 <fconf_populate_stm32mp_io_policies+0x4e>
2ffe6e94:	1ad2      	subs	r2, r2, r3
2ffe6e96:	2101      	movs	r1, #1
2ffe6e98:	4821      	ldr	r0, [pc, #132]	@ (2ffe6f20 <fconf_populate_stm32mp_io_policies+0xc8>)
2ffe6e9a:	f000 fd6b 	bl	2ffe7974 <tf_log>
2ffe6e9e:	f000 fe05 	bl	2ffe7aac <console_flush>
2ffe6ea2:	f7fd eac8 	blx	2ffe4434 <do_panic>
2ffe6ea6:	682a      	ldr	r2, [r5, #0]
2ffe6ea8:	f10d 0a10 	add.w	sl, sp, #16
2ffe6eac:	68ae      	ldr	r6, [r5, #8]
2ffe6eae:	60e9      	str	r1, [r5, #12]
2ffe6eb0:	4621      	mov	r1, r4
2ffe6eb2:	fb02 6603 	mla	r6, r2, r3, r6
2ffe6eb6:	f8d8 2004 	ldr.w	r2, [r8, #4]
2ffe6eba:	2310      	movs	r3, #16
2ffe6ebc:	9802      	ldr	r0, [sp, #8]
2ffe6ebe:	f8cd a000 	str.w	sl, [sp]
2ffe6ec2:	9203      	str	r2, [sp, #12]
2ffe6ec4:	f7fe f898 	bl	2ffe4ff8 <fdtw_read_uuid>
2ffe6ec8:	9a03      	ldr	r2, [sp, #12]
2ffe6eca:	f1b0 0b00 	subs.w	fp, r0, #0
2ffe6ece:	da05      	bge.n	2ffe6edc <fconf_populate_stm32mp_io_policies+0x84>
2ffe6ed0:	4814      	ldr	r0, [pc, #80]	@ (2ffe6f24 <fconf_populate_stm32mp_io_policies+0xcc>)
2ffe6ed2:	4611      	mov	r1, r2
2ffe6ed4:	465c      	mov	r4, fp
2ffe6ed6:	f000 fd4d 	bl	2ffe7974 <tf_log>
2ffe6eda:	e7cc      	b.n	2ffe6e76 <fconf_populate_stm32mp_io_policies+0x1e>
2ffe6edc:	2210      	movs	r2, #16
2ffe6ede:	4651      	mov	r1, sl
2ffe6ee0:	4630      	mov	r0, r6
2ffe6ee2:	3701      	adds	r7, #1
2ffe6ee4:	f008 fe5b 	bl	2ffefb9e <memcpy>
2ffe6ee8:	f858 3b08 	ldr.w	r3, [r8], #8
2ffe6eec:	221c      	movs	r2, #28
2ffe6eee:	490e      	ldr	r1, [pc, #56]	@ (2ffe6f28 <fconf_populate_stm32mp_io_policies+0xd0>)
2ffe6ef0:	2f07      	cmp	r7, #7
2ffe6ef2:	fb02 f303 	mul.w	r3, r2, r3
2ffe6ef6:	eb09 0203 	add.w	r2, r9, r3
2ffe6efa:	f849 1003 	str.w	r1, [r9, r3]
2ffe6efe:	4b0b      	ldr	r3, [pc, #44]	@ (2ffe6f2c <fconf_populate_stm32mp_io_policies+0xd4>)
2ffe6f00:	6056      	str	r6, [r2, #4]
2ffe6f02:	6193      	str	r3, [r2, #24]
2ffe6f04:	d1c1      	bne.n	2ffe6e8a <fconf_populate_stm32mp_io_policies+0x32>
2ffe6f06:	2400      	movs	r4, #0
2ffe6f08:	e7b5      	b.n	2ffe6e76 <fconf_populate_stm32mp_io_policies+0x1e>
2ffe6f0a:	bf00      	nop
2ffe6f0c:	2fff22b1 	.word	0x2fff22b1
2ffe6f10:	2fff1c9c 	.word	0x2fff1c9c
2ffe6f14:	2ffeffe4 	.word	0x2ffeffe4
2ffe6f18:	2fff4060 	.word	0x2fff4060
2ffe6f1c:	2fff4070 	.word	0x2fff4070
2ffe6f20:	2fff1e28 	.word	0x2fff1e28
2ffe6f24:	2fff1cd3 	.word	0x2fff1cd3
2ffe6f28:	2fff5620 	.word	0x2fff5620
2ffe6f2c:	2ffe67d5 	.word	0x2ffe67d5

2ffe6f30 <bl2_platform_setup>:
2ffe6f30:	b507      	push	{r0, r1, r2, lr}
2ffe6f32:	f7fe ffaf 	bl	2ffe5e94 <stm32mp1_ddr_probe>
2ffe6f36:	1e01      	subs	r1, r0, #0
2ffe6f38:	da06      	bge.n	2ffe6f48 <bl2_platform_setup+0x18>
2ffe6f3a:	480f      	ldr	r0, [pc, #60]	@ (2ffe6f78 <bl2_platform_setup+0x48>)
2ffe6f3c:	f000 fd1a 	bl	2ffe7974 <tf_log>
2ffe6f40:	f000 fdb4 	bl	2ffe7aac <console_flush>
2ffe6f44:	f7fd ea76 	blx	2ffe4434 <do_panic>
2ffe6f48:	f7fe ff9e 	bl	2ffe5e88 <stm32mp1_ddr_is_restored>
2ffe6f4c:	b908      	cbnz	r0, 2ffe6f52 <bl2_platform_setup+0x22>
2ffe6f4e:	f007 fe8a 	bl	2ffeec66 <stm32_clean_context>
2ffe6f52:	230a      	movs	r3, #10
2ffe6f54:	2100      	movs	r1, #0
2ffe6f56:	9300      	str	r3, [sp, #0]
2ffe6f58:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffe6f5c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffe6f60:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffe6f64:	f001 f866 	bl	2ffe8034 <mmap_add_dynamic_region>
2ffe6f68:	1e01      	subs	r1, r0, #0
2ffe6f6a:	da01      	bge.n	2ffe6f70 <bl2_platform_setup+0x40>
2ffe6f6c:	4803      	ldr	r0, [pc, #12]	@ (2ffe6f7c <bl2_platform_setup+0x4c>)
2ffe6f6e:	e7e5      	b.n	2ffe6f3c <bl2_platform_setup+0xc>
2ffe6f70:	b003      	add	sp, #12
2ffe6f72:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe6f76:	bf00      	nop
2ffe6f78:	2fff2325 	.word	0x2fff2325
2ffe6f7c:	2fff2342 	.word	0x2fff2342

2ffe6f80 <bl2_el3_plat_arch_setup>:
2ffe6f80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe6f84:	f000 fe56 	bl	2ffe7c34 <stm32mp_get_boot_ctx_address>
2ffe6f88:	4604      	mov	r4, r0
2ffe6f8a:	f003 fb27 	bl	2ffea5dc <bsec_probe>
2ffe6f8e:	4601      	mov	r1, r0
2ffe6f90:	b118      	cbz	r0, 2ffe6f9a <bl2_el3_plat_arch_setup+0x1a>
2ffe6f92:	f000 fd8b 	bl	2ffe7aac <console_flush>
2ffe6f96:	f7fd ea4e 	blx	2ffe4434 <do_panic>
2ffe6f9a:	4ab1      	ldr	r2, [pc, #708]	@ (2ffe7260 <bl2_el3_plat_arch_setup+0x2e0>)
2ffe6f9c:	2302      	movs	r3, #2
2ffe6f9e:	9300      	str	r3, [sp, #0]
2ffe6fa0:	4bb0      	ldr	r3, [pc, #704]	@ (2ffe7264 <bl2_el3_plat_arch_setup+0x2e4>)
2ffe6fa2:	4610      	mov	r0, r2
2ffe6fa4:	1a9b      	subs	r3, r3, r2
2ffe6fa6:	f001 f82b 	bl	2ffe8000 <mmap_add_region>
2ffe6faa:	4aaf      	ldr	r2, [pc, #700]	@ (2ffe7268 <bl2_el3_plat_arch_setup+0x2e8>)
2ffe6fac:	2342      	movs	r3, #66	@ 0x42
2ffe6fae:	48ae      	ldr	r0, [pc, #696]	@ (2ffe7268 <bl2_el3_plat_arch_setup+0x2e8>)
2ffe6fb0:	2100      	movs	r1, #0
2ffe6fb2:	9300      	str	r3, [sp, #0]
2ffe6fb4:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
2ffe6fb8:	f001 f822 	bl	2ffe8000 <mmap_add_region>
2ffe6fbc:	f002 ffca 	bl	2ffe9f54 <configure_mmu>
2ffe6fc0:	48a9      	ldr	r0, [pc, #676]	@ (2ffe7268 <bl2_el3_plat_arch_setup+0x2e8>)
2ffe6fc2:	f002 fd11 	bl	2ffe99e8 <dt_open_and_check>
2ffe6fc6:	2800      	cmp	r0, #0
2ffe6fc8:	dbe3      	blt.n	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe6fca:	f000 fe47 	bl	2ffe7c5c <stm32mp_pwr_base>
2ffe6fce:	4605      	mov	r5, r0
2ffe6fd0:	f007 f98a 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffe6fd4:	682b      	ldr	r3, [r5, #0]
2ffe6fd6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffe6fda:	602b      	str	r3, [r5, #0]
2ffe6fdc:	682b      	ldr	r3, [r5, #0]
2ffe6fde:	05de      	lsls	r6, r3, #23
2ffe6fe0:	d5fc      	bpl.n	2ffe6fdc <bl2_el3_plat_arch_setup+0x5c>
2ffe6fe2:	f8d0 3400 	ldr.w	r3, [r0, #1024]	@ 0x400
2ffe6fe6:	f500 6280 	add.w	r2, r0, #1024	@ 0x400
2ffe6fea:	02dd      	lsls	r5, r3, #11
2ffe6fec:	d40e      	bmi.n	2ffe700c <bl2_el3_plat_arch_setup+0x8c>
2ffe6fee:	f8d0 3400 	ldr.w	r3, [r0, #1024]	@ 0x400
2ffe6ff2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffe6ff6:	f8c0 3400 	str.w	r3, [r0, #1024]	@ 0x400
2ffe6ffa:	6813      	ldr	r3, [r2, #0]
2ffe6ffc:	2b00      	cmp	r3, #0
2ffe6ffe:	dafc      	bge.n	2ffe6ffa <bl2_el3_plat_arch_setup+0x7a>
2ffe7000:	f8d0 3400 	ldr.w	r3, [r0, #1024]	@ 0x400
2ffe7004:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffe7008:	f8c0 3400 	str.w	r3, [r0, #1024]	@ 0x400
2ffe700c:	4b97      	ldr	r3, [pc, #604]	@ (2ffe726c <bl2_el3_plat_arch_setup+0x2ec>)
2ffe700e:	6b1d      	ldr	r5, [r3, #48]	@ 0x30
2ffe7010:	f415 2580 	ands.w	r5, r5, #262144	@ 0x40000
2ffe7014:	d014      	beq.n	2ffe7040 <bl2_el3_plat_arch_setup+0xc0>
2ffe7016:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
2ffe701a:	2501      	movs	r5, #1
2ffe701c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
2ffe7020:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
2ffe7024:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
2ffe7028:	f8d3 2400 	ldr.w	r2, [r3, #1024]	@ 0x400
2ffe702c:	f022 0201 	bic.w	r2, r2, #1
2ffe7030:	f8c3 2400 	str.w	r2, [r3, #1024]	@ 0x400
2ffe7034:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
2ffe7038:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
2ffe703c:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
2ffe7040:	f004 fb02 	bl	2ffeb648 <dt_pmic_status>
2ffe7044:	2800      	cmp	r0, #0
2ffe7046:	dc07      	bgt.n	2ffe7058 <bl2_el3_plat_arch_setup+0xd8>
2ffe7048:	f007 f94e 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffe704c:	f8d0 3404 	ldr.w	r3, [r0, #1028]	@ 0x404
2ffe7050:	f443 13f8 	orr.w	r3, r3, #2031616	@ 0x1f0000
2ffe7054:	f8c0 3404 	str.w	r3, [r0, #1028]	@ 0x404
2ffe7058:	f001 fd3a 	bl	2ffe8ad0 <generic_delay_timer_init>
2ffe705c:	7823      	ldrb	r3, [r4, #0]
2ffe705e:	7862      	ldrb	r2, [r4, #1]
2ffe7060:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe7064:	2b05      	cmp	r3, #5
2ffe7066:	d107      	bne.n	2ffe7078 <bl2_el3_plat_arch_setup+0xf8>
2ffe7068:	78a3      	ldrb	r3, [r4, #2]
2ffe706a:	78e0      	ldrb	r0, [r4, #3]
2ffe706c:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffe7070:	f002 ffa4 	bl	2ffe9fbc <get_uart_address>
2ffe7074:	f006 ffb7 	bl	2ffedfe6 <stm32_uart_stop>
2ffe7078:	f005 fde2 	bl	2ffecc40 <stm32mp1_clk_probe>
2ffe707c:	2800      	cmp	r0, #0
2ffe707e:	db88      	blt.n	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe7080:	487b      	ldr	r0, [pc, #492]	@ (2ffe7270 <bl2_el3_plat_arch_setup+0x2f0>)
2ffe7082:	f005 fb3d 	bl	2ffec700 <stm32mp1_clk_init>
2ffe7086:	2800      	cmp	r0, #0
2ffe7088:	db83      	blt.n	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe708a:	f002 f9c3 	bl	2ffe9414 <stm32_tamp_nvram_init>
2ffe708e:	4620      	mov	r0, r4
2ffe7090:	f007 f94a 	bl	2ffee328 <stm32_save_boot_info>
2ffe7094:	f000 fe9c 	bl	2ffe7dd0 <stm32mp_uart_console_setup>
2ffe7098:	bb30      	cbnz	r0, 2ffe70e8 <bl2_el3_plat_arch_setup+0x168>
2ffe709a:	f004 ff5b 	bl	2ffebf54 <stm32mp_syscfg_boot_mode_enable>
2ffe709e:	f003 f82d 	bl	2ffea0fc <stm32mp_print_cpuinfo>
2ffe70a2:	f002 fdf7 	bl	2ffe9c94 <dt_get_board_model>
2ffe70a6:	4601      	mov	r1, r0
2ffe70a8:	b110      	cbz	r0, 2ffe70b0 <bl2_el3_plat_arch_setup+0x130>
2ffe70aa:	4872      	ldr	r0, [pc, #456]	@ (2ffe7274 <bl2_el3_plat_arch_setup+0x2f4>)
2ffe70ac:	f000 fc62 	bl	2ffe7974 <tf_log>
2ffe70b0:	f003 f832 	bl	2ffea118 <stm32mp_print_boardinfo>
2ffe70b4:	f894 204d 	ldrb.w	r2, [r4, #77]	@ 0x4d
2ffe70b8:	f894 304c 	ldrb.w	r3, [r4, #76]	@ 0x4c
2ffe70bc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe70c0:	f894 204e 	ldrb.w	r2, [r4, #78]	@ 0x4e
2ffe70c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffe70c8:	f894 204f 	ldrb.w	r2, [r4, #79]	@ 0x4f
2ffe70cc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffe70d0:	4a69      	ldr	r2, [pc, #420]	@ (2ffe7278 <bl2_el3_plat_arch_setup+0x2f8>)
2ffe70d2:	4293      	cmp	r3, r2
2ffe70d4:	d008      	beq.n	2ffe70e8 <bl2_el3_plat_arch_setup+0x168>
2ffe70d6:	4869      	ldr	r0, [pc, #420]	@ (2ffe727c <bl2_el3_plat_arch_setup+0x2fc>)
2ffe70d8:	4969      	ldr	r1, [pc, #420]	@ (2ffe7280 <bl2_el3_plat_arch_setup+0x300>)
2ffe70da:	4a6a      	ldr	r2, [pc, #424]	@ (2ffe7284 <bl2_el3_plat_arch_setup+0x304>)
2ffe70dc:	4283      	cmp	r3, r0
2ffe70de:	bf08      	it	eq
2ffe70e0:	4611      	moveq	r1, r2
2ffe70e2:	4869      	ldr	r0, [pc, #420]	@ (2ffe7288 <bl2_el3_plat_arch_setup+0x308>)
2ffe70e4:	f000 fc46 	bl	2ffe7974 <tf_log>
2ffe70e8:	4b60      	ldr	r3, [pc, #384]	@ (2ffe726c <bl2_el3_plat_arch_setup+0x2ec>)
2ffe70ea:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
2ffe70ec:	b36e      	cbz	r6, 2ffe714a <bl2_el3_plat_arch_setup+0x1ca>
2ffe70ee:	4867      	ldr	r0, [pc, #412]	@ (2ffe728c <bl2_el3_plat_arch_setup+0x30c>)
2ffe70f0:	f000 fc40 	bl	2ffe7974 <tf_log>
2ffe70f4:	2d00      	cmp	r5, #0
2ffe70f6:	d12f      	bne.n	2ffe7158 <bl2_el3_plat_arch_setup+0x1d8>
2ffe70f8:	4d65      	ldr	r5, [pc, #404]	@ (2ffe7290 <bl2_el3_plat_arch_setup+0x310>)
2ffe70fa:	4f66      	ldr	r7, [pc, #408]	@ (2ffe7294 <bl2_el3_plat_arch_setup+0x314>)
2ffe70fc:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 2ffe7298 <bl2_el3_plat_arch_setup+0x318>
2ffe7100:	fa96 f4a6 	rbit	r4, r6
2ffe7104:	4640      	mov	r0, r8
2ffe7106:	fab4 f484 	clz	r4, r4
2ffe710a:	2c0f      	cmp	r4, #15
2ffe710c:	bfcb      	itete	gt
2ffe710e:	f1a4 020f 	subgt.w	r2, r4, #15
2ffe7112:	1c62      	addle	r2, r4, #1
2ffe7114:	4639      	movgt	r1, r7
2ffe7116:	4629      	movle	r1, r5
2ffe7118:	f000 fc2c 	bl	2ffe7974 <tf_log>
2ffe711c:	4b53      	ldr	r3, [pc, #332]	@ (2ffe726c <bl2_el3_plat_arch_setup+0x2ec>)
2ffe711e:	2c0f      	cmp	r4, #15
2ffe7120:	685a      	ldr	r2, [r3, #4]
2ffe7122:	689b      	ldr	r3, [r3, #8]
2ffe7124:	dd2b      	ble.n	2ffe717e <bl2_el3_plat_arch_setup+0x1fe>
2ffe7126:	f013 0f01 	tst.w	r3, #1
2ffe712a:	d02c      	beq.n	2ffe7186 <bl2_el3_plat_arch_setup+0x206>
2ffe712c:	485b      	ldr	r0, [pc, #364]	@ (2ffe729c <bl2_el3_plat_arch_setup+0x31c>)
2ffe712e:	f000 fc21 	bl	2ffe7974 <tf_log>
2ffe7132:	494e      	ldr	r1, [pc, #312]	@ (2ffe726c <bl2_el3_plat_arch_setup+0x2ec>)
2ffe7134:	2301      	movs	r3, #1
2ffe7136:	40a3      	lsls	r3, r4
2ffe7138:	6bca      	ldr	r2, [r1, #60]	@ 0x3c
2ffe713a:	439e      	bics	r6, r3
2ffe713c:	ea42 0203 	orr.w	r2, r2, r3
2ffe7140:	63ca      	str	r2, [r1, #60]	@ 0x3c
2ffe7142:	d1dd      	bne.n	2ffe7100 <bl2_el3_plat_arch_setup+0x180>
2ffe7144:	4851      	ldr	r0, [pc, #324]	@ (2ffe728c <bl2_el3_plat_arch_setup+0x30c>)
2ffe7146:	f000 fc15 	bl	2ffe7974 <tf_log>
2ffe714a:	4c55      	ldr	r4, [pc, #340]	@ (2ffe72a0 <bl2_el3_plat_arch_setup+0x320>)
2ffe714c:	f002 fff6 	bl	2ffea13c <stm32mp_check_closed_device>
2ffe7150:	42a0      	cmp	r0, r4
2ffe7152:	d11c      	bne.n	2ffe718e <bl2_el3_plat_arch_setup+0x20e>
2ffe7154:	4853      	ldr	r0, [pc, #332]	@ (2ffe72a4 <bl2_el3_plat_arch_setup+0x324>)
2ffe7156:	e017      	b.n	2ffe7188 <bl2_el3_plat_arch_setup+0x208>
2ffe7158:	4853      	ldr	r0, [pc, #332]	@ (2ffe72a8 <bl2_el3_plat_arch_setup+0x328>)
2ffe715a:	f000 fc0b 	bl	2ffe7974 <tf_log>
2ffe715e:	484b      	ldr	r0, [pc, #300]	@ (2ffe728c <bl2_el3_plat_arch_setup+0x30c>)
2ffe7160:	f000 fc08 	bl	2ffe7974 <tf_log>
2ffe7164:	4851      	ldr	r0, [pc, #324]	@ (2ffe72ac <bl2_el3_plat_arch_setup+0x32c>)
2ffe7166:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
2ffe716a:	f8d2 3400 	ldr.w	r3, [r2, #1024]	@ 0x400
2ffe716e:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
2ffe7172:	f8c2 3400 	str.w	r3, [r2, #1024]	@ 0x400
2ffe7176:	f000 fbfd 	bl	2ffe7974 <tf_log>
2ffe717a:	f007 fd6a 	bl	2ffeec52 <stm32mp_system_reset>
2ffe717e:	2301      	movs	r3, #1
2ffe7180:	40a3      	lsls	r3, r4
2ffe7182:	4213      	tst	r3, r2
2ffe7184:	e7d1      	b.n	2ffe712a <bl2_el3_plat_arch_setup+0x1aa>
2ffe7186:	484a      	ldr	r0, [pc, #296]	@ (2ffe72b0 <bl2_el3_plat_arch_setup+0x330>)
2ffe7188:	f000 fbf4 	bl	2ffe7974 <tf_log>
2ffe718c:	e701      	b.n	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe718e:	f002 fbb5 	bl	2ffe98fc <fixed_regulator_register>
2ffe7192:	2800      	cmp	r0, #0
2ffe7194:	f47f aefd 	bne.w	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe7198:	f004 fa56 	bl	2ffeb648 <dt_pmic_status>
2ffe719c:	2800      	cmp	r0, #0
2ffe719e:	dd0b      	ble.n	2ffe71b8 <bl2_el3_plat_arch_setup+0x238>
2ffe71a0:	f004 faf2 	bl	2ffeb788 <initialize_pmic>
2ffe71a4:	f007 fadc 	bl	2ffee760 <stm32mp_is_wakeup_from_standby>
2ffe71a8:	b920      	cbnz	r0, 2ffe71b4 <bl2_el3_plat_arch_setup+0x234>
2ffe71aa:	f004 fb7d 	bl	2ffeb8a8 <pmic_voltages_init>
2ffe71ae:	b108      	cbz	r0, 2ffe71b4 <bl2_el3_plat_arch_setup+0x234>
2ffe71b0:	4840      	ldr	r0, [pc, #256]	@ (2ffe72b4 <bl2_el3_plat_arch_setup+0x334>)
2ffe71b2:	e7e9      	b.n	2ffe7188 <bl2_el3_plat_arch_setup+0x208>
2ffe71b4:	f004 fb60 	bl	2ffeb878 <print_pmic_info_and_debug>
2ffe71b8:	f004 fe5a 	bl	2ffebe70 <stm32mp_syscfg_init>
2ffe71bc:	f004 f9da 	bl	2ffeb574 <stm32_iwdg_init>
2ffe71c0:	2800      	cmp	r0, #0
2ffe71c2:	f6ff aee6 	blt.w	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe71c6:	f004 f9b5 	bl	2ffeb534 <stm32_iwdg_refresh>
2ffe71ca:	f003 fa25 	bl	2ffea618 <bsec_read_debug_conf>
2ffe71ce:	b138      	cbz	r0, 2ffe71e0 <bl2_el3_plat_arch_setup+0x260>
2ffe71d0:	f002 ffb4 	bl	2ffea13c <stm32mp_check_closed_device>
2ffe71d4:	42a0      	cmp	r0, r4
2ffe71d6:	d103      	bne.n	2ffe71e0 <bl2_el3_plat_arch_setup+0x260>
2ffe71d8:	4937      	ldr	r1, [pc, #220]	@ (2ffe72b8 <bl2_el3_plat_arch_setup+0x338>)
2ffe71da:	4838      	ldr	r0, [pc, #224]	@ (2ffe72bc <bl2_el3_plat_arch_setup+0x33c>)
2ffe71dc:	f000 fbca 	bl	2ffe7974 <tf_log>
2ffe71e0:	f005 fef0 	bl	2ffecfc4 <stm32_rng_init>
2ffe71e4:	2800      	cmp	r0, #0
2ffe71e6:	f47f aed4 	bne.w	2ffe6f92 <bl2_el3_plat_arch_setup+0x12>
2ffe71ea:	f000 fad7 	bl	2ffe779c <stm32mp1_arch_security_setup>
2ffe71ee:	f007 f87b 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffe71f2:	f8d0 4120 	ldr.w	r4, [r0, #288]	@ 0x120
2ffe71f6:	b9bc      	cbnz	r4, 2ffe7228 <bl2_el3_plat_arch_setup+0x2a8>
2ffe71f8:	4831      	ldr	r0, [pc, #196]	@ (2ffe72c0 <bl2_el3_plat_arch_setup+0x340>)
2ffe71fa:	f000 fbbb 	bl	2ffe7974 <tf_log>
2ffe71fe:	f007 fd52 	bl	2ffeeca6 <stm32mp_syscfg_enable_io_compensation_finish>
2ffe7202:	4919      	ldr	r1, [pc, #100]	@ (2ffe7268 <bl2_el3_plat_arch_setup+0x2e8>)
2ffe7204:	482f      	ldr	r0, [pc, #188]	@ (2ffe72c4 <bl2_el3_plat_arch_setup+0x344>)
2ffe7206:	f7ff f90b 	bl	2ffe6420 <fconf_populate>
2ffe720a:	f007 faab 	bl	2ffee764 <stm32mp_skip_boot_device_after_standby>
2ffe720e:	2800      	cmp	r0, #0
2ffe7210:	f000 8087 	beq.w	2ffe7322 <bl2_el3_plat_arch_setup+0x3a2>
2ffe7214:	2001      	movs	r0, #1
2ffe7216:	f7fd fd9d 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe721a:	2800      	cmp	r0, #0
2ffe721c:	d17a      	bne.n	2ffe7314 <bl2_el3_plat_arch_setup+0x394>
2ffe721e:	482a      	ldr	r0, [pc, #168]	@ (2ffe72c8 <bl2_el3_plat_arch_setup+0x348>)
2ffe7220:	f240 2102 	movw	r1, #514	@ 0x202
2ffe7224:	f006 fb66 	bl	2ffed8f4 <__assert>
2ffe7228:	4828      	ldr	r0, [pc, #160]	@ (2ffe72cc <bl2_el3_plat_arch_setup+0x34c>)
2ffe722a:	4621      	mov	r1, r4
2ffe722c:	f000 fba2 	bl	2ffe7974 <tf_log>
2ffe7230:	f014 0304 	ands.w	r3, r4, #4
2ffe7234:	d107      	bne.n	2ffe7246 <bl2_el3_plat_arch_setup+0x2c6>
2ffe7236:	0520      	lsls	r0, r4, #20
2ffe7238:	d501      	bpl.n	2ffe723e <bl2_el3_plat_arch_setup+0x2be>
2ffe723a:	4825      	ldr	r0, [pc, #148]	@ (2ffe72d0 <bl2_el3_plat_arch_setup+0x350>)
2ffe723c:	e7dd      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe723e:	04e1      	lsls	r1, r4, #19
2ffe7240:	d501      	bpl.n	2ffe7246 <bl2_el3_plat_arch_setup+0x2c6>
2ffe7242:	4824      	ldr	r0, [pc, #144]	@ (2ffe72d4 <bl2_el3_plat_arch_setup+0x354>)
2ffe7244:	e7d9      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe7246:	07e2      	lsls	r2, r4, #31
2ffe7248:	d501      	bpl.n	2ffe724e <bl2_el3_plat_arch_setup+0x2ce>
2ffe724a:	4823      	ldr	r0, [pc, #140]	@ (2ffe72d8 <bl2_el3_plat_arch_setup+0x358>)
2ffe724c:	e7d5      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe724e:	07a7      	lsls	r7, r4, #30
2ffe7250:	d501      	bpl.n	2ffe7256 <bl2_el3_plat_arch_setup+0x2d6>
2ffe7252:	4822      	ldr	r0, [pc, #136]	@ (2ffe72dc <bl2_el3_plat_arch_setup+0x35c>)
2ffe7254:	e7d1      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe7256:	0666      	lsls	r6, r4, #25
2ffe7258:	d544      	bpl.n	2ffe72e4 <bl2_el3_plat_arch_setup+0x364>
2ffe725a:	4821      	ldr	r0, [pc, #132]	@ (2ffe72e0 <bl2_el3_plat_arch_setup+0x360>)
2ffe725c:	e7cd      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe725e:	bf00      	nop
2ffe7260:	2ffe4000 	.word	0x2ffe4000
2ffe7264:	2fff4000 	.word	0x2fff4000
2ffe7268:	2ffe0000 	.word	0x2ffe0000
2ffe726c:	5c00a000 	.word	0x5c00a000
2ffe7270:	0009eb10 	.word	0x0009eb10
2ffe7274:	2fff237d 	.word	0x2fff237d
2ffe7278:	7cfdd351 	.word	0x7cfdd351
2ffe727c:	51330884 	.word	0x51330884
2ffe7280:	2fff2361 	.word	0x2fff2361
2ffe7284:	2fff235a 	.word	0x2fff235a
2ffe7288:	2fff2389 	.word	0x2fff2389
2ffe728c:	2fff2e55 	.word	0x2fff2e55
2ffe7290:	2fff2374 	.word	0x2fff2374
2ffe7294:	2fff236b 	.word	0x2fff236b
2ffe7298:	2fff23f2 	.word	0x2fff23f2
2ffe729c:	2fff2421 	.word	0x2fff2421
2ffe72a0:	34d9ccc5 	.word	0x34d9ccc5
2ffe72a4:	2fff2459 	.word	0x2fff2459
2ffe72a8:	2fff23a5 	.word	0x2fff23a5
2ffe72ac:	2fff23dd 	.word	0x2fff23dd
2ffe72b0:	2fff243d 	.word	0x2fff243d
2ffe72b4:	2fff248b 	.word	0x2fff248b
2ffe72b8:	2fff268c 	.word	0x2fff268c
2ffe72bc:	2fff24a7 	.word	0x2fff24a7
2ffe72c0:	2fff24ac 	.word	0x2fff24ac
2ffe72c4:	2fff22c2 	.word	0x2fff22c2
2ffe72c8:	2fff264e 	.word	0x2fff264e
2ffe72cc:	2fff24c3 	.word	0x2fff24c3
2ffe72d0:	2fff24da 	.word	0x2fff24da
2ffe72d4:	2fff24f6 	.word	0x2fff24f6
2ffe72d8:	2fff2510 	.word	0x2fff2510
2ffe72dc:	2fff252d 	.word	0x2fff252d
2ffe72e0:	2fff254a 	.word	0x2fff254a
2ffe72e4:	0725      	lsls	r5, r4, #28
2ffe72e6:	d501      	bpl.n	2ffe72ec <bl2_el3_plat_arch_setup+0x36c>
2ffe72e8:	4810      	ldr	r0, [pc, #64]	@ (2ffe732c <bl2_el3_plat_arch_setup+0x3ac>)
2ffe72ea:	e786      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe72ec:	05e0      	lsls	r0, r4, #23
2ffe72ee:	d501      	bpl.n	2ffe72f4 <bl2_el3_plat_arch_setup+0x374>
2ffe72f0:	480f      	ldr	r0, [pc, #60]	@ (2ffe7330 <bl2_el3_plat_arch_setup+0x3b0>)
2ffe72f2:	e782      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe72f4:	05a1      	lsls	r1, r4, #22
2ffe72f6:	d501      	bpl.n	2ffe72fc <bl2_el3_plat_arch_setup+0x37c>
2ffe72f8:	480e      	ldr	r0, [pc, #56]	@ (2ffe7334 <bl2_el3_plat_arch_setup+0x3b4>)
2ffe72fa:	e77e      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe72fc:	04a2      	lsls	r2, r4, #18
2ffe72fe:	d501      	bpl.n	2ffe7304 <bl2_el3_plat_arch_setup+0x384>
2ffe7300:	480d      	ldr	r0, [pc, #52]	@ (2ffe7338 <bl2_el3_plat_arch_setup+0x3b8>)
2ffe7302:	e77a      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe7304:	b10b      	cbz	r3, 2ffe730a <bl2_el3_plat_arch_setup+0x38a>
2ffe7306:	480d      	ldr	r0, [pc, #52]	@ (2ffe733c <bl2_el3_plat_arch_setup+0x3bc>)
2ffe7308:	e777      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe730a:	06e3      	lsls	r3, r4, #27
2ffe730c:	bf4c      	ite	mi
2ffe730e:	480c      	ldrmi	r0, [pc, #48]	@ (2ffe7340 <bl2_el3_plat_arch_setup+0x3c0>)
2ffe7310:	480c      	ldrpl	r0, [pc, #48]	@ (2ffe7344 <bl2_el3_plat_arch_setup+0x3c4>)
2ffe7312:	e772      	b.n	2ffe71fa <bl2_el3_plat_arch_setup+0x27a>
2ffe7314:	6883      	ldr	r3, [r0, #8]
2ffe7316:	f043 0302 	orr.w	r3, r3, #2
2ffe731a:	6083      	str	r3, [r0, #8]
2ffe731c:	b002      	add	sp, #8
2ffe731e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe7322:	b002      	add	sp, #8
2ffe7324:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffe7328:	f7ff ba64 	b.w	2ffe67f4 <stm32mp_io_setup>
2ffe732c:	2fff2577 	.word	0x2fff2577
2ffe7330:	2fff259f 	.word	0x2fff259f
2ffe7334:	2fff25bb 	.word	0x2fff25bb
2ffe7338:	2fff25d7 	.word	0x2fff25d7
2ffe733c:	2fff25f1 	.word	0x2fff25f1
2ffe7340:	2fff2609 	.word	0x2fff2609
2ffe7344:	2fff2630 	.word	0x2fff2630

2ffe7348 <bl2_plat_handle_post_image_load>:
2ffe7348:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffe734c:	b0a3      	sub	sp, #140	@ 0x8c
2ffe734e:	4605      	mov	r5, r0
2ffe7350:	f7fd fd00 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe7354:	4b80      	ldr	r3, [pc, #512]	@ (2ffe7558 <bl2_plat_handle_post_image_load+0x210>)
2ffe7356:	4604      	mov	r4, r0
2ffe7358:	ae06      	add	r6, sp, #24
2ffe735a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
2ffe735c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
2ffe7360:	b924      	cbnz	r4, 2ffe736c <bl2_plat_handle_post_image_load+0x24>
2ffe7362:	f240 2163 	movw	r1, #611	@ 0x263
2ffe7366:	487d      	ldr	r0, [pc, #500]	@ (2ffe755c <bl2_plat_handle_post_image_load+0x214>)
2ffe7368:	f006 fac4 	bl	2ffed8f4 <__assert>
2ffe736c:	2d04      	cmp	r5, #4
2ffe736e:	f000 80ad 	beq.w	2ffe74cc <bl2_plat_handle_post_image_load+0x184>
2ffe7372:	2d05      	cmp	r5, #5
2ffe7374:	f000 80e6 	beq.w	2ffe7544 <bl2_plat_handle_post_image_load+0x1fc>
2ffe7378:	2d01      	cmp	r5, #1
2ffe737a:	f040 8088 	bne.w	2ffe748e <bl2_plat_handle_post_image_load+0x146>
2ffe737e:	f002 fedd 	bl	2ffea13c <stm32mp_check_closed_device>
2ffe7382:	4b77      	ldr	r3, [pc, #476]	@ (2ffe7560 <bl2_plat_handle_post_image_load+0x218>)
2ffe7384:	4298      	cmp	r0, r3
2ffe7386:	d10a      	bne.n	2ffe739e <bl2_plat_handle_post_image_load+0x56>
2ffe7388:	f7fe fe2c 	bl	2ffe5fe4 <stm32_mce_init>
2ffe738c:	2104      	movs	r1, #4
2ffe738e:	a805      	add	r0, sp, #20
2ffe7390:	f005 fdce 	bl	2ffecf30 <stm32_rng_read>
2ffe7394:	b368      	cbz	r0, 2ffe73f2 <bl2_plat_handle_post_image_load+0xaa>
2ffe7396:	f000 fb89 	bl	2ffe7aac <console_flush>
2ffe739a:	f7fd e84c 	blx	2ffe4434 <do_panic>
2ffe739e:	f002 fef7 	bl	2ffea190 <stm32mp_is_auth_supported>
2ffe73a2:	2800      	cmp	r0, #0
2ffe73a4:	d1f0      	bne.n	2ffe7388 <bl2_plat_handle_post_image_load+0x40>
2ffe73a6:	f007 f9dd 	bl	2ffee764 <stm32mp_skip_boot_device_after_standby>
2ffe73aa:	4605      	mov	r5, r0
2ffe73ac:	2800      	cmp	r0, #0
2ffe73ae:	d16e      	bne.n	2ffe748e <bl2_plat_handle_post_image_load+0x146>
2ffe73b0:	486c      	ldr	r0, [pc, #432]	@ (2ffe7564 <bl2_plat_handle_post_image_load+0x21c>)
2ffe73b2:	2301      	movs	r3, #1
2ffe73b4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
2ffe73b8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe73bc:	f7ff f874 	bl	2ffe64a8 <set_config_info>
2ffe73c0:	4968      	ldr	r1, [pc, #416]	@ (2ffe7564 <bl2_plat_handle_post_image_load+0x21c>)
2ffe73c2:	4869      	ldr	r0, [pc, #420]	@ (2ffe7568 <bl2_plat_handle_post_image_load+0x220>)
2ffe73c4:	f7ff f82c 	bl	2ffe6420 <fconf_populate>
2ffe73c8:	2010      	movs	r0, #16
2ffe73ca:	f7ff f913 	bl	2ffe65f4 <dyn_cfg_dtb_info_get_index>
2ffe73ce:	4681      	mov	r9, r0
2ffe73d0:	f856 8b04 	ldr.w	r8, [r6], #4
2ffe73d4:	f1b8 0f10 	cmp.w	r8, #16
2ffe73d8:	d102      	bne.n	2ffe73e0 <bl2_plat_handle_post_image_load+0x98>
2ffe73da:	f1b9 3fff 	cmp.w	r9, #4294967295	@ 0xffffffff
2ffe73de:	d053      	beq.n	2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe73e0:	4640      	mov	r0, r8
2ffe73e2:	f7fd fcb7 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe73e6:	4604      	mov	r4, r0
2ffe73e8:	2800      	cmp	r0, #0
2ffe73ea:	d12e      	bne.n	2ffe744a <bl2_plat_handle_post_image_load+0x102>
2ffe73ec:	f240 217f 	movw	r1, #639	@ 0x27f
2ffe73f0:	e7b9      	b.n	2ffe7366 <bl2_plat_handle_post_image_load+0x1e>
2ffe73f2:	e9cd 000e 	strd	r0, r0, [sp, #56]	@ 0x38
2ffe73f6:	9010      	str	r0, [sp, #64]	@ 0x40
2ffe73f8:	9011      	str	r0, [sp, #68]	@ 0x44
2ffe73fa:	f005 ff29 	bl	2ffed250 <stm32_saes_driver_init>
2ffe73fe:	4604      	mov	r4, r0
2ffe7400:	2800      	cmp	r0, #0
2ffe7402:	d1c8      	bne.n	2ffe7396 <bl2_plat_handle_post_image_load+0x4e>
2ffe7404:	2204      	movs	r2, #4
2ffe7406:	a905      	add	r1, sp, #20
2ffe7408:	a80e      	add	r0, sp, #56	@ 0x38
2ffe740a:	2510      	movs	r5, #16
2ffe740c:	f008 fbc7 	bl	2ffefb9e <memcpy>
2ffe7410:	9403      	str	r4, [sp, #12]
2ffe7412:	2301      	movs	r3, #1
2ffe7414:	9402      	str	r4, [sp, #8]
2ffe7416:	4622      	mov	r2, r4
2ffe7418:	4621      	mov	r1, r4
2ffe741a:	a812      	add	r0, sp, #72	@ 0x48
2ffe741c:	e9cd 4500 	strd	r4, r5, [sp]
2ffe7420:	f005 ff60 	bl	2ffed2e4 <stm32_saes_init>
2ffe7424:	2800      	cmp	r0, #0
2ffe7426:	d1b6      	bne.n	2ffe7396 <bl2_plat_handle_post_image_load+0x4e>
2ffe7428:	9500      	str	r5, [sp, #0]
2ffe742a:	ab0a      	add	r3, sp, #40	@ 0x28
2ffe742c:	aa0e      	add	r2, sp, #56	@ 0x38
2ffe742e:	2101      	movs	r1, #1
2ffe7430:	a812      	add	r0, sp, #72	@ 0x48
2ffe7432:	f006 f85d 	bl	2ffed4f0 <stm32_saes_update>
2ffe7436:	2800      	cmp	r0, #0
2ffe7438:	d1ad      	bne.n	2ffe7396 <bl2_plat_handle_post_image_load+0x4e>
2ffe743a:	a80a      	add	r0, sp, #40	@ 0x28
2ffe743c:	f7fe fe06 	bl	2ffe604c <stm32_mce_write_master_key>
2ffe7440:	2800      	cmp	r0, #0
2ffe7442:	d1a8      	bne.n	2ffe7396 <bl2_plat_handle_post_image_load+0x4e>
2ffe7444:	f7fe fe4a 	bl	2ffe60dc <stm32_mce_lock_master_key>
2ffe7448:	e7ad      	b.n	2ffe73a6 <bl2_plat_handle_post_image_load+0x5e>
2ffe744a:	4640      	mov	r0, r8
2ffe744c:	f7ff f8e2 	bl	2ffe6614 <dyn_cfg_dtb_info_getter>
2ffe7450:	4607      	mov	r7, r0
2ffe7452:	b1c8      	cbz	r0, 2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe7454:	6842      	ldr	r2, [r0, #4]
2ffe7456:	f1b8 0f05 	cmp.w	r8, #5
2ffe745a:	6803      	ldr	r3, [r0, #0]
2ffe745c:	6162      	str	r2, [r4, #20]
2ffe745e:	68a2      	ldr	r2, [r4, #8]
2ffe7460:	60e3      	str	r3, [r4, #12]
2ffe7462:	f022 0202 	bic.w	r2, r2, #2
2ffe7466:	60a2      	str	r2, [r4, #8]
2ffe7468:	d02e      	beq.n	2ffe74c8 <bl2_plat_handle_post_image_load+0x180>
2ffe746a:	d80a      	bhi.n	2ffe7482 <bl2_plat_handle_post_image_load+0x13a>
2ffe746c:	f1b8 0f02 	cmp.w	r8, #2
2ffe7470:	d00a      	beq.n	2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe7472:	f1b8 0f04 	cmp.w	r8, #4
2ffe7476:	d00c      	beq.n	2ffe7492 <bl2_plat_handle_post_image_load+0x14a>
2ffe7478:	f06f 0015 	mvn.w	r0, #21
2ffe747c:	b023      	add	sp, #140	@ 0x8c
2ffe747e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe7482:	f1b8 0f10 	cmp.w	r8, #16
2ffe7486:	d1f7      	bne.n	2ffe7478 <bl2_plat_handle_post_image_load+0x130>
2ffe7488:	3501      	adds	r5, #1
2ffe748a:	2d04      	cmp	r5, #4
2ffe748c:	d1a0      	bne.n	2ffe73d0 <bl2_plat_handle_post_image_load+0x88>
2ffe748e:	2000      	movs	r0, #0
2ffe7490:	e7f4      	b.n	2ffe747c <bl2_plat_handle_post_image_load+0x134>
2ffe7492:	6223      	str	r3, [r4, #32]
2ffe7494:	2008      	movs	r0, #8
2ffe7496:	f7fd fc5d 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe749a:	b910      	cbnz	r0, 2ffe74a2 <bl2_plat_handle_post_image_load+0x15a>
2ffe749c:	f240 2197 	movw	r1, #663	@ 0x297
2ffe74a0:	e761      	b.n	2ffe7366 <bl2_plat_handle_post_image_load+0x1e>
2ffe74a2:	683b      	ldr	r3, [r7, #0]
2ffe74a4:	60c3      	str	r3, [r0, #12]
2ffe74a6:	687b      	ldr	r3, [r7, #4]
2ffe74a8:	6143      	str	r3, [r0, #20]
2ffe74aa:	2009      	movs	r0, #9
2ffe74ac:	f7fd fc52 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe74b0:	4604      	mov	r4, r0
2ffe74b2:	2800      	cmp	r0, #0
2ffe74b4:	d0e8      	beq.n	2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe74b6:	f002 fba9 	bl	2ffe9c0c <dt_get_ddr_size>
2ffe74ba:	f100 403e 	add.w	r0, r0, #3187671040	@ 0xbe000000
2ffe74be:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffe74c2:	60e0      	str	r0, [r4, #12]
2ffe74c4:	6163      	str	r3, [r4, #20]
2ffe74c6:	e7df      	b.n	2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe74c8:	6223      	str	r3, [r4, #32]
2ffe74ca:	e7dd      	b.n	2ffe7488 <bl2_plat_handle_post_image_load+0x140>
2ffe74cc:	68e0      	ldr	r0, [r4, #12]
2ffe74ce:	f7ff f8e5 	bl	2ffe669c <optee_header_is_valid>
2ffe74d2:	68e3      	ldr	r3, [r4, #12]
2ffe74d4:	4605      	mov	r5, r0
2ffe74d6:	6223      	str	r3, [r4, #32]
2ffe74d8:	b338      	cbz	r0, 2ffe752a <bl2_plat_handle_post_image_load+0x1e2>
2ffe74da:	2008      	movs	r0, #8
2ffe74dc:	f7fd fc3a 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe74e0:	4606      	mov	r6, r0
2ffe74e2:	b910      	cbnz	r0, 2ffe74ea <bl2_plat_handle_post_image_load+0x1a2>
2ffe74e4:	f240 21ce 	movw	r1, #718	@ 0x2ce
2ffe74e8:	e73d      	b.n	2ffe7366 <bl2_plat_handle_post_image_load+0x1e>
2ffe74ea:	2009      	movs	r0, #9
2ffe74ec:	f7fd fc32 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe74f0:	4605      	mov	r5, r0
2ffe74f2:	b150      	cbz	r0, 2ffe750a <bl2_plat_handle_post_image_load+0x1c2>
2ffe74f4:	1d02      	adds	r2, r0, #4
2ffe74f6:	1d31      	adds	r1, r6, #4
2ffe74f8:	f104 0018 	add.w	r0, r4, #24
2ffe74fc:	f7ff f8e0 	bl	2ffe66c0 <parse_optee_header>
2ffe7500:	b128      	cbz	r0, 2ffe750e <bl2_plat_handle_post_image_load+0x1c6>
2ffe7502:	481a      	ldr	r0, [pc, #104]	@ (2ffe756c <bl2_plat_handle_post_image_load+0x224>)
2ffe7504:	f000 fa36 	bl	2ffe7974 <tf_log>
2ffe7508:	e745      	b.n	2ffe7396 <bl2_plat_handle_post_image_load+0x4e>
2ffe750a:	4602      	mov	r2, r0
2ffe750c:	e7f3      	b.n	2ffe74f6 <bl2_plat_handle_post_image_load+0x1ae>
2ffe750e:	b155      	cbz	r5, 2ffe7526 <bl2_plat_handle_post_image_load+0x1de>
2ffe7510:	68eb      	ldr	r3, [r5, #12]
2ffe7512:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffe7514:	6320      	str	r0, [r4, #48]	@ 0x30
2ffe7516:	6360      	str	r0, [r4, #52]	@ 0x34
2ffe7518:	6a23      	ldr	r3, [r4, #32]
2ffe751a:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
2ffe751e:	d3b6      	bcc.n	2ffe748e <bl2_plat_handle_post_image_load+0x146>
2ffe7520:	f004 fbd4 	bl	2ffebccc <stm32_context_save_bl2_param>
2ffe7524:	e7b3      	b.n	2ffe748e <bl2_plat_handle_post_image_load+0x146>
2ffe7526:	4603      	mov	r3, r0
2ffe7528:	e7f3      	b.n	2ffe7512 <bl2_plat_handle_post_image_load+0x1ca>
2ffe752a:	2010      	movs	r0, #16
2ffe752c:	f7fd fc12 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe7530:	b910      	cbnz	r0, 2ffe7538 <bl2_plat_handle_post_image_load+0x1f0>
2ffe7532:	f240 21ea 	movw	r1, #746	@ 0x2ea
2ffe7536:	e716      	b.n	2ffe7366 <bl2_plat_handle_post_image_load+0x1e>
2ffe7538:	6942      	ldr	r2, [r0, #20]
2ffe753a:	6963      	ldr	r3, [r4, #20]
2ffe753c:	62e5      	str	r5, [r4, #44]	@ 0x2c
2ffe753e:	4413      	add	r3, r2
2ffe7540:	6163      	str	r3, [r4, #20]
2ffe7542:	e7e9      	b.n	2ffe7518 <bl2_plat_handle_post_image_load+0x1d0>
2ffe7544:	2004      	movs	r0, #4
2ffe7546:	f7fd fc05 	bl	2ffe4d54 <get_bl_mem_params_node>
2ffe754a:	b910      	cbnz	r0, 2ffe7552 <bl2_plat_handle_post_image_load+0x20a>
2ffe754c:	f240 21f7 	movw	r1, #759	@ 0x2f7
2ffe7550:	e709      	b.n	2ffe7366 <bl2_plat_handle_post_image_load+0x1e>
2ffe7552:	6a23      	ldr	r3, [r4, #32]
2ffe7554:	6283      	str	r3, [r0, #40]	@ 0x28
2ffe7556:	e79a      	b.n	2ffe748e <bl2_plat_handle_post_image_load+0x146>
2ffe7558:	2fff001c 	.word	0x2fff001c
2ffe755c:	2fff264e 	.word	0x2fff264e
2ffe7560:	34d9ccc5 	.word	0x34d9ccc5
2ffe7564:	30006000 	.word	0x30006000
2ffe7568:	2fff1cf4 	.word	0x2fff1cf4
2ffe756c:	2fff2670 	.word	0x2fff2670

2ffe7570 <bl2_el3_plat_prepare_exit>:
2ffe7570:	b508      	push	{r3, lr}
2ffe7572:	f000 fb65 	bl	2ffe7c40 <stm32mp_get_boot_itf_selected>
2ffe7576:	3805      	subs	r0, #5
2ffe7578:	b280      	uxth	r0, r0
2ffe757a:	2801      	cmp	r0, #1
2ffe757c:	d805      	bhi.n	2ffe758a <bl2_el3_plat_prepare_exit+0x1a>
2ffe757e:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
2ffe7582:	f04f 4047 	mov.w	r0, #3338665984	@ 0xc7000000
2ffe7586:	f7fc efca 	blx	2ffe451c <inv_dcache_range>
2ffe758a:	4808      	ldr	r0, [pc, #32]	@ (2ffe75ac <bl2_el3_plat_prepare_exit+0x3c>)
2ffe758c:	4908      	ldr	r1, [pc, #32]	@ (2ffe75b0 <bl2_el3_plat_prepare_exit+0x40>)
2ffe758e:	1a09      	subs	r1, r1, r0
2ffe7590:	f7fc ef88 	blx	2ffe44a4 <flush_dcache_range>
2ffe7594:	4807      	ldr	r0, [pc, #28]	@ (2ffe75b4 <bl2_el3_plat_prepare_exit+0x44>)
2ffe7596:	4908      	ldr	r1, [pc, #32]	@ (2ffe75b8 <bl2_el3_plat_prepare_exit+0x48>)
2ffe7598:	1a09      	subs	r1, r1, r0
2ffe759a:	f7fc ef84 	blx	2ffe44a4 <flush_dcache_range>
2ffe759e:	f000 f913 	bl	2ffe77c8 <stm32mp1_security_setup>
2ffe75a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe75a6:	f004 bcdd 	b.w	2ffebf64 <stm32mp_syscfg_boot_mode_disable>
2ffe75aa:	bf00      	nop
2ffe75ac:	2fff5400 	.word	0x2fff5400
2ffe75b0:	2fff5ce0 	.word	0x2fff5ce0
2ffe75b4:	2fff4000 	.word	0x2fff4000
2ffe75b8:	2fff47dc 	.word	0x2fff47dc

2ffe75bc <stm32mp_board_ddr_power_init>:
2ffe75bc:	b570      	push	{r4, r5, r6, lr}
2ffe75be:	4605      	mov	r5, r0
2ffe75c0:	f004 f842 	bl	2ffeb648 <dt_pmic_status>
2ffe75c4:	2800      	cmp	r0, #0
2ffe75c6:	dc01      	bgt.n	2ffe75cc <stm32mp_board_ddr_power_init+0x10>
2ffe75c8:	2000      	movs	r0, #0
2ffe75ca:	bd70      	pop	{r4, r5, r6, pc}
2ffe75cc:	4810      	ldr	r0, [pc, #64]	@ (2ffe7610 <stm32mp_board_ddr_power_init+0x54>)
2ffe75ce:	f001 ff81 	bl	2ffe94d4 <regulator_get_by_name>
2ffe75d2:	4604      	mov	r4, r0
2ffe75d4:	b910      	cbnz	r0, 2ffe75dc <stm32mp_board_ddr_power_init+0x20>
2ffe75d6:	f06f 0001 	mvn.w	r0, #1
2ffe75da:	e7f6      	b.n	2ffe75ca <stm32mp_board_ddr_power_init+0xe>
2ffe75dc:	480d      	ldr	r0, [pc, #52]	@ (2ffe7614 <stm32mp_board_ddr_power_init+0x58>)
2ffe75de:	f001 ff79 	bl	2ffe94d4 <regulator_get_by_name>
2ffe75e2:	4606      	mov	r6, r0
2ffe75e4:	2800      	cmp	r0, #0
2ffe75e6:	d0f6      	beq.n	2ffe75d6 <stm32mp_board_ddr_power_init+0x1a>
2ffe75e8:	b115      	cbz	r5, 2ffe75f0 <stm32mp_board_ddr_power_init+0x34>
2ffe75ea:	3d01      	subs	r5, #1
2ffe75ec:	2d01      	cmp	r5, #1
2ffe75ee:	d8eb      	bhi.n	2ffe75c8 <stm32mp_board_ddr_power_init+0xc>
2ffe75f0:	4620      	mov	r0, r4
2ffe75f2:	f007 f899 	bl	2ffee728 <regulator_set_min_voltage>
2ffe75f6:	2800      	cmp	r0, #0
2ffe75f8:	d1e7      	bne.n	2ffe75ca <stm32mp_board_ddr_power_init+0xe>
2ffe75fa:	4620      	mov	r0, r4
2ffe75fc:	f001 ffca 	bl	2ffe9594 <regulator_enable>
2ffe7600:	2800      	cmp	r0, #0
2ffe7602:	d1e2      	bne.n	2ffe75ca <stm32mp_board_ddr_power_init+0xe>
2ffe7604:	4630      	mov	r0, r6
2ffe7606:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe760a:	f001 bfc3 	b.w	2ffe9594 <regulator_enable>
2ffe760e:	bf00      	nop
2ffe7610:	2fff2861 	.word	0x2fff2861
2ffe7614:	2fff2867 	.word	0x2fff2867

2ffe7618 <stm32_pwr_down_wfi_load>:
2ffe7618:	2904      	cmp	r1, #4
2ffe761a:	b538      	push	{r3, r4, r5, lr}
2ffe761c:	4605      	mov	r5, r0
2ffe761e:	460c      	mov	r4, r1
2ffe7620:	d120      	bne.n	2ffe7664 <stm32_pwr_down_wfi_load+0x4c>
2ffe7622:	4829      	ldr	r0, [pc, #164]	@ (2ffe76c8 <stm32_pwr_down_wfi_load+0xb0>)
2ffe7624:	f002 fffe 	bl	2ffea624 <bsec_write_scratch>
2ffe7628:	2001      	movs	r0, #1
2ffe762a:	f7fc effa 	blx	2ffe4620 <dcsw_op_all>
2ffe762e:	b945      	cbnz	r5, 2ffe7642 <stm32_pwr_down_wfi_load+0x2a>
2ffe7630:	f3bf 8f4f 	dsb	sy
2ffe7634:	f3bf 8f6f 	isb	sy
2ffe7638:	bf30      	wfi
2ffe763a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe763e:	f003 bf79 	b.w	2ffeb534 <stm32_iwdg_refresh>
2ffe7642:	f001 fa45 	bl	2ffe8ad0 <generic_delay_timer_init>
2ffe7646:	2001      	movs	r0, #1
2ffe7648:	f003 f996 	bl	2ffea978 <ddr_set_sr_mode>
2ffe764c:	f007 f8bb 	bl	2ffee7c6 <ddr_standby_sr_entry>
2ffe7650:	b1c8      	cbz	r0, 2ffe7686 <stm32_pwr_down_wfi_load+0x6e>
2ffe7652:	481e      	ldr	r0, [pc, #120]	@ (2ffe76cc <stm32_pwr_down_wfi_load+0xb4>)
2ffe7654:	f000 f98e 	bl	2ffe7974 <tf_log>
2ffe7658:	2c07      	cmp	r4, #7
2ffe765a:	d021      	beq.n	2ffe76a0 <stm32_pwr_down_wfi_load+0x88>
2ffe765c:	f000 fa26 	bl	2ffe7aac <console_flush>
2ffe7660:	f7fc eee8 	blx	2ffe4434 <do_panic>
2ffe7664:	2900      	cmp	r1, #0
2ffe7666:	d0e2      	beq.n	2ffe762e <stm32_pwr_down_wfi_load+0x16>
2ffe7668:	2001      	movs	r0, #1
2ffe766a:	f7fc efda 	blx	2ffe4620 <dcsw_op_all>
2ffe766e:	b1ad      	cbz	r5, 2ffe769c <stm32_pwr_down_wfi_load+0x84>
2ffe7670:	f001 fa2e 	bl	2ffe8ad0 <generic_delay_timer_init>
2ffe7674:	2001      	movs	r0, #1
2ffe7676:	f003 f97f 	bl	2ffea978 <ddr_set_sr_mode>
2ffe767a:	f007 f8a4 	bl	2ffee7c6 <ddr_standby_sr_entry>
2ffe767e:	2800      	cmp	r0, #0
2ffe7680:	d1e7      	bne.n	2ffe7652 <stm32_pwr_down_wfi_load+0x3a>
2ffe7682:	2c07      	cmp	r4, #7
2ffe7684:	d00c      	beq.n	2ffe76a0 <stm32_pwr_down_wfi_load+0x88>
2ffe7686:	f3bf 8f4f 	dsb	sy
2ffe768a:	f3bf 8f6f 	isb	sy
2ffe768e:	bf30      	wfi
2ffe7690:	f003 ff50 	bl	2ffeb534 <stm32_iwdg_refresh>
2ffe7694:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe7698:	f006 bcf6 	b.w	2ffee088 <stm32_pwr_cstop_critic_exit>
2ffe769c:	2c07      	cmp	r4, #7
2ffe769e:	d1c7      	bne.n	2ffe7630 <stm32_pwr_down_wfi_load+0x18>
2ffe76a0:	f003 ffd2 	bl	2ffeb648 <dt_pmic_status>
2ffe76a4:	2800      	cmp	r0, #0
2ffe76a6:	dd05      	ble.n	2ffe76b4 <stm32_pwr_down_wfi_load+0x9c>
2ffe76a8:	f003 ffe8 	bl	2ffeb67c <initialize_pmic_i2c>
2ffe76ac:	2800      	cmp	r0, #0
2ffe76ae:	d0d5      	beq.n	2ffe765c <stm32_pwr_down_wfi_load+0x44>
2ffe76b0:	f007 fa33 	bl	2ffeeb1a <pmic_switch_off>
2ffe76b4:	f3bf 8f4f 	dsb	sy
2ffe76b8:	f3bf 8f6f 	isb	sy
2ffe76bc:	bf30      	wfi
2ffe76be:	f003 ff39 	bl	2ffeb534 <stm32_iwdg_refresh>
2ffe76c2:	2d00      	cmp	r5, #0
2ffe76c4:	d1e6      	bne.n	2ffe7694 <stm32_pwr_down_wfi_load+0x7c>
2ffe76c6:	bd38      	pop	{r3, r4, r5, pc}
2ffe76c8:	2ffe4310 	.word	0x2ffe4310
2ffe76cc:	2fff2870 	.word	0x2fff2870

2ffe76d0 <fconf_populate_stm32mp1_firewall>:
2ffe76d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe76d4:	b086      	sub	sp, #24
2ffe76d6:	4606      	mov	r6, r0
2ffe76d8:	f7fe fbd6 	bl	2ffe5e88 <stm32mp1_ddr_is_restored>
2ffe76dc:	4605      	mov	r5, r0
2ffe76de:	bb08      	cbnz	r0, 2ffe7724 <fconf_populate_stm32mp1_firewall+0x54>
2ffe76e0:	4a29      	ldr	r2, [pc, #164]	@ (2ffe7788 <fconf_populate_stm32mp1_firewall+0xb8>)
2ffe76e2:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe76e6:	4630      	mov	r0, r6
2ffe76e8:	f008 fa22 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe76ec:	1e04      	subs	r4, r0, #0
2ffe76ee:	da07      	bge.n	2ffe7700 <fconf_populate_stm32mp1_firewall+0x30>
2ffe76f0:	4925      	ldr	r1, [pc, #148]	@ (2ffe7788 <fconf_populate_stm32mp1_firewall+0xb8>)
2ffe76f2:	4826      	ldr	r0, [pc, #152]	@ (2ffe778c <fconf_populate_stm32mp1_firewall+0xbc>)
2ffe76f4:	f000 f93e 	bl	2ffe7974 <tf_log>
2ffe76f8:	4620      	mov	r0, r4
2ffe76fa:	b006      	add	sp, #24
2ffe76fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe7700:	4a23      	ldr	r2, [pc, #140]	@ (2ffe7790 <fconf_populate_stm32mp1_firewall+0xc0>)
2ffe7702:	4621      	mov	r1, r4
2ffe7704:	ab05      	add	r3, sp, #20
2ffe7706:	4630      	mov	r0, r6
2ffe7708:	f008 f8de 	bl	2ffef8c8 <fdt_getprop>
2ffe770c:	4604      	mov	r4, r0
2ffe770e:	b158      	cbz	r0, 2ffe7728 <fconf_populate_stm32mp1_firewall+0x58>
2ffe7710:	4e20      	ldr	r6, [pc, #128]	@ (2ffe7794 <fconf_populate_stm32mp1_firewall+0xc4>)
2ffe7712:	462f      	mov	r7, r5
2ffe7714:	9b05      	ldr	r3, [sp, #20]
2ffe7716:	ebb5 1f13 	cmp.w	r5, r3, lsr #4
2ffe771a:	d30c      	bcc.n	2ffe7736 <fconf_populate_stm32mp1_firewall+0x66>
2ffe771c:	481d      	ldr	r0, [pc, #116]	@ (2ffe7794 <fconf_populate_stm32mp1_firewall+0xc4>)
2ffe771e:	2104      	movs	r1, #4
2ffe7720:	f7fc eec0 	blx	2ffe44a4 <flush_dcache_range>
2ffe7724:	2400      	movs	r4, #0
2ffe7726:	e7e7      	b.n	2ffe76f8 <fconf_populate_stm32mp1_firewall+0x28>
2ffe7728:	4919      	ldr	r1, [pc, #100]	@ (2ffe7790 <fconf_populate_stm32mp1_firewall+0xc0>)
2ffe772a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe772e:	481a      	ldr	r0, [pc, #104]	@ (2ffe7798 <fconf_populate_stm32mp1_firewall+0xc8>)
2ffe7730:	f000 f920 	bl	2ffe7974 <tf_log>
2ffe7734:	e7e0      	b.n	2ffe76f8 <fconf_populate_stm32mp1_firewall+0x28>
2ffe7736:	f854 0b10 	ldr.w	r0, [r4], #16
2ffe773a:	3501      	adds	r5, #1
2ffe773c:	f006 fcbc 	bl	2ffee0b8 <fdt32_to_cpu>
2ffe7740:	4602      	mov	r2, r0
2ffe7742:	f854 0c0c 	ldr.w	r0, [r4, #-12]
2ffe7746:	f006 fcb7 	bl	2ffee0b8 <fdt32_to_cpu>
2ffe774a:	4603      	mov	r3, r0
2ffe774c:	f854 0c08 	ldr.w	r0, [r4, #-8]
2ffe7750:	f006 fcb2 	bl	2ffee0b8 <fdt32_to_cpu>
2ffe7754:	4680      	mov	r8, r0
2ffe7756:	f854 0c04 	ldr.w	r0, [r4, #-4]
2ffe775a:	f006 fcad 	bl	2ffee0b8 <fdt32_to_cpu>
2ffe775e:	6831      	ldr	r1, [r6, #0]
2ffe7760:	189b      	adds	r3, r3, r2
2ffe7762:	f101 0101 	add.w	r1, r1, #1
2ffe7766:	6031      	str	r1, [r6, #0]
2ffe7768:	9003      	str	r0, [sp, #12]
2ffe776a:	eb47 0007 	adc.w	r0, r7, r7
2ffe776e:	3b01      	subs	r3, #1
2ffe7770:	f140 30ff 	adc.w	r0, r0, #4294967295	@ 0xffffffff
2ffe7774:	e9cd 3000 	strd	r3, r0, [sp]
2ffe7778:	f8cd 8008 	str.w	r8, [sp, #8]
2ffe777c:	2300      	movs	r3, #0
2ffe777e:	4618      	mov	r0, r3
2ffe7780:	f002 fdce 	bl	2ffea320 <tzc400_configure_region>
2ffe7784:	e7c6      	b.n	2ffe7714 <fconf_populate_stm32mp1_firewall+0x44>
2ffe7786:	bf00      	nop
2ffe7788:	2fff288a 	.word	0x2fff288a
2ffe778c:	2fff1c9c 	.word	0x2fff1c9c
2ffe7790:	2fff1cc5 	.word	0x2fff1cc5
2ffe7794:	2fff567c 	.word	0x2fff567c
2ffe7798:	2fff1cd3 	.word	0x2fff1cd3

2ffe779c <stm32mp1_arch_security_setup>:
2ffe779c:	b508      	push	{r3, lr}
2ffe779e:	2031      	movs	r0, #49	@ 0x31
2ffe77a0:	f001 f8de 	bl	2ffe8960 <clk_enable>
2ffe77a4:	4807      	ldr	r0, [pc, #28]	@ (2ffe77c4 <stm32mp1_arch_security_setup+0x28>)
2ffe77a6:	f002 fd77 	bl	2ffea298 <tzc400_init>
2ffe77aa:	f002 fe71 	bl	2ffea490 <tzc400_disable_filters>
2ffe77ae:	2100      	movs	r1, #0
2ffe77b0:	2003      	movs	r0, #3
2ffe77b2:	f002 fd9f 	bl	2ffea2f4 <tzc400_configure_region0>
2ffe77b6:	2001      	movs	r0, #1
2ffe77b8:	f002 fd5c 	bl	2ffea274 <tzc400_set_action>
2ffe77bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe77c0:	f002 be32 	b.w	2ffea428 <tzc400_enable_filters>
2ffe77c4:	5c006000 	.word	0x5c006000

2ffe77c8 <stm32mp1_security_setup>:
2ffe77c8:	b538      	push	{r3, r4, r5, lr}
2ffe77ca:	f7fe fb5d 	bl	2ffe5e88 <stm32mp1_ddr_is_restored>
2ffe77ce:	4604      	mov	r4, r0
2ffe77d0:	bb08      	cbnz	r0, 2ffe7816 <stm32mp1_security_setup+0x4e>
2ffe77d2:	4d11      	ldr	r5, [pc, #68]	@ (2ffe7818 <stm32mp1_security_setup+0x50>)
2ffe77d4:	682b      	ldr	r3, [r5, #0]
2ffe77d6:	b91b      	cbnz	r3, 2ffe77e0 <stm32mp1_security_setup+0x18>
2ffe77d8:	4810      	ldr	r0, [pc, #64]	@ (2ffe781c <stm32mp1_security_setup+0x54>)
2ffe77da:	2141      	movs	r1, #65	@ 0x41
2ffe77dc:	f006 f88a 	bl	2ffed8f4 <__assert>
2ffe77e0:	480f      	ldr	r0, [pc, #60]	@ (2ffe7820 <stm32mp1_security_setup+0x58>)
2ffe77e2:	f002 fd59 	bl	2ffea298 <tzc400_init>
2ffe77e6:	f002 fe53 	bl	2ffea490 <tzc400_disable_filters>
2ffe77ea:	4621      	mov	r1, r4
2ffe77ec:	4620      	mov	r0, r4
2ffe77ee:	2401      	movs	r4, #1
2ffe77f0:	f002 fd80 	bl	2ffea2f4 <tzc400_configure_region0>
2ffe77f4:	682b      	ldr	r3, [r5, #0]
2ffe77f6:	429c      	cmp	r4, r3
2ffe77f8:	d906      	bls.n	2ffe7808 <stm32mp1_security_setup+0x40>
2ffe77fa:	2002      	movs	r0, #2
2ffe77fc:	f002 fd3a 	bl	2ffea274 <tzc400_set_action>
2ffe7800:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe7804:	f002 be10 	b.w	2ffea428 <tzc400_enable_filters>
2ffe7808:	4620      	mov	r0, r4
2ffe780a:	2101      	movs	r1, #1
2ffe780c:	3401      	adds	r4, #1
2ffe780e:	f002 fde9 	bl	2ffea3e4 <tzc400_update_filters>
2ffe7812:	b2e4      	uxtb	r4, r4
2ffe7814:	e7ee      	b.n	2ffe77f4 <stm32mp1_security_setup+0x2c>
2ffe7816:	bd38      	pop	{r3, r4, r5, pc}
2ffe7818:	2fff567c 	.word	0x2fff567c
2ffe781c:	2fff289a 	.word	0x2fff289a
2ffe7820:	5c006000 	.word	0x5c006000

2ffe7824 <load_auth_image>:
2ffe7824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffe7828:	4605      	mov	r5, r0
2ffe782a:	f8df 8108 	ldr.w	r8, [pc, #264]	@ 2ffe7934 <load_auth_image+0x110>
2ffe782e:	b086      	sub	sp, #24
2ffe7830:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 2ffe7938 <load_auth_image+0x114>
2ffe7834:	460e      	mov	r6, r1
2ffe7836:	f8df a104 	ldr.w	sl, [pc, #260]	@ 2ffe793c <load_auth_image+0x118>
2ffe783a:	b91e      	cbnz	r6, 2ffe7844 <load_auth_image+0x20>
2ffe783c:	2150      	movs	r1, #80	@ 0x50
2ffe783e:	4840      	ldr	r0, [pc, #256]	@ (2ffe7940 <load_auth_image+0x11c>)
2ffe7840:	f006 f858 	bl	2ffed8f4 <__assert>
2ffe7844:	7873      	ldrb	r3, [r6, #1]
2ffe7846:	2b01      	cmp	r3, #1
2ffe7848:	d801      	bhi.n	2ffe784e <load_auth_image+0x2a>
2ffe784a:	2151      	movs	r1, #81	@ 0x51
2ffe784c:	e7f7      	b.n	2ffe783e <load_auth_image+0x1a>
2ffe784e:	68b7      	ldr	r7, [r6, #8]
2ffe7850:	aa03      	add	r2, sp, #12
2ffe7852:	a901      	add	r1, sp, #4
2ffe7854:	4628      	mov	r0, r5
2ffe7856:	f7ff f893 	bl	2ffe6980 <plat_get_image_source>
2ffe785a:	4604      	mov	r4, r0
2ffe785c:	b188      	cbz	r0, 2ffe7882 <load_auth_image+0x5e>
2ffe785e:	4602      	mov	r2, r0
2ffe7860:	4629      	mov	r1, r5
2ffe7862:	4838      	ldr	r0, [pc, #224]	@ (2ffe7944 <load_auth_image+0x120>)
2ffe7864:	f000 f886 	bl	2ffe7974 <tf_log>
2ffe7868:	f006 fc35 	bl	2ffee0d6 <plat_try_next_boot_source>
2ffe786c:	2800      	cmp	r0, #0
2ffe786e:	d1e9      	bne.n	2ffe7844 <load_auth_image+0x20>
2ffe7870:	4628      	mov	r0, r5
2ffe7872:	f006 fbf9 	bl	2ffee068 <plat_try_backup_partitions>
2ffe7876:	2800      	cmp	r0, #0
2ffe7878:	d1df      	bne.n	2ffe783a <load_auth_image+0x16>
2ffe787a:	4620      	mov	r0, r4
2ffe787c:	b006      	add	sp, #24
2ffe787e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffe7882:	9903      	ldr	r1, [sp, #12]
2ffe7884:	aa02      	add	r2, sp, #8
2ffe7886:	9801      	ldr	r0, [sp, #4]
2ffe7888:	f7fd ff22 	bl	2ffe56d0 <io_open>
2ffe788c:	4604      	mov	r4, r0
2ffe788e:	b118      	cbz	r0, 2ffe7898 <load_auth_image+0x74>
2ffe7890:	4602      	mov	r2, r0
2ffe7892:	4629      	mov	r1, r5
2ffe7894:	4650      	mov	r0, sl
2ffe7896:	e7e5      	b.n	2ffe7864 <load_auth_image+0x40>
2ffe7898:	463a      	mov	r2, r7
2ffe789a:	4629      	mov	r1, r5
2ffe789c:	4640      	mov	r0, r8
2ffe789e:	f000 f869 	bl	2ffe7974 <tf_log>
2ffe78a2:	9802      	ldr	r0, [sp, #8]
2ffe78a4:	a904      	add	r1, sp, #16
2ffe78a6:	f7fd ff83 	bl	2ffe57b0 <io_size>
2ffe78aa:	4604      	mov	r4, r0
2ffe78ac:	b908      	cbnz	r0, 2ffe78b2 <load_auth_image+0x8e>
2ffe78ae:	9a04      	ldr	r2, [sp, #16]
2ffe78b0:	b992      	cbnz	r2, 2ffe78d8 <load_auth_image+0xb4>
2ffe78b2:	4622      	mov	r2, r4
2ffe78b4:	4629      	mov	r1, r5
2ffe78b6:	4648      	mov	r0, r9
2ffe78b8:	f000 f85c 	bl	2ffe7974 <tf_log>
2ffe78bc:	9802      	ldr	r0, [sp, #8]
2ffe78be:	f7fd ffb5 	bl	2ffe582c <io_close>
2ffe78c2:	9801      	ldr	r0, [sp, #4]
2ffe78c4:	f7fd feec 	bl	2ffe56a0 <io_dev_close>
2ffe78c8:	2c00      	cmp	r4, #0
2ffe78ca:	d1cd      	bne.n	2ffe7868 <load_auth_image+0x44>
2ffe78cc:	68f1      	ldr	r1, [r6, #12]
2ffe78ce:	2400      	movs	r4, #0
2ffe78d0:	68b0      	ldr	r0, [r6, #8]
2ffe78d2:	f7fc ede8 	blx	2ffe44a4 <flush_dcache_range>
2ffe78d6:	e7d0      	b.n	2ffe787a <load_auth_image+0x56>
2ffe78d8:	6933      	ldr	r3, [r6, #16]
2ffe78da:	429a      	cmp	r2, r3
2ffe78dc:	d90c      	bls.n	2ffe78f8 <load_auth_image+0xd4>
2ffe78de:	481a      	ldr	r0, [pc, #104]	@ (2ffe7948 <load_auth_image+0x124>)
2ffe78e0:	4629      	mov	r1, r5
2ffe78e2:	f06f 041a 	mvn.w	r4, #26
2ffe78e6:	f000 f845 	bl	2ffe7974 <tf_log>
2ffe78ea:	9802      	ldr	r0, [sp, #8]
2ffe78ec:	f7fd ff9e 	bl	2ffe582c <io_close>
2ffe78f0:	9801      	ldr	r0, [sp, #4]
2ffe78f2:	f7fd fed5 	bl	2ffe56a0 <io_dev_close>
2ffe78f6:	e7b7      	b.n	2ffe7868 <load_auth_image+0x44>
2ffe78f8:	9802      	ldr	r0, [sp, #8]
2ffe78fa:	ab05      	add	r3, sp, #20
2ffe78fc:	60f2      	str	r2, [r6, #12]
2ffe78fe:	4639      	mov	r1, r7
2ffe7900:	f7fd ff70 	bl	2ffe57e4 <io_read>
2ffe7904:	4604      	mov	r4, r0
2ffe7906:	b918      	cbnz	r0, 2ffe7910 <load_auth_image+0xec>
2ffe7908:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
2ffe790c:	429a      	cmp	r2, r3
2ffe790e:	d203      	bcs.n	2ffe7918 <load_auth_image+0xf4>
2ffe7910:	480e      	ldr	r0, [pc, #56]	@ (2ffe794c <load_auth_image+0x128>)
2ffe7912:	4622      	mov	r2, r4
2ffe7914:	4629      	mov	r1, r5
2ffe7916:	e7cf      	b.n	2ffe78b8 <load_auth_image+0x94>
2ffe7918:	443b      	add	r3, r7
2ffe791a:	463a      	mov	r2, r7
2ffe791c:	480c      	ldr	r0, [pc, #48]	@ (2ffe7950 <load_auth_image+0x12c>)
2ffe791e:	4629      	mov	r1, r5
2ffe7920:	f000 f828 	bl	2ffe7974 <tf_log>
2ffe7924:	9802      	ldr	r0, [sp, #8]
2ffe7926:	f7fd ff81 	bl	2ffe582c <io_close>
2ffe792a:	9801      	ldr	r0, [sp, #4]
2ffe792c:	f7fd feb8 	bl	2ffe56a0 <io_dev_close>
2ffe7930:	e7cc      	b.n	2ffe78cc <load_auth_image+0xa8>
2ffe7932:	bf00      	nop
2ffe7934:	2fff28ea 	.word	0x2fff28ea
2ffe7938:	2fff2911 	.word	0x2fff2911
2ffe793c:	2fff177c 	.word	0x2fff177c
2ffe7940:	2fff28d7 	.word	0x2fff28d7
2ffe7944:	2fff174b 	.word	0x2fff174b
2ffe7948:	2fff2948 	.word	0x2fff2948
2ffe794c:	2fff2969 	.word	0x2fff2969
2ffe7950:	2fff298b 	.word	0x2fff298b

2ffe7954 <print_entry_point_info>:
2ffe7954:	b510      	push	{r4, lr}
2ffe7956:	4604      	mov	r4, r0
2ffe7958:	6881      	ldr	r1, [r0, #8]
2ffe795a:	4804      	ldr	r0, [pc, #16]	@ (2ffe796c <print_entry_point_info+0x18>)
2ffe795c:	f000 f80a 	bl	2ffe7974 <tf_log>
2ffe7960:	68e1      	ldr	r1, [r4, #12]
2ffe7962:	4803      	ldr	r0, [pc, #12]	@ (2ffe7970 <print_entry_point_info+0x1c>)
2ffe7964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe7968:	f000 b804 	b.w	2ffe7974 <tf_log>
2ffe796c:	2fff29af 	.word	0x2fff29af
2ffe7970:	2fff29cd 	.word	0x2fff29cd

2ffe7974 <tf_log>:
2ffe7974:	b40f      	push	{r0, r1, r2, r3}
2ffe7976:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe7978:	9d06      	ldr	r5, [sp, #24]
2ffe797a:	7828      	ldrb	r0, [r5, #0]
2ffe797c:	1e43      	subs	r3, r0, #1
2ffe797e:	2b31      	cmp	r3, #49	@ 0x31
2ffe7980:	d903      	bls.n	2ffe798a <tf_log+0x16>
2ffe7982:	2122      	movs	r1, #34	@ 0x22
2ffe7984:	4810      	ldr	r0, [pc, #64]	@ (2ffe79c8 <tf_log+0x54>)
2ffe7986:	f005 ffb5 	bl	2ffed8f4 <__assert>
2ffe798a:	220a      	movs	r2, #10
2ffe798c:	fbb0 f3f2 	udiv	r3, r0, r2
2ffe7990:	fb02 0313 	mls	r3, r2, r3, r0
2ffe7994:	b10b      	cbz	r3, 2ffe799a <tf_log+0x26>
2ffe7996:	2123      	movs	r1, #35	@ 0x23
2ffe7998:	e7f4      	b.n	2ffe7984 <tf_log+0x10>
2ffe799a:	4b0c      	ldr	r3, [pc, #48]	@ (2ffe79cc <tf_log+0x58>)
2ffe799c:	681b      	ldr	r3, [r3, #0]
2ffe799e:	4283      	cmp	r3, r0
2ffe79a0:	d30a      	bcc.n	2ffe79b8 <tf_log+0x44>
2ffe79a2:	f000 f897 	bl	2ffe7ad4 <plat_log_get_prefix>
2ffe79a6:	1e44      	subs	r4, r0, #1
2ffe79a8:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2ffe79ac:	b948      	cbnz	r0, 2ffe79c2 <tf_log+0x4e>
2ffe79ae:	a907      	add	r1, sp, #28
2ffe79b0:	1c68      	adds	r0, r5, #1
2ffe79b2:	9101      	str	r1, [sp, #4]
2ffe79b4:	f005 ffaa 	bl	2ffed90c <vprintf>
2ffe79b8:	b003      	add	sp, #12
2ffe79ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffe79be:	b004      	add	sp, #16
2ffe79c0:	4770      	bx	lr
2ffe79c2:	f006 fb7b 	bl	2ffee0bc <putchar>
2ffe79c6:	e7ef      	b.n	2ffe79a8 <tf_log+0x34>
2ffe79c8:	2fff29db 	.word	0x2fff29db
2ffe79cc:	2fff44b4 	.word	0x2fff44b4

2ffe79d0 <console_is_registered>:
2ffe79d0:	b508      	push	{r3, lr}
2ffe79d2:	b918      	cbnz	r0, 2ffe79dc <console_is_registered+0xc>
2ffe79d4:	4806      	ldr	r0, [pc, #24]	@ (2ffe79f0 <console_is_registered+0x20>)
2ffe79d6:	2136      	movs	r1, #54	@ 0x36
2ffe79d8:	f005 ff8c 	bl	2ffed8f4 <__assert>
2ffe79dc:	4b05      	ldr	r3, [pc, #20]	@ (2ffe79f4 <console_is_registered+0x24>)
2ffe79de:	681b      	ldr	r3, [r3, #0]
2ffe79e0:	b90b      	cbnz	r3, 2ffe79e6 <console_is_registered+0x16>
2ffe79e2:	4618      	mov	r0, r3
2ffe79e4:	bd08      	pop	{r3, pc}
2ffe79e6:	4283      	cmp	r3, r0
2ffe79e8:	d1f9      	bne.n	2ffe79de <console_is_registered+0xe>
2ffe79ea:	2001      	movs	r0, #1
2ffe79ec:	e7fa      	b.n	2ffe79e4 <console_is_registered+0x14>
2ffe79ee:	bf00      	nop
2ffe79f0:	2fff29eb 	.word	0x2fff29eb
2ffe79f4:	2fff5680 	.word	0x2fff5680

2ffe79f8 <console_register>:
2ffe79f8:	4b0b      	ldr	r3, [pc, #44]	@ (2ffe7a28 <console_register+0x30>)
2ffe79fa:	b510      	push	{r4, lr}
2ffe79fc:	4604      	mov	r4, r0
2ffe79fe:	4298      	cmp	r0, r3
2ffe7a00:	d306      	bcc.n	2ffe7a10 <console_register+0x18>
2ffe7a02:	4b0a      	ldr	r3, [pc, #40]	@ (2ffe7a2c <console_register+0x34>)
2ffe7a04:	4298      	cmp	r0, r3
2ffe7a06:	d203      	bcs.n	2ffe7a10 <console_register+0x18>
2ffe7a08:	4809      	ldr	r0, [pc, #36]	@ (2ffe7a30 <console_register+0x38>)
2ffe7a0a:	2116      	movs	r1, #22
2ffe7a0c:	f005 ff72 	bl	2ffed8f4 <__assert>
2ffe7a10:	4620      	mov	r0, r4
2ffe7a12:	f7ff ffdd 	bl	2ffe79d0 <console_is_registered>
2ffe7a16:	2801      	cmp	r0, #1
2ffe7a18:	f04f 0001 	mov.w	r0, #1
2ffe7a1c:	bf1f      	itttt	ne
2ffe7a1e:	4b05      	ldrne	r3, [pc, #20]	@ (2ffe7a34 <console_register+0x3c>)
2ffe7a20:	681a      	ldrne	r2, [r3, #0]
2ffe7a22:	6022      	strne	r2, [r4, #0]
2ffe7a24:	601c      	strne	r4, [r3, #0]
2ffe7a26:	bd10      	pop	{r4, pc}
2ffe7a28:	2fff4800 	.word	0x2fff4800
2ffe7a2c:	2fff5400 	.word	0x2fff5400
2ffe7a30:	2fff29eb 	.word	0x2fff29eb
2ffe7a34:	2fff5680 	.word	0x2fff5680

2ffe7a38 <console_set_scope>:
2ffe7a38:	b508      	push	{r3, lr}
2ffe7a3a:	b918      	cbnz	r0, 2ffe7a44 <console_set_scope+0xc>
2ffe7a3c:	4804      	ldr	r0, [pc, #16]	@ (2ffe7a50 <console_set_scope+0x18>)
2ffe7a3e:	2146      	movs	r1, #70	@ 0x46
2ffe7a40:	f005 ff58 	bl	2ffed8f4 <__assert>
2ffe7a44:	6843      	ldr	r3, [r0, #4]
2ffe7a46:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
2ffe7a4a:	4319      	orrs	r1, r3
2ffe7a4c:	6041      	str	r1, [r0, #4]
2ffe7a4e:	bd08      	pop	{r3, pc}
2ffe7a50:	2fff29eb 	.word	0x2fff29eb

2ffe7a54 <console_putc>:
2ffe7a54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe7a56:	4606      	mov	r6, r0
2ffe7a58:	4b12      	ldr	r3, [pc, #72]	@ (2ffe7aa4 <console_putc+0x50>)
2ffe7a5a:	f06f 057f 	mvn.w	r5, #127	@ 0x7f
2ffe7a5e:	4f12      	ldr	r7, [pc, #72]	@ (2ffe7aa8 <console_putc+0x54>)
2ffe7a60:	681c      	ldr	r4, [r3, #0]
2ffe7a62:	b90c      	cbnz	r4, 2ffe7a68 <console_putc+0x14>
2ffe7a64:	4628      	mov	r0, r5
2ffe7a66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe7a68:	6862      	ldr	r2, [r4, #4]
2ffe7a6a:	783b      	ldrb	r3, [r7, #0]
2ffe7a6c:	4213      	tst	r3, r2
2ffe7a6e:	d00d      	beq.n	2ffe7a8c <console_putc+0x38>
2ffe7a70:	68a3      	ldr	r3, [r4, #8]
2ffe7a72:	b15b      	cbz	r3, 2ffe7a8c <console_putc+0x38>
2ffe7a74:	2e0a      	cmp	r6, #10
2ffe7a76:	d00b      	beq.n	2ffe7a90 <console_putc+0x3c>
2ffe7a78:	68a3      	ldr	r3, [r4, #8]
2ffe7a7a:	4621      	mov	r1, r4
2ffe7a7c:	4630      	mov	r0, r6
2ffe7a7e:	4798      	blx	r3
2ffe7a80:	f115 0f80 	cmn.w	r5, #128	@ 0x80
2ffe7a84:	d00c      	beq.n	2ffe7aa0 <console_putc+0x4c>
2ffe7a86:	4285      	cmp	r5, r0
2ffe7a88:	bfa8      	it	ge
2ffe7a8a:	4605      	movge	r5, r0
2ffe7a8c:	6824      	ldr	r4, [r4, #0]
2ffe7a8e:	e7e8      	b.n	2ffe7a62 <console_putc+0xe>
2ffe7a90:	05d2      	lsls	r2, r2, #23
2ffe7a92:	d5f1      	bpl.n	2ffe7a78 <console_putc+0x24>
2ffe7a94:	4621      	mov	r1, r4
2ffe7a96:	200d      	movs	r0, #13
2ffe7a98:	4798      	blx	r3
2ffe7a9a:	2800      	cmp	r0, #0
2ffe7a9c:	daec      	bge.n	2ffe7a78 <console_putc+0x24>
2ffe7a9e:	e7ef      	b.n	2ffe7a80 <console_putc+0x2c>
2ffe7aa0:	4605      	mov	r5, r0
2ffe7aa2:	e7f3      	b.n	2ffe7a8c <console_putc+0x38>
2ffe7aa4:	2fff5680 	.word	0x2fff5680
2ffe7aa8:	2fff4772 	.word	0x2fff4772

2ffe7aac <console_flush>:
2ffe7aac:	b538      	push	{r3, r4, r5, lr}
2ffe7aae:	4b07      	ldr	r3, [pc, #28]	@ (2ffe7acc <console_flush+0x20>)
2ffe7ab0:	4d07      	ldr	r5, [pc, #28]	@ (2ffe7ad0 <console_flush+0x24>)
2ffe7ab2:	681c      	ldr	r4, [r3, #0]
2ffe7ab4:	b904      	cbnz	r4, 2ffe7ab8 <console_flush+0xc>
2ffe7ab6:	bd38      	pop	{r3, r4, r5, pc}
2ffe7ab8:	782a      	ldrb	r2, [r5, #0]
2ffe7aba:	6863      	ldr	r3, [r4, #4]
2ffe7abc:	421a      	tst	r2, r3
2ffe7abe:	d003      	beq.n	2ffe7ac8 <console_flush+0x1c>
2ffe7ac0:	6923      	ldr	r3, [r4, #16]
2ffe7ac2:	b10b      	cbz	r3, 2ffe7ac8 <console_flush+0x1c>
2ffe7ac4:	4620      	mov	r0, r4
2ffe7ac6:	4798      	blx	r3
2ffe7ac8:	6824      	ldr	r4, [r4, #0]
2ffe7aca:	e7f3      	b.n	2ffe7ab4 <console_flush+0x8>
2ffe7acc:	2fff5680 	.word	0x2fff5680
2ffe7ad0:	2fff4772 	.word	0x2fff4772

2ffe7ad4 <plat_log_get_prefix>:
2ffe7ad4:	2832      	cmp	r0, #50	@ 0x32
2ffe7ad6:	f04f 030a 	mov.w	r3, #10
2ffe7ada:	bf28      	it	cs
2ffe7adc:	2032      	movcs	r0, #50	@ 0x32
2ffe7ade:	280a      	cmp	r0, #10
2ffe7ae0:	bf38      	it	cc
2ffe7ae2:	200a      	movcc	r0, #10
2ffe7ae4:	fbb0 f0f3 	udiv	r0, r0, r3
2ffe7ae8:	4b02      	ldr	r3, [pc, #8]	@ (2ffe7af4 <plat_log_get_prefix+0x20>)
2ffe7aea:	3801      	subs	r0, #1
2ffe7aec:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffe7af0:	4770      	bx	lr
2ffe7af2:	bf00      	nop
2ffe7af4:	2fff002c 	.word	0x2fff002c

2ffe7af8 <read_uuid>:
2ffe7af8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffe7afc:	460e      	mov	r6, r1
2ffe7afe:	4605      	mov	r5, r0
2ffe7b00:	2124      	movs	r1, #36	@ 0x24
2ffe7b02:	4630      	mov	r0, r6
2ffe7b04:	f008 f994 	bl	2ffefe30 <strnlen>
2ffe7b08:	2824      	cmp	r0, #36	@ 0x24
2ffe7b0a:	d006      	beq.n	2ffe7b1a <read_uuid+0x22>
2ffe7b0c:	482a      	ldr	r0, [pc, #168]	@ (2ffe7bb8 <read_uuid+0xc0>)
2ffe7b0e:	f7ff ff31 	bl	2ffe7974 <tf_log>
2ffe7b12:	f06f 0015 	mvn.w	r0, #21
2ffe7b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffe7b1a:	2208      	movs	r2, #8
2ffe7b1c:	4631      	mov	r1, r6
2ffe7b1e:	4628      	mov	r0, r5
2ffe7b20:	f006 fbc2 	bl	2ffee2a8 <read_hex.part.0>
2ffe7b24:	7a37      	ldrb	r7, [r6, #8]
2ffe7b26:	2204      	movs	r2, #4
2ffe7b28:	4682      	mov	sl, r0
2ffe7b2a:	f106 0109 	add.w	r1, r6, #9
2ffe7b2e:	3f2d      	subs	r7, #45	@ 0x2d
2ffe7b30:	eb05 0002 	add.w	r0, r5, r2
2ffe7b34:	bf18      	it	ne
2ffe7b36:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
2ffe7b3a:	f006 fbb5 	bl	2ffee2a8 <read_hex.part.0>
2ffe7b3e:	7b74      	ldrb	r4, [r6, #13]
2ffe7b40:	4681      	mov	r9, r0
2ffe7b42:	2204      	movs	r2, #4
2ffe7b44:	f106 010e 	add.w	r1, r6, #14
2ffe7b48:	3c2d      	subs	r4, #45	@ 0x2d
2ffe7b4a:	f105 0006 	add.w	r0, r5, #6
2ffe7b4e:	bf18      	it	ne
2ffe7b50:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
2ffe7b54:	f006 fba8 	bl	2ffee2a8 <read_hex.part.0>
2ffe7b58:	433c      	orrs	r4, r7
2ffe7b5a:	4680      	mov	r8, r0
2ffe7b5c:	7cb7      	ldrb	r7, [r6, #18]
2ffe7b5e:	2204      	movs	r2, #4
2ffe7b60:	f106 0113 	add.w	r1, r6, #19
2ffe7b64:	f105 0008 	add.w	r0, r5, #8
2ffe7b68:	3f2d      	subs	r7, #45	@ 0x2d
2ffe7b6a:	bf18      	it	ne
2ffe7b6c:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
2ffe7b70:	f006 fb9a 	bl	2ffee2a8 <read_hex.part.0>
2ffe7b74:	4327      	orrs	r7, r4
2ffe7b76:	220c      	movs	r2, #12
2ffe7b78:	7df4      	ldrb	r4, [r6, #23]
2ffe7b7a:	f106 0118 	add.w	r1, r6, #24
2ffe7b7e:	3c2d      	subs	r4, #45	@ 0x2d
2ffe7b80:	bf18      	it	ne
2ffe7b82:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
2ffe7b86:	433c      	orrs	r4, r7
2ffe7b88:	ea44 040a 	orr.w	r4, r4, sl
2ffe7b8c:	ea44 0409 	orr.w	r4, r4, r9
2ffe7b90:	ea44 0408 	orr.w	r4, r4, r8
2ffe7b94:	4304      	orrs	r4, r0
2ffe7b96:	f105 000a 	add.w	r0, r5, #10
2ffe7b9a:	f006 fb85 	bl	2ffee2a8 <read_hex.part.0>
2ffe7b9e:	4304      	orrs	r4, r0
2ffe7ba0:	d508      	bpl.n	2ffe7bb4 <read_uuid+0xbc>
2ffe7ba2:	4806      	ldr	r0, [pc, #24]	@ (2ffe7bbc <read_uuid+0xc4>)
2ffe7ba4:	f7ff fee6 	bl	2ffe7974 <tf_log>
2ffe7ba8:	2210      	movs	r2, #16
2ffe7baa:	2100      	movs	r1, #0
2ffe7bac:	4628      	mov	r0, r5
2ffe7bae:	f008 f817 	bl	2ffefbe0 <memset>
2ffe7bb2:	e7ae      	b.n	2ffe7b12 <read_uuid+0x1a>
2ffe7bb4:	2000      	movs	r0, #0
2ffe7bb6:	e7ae      	b.n	2ffe7b16 <read_uuid+0x1e>
2ffe7bb8:	2fff2a3d 	.word	0x2fff2a3d
2ffe7bbc:	2fff2a58 	.word	0x2fff2a58

2ffe7bc0 <stm32_get_bootinfo_cell.isra.0>:
2ffe7bc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe7bc2:	2300      	movs	r3, #0
2ffe7bc4:	9301      	str	r3, [sp, #4]
2ffe7bc6:	4604      	mov	r4, r0
2ffe7bc8:	a801      	add	r0, sp, #4
2ffe7bca:	460d      	mov	r5, r1
2ffe7bcc:	f001 ff16 	bl	2ffe99fc <fdt_get_address>
2ffe7bd0:	b160      	cbz	r0, 2ffe7bec <stm32_get_bootinfo_cell.isra.0+0x2c>
2ffe7bd2:	4a07      	ldr	r2, [pc, #28]	@ (2ffe7bf0 <stm32_get_bootinfo_cell.isra.0+0x30>)
2ffe7bd4:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe7bd8:	9801      	ldr	r0, [sp, #4]
2ffe7bda:	f007 ffa9 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe7bde:	1e01      	subs	r1, r0, #0
2ffe7be0:	db04      	blt.n	2ffe7bec <stm32_get_bootinfo_cell.isra.0+0x2c>
2ffe7be2:	9801      	ldr	r0, [sp, #4]
2ffe7be4:	462b      	mov	r3, r5
2ffe7be6:	4622      	mov	r2, r4
2ffe7be8:	f001 fa84 	bl	2ffe90f4 <nvmem_get_cell_by_name>
2ffe7bec:	b003      	add	sp, #12
2ffe7bee:	bd30      	pop	{r4, r5, pc}
2ffe7bf0:	2fff2a6d 	.word	0x2fff2a6d

2ffe7bf4 <stm32mp_save_boot_ctx_address>:
2ffe7bf4:	4b0c      	ldr	r3, [pc, #48]	@ (2ffe7c28 <stm32mp_save_boot_ctx_address+0x34>)
2ffe7bf6:	7842      	ldrb	r2, [r0, #1]
2ffe7bf8:	6018      	str	r0, [r3, #0]
2ffe7bfa:	7803      	ldrb	r3, [r0, #0]
2ffe7bfc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe7c00:	4a0a      	ldr	r2, [pc, #40]	@ (2ffe7c2c <stm32mp_save_boot_ctx_address+0x38>)
2ffe7c02:	8013      	strh	r3, [r2, #0]
2ffe7c04:	f890 2049 	ldrb.w	r2, [r0, #73]	@ 0x49
2ffe7c08:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
2ffe7c0c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe7c10:	f890 204a 	ldrb.w	r2, [r0, #74]	@ 0x4a
2ffe7c14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffe7c18:	f890 204b 	ldrb.w	r2, [r0, #75]	@ 0x4b
2ffe7c1c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffe7c20:	4a03      	ldr	r2, [pc, #12]	@ (2ffe7c30 <stm32mp_save_boot_ctx_address+0x3c>)
2ffe7c22:	6013      	str	r3, [r2, #0]
2ffe7c24:	4770      	bx	lr
2ffe7c26:	bf00      	nop
2ffe7c28:	2fff5698 	.word	0x2fff5698
2ffe7c2c:	2fff5ba4 	.word	0x2fff5ba4
2ffe7c30:	2fff5694 	.word	0x2fff5694

2ffe7c34 <stm32mp_get_boot_ctx_address>:
2ffe7c34:	4b01      	ldr	r3, [pc, #4]	@ (2ffe7c3c <stm32mp_get_boot_ctx_address+0x8>)
2ffe7c36:	6818      	ldr	r0, [r3, #0]
2ffe7c38:	4770      	bx	lr
2ffe7c3a:	bf00      	nop
2ffe7c3c:	2fff5698 	.word	0x2fff5698

2ffe7c40 <stm32mp_get_boot_itf_selected>:
2ffe7c40:	4b01      	ldr	r3, [pc, #4]	@ (2ffe7c48 <stm32mp_get_boot_itf_selected+0x8>)
2ffe7c42:	8818      	ldrh	r0, [r3, #0]
2ffe7c44:	4770      	bx	lr
2ffe7c46:	bf00      	nop
2ffe7c48:	2fff5ba4 	.word	0x2fff5ba4

2ffe7c4c <stm32mp_ddrctrl_base>:
2ffe7c4c:	4800      	ldr	r0, [pc, #0]	@ (2ffe7c50 <stm32mp_ddrctrl_base+0x4>)
2ffe7c4e:	4770      	bx	lr
2ffe7c50:	5a003000 	.word	0x5a003000

2ffe7c54 <stm32mp_ddrphyc_base>:
2ffe7c54:	4800      	ldr	r0, [pc, #0]	@ (2ffe7c58 <stm32mp_ddrphyc_base+0x4>)
2ffe7c56:	4770      	bx	lr
2ffe7c58:	5a004000 	.word	0x5a004000

2ffe7c5c <stm32mp_pwr_base>:
2ffe7c5c:	4800      	ldr	r0, [pc, #0]	@ (2ffe7c60 <stm32mp_pwr_base+0x4>)
2ffe7c5e:	4770      	bx	lr
2ffe7c60:	50001000 	.word	0x50001000

2ffe7c64 <stm32mp_pwr_regs_lock>:
2ffe7c64:	b508      	push	{r3, lr}
2ffe7c66:	f006 fb42 	bl	2ffee2ee <stm32mp_lock_available>
2ffe7c6a:	b120      	cbz	r0, 2ffe7c76 <stm32mp_pwr_regs_lock+0x12>
2ffe7c6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe7c70:	4801      	ldr	r0, [pc, #4]	@ (2ffe7c78 <stm32mp_pwr_regs_lock+0x14>)
2ffe7c72:	f00c b8ed 	b.w	2fff3e50 <__spin_lock_from_thumb>
2ffe7c76:	bd08      	pop	{r3, pc}
2ffe7c78:	2fff569c 	.word	0x2fff569c

2ffe7c7c <stm32mp_pwr_regs_unlock>:
2ffe7c7c:	b508      	push	{r3, lr}
2ffe7c7e:	f006 fb36 	bl	2ffee2ee <stm32mp_lock_available>
2ffe7c82:	b120      	cbz	r0, 2ffe7c8e <stm32mp_pwr_regs_unlock+0x12>
2ffe7c84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe7c88:	4801      	ldr	r0, [pc, #4]	@ (2ffe7c90 <stm32mp_pwr_regs_unlock+0x14>)
2ffe7c8a:	f00c b8dd 	b.w	2fff3e48 <__spin_unlock_from_thumb>
2ffe7c8e:	bd08      	pop	{r3, pc}
2ffe7c90:	2fff569c 	.word	0x2fff569c

2ffe7c94 <stm32_get_otp_index>:
2ffe7c94:	b508      	push	{r3, lr}
2ffe7c96:	b918      	cbnz	r0, 2ffe7ca0 <stm32_get_otp_index+0xc>
2ffe7c98:	21af      	movs	r1, #175	@ 0xaf
2ffe7c9a:	4805      	ldr	r0, [pc, #20]	@ (2ffe7cb0 <stm32_get_otp_index+0x1c>)
2ffe7c9c:	f005 fe2a 	bl	2ffed8f4 <__assert>
2ffe7ca0:	b909      	cbnz	r1, 2ffe7ca6 <stm32_get_otp_index+0x12>
2ffe7ca2:	21b0      	movs	r1, #176	@ 0xb0
2ffe7ca4:	e7f9      	b.n	2ffe7c9a <stm32_get_otp_index+0x6>
2ffe7ca6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe7caa:	f002 b80b 	b.w	2ffe9cc4 <dt_find_otp_name>
2ffe7cae:	bf00      	nop
2ffe7cb0:	2fff2a81 	.word	0x2fff2a81

2ffe7cb4 <stm32_get_otp_value_from_idx>:
2ffe7cb4:	b510      	push	{r4, lr}
2ffe7cb6:	4604      	mov	r4, r0
2ffe7cb8:	4608      	mov	r0, r1
2ffe7cba:	b919      	cbnz	r1, 2ffe7cc4 <stm32_get_otp_value_from_idx+0x10>
2ffe7cbc:	4807      	ldr	r0, [pc, #28]	@ (2ffe7cdc <stm32_get_otp_value_from_idx+0x28>)
2ffe7cbe:	21cc      	movs	r1, #204	@ 0xcc
2ffe7cc0:	f005 fe18 	bl	2ffed8f4 <__assert>
2ffe7cc4:	4621      	mov	r1, r4
2ffe7cc6:	f002 fd0d 	bl	2ffea6e4 <bsec_shadow_read_otp>
2ffe7cca:	b128      	cbz	r0, 2ffe7cd8 <stm32_get_otp_value_from_idx+0x24>
2ffe7ccc:	4804      	ldr	r0, [pc, #16]	@ (2ffe7ce0 <stm32_get_otp_value_from_idx+0x2c>)
2ffe7cce:	4621      	mov	r1, r4
2ffe7cd0:	f7ff fe50 	bl	2ffe7974 <tf_log>
2ffe7cd4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe7cd8:	bd10      	pop	{r4, pc}
2ffe7cda:	bf00      	nop
2ffe7cdc:	2fff2a81 	.word	0x2fff2a81
2ffe7ce0:	2fff2aa1 	.word	0x2fff2aa1

2ffe7ce4 <stm32_get_otp_value>:
2ffe7ce4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe7ce6:	460d      	mov	r5, r1
2ffe7ce8:	4604      	mov	r4, r0
2ffe7cea:	b918      	cbnz	r0, 2ffe7cf4 <stm32_get_otp_value+0x10>
2ffe7cec:	21b9      	movs	r1, #185	@ 0xb9
2ffe7cee:	480c      	ldr	r0, [pc, #48]	@ (2ffe7d20 <stm32_get_otp_value+0x3c>)
2ffe7cf0:	f005 fe00 	bl	2ffed8f4 <__assert>
2ffe7cf4:	b909      	cbnz	r1, 2ffe7cfa <stm32_get_otp_value+0x16>
2ffe7cf6:	21ba      	movs	r1, #186	@ 0xba
2ffe7cf8:	e7f9      	b.n	2ffe7cee <stm32_get_otp_value+0xa>
2ffe7cfa:	2200      	movs	r2, #0
2ffe7cfc:	a901      	add	r1, sp, #4
2ffe7cfe:	f7ff ffc9 	bl	2ffe7c94 <stm32_get_otp_index>
2ffe7d02:	b940      	cbnz	r0, 2ffe7d16 <stm32_get_otp_value+0x32>
2ffe7d04:	9801      	ldr	r0, [sp, #4]
2ffe7d06:	4629      	mov	r1, r5
2ffe7d08:	f7ff ffd4 	bl	2ffe7cb4 <stm32_get_otp_value_from_idx>
2ffe7d0c:	b128      	cbz	r0, 2ffe7d1a <stm32_get_otp_value+0x36>
2ffe7d0e:	4805      	ldr	r0, [pc, #20]	@ (2ffe7d24 <stm32_get_otp_value+0x40>)
2ffe7d10:	4621      	mov	r1, r4
2ffe7d12:	f7ff fe2f 	bl	2ffe7974 <tf_log>
2ffe7d16:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe7d1a:	b003      	add	sp, #12
2ffe7d1c:	bd30      	pop	{r4, r5, pc}
2ffe7d1e:	bf00      	nop
2ffe7d20:	2fff2a81 	.word	0x2fff2a81
2ffe7d24:	2fff2abb 	.word	0x2fff2abb

2ffe7d28 <stm32_display_board_info>:
2ffe7d28:	f000 030f 	and.w	r3, r0, #15
2ffe7d2c:	b507      	push	{r0, r1, r2, lr}
2ffe7d2e:	9301      	str	r3, [sp, #4]
2ffe7d30:	f3c0 2303 	ubfx	r3, r0, #8, #4
2ffe7d34:	f3c0 3203 	ubfx	r2, r0, #12, #4
2ffe7d38:	3340      	adds	r3, #64	@ 0x40
2ffe7d3a:	0c01      	lsrs	r1, r0, #16
2ffe7d3c:	9300      	str	r3, [sp, #0]
2ffe7d3e:	f3c0 1303 	ubfx	r3, r0, #4, #4
2ffe7d42:	4803      	ldr	r0, [pc, #12]	@ (2ffe7d50 <stm32_display_board_info+0x28>)
2ffe7d44:	f7ff fe16 	bl	2ffe7974 <tf_log>
2ffe7d48:	b003      	add	sp, #12
2ffe7d4a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe7d4e:	bf00      	nop
2ffe7d50:	2fff2ad1 	.word	0x2fff2ad1

2ffe7d54 <stm32_get_boot_mode_cell>:
2ffe7d54:	b538      	push	{r3, r4, r5, lr}
2ffe7d56:	4604      	mov	r4, r0
2ffe7d58:	4d07      	ldr	r5, [pc, #28]	@ (2ffe7d78 <stm32_get_boot_mode_cell+0x24>)
2ffe7d5a:	782b      	ldrb	r3, [r5, #0]
2ffe7d5c:	b92b      	cbnz	r3, 2ffe7d6a <stm32_get_boot_mode_cell+0x16>
2ffe7d5e:	4907      	ldr	r1, [pc, #28]	@ (2ffe7d7c <stm32_get_boot_mode_cell+0x28>)
2ffe7d60:	4807      	ldr	r0, [pc, #28]	@ (2ffe7d80 <stm32_get_boot_mode_cell+0x2c>)
2ffe7d62:	f7ff ff2d 	bl	2ffe7bc0 <stm32_get_bootinfo_cell.isra.0>
2ffe7d66:	2301      	movs	r3, #1
2ffe7d68:	702b      	strb	r3, [r5, #0]
2ffe7d6a:	4904      	ldr	r1, [pc, #16]	@ (2ffe7d7c <stm32_get_boot_mode_cell+0x28>)
2ffe7d6c:	220c      	movs	r2, #12
2ffe7d6e:	4620      	mov	r0, r4
2ffe7d70:	f007 ff15 	bl	2ffefb9e <memcpy>
2ffe7d74:	2000      	movs	r0, #0
2ffe7d76:	bd38      	pop	{r3, r4, r5, pc}
2ffe7d78:	2fff5c1a 	.word	0x2fff5c1a
2ffe7d7c:	2fff5684 	.word	0x2fff5684
2ffe7d80:	2fff2af6 	.word	0x2fff2af6

2ffe7d84 <stm32_get_boot_interface>:
2ffe7d84:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe7d86:	b085      	sub	sp, #20
2ffe7d88:	4e10      	ldr	r6, [pc, #64]	@ (2ffe7dcc <stm32_get_boot_interface+0x48>)
2ffe7d8a:	2300      	movs	r3, #0
2ffe7d8c:	9301      	str	r3, [sp, #4]
2ffe7d8e:	4605      	mov	r5, r0
2ffe7d90:	6837      	ldr	r7, [r6, #0]
2ffe7d92:	460c      	mov	r4, r1
2ffe7d94:	9302      	str	r3, [sp, #8]
2ffe7d96:	9303      	str	r3, [sp, #12]
2ffe7d98:	9300      	str	r3, [sp, #0]
2ffe7d9a:	b96f      	cbnz	r7, 2ffe7db8 <stm32_get_boot_interface+0x34>
2ffe7d9c:	a801      	add	r0, sp, #4
2ffe7d9e:	f7ff ffd9 	bl	2ffe7d54 <stm32_get_boot_mode_cell>
2ffe7da2:	2204      	movs	r2, #4
2ffe7da4:	463b      	mov	r3, r7
2ffe7da6:	eb0d 0002 	add.w	r0, sp, r2
2ffe7daa:	4669      	mov	r1, sp
2ffe7dac:	f006 fc6d 	bl	2ffee68a <nvmem_cell_read>
2ffe7db0:	9b00      	ldr	r3, [sp, #0]
2ffe7db2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
2ffe7db6:	6033      	str	r3, [r6, #0]
2ffe7db8:	6833      	ldr	r3, [r6, #0]
2ffe7dba:	f3c3 3203 	ubfx	r2, r3, #12, #4
2ffe7dbe:	f3c3 2303 	ubfx	r3, r3, #8, #4
2ffe7dc2:	602a      	str	r2, [r5, #0]
2ffe7dc4:	6023      	str	r3, [r4, #0]
2ffe7dc6:	b005      	add	sp, #20
2ffe7dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe7dca:	bf00      	nop
2ffe7dcc:	2fff5690 	.word	0x2fff5690

2ffe7dd0 <stm32mp_uart_console_setup>:
2ffe7dd0:	b510      	push	{r4, lr}
2ffe7dd2:	b086      	sub	sp, #24
2ffe7dd4:	a802      	add	r0, sp, #8
2ffe7dd6:	f001 fecd 	bl	2ffe9b74 <dt_get_stdout_uart_info>
2ffe7dda:	2800      	cmp	r0, #0
2ffe7ddc:	dc04      	bgt.n	2ffe7de8 <stm32mp_uart_console_setup+0x18>
2ffe7dde:	f06f 0412 	mvn.w	r4, #18
2ffe7de2:	4620      	mov	r0, r4
2ffe7de4:	b006      	add	sp, #24
2ffe7de6:	bd10      	pop	{r4, pc}
2ffe7de8:	9b05      	ldr	r3, [sp, #20]
2ffe7dea:	2b00      	cmp	r3, #0
2ffe7dec:	d0f7      	beq.n	2ffe7dde <stm32mp_uart_console_setup+0xe>
2ffe7dee:	9b03      	ldr	r3, [sp, #12]
2ffe7df0:	9a04      	ldr	r2, [sp, #16]
2ffe7df2:	4313      	orrs	r3, r2
2ffe7df4:	d4f3      	bmi.n	2ffe7dde <stm32mp_uart_console_setup+0xe>
2ffe7df6:	a901      	add	r1, sp, #4
2ffe7df8:	4668      	mov	r0, sp
2ffe7dfa:	f7ff ffc3 	bl	2ffe7d84 <stm32_get_boot_interface>
2ffe7dfe:	9b00      	ldr	r3, [sp, #0]
2ffe7e00:	2b05      	cmp	r3, #5
2ffe7e02:	d011      	beq.n	2ffe7e28 <stm32mp_uart_console_setup+0x58>
2ffe7e04:	f001 fe4e 	bl	2ffe9aa4 <dt_set_stdout_pinctrl>
2ffe7e08:	2800      	cmp	r0, #0
2ffe7e0a:	d1e8      	bne.n	2ffe7dde <stm32mp_uart_console_setup+0xe>
2ffe7e0c:	9803      	ldr	r0, [sp, #12]
2ffe7e0e:	f000 fda7 	bl	2ffe8960 <clk_enable>
2ffe7e12:	9c04      	ldr	r4, [sp, #16]
2ffe7e14:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffe7e18:	4620      	mov	r0, r4
2ffe7e1a:	f003 fed5 	bl	2ffebbc8 <stm32mp_reset_assert>
2ffe7e1e:	b160      	cbz	r0, 2ffe7e3a <stm32mp_uart_console_setup+0x6a>
2ffe7e20:	f7ff fe44 	bl	2ffe7aac <console_flush>
2ffe7e24:	f7fc eb06 	blx	2ffe4434 <do_panic>
2ffe7e28:	9801      	ldr	r0, [sp, #4]
2ffe7e2a:	f002 f8c7 	bl	2ffe9fbc <get_uart_address>
2ffe7e2e:	9b02      	ldr	r3, [sp, #8]
2ffe7e30:	4298      	cmp	r0, r3
2ffe7e32:	d1e7      	bne.n	2ffe7e04 <stm32mp_uart_console_setup+0x34>
2ffe7e34:	f06f 040c 	mvn.w	r4, #12
2ffe7e38:	e7d3      	b.n	2ffe7de2 <stm32mp_uart_console_setup+0x12>
2ffe7e3a:	2002      	movs	r0, #2
2ffe7e3c:	f000 fdf0 	bl	2ffe8a20 <udelay>
2ffe7e40:	4620      	mov	r0, r4
2ffe7e42:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffe7e46:	f003 feef 	bl	2ffebc28 <stm32mp_reset_deassert>
2ffe7e4a:	4604      	mov	r4, r0
2ffe7e4c:	2800      	cmp	r0, #0
2ffe7e4e:	d1e7      	bne.n	2ffe7e20 <stm32mp_uart_console_setup+0x50>
2ffe7e50:	2001      	movs	r0, #1
2ffe7e52:	f006 fb70 	bl	2ffee536 <mdelay>
2ffe7e56:	9803      	ldr	r0, [sp, #12]
2ffe7e58:	f000 fda6 	bl	2ffe89a8 <clk_get_rate>
2ffe7e5c:	4b07      	ldr	r3, [pc, #28]	@ (2ffe7e7c <stm32mp_uart_console_setup+0xac>)
2ffe7e5e:	4601      	mov	r1, r0
2ffe7e60:	9802      	ldr	r0, [sp, #8]
2ffe7e62:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
2ffe7e66:	f7fc ecc2 	blx	2ffe47ec <console_stm32_register>
2ffe7e6a:	2800      	cmp	r0, #0
2ffe7e6c:	d0d8      	beq.n	2ffe7e20 <stm32mp_uart_console_setup+0x50>
2ffe7e6e:	4803      	ldr	r0, [pc, #12]	@ (2ffe7e7c <stm32mp_uart_console_setup+0xac>)
2ffe7e70:	f240 1105 	movw	r1, #261	@ 0x105
2ffe7e74:	f7ff fde0 	bl	2ffe7a38 <console_set_scope>
2ffe7e78:	e7b3      	b.n	2ffe7de2 <stm32mp_uart_console_setup+0x12>
2ffe7e7a:	bf00      	nop
2ffe7e7c:	2fff56a0 	.word	0x2fff56a0

2ffe7e80 <xlat_arch_regime_get_xn_desc>:
2ffe7e80:	2801      	cmp	r0, #1
2ffe7e82:	b508      	push	{r3, lr}
2ffe7e84:	d005      	beq.n	2ffe7e92 <xlat_arch_regime_get_xn_desc+0x12>
2ffe7e86:	2802      	cmp	r0, #2
2ffe7e88:	d007      	beq.n	2ffe7e9a <xlat_arch_regime_get_xn_desc+0x1a>
2ffe7e8a:	4806      	ldr	r0, [pc, #24]	@ (2ffe7ea4 <xlat_arch_regime_get_xn_desc+0x24>)
2ffe7e8c:	2165      	movs	r1, #101	@ 0x65
2ffe7e8e:	f005 fd31 	bl	2ffed8f4 <__assert>
2ffe7e92:	2000      	movs	r0, #0
2ffe7e94:	f44f 01c0 	mov.w	r1, #6291456	@ 0x600000
2ffe7e98:	bd08      	pop	{r3, pc}
2ffe7e9a:	2000      	movs	r0, #0
2ffe7e9c:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
2ffe7ea0:	e7fa      	b.n	2ffe7e98 <xlat_arch_regime_get_xn_desc+0x18>
2ffe7ea2:	bf00      	nop
2ffe7ea4:	2fff2b00 	.word	0x2fff2b00

2ffe7ea8 <xlat_arch_tlbi_va>:
2ffe7ea8:	b508      	push	{r3, lr}
2ffe7eaa:	f3bf 8f4a 	dsb	ishst
2ffe7eae:	f420 607f 	bic.w	r0, r0, #4080	@ 0xff0
2ffe7eb2:	2901      	cmp	r1, #1
2ffe7eb4:	f020 000f 	bic.w	r0, r0, #15
2ffe7eb8:	d102      	bne.n	2ffe7ec0 <xlat_arch_tlbi_va+0x18>
2ffe7eba:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2ffe7ebe:	bd08      	pop	{r3, pc}
2ffe7ec0:	2902      	cmp	r1, #2
2ffe7ec2:	d003      	beq.n	2ffe7ecc <xlat_arch_tlbi_va+0x24>
2ffe7ec4:	4803      	ldr	r0, [pc, #12]	@ (2ffe7ed4 <xlat_arch_tlbi_va+0x2c>)
2ffe7ec6:	2175      	movs	r1, #117	@ 0x75
2ffe7ec8:	f005 fd14 	bl	2ffed8f4 <__assert>
2ffe7ecc:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2ffe7ed0:	e7f5      	b.n	2ffe7ebe <xlat_arch_tlbi_va+0x16>
2ffe7ed2:	bf00      	nop
2ffe7ed4:	2fff2b00 	.word	0x2fff2b00

2ffe7ed8 <xlat_arch_current_el>:
2ffe7ed8:	b508      	push	{r3, lr}
2ffe7eda:	f3ef 8300 	mrs	r3, CPSR
2ffe7ede:	f003 031f 	and.w	r3, r3, #31
2ffe7ee2:	2b1a      	cmp	r3, #26
2ffe7ee4:	d00f      	beq.n	2ffe7f06 <xlat_arch_current_el+0x2e>
2ffe7ee6:	f3ef 8300 	mrs	r3, CPSR
2ffe7eea:	f003 031f 	and.w	r3, r3, #31
2ffe7eee:	2b13      	cmp	r3, #19
2ffe7ef0:	d00b      	beq.n	2ffe7f0a <xlat_arch_current_el+0x32>
2ffe7ef2:	f3ef 8300 	mrs	r3, CPSR
2ffe7ef6:	f003 031f 	and.w	r3, r3, #31
2ffe7efa:	2b16      	cmp	r3, #22
2ffe7efc:	d005      	beq.n	2ffe7f0a <xlat_arch_current_el+0x32>
2ffe7efe:	4804      	ldr	r0, [pc, #16]	@ (2ffe7f10 <xlat_arch_current_el+0x38>)
2ffe7f00:	2199      	movs	r1, #153	@ 0x99
2ffe7f02:	f005 fcf7 	bl	2ffed8f4 <__assert>
2ffe7f06:	2002      	movs	r0, #2
2ffe7f08:	bd08      	pop	{r3, pc}
2ffe7f0a:	2001      	movs	r0, #1
2ffe7f0c:	e7fc      	b.n	2ffe7f08 <xlat_arch_current_el+0x30>
2ffe7f0e:	bf00      	nop
2ffe7f10:	2fff2b00 	.word	0x2fff2b00

2ffe7f14 <is_mmu_enabled_ctx>:
2ffe7f14:	b508      	push	{r3, lr}
2ffe7f16:	6c43      	ldr	r3, [r0, #68]	@ 0x44
2ffe7f18:	2b01      	cmp	r3, #1
2ffe7f1a:	d10c      	bne.n	2ffe7f36 <is_mmu_enabled_ctx+0x22>
2ffe7f1c:	f7ff ffdc 	bl	2ffe7ed8 <xlat_arch_current_el>
2ffe7f20:	2801      	cmp	r0, #1
2ffe7f22:	d003      	beq.n	2ffe7f2c <is_mmu_enabled_ctx+0x18>
2ffe7f24:	214e      	movs	r1, #78	@ 0x4e
2ffe7f26:	480a      	ldr	r0, [pc, #40]	@ (2ffe7f50 <is_mmu_enabled_ctx+0x3c>)
2ffe7f28:	f005 fce4 	bl	2ffed8f4 <__assert>
2ffe7f2c:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffe7f30:	f000 0001 	and.w	r0, r0, #1
2ffe7f34:	bd08      	pop	{r3, pc}
2ffe7f36:	2b02      	cmp	r3, #2
2ffe7f38:	d001      	beq.n	2ffe7f3e <is_mmu_enabled_ctx+0x2a>
2ffe7f3a:	2151      	movs	r1, #81	@ 0x51
2ffe7f3c:	e7f3      	b.n	2ffe7f26 <is_mmu_enabled_ctx+0x12>
2ffe7f3e:	f7ff ffcb 	bl	2ffe7ed8 <xlat_arch_current_el>
2ffe7f42:	2802      	cmp	r0, #2
2ffe7f44:	d001      	beq.n	2ffe7f4a <is_mmu_enabled_ctx+0x36>
2ffe7f46:	2152      	movs	r1, #82	@ 0x52
2ffe7f48:	e7ed      	b.n	2ffe7f26 <is_mmu_enabled_ctx+0x12>
2ffe7f4a:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2ffe7f4e:	e7ef      	b.n	2ffe7f30 <is_mmu_enabled_ctx+0x1c>
2ffe7f50:	2fff2b00 	.word	0x2fff2b00

2ffe7f54 <setup_mmu_cfg>:
2ffe7f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe7f56:	460f      	mov	r7, r1
2ffe7f58:	4616      	mov	r6, r2
2ffe7f5a:	4604      	mov	r4, r0
2ffe7f5c:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
2ffe7f60:	2a01      	cmp	r2, #1
2ffe7f62:	d10f      	bne.n	2ffe7f84 <setup_mmu_cfg+0x30>
2ffe7f64:	f3ef 8200 	mrs	r2, CPSR
2ffe7f68:	f002 021f 	and.w	r2, r2, #31
2ffe7f6c:	2a13      	cmp	r2, #19
2ffe7f6e:	d015      	beq.n	2ffe7f9c <setup_mmu_cfg+0x48>
2ffe7f70:	f3ef 8200 	mrs	r2, CPSR
2ffe7f74:	f002 021f 	and.w	r2, r2, #31
2ffe7f78:	2a16      	cmp	r2, #22
2ffe7f7a:	d00f      	beq.n	2ffe7f9c <setup_mmu_cfg+0x48>
2ffe7f7c:	21c2      	movs	r1, #194	@ 0xc2
2ffe7f7e:	481c      	ldr	r0, [pc, #112]	@ (2ffe7ff0 <setup_mmu_cfg+0x9c>)
2ffe7f80:	f005 fcb8 	bl	2ffed8f4 <__assert>
2ffe7f84:	2a02      	cmp	r2, #2
2ffe7f86:	d001      	beq.n	2ffe7f8c <setup_mmu_cfg+0x38>
2ffe7f88:	21c9      	movs	r1, #201	@ 0xc9
2ffe7f8a:	e7f8      	b.n	2ffe7f7e <setup_mmu_cfg+0x2a>
2ffe7f8c:	f3ef 8200 	mrs	r2, CPSR
2ffe7f90:	f002 021f 	and.w	r2, r2, #31
2ffe7f94:	2a1a      	cmp	r2, #26
2ffe7f96:	d00a      	beq.n	2ffe7fae <setup_mmu_cfg+0x5a>
2ffe7f98:	21ca      	movs	r1, #202	@ 0xca
2ffe7f9a:	e7f0      	b.n	2ffe7f7e <setup_mmu_cfg+0x2a>
2ffe7f9c:	4d15      	ldr	r5, [pc, #84]	@ (2ffe7ff4 <setup_mmu_cfg+0xa0>)
2ffe7f9e:	1c4a      	adds	r2, r1, #1
2ffe7fa0:	d010      	beq.n	2ffe7fc4 <setup_mmu_cfg+0x70>
2ffe7fa2:	1c48      	adds	r0, r1, #1
2ffe7fa4:	f1b0 7f00 	cmp.w	r0, #33554432	@ 0x2000000
2ffe7fa8:	d203      	bcs.n	2ffe7fb2 <setup_mmu_cfg+0x5e>
2ffe7faa:	21dd      	movs	r1, #221	@ 0xdd
2ffe7fac:	e7e7      	b.n	2ffe7f7e <setup_mmu_cfg+0x2a>
2ffe7fae:	4d12      	ldr	r5, [pc, #72]	@ (2ffe7ff8 <setup_mmu_cfg+0xa4>)
2ffe7fb0:	e7f5      	b.n	2ffe7f9e <setup_mmu_cfg+0x4a>
2ffe7fb2:	4001      	ands	r1, r0
2ffe7fb4:	d001      	beq.n	2ffe7fba <setup_mmu_cfg+0x66>
2ffe7fb6:	21df      	movs	r1, #223	@ 0xdf
2ffe7fb8:	e7e1      	b.n	2ffe7f7e <setup_mmu_cfg+0x2a>
2ffe7fba:	f006 f88e 	bl	2ffee0da <__ctzdi2>
2ffe7fbe:	f1c0 0020 	rsb	r0, r0, #32
2ffe7fc2:	4305      	orrs	r5, r0
2ffe7fc4:	07bb      	lsls	r3, r7, #30
2ffe7fc6:	bf58      	it	pl
2ffe7fc8:	f445 5554 	orrpl.w	r5, r5, #13568	@ 0x3500
2ffe7fcc:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2ffe7fd0:	480a      	ldr	r0, [pc, #40]	@ (2ffe7ffc <setup_mmu_cfg+0xa8>)
2ffe7fd2:	f413 4f70 	tst.w	r3, #61440	@ 0xf000
2ffe7fd6:	bf18      	it	ne
2ffe7fd8:	f046 0601 	orrne.w	r6, r6, #1
2ffe7fdc:	2300      	movs	r3, #0
2ffe7fde:	2100      	movs	r1, #0
2ffe7fe0:	e9c4 0100 	strd	r0, r1, [r4]
2ffe7fe4:	e9c4 5302 	strd	r5, r3, [r4, #8]
2ffe7fe8:	e9c4 6304 	strd	r6, r3, [r4, #16]
2ffe7fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe7fee:	bf00      	nop
2ffe7ff0:	2fff2b00 	.word	0x2fff2b00
2ffe7ff4:	80800000 	.word	0x80800000
2ffe7ff8:	80803500 	.word	0x80803500
2ffe7ffc:	004404ff 	.word	0x004404ff

2ffe8000 <mmap_add_region>:
2ffe8000:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffe8002:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffe8006:	9b08      	ldr	r3, [sp, #32]
2ffe8008:	e9cd 0100 	strd	r0, r1, [sp]
2ffe800c:	9304      	str	r3, [sp, #16]
2ffe800e:	4669      	mov	r1, sp
2ffe8010:	4804      	ldr	r0, [pc, #16]	@ (2ffe8024 <mmap_add_region+0x24>)
2ffe8012:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffe8016:	9305      	str	r3, [sp, #20]
2ffe8018:	f000 fa60 	bl	2ffe84dc <mmap_add_region_ctx>
2ffe801c:	b007      	add	sp, #28
2ffe801e:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe8022:	bf00      	nop
2ffe8024:	2fff4000 	.word	0x2fff4000

2ffe8028 <mmap_add>:
2ffe8028:	4601      	mov	r1, r0
2ffe802a:	4801      	ldr	r0, [pc, #4]	@ (2ffe8030 <mmap_add+0x8>)
2ffe802c:	f006 ba75 	b.w	2ffee51a <mmap_add_ctx>
2ffe8030:	2fff4000 	.word	0x2fff4000

2ffe8034 <mmap_add_dynamic_region>:
2ffe8034:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffe8036:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffe803a:	9b08      	ldr	r3, [sp, #32]
2ffe803c:	e9cd 0100 	strd	r0, r1, [sp]
2ffe8040:	9304      	str	r3, [sp, #16]
2ffe8042:	4669      	mov	r1, sp
2ffe8044:	4804      	ldr	r0, [pc, #16]	@ (2ffe8058 <mmap_add_dynamic_region+0x24>)
2ffe8046:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffe804a:	9305      	str	r3, [sp, #20]
2ffe804c:	f000 fabc 	bl	2ffe85c8 <mmap_add_dynamic_region_ctx>
2ffe8050:	b007      	add	sp, #28
2ffe8052:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe8056:	bf00      	nop
2ffe8058:	2fff4000 	.word	0x2fff4000

2ffe805c <mmap_remove_dynamic_region>:
2ffe805c:	460a      	mov	r2, r1
2ffe805e:	4601      	mov	r1, r0
2ffe8060:	4801      	ldr	r0, [pc, #4]	@ (2ffe8068 <mmap_remove_dynamic_region+0xc>)
2ffe8062:	f000 bb5b 	b.w	2ffe871c <mmap_remove_dynamic_region_ctx>
2ffe8066:	bf00      	nop
2ffe8068:	2fff4000 	.word	0x2fff4000

2ffe806c <init_xlat_tables>:
2ffe806c:	b510      	push	{r4, lr}
2ffe806e:	4c0c      	ldr	r4, [pc, #48]	@ (2ffe80a0 <init_xlat_tables+0x34>)
2ffe8070:	6c63      	ldr	r3, [r4, #68]	@ 0x44
2ffe8072:	3301      	adds	r3, #1
2ffe8074:	d003      	beq.n	2ffe807e <init_xlat_tables+0x12>
2ffe8076:	2161      	movs	r1, #97	@ 0x61
2ffe8078:	480a      	ldr	r0, [pc, #40]	@ (2ffe80a4 <init_xlat_tables+0x38>)
2ffe807a:	f005 fc3b 	bl	2ffed8f4 <__assert>
2ffe807e:	f7ff ff2b 	bl	2ffe7ed8 <xlat_arch_current_el>
2ffe8082:	2801      	cmp	r0, #1
2ffe8084:	d005      	beq.n	2ffe8092 <init_xlat_tables+0x26>
2ffe8086:	2802      	cmp	r0, #2
2ffe8088:	d003      	beq.n	2ffe8092 <init_xlat_tables+0x26>
2ffe808a:	2803      	cmp	r0, #3
2ffe808c:	d001      	beq.n	2ffe8092 <init_xlat_tables+0x26>
2ffe808e:	216a      	movs	r1, #106	@ 0x6a
2ffe8090:	e7f2      	b.n	2ffe8078 <init_xlat_tables+0xc>
2ffe8092:	6460      	str	r0, [r4, #68]	@ 0x44
2ffe8094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe8098:	4801      	ldr	r0, [pc, #4]	@ (2ffe80a0 <init_xlat_tables+0x34>)
2ffe809a:	f000 bbc1 	b.w	2ffe8820 <init_xlat_tables_ctx>
2ffe809e:	bf00      	nop
2ffe80a0:	2fff4000 	.word	0x2fff4000
2ffe80a4:	2fff2b2e 	.word	0x2fff2b2e

2ffe80a8 <enable_mmu_svc_mon>:
2ffe80a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffe80aa:	2201      	movs	r2, #1
2ffe80ac:	4b09      	ldr	r3, [pc, #36]	@ (2ffe80d4 <enable_mmu_svc_mon+0x2c>)
2ffe80ae:	4604      	mov	r4, r0
2ffe80b0:	9203      	str	r2, [sp, #12]
2ffe80b2:	689a      	ldr	r2, [r3, #8]
2ffe80b4:	9202      	str	r2, [sp, #8]
2ffe80b6:	e9d3 0100 	ldrd	r0, r1, [r3]
2ffe80ba:	e9cd 0100 	strd	r0, r1, [sp]
2ffe80be:	4806      	ldr	r0, [pc, #24]	@ (2ffe80d8 <enable_mmu_svc_mon+0x30>)
2ffe80c0:	4621      	mov	r1, r4
2ffe80c2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2ffe80c4:	f7ff ff46 	bl	2ffe7f54 <setup_mmu_cfg>
2ffe80c8:	4620      	mov	r0, r4
2ffe80ca:	b004      	add	sp, #16
2ffe80cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe80d0:	f00b beae 	b.w	2fff3e30 <__enable_mmu_direct_svc_mon_from_thumb>
2ffe80d4:	2fff4000 	.word	0x2fff4000
2ffe80d8:	2fff5528 	.word	0x2fff5528

2ffe80dc <xlat_table_get_index>:
2ffe80dc:	4603      	mov	r3, r0
2ffe80de:	b510      	push	{r4, lr}
2ffe80e0:	6984      	ldr	r4, [r0, #24]
2ffe80e2:	2000      	movs	r0, #0
2ffe80e4:	4284      	cmp	r4, r0
2ffe80e6:	dc03      	bgt.n	2ffe80f0 <xlat_table_get_index+0x14>
2ffe80e8:	4805      	ldr	r0, [pc, #20]	@ (2ffe8100 <xlat_table_get_index+0x24>)
2ffe80ea:	2135      	movs	r1, #53	@ 0x35
2ffe80ec:	f005 fc02 	bl	2ffed8f4 <__assert>
2ffe80f0:	695a      	ldr	r2, [r3, #20]
2ffe80f2:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2ffe80f6:	4291      	cmp	r1, r2
2ffe80f8:	d001      	beq.n	2ffe80fe <xlat_table_get_index+0x22>
2ffe80fa:	3001      	adds	r0, #1
2ffe80fc:	e7f2      	b.n	2ffe80e4 <xlat_table_get_index+0x8>
2ffe80fe:	bd10      	pop	{r4, pc}
2ffe8100:	2fff2b57 	.word	0x2fff2b57

2ffe8104 <xlat_tables_unmap_region>:
2ffe8104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8108:	b087      	sub	sp, #28
2ffe810a:	4605      	mov	r5, r0
2ffe810c:	4688      	mov	r8, r1
2ffe810e:	9f11      	ldr	r7, [sp, #68]	@ 0x44
2ffe8110:	9303      	str	r3, [sp, #12]
2ffe8112:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
2ffe8114:	42bb      	cmp	r3, r7
2ffe8116:	d801      	bhi.n	2ffe811c <xlat_tables_unmap_region+0x18>
2ffe8118:	2f03      	cmp	r7, #3
2ffe811a:	d904      	bls.n	2ffe8126 <xlat_tables_unmap_region+0x22>
2ffe811c:	f240 116b 	movw	r1, #363	@ 0x16b
2ffe8120:	4846      	ldr	r0, [pc, #280]	@ (2ffe823c <xlat_tables_unmap_region+0x138>)
2ffe8122:	f005 fbe7 	bl	2ffed8f4 <__assert>
2ffe8126:	e9d1 1302 	ldrd	r1, r3, [r1, #8]
2ffe812a:	2001      	movs	r0, #1
2ffe812c:	440b      	add	r3, r1
2ffe812e:	4291      	cmp	r1, r2
2ffe8130:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
2ffe8134:	9304      	str	r3, [sp, #16]
2ffe8136:	f06f 0308 	mvn.w	r3, #8
2ffe813a:	fb07 f303 	mul.w	r3, r7, r3
2ffe813e:	bf98      	it	ls
2ffe8140:	4616      	movls	r6, r2
2ffe8142:	f103 0327 	add.w	r3, r3, #39	@ 0x27
2ffe8146:	fa00 f003 	lsl.w	r0, r0, r3
2ffe814a:	9002      	str	r0, [sp, #8]
2ffe814c:	bf84      	itt	hi
2ffe814e:	4246      	neghi	r6, r0
2ffe8150:	400e      	andhi	r6, r1
2ffe8152:	1ab4      	subs	r4, r6, r2
2ffe8154:	40dc      	lsrs	r4, r3
2ffe8156:	9b03      	ldr	r3, [sp, #12]
2ffe8158:	eb03 09c4 	add.w	r9, r3, r4, lsl #3
2ffe815c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffe815e:	429c      	cmp	r4, r3
2ffe8160:	d259      	bcs.n	2ffe8216 <xlat_tables_unmap_region+0x112>
2ffe8162:	9b02      	ldr	r3, [sp, #8]
2ffe8164:	e9d8 0202 	ldrd	r0, r2, [r8, #8]
2ffe8168:	eb06 0b03 	add.w	fp, r6, r3
2ffe816c:	4286      	cmp	r6, r0
2ffe816e:	f10b 3cff 	add.w	ip, fp, #4294967295	@ 0xffffffff
2ffe8172:	f8d9 3000 	ldr.w	r3, [r9]
2ffe8176:	4402      	add	r2, r0
2ffe8178:	f003 0103 	and.w	r1, r3, #3
2ffe817c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
2ffe8180:	d30f      	bcc.n	2ffe81a2 <xlat_tables_unmap_region+0x9e>
2ffe8182:	4562      	cmp	r2, ip
2ffe8184:	d30d      	bcc.n	2ffe81a2 <xlat_tables_unmap_region+0x9e>
2ffe8186:	2f03      	cmp	r7, #3
2ffe8188:	f1a1 0203 	sub.w	r2, r1, #3
2ffe818c:	d103      	bne.n	2ffe8196 <xlat_tables_unmap_region+0x92>
2ffe818e:	b3a2      	cbz	r2, 2ffe81fa <xlat_tables_unmap_region+0xf6>
2ffe8190:	f44f 719c 	mov.w	r1, #312	@ 0x138
2ffe8194:	e7c4      	b.n	2ffe8120 <xlat_tables_unmap_region+0x1c>
2ffe8196:	b192      	cbz	r2, 2ffe81be <xlat_tables_unmap_region+0xba>
2ffe8198:	2901      	cmp	r1, #1
2ffe819a:	d02e      	beq.n	2ffe81fa <xlat_tables_unmap_region+0xf6>
2ffe819c:	f240 1147 	movw	r1, #327	@ 0x147
2ffe81a0:	e7be      	b.n	2ffe8120 <xlat_tables_unmap_region+0x1c>
2ffe81a2:	4584      	cmp	ip, r0
2ffe81a4:	d201      	bcs.n	2ffe81aa <xlat_tables_unmap_region+0xa6>
2ffe81a6:	4296      	cmp	r6, r2
2ffe81a8:	d82f      	bhi.n	2ffe820a <xlat_tables_unmap_region+0x106>
2ffe81aa:	2f03      	cmp	r7, #3
2ffe81ac:	d102      	bne.n	2ffe81b4 <xlat_tables_unmap_region+0xb0>
2ffe81ae:	f44f 71ab 	mov.w	r1, #342	@ 0x156
2ffe81b2:	e7b5      	b.n	2ffe8120 <xlat_tables_unmap_region+0x1c>
2ffe81b4:	2903      	cmp	r1, #3
2ffe81b6:	d002      	beq.n	2ffe81be <xlat_tables_unmap_region+0xba>
2ffe81b8:	f240 1157 	movw	r1, #343	@ 0x157
2ffe81bc:	e7b0      	b.n	2ffe8120 <xlat_tables_unmap_region+0x1c>
2ffe81be:	f423 6a7f 	bic.w	sl, r3, #4080	@ 0xff0
2ffe81c2:	1c7a      	adds	r2, r7, #1
2ffe81c4:	f02a 0a0f 	bic.w	sl, sl, #15
2ffe81c8:	4641      	mov	r1, r8
2ffe81ca:	9201      	str	r2, [sp, #4]
2ffe81cc:	f44f 7200 	mov.w	r2, #512	@ 0x200
2ffe81d0:	9200      	str	r2, [sp, #0]
2ffe81d2:	4653      	mov	r3, sl
2ffe81d4:	4632      	mov	r2, r6
2ffe81d6:	4628      	mov	r0, r5
2ffe81d8:	f7ff ff94 	bl	2ffe8104 <xlat_tables_unmap_region>
2ffe81dc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffe81e0:	4650      	mov	r0, sl
2ffe81e2:	f006 f98d 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe81e6:	69ea      	ldr	r2, [r5, #28]
2ffe81e8:	4651      	mov	r1, sl
2ffe81ea:	4628      	mov	r0, r5
2ffe81ec:	9205      	str	r2, [sp, #20]
2ffe81ee:	f7ff ff75 	bl	2ffe80dc <xlat_table_get_index>
2ffe81f2:	9a05      	ldr	r2, [sp, #20]
2ffe81f4:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffe81f8:	b93b      	cbnz	r3, 2ffe820a <xlat_tables_unmap_region+0x106>
2ffe81fa:	6c69      	ldr	r1, [r5, #68]	@ 0x44
2ffe81fc:	2200      	movs	r2, #0
2ffe81fe:	2300      	movs	r3, #0
2ffe8200:	4630      	mov	r0, r6
2ffe8202:	e9c9 2300 	strd	r2, r3, [r9]
2ffe8206:	f7ff fe4f 	bl	2ffe7ea8 <xlat_arch_tlbi_va>
2ffe820a:	9b04      	ldr	r3, [sp, #16]
2ffe820c:	3401      	adds	r4, #1
2ffe820e:	f109 0908 	add.w	r9, r9, #8
2ffe8212:	459b      	cmp	fp, r3
2ffe8214:	d30f      	bcc.n	2ffe8236 <xlat_tables_unmap_region+0x132>
2ffe8216:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
2ffe8218:	42bb      	cmp	r3, r7
2ffe821a:	d209      	bcs.n	2ffe8230 <xlat_tables_unmap_region+0x12c>
2ffe821c:	9903      	ldr	r1, [sp, #12]
2ffe821e:	4628      	mov	r0, r5
2ffe8220:	f7ff ff5c 	bl	2ffe80dc <xlat_table_get_index>
2ffe8224:	69ea      	ldr	r2, [r5, #28]
2ffe8226:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffe822a:	3b01      	subs	r3, #1
2ffe822c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2ffe8230:	b007      	add	sp, #28
2ffe8232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe8236:	465e      	mov	r6, fp
2ffe8238:	e790      	b.n	2ffe815c <xlat_tables_unmap_region+0x58>
2ffe823a:	bf00      	nop
2ffe823c:	2fff2b57 	.word	0x2fff2b57

2ffe8240 <xlat_desc>:
2ffe8240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe8244:	461e      	mov	r6, r3
2ffe8246:	9b06      	ldr	r3, [sp, #24]
2ffe8248:	460d      	mov	r5, r1
2ffe824a:	f06f 0108 	mvn.w	r1, #8
2ffe824e:	4614      	mov	r4, r2
2ffe8250:	4359      	muls	r1, r3
2ffe8252:	2201      	movs	r2, #1
2ffe8254:	4607      	mov	r7, r0
2ffe8256:	3127      	adds	r1, #39	@ 0x27
2ffe8258:	408a      	lsls	r2, r1
2ffe825a:	3a01      	subs	r2, #1
2ffe825c:	4222      	tst	r2, r4
2ffe825e:	d003      	beq.n	2ffe8268 <xlat_desc+0x28>
2ffe8260:	2173      	movs	r1, #115	@ 0x73
2ffe8262:	4827      	ldr	r0, [pc, #156]	@ (2ffe8300 <xlat_desc+0xc0>)
2ffe8264:	f005 fb46 	bl	2ffed8f4 <__assert>
2ffe8268:	2b03      	cmp	r3, #3
2ffe826a:	4628      	mov	r0, r5
2ffe826c:	bf14      	ite	ne
2ffe826e:	f04f 0801 	movne.w	r8, #1
2ffe8272:	f04f 0803 	moveq.w	r8, #3
2ffe8276:	f006 f88c 	bl	2ffee392 <xlat_arch_get_pas>
2ffe827a:	f085 0308 	eor.w	r3, r5, #8
2ffe827e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
2ffe8282:	ea44 14c3 	orr.w	r4, r4, r3, lsl #7
2ffe8286:	ea44 0408 	orr.w	r4, r4, r8
2ffe828a:	4304      	orrs	r4, r0
2ffe828c:	6c78      	ldr	r0, [r7, #68]	@ 0x44
2ffe828e:	2801      	cmp	r0, #1
2ffe8290:	d110      	bne.n	2ffe82b4 <xlat_desc+0x74>
2ffe8292:	062b      	lsls	r3, r5, #24
2ffe8294:	d413      	bmi.n	2ffe82be <xlat_desc+0x7e>
2ffe8296:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
2ffe829a:	f015 0707 	ands.w	r7, r5, #7
2ffe829e:	4631      	mov	r1, r6
2ffe82a0:	d110      	bne.n	2ffe82c4 <xlat_desc+0x84>
2ffe82a2:	f7ff fded 	bl	2ffe7e80 <xlat_arch_regime_get_xn_desc>
2ffe82a6:	4320      	orrs	r0, r4
2ffe82a8:	4331      	orrs	r1, r6
2ffe82aa:	f440 7401 	orr.w	r4, r0, #516	@ 0x204
2ffe82ae:	4620      	mov	r0, r4
2ffe82b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe82b4:	1e83      	subs	r3, r0, #2
2ffe82b6:	2b01      	cmp	r3, #1
2ffe82b8:	d901      	bls.n	2ffe82be <xlat_desc+0x7e>
2ffe82ba:	2198      	movs	r1, #152	@ 0x98
2ffe82bc:	e7d1      	b.n	2ffe8262 <xlat_desc+0x22>
2ffe82be:	f444 6488 	orr.w	r4, r4, #1088	@ 0x440
2ffe82c2:	e7ea      	b.n	2ffe829a <xlat_desc+0x5a>
2ffe82c4:	f015 0f48 	tst.w	r5, #72	@ 0x48
2ffe82c8:	d003      	beq.n	2ffe82d2 <xlat_desc+0x92>
2ffe82ca:	f7ff fdd9 	bl	2ffe7e80 <xlat_arch_regime_get_xn_desc>
2ffe82ce:	4304      	orrs	r4, r0
2ffe82d0:	4331      	orrs	r1, r6
2ffe82d2:	2f02      	cmp	r7, #2
2ffe82d4:	d10c      	bne.n	2ffe82f0 <xlat_desc+0xb0>
2ffe82d6:	f405 7040 	and.w	r0, r5, #768	@ 0x300
2ffe82da:	f5b0 7f40 	cmp.w	r0, #768	@ 0x300
2ffe82de:	d0e6      	beq.n	2ffe82ae <xlat_desc+0x6e>
2ffe82e0:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
2ffe82e4:	bf0c      	ite	eq
2ffe82e6:	f444 7400 	orreq.w	r4, r4, #512	@ 0x200
2ffe82ea:	f444 7440 	orrne.w	r4, r4, #768	@ 0x300
2ffe82ee:	e7de      	b.n	2ffe82ae <xlat_desc+0x6e>
2ffe82f0:	2f01      	cmp	r7, #1
2ffe82f2:	d001      	beq.n	2ffe82f8 <xlat_desc+0xb8>
2ffe82f4:	21e0      	movs	r1, #224	@ 0xe0
2ffe82f6:	e7b4      	b.n	2ffe8262 <xlat_desc+0x22>
2ffe82f8:	f444 7402 	orr.w	r4, r4, #520	@ 0x208
2ffe82fc:	e7d7      	b.n	2ffe82ae <xlat_desc+0x6e>
2ffe82fe:	bf00      	nop
2ffe8300:	2fff2b57 	.word	0x2fff2b57

2ffe8304 <xlat_tables_map_region>:
2ffe8304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8308:	b087      	sub	sp, #28
2ffe830a:	460d      	mov	r5, r1
2ffe830c:	4607      	mov	r7, r0
2ffe830e:	f8dd 8044 	ldr.w	r8, [sp, #68]	@ 0x44
2ffe8312:	4614      	mov	r4, r2
2ffe8314:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
2ffe8316:	461e      	mov	r6, r3
2ffe8318:	4541      	cmp	r1, r8
2ffe831a:	d802      	bhi.n	2ffe8322 <xlat_tables_map_region+0x1e>
2ffe831c:	f1b8 0f03 	cmp.w	r8, #3
2ffe8320:	d904      	bls.n	2ffe832c <xlat_tables_map_region+0x28>
2ffe8322:	f44f 7110 	mov.w	r1, #576	@ 0x240
2ffe8326:	486c      	ldr	r0, [pc, #432]	@ (2ffe84d8 <xlat_tables_map_region+0x1d4>)
2ffe8328:	f005 fae4 	bl	2ffed8f4 <__assert>
2ffe832c:	e9d5 0302 	ldrd	r0, r3, [r5, #8]
2ffe8330:	f06f 0908 	mvn.w	r9, #8
2ffe8334:	f04f 0b01 	mov.w	fp, #1
2ffe8338:	fb09 f908 	mul.w	r9, r9, r8
2ffe833c:	4403      	add	r3, r0
2ffe833e:	4290      	cmp	r0, r2
2ffe8340:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
2ffe8344:	9304      	str	r3, [sp, #16]
2ffe8346:	f109 0327 	add.w	r3, r9, #39	@ 0x27
2ffe834a:	9303      	str	r3, [sp, #12]
2ffe834c:	bf98      	it	ls
2ffe834e:	46a1      	movls	r9, r4
2ffe8350:	fa0b fb03 	lsl.w	fp, fp, r3
2ffe8354:	9b03      	ldr	r3, [sp, #12]
2ffe8356:	bf84      	itt	hi
2ffe8358:	f1cb 0200 	rsbhi	r2, fp, #0
2ffe835c:	ea02 0900 	andhi.w	r9, r2, r0
2ffe8360:	eba9 0404 	sub.w	r4, r9, r4
2ffe8364:	4541      	cmp	r1, r8
2ffe8366:	fa24 f403 	lsr.w	r4, r4, r3
2ffe836a:	d209      	bcs.n	2ffe8380 <xlat_tables_map_region+0x7c>
2ffe836c:	4631      	mov	r1, r6
2ffe836e:	4638      	mov	r0, r7
2ffe8370:	f7ff feb4 	bl	2ffe80dc <xlat_table_get_index>
2ffe8374:	69f9      	ldr	r1, [r7, #28]
2ffe8376:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
2ffe837a:	3301      	adds	r3, #1
2ffe837c:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
2ffe8380:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
2ffe8384:	e069      	b.n	2ffe845a <xlat_tables_map_region+0x156>
2ffe8386:	e9d5 3200 	ldrd	r3, r2, [r5]
2ffe838a:	f8d5 c008 	ldr.w	ip, [r5, #8]
2ffe838e:	68e8      	ldr	r0, [r5, #12]
2ffe8390:	9205      	str	r2, [sp, #20]
2ffe8392:	45cc      	cmp	ip, r9
2ffe8394:	6832      	ldr	r2, [r6, #0]
2ffe8396:	4460      	add	r0, ip
2ffe8398:	eb09 0a0b 	add.w	sl, r9, fp
2ffe839c:	f002 0103 	and.w	r1, r2, #3
2ffe83a0:	f100 30ff 	add.w	r0, r0, #4294967295	@ 0xffffffff
2ffe83a4:	f10a 3eff 	add.w	lr, sl, #4294967295	@ 0xffffffff
2ffe83a8:	d837      	bhi.n	2ffe841a <xlat_tables_map_region+0x116>
2ffe83aa:	4570      	cmp	r0, lr
2ffe83ac:	d335      	bcc.n	2ffe841a <xlat_tables_map_region+0x116>
2ffe83ae:	9805      	ldr	r0, [sp, #20]
2ffe83b0:	ebb3 030c 	subs.w	r3, r3, ip
2ffe83b4:	f160 0c00 	sbc.w	ip, r0, #0
2ffe83b8:	eb13 0009 	adds.w	r0, r3, r9
2ffe83bc:	f14c 0300 	adc.w	r3, ip, #0
2ffe83c0:	f1b8 0f03 	cmp.w	r8, #3
2ffe83c4:	d106      	bne.n	2ffe83d4 <xlat_tables_map_region+0xd0>
2ffe83c6:	2903      	cmp	r1, #3
2ffe83c8:	d041      	beq.n	2ffe844e <xlat_tables_map_region+0x14a>
2ffe83ca:	2900      	cmp	r1, #0
2ffe83cc:	d036      	beq.n	2ffe843c <xlat_tables_map_region+0x138>
2ffe83ce:	f240 11d7 	movw	r1, #471	@ 0x1d7
2ffe83d2:	e7a8      	b.n	2ffe8326 <xlat_tables_map_region+0x22>
2ffe83d4:	2903      	cmp	r1, #3
2ffe83d6:	d064      	beq.n	2ffe84a2 <xlat_tables_map_region+0x19e>
2ffe83d8:	b9d1      	cbnz	r1, 2ffe8410 <xlat_tables_map_region+0x10c>
2ffe83da:	f10b 31ff 	add.w	r1, fp, #4294967295	@ 0xffffffff
2ffe83de:	4201      	tst	r1, r0
2ffe83e0:	d106      	bne.n	2ffe83f0 <xlat_tables_map_region+0xec>
2ffe83e2:	f1b8 0f00 	cmp.w	r8, #0
2ffe83e6:	d003      	beq.n	2ffe83f0 <xlat_tables_map_region+0xec>
2ffe83e8:	6969      	ldr	r1, [r5, #20]
2ffe83ea:	9a03      	ldr	r2, [sp, #12]
2ffe83ec:	40d1      	lsrs	r1, r2
2ffe83ee:	d125      	bne.n	2ffe843c <xlat_tables_map_region+0x138>
2ffe83f0:	69b8      	ldr	r0, [r7, #24]
2ffe83f2:	2300      	movs	r3, #0
2ffe83f4:	4283      	cmp	r3, r0
2ffe83f6:	da07      	bge.n	2ffe8408 <xlat_tables_map_region+0x104>
2ffe83f8:	69f9      	ldr	r1, [r7, #28]
2ffe83fa:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
2ffe83fe:	bb91      	cbnz	r1, 2ffe8466 <xlat_tables_map_region+0x162>
2ffe8400:	6978      	ldr	r0, [r7, #20]
2ffe8402:	eb10 3303 	adds.w	r3, r0, r3, lsl #12
2ffe8406:	d130      	bne.n	2ffe846a <xlat_tables_map_region+0x166>
2ffe8408:	4648      	mov	r0, r9
2ffe840a:	b007      	add	sp, #28
2ffe840c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe8410:	2901      	cmp	r1, #1
2ffe8412:	d01c      	beq.n	2ffe844e <xlat_tables_map_region+0x14a>
2ffe8414:	f44f 71ff 	mov.w	r1, #510	@ 0x1fe
2ffe8418:	e785      	b.n	2ffe8326 <xlat_tables_map_region+0x22>
2ffe841a:	45f4      	cmp	ip, lr
2ffe841c:	d901      	bls.n	2ffe8422 <xlat_tables_map_region+0x11e>
2ffe841e:	4581      	cmp	r9, r0
2ffe8420:	d815      	bhi.n	2ffe844e <xlat_tables_map_region+0x14a>
2ffe8422:	f1b8 0f03 	cmp.w	r8, #3
2ffe8426:	d102      	bne.n	2ffe842e <xlat_tables_map_region+0x12a>
2ffe8428:	f240 2113 	movw	r1, #531	@ 0x213
2ffe842c:	e77b      	b.n	2ffe8326 <xlat_tables_map_region+0x22>
2ffe842e:	2900      	cmp	r1, #0
2ffe8430:	d0de      	beq.n	2ffe83f0 <xlat_tables_map_region+0xec>
2ffe8432:	2903      	cmp	r1, #3
2ffe8434:	d035      	beq.n	2ffe84a2 <xlat_tables_map_region+0x19e>
2ffe8436:	f240 211e 	movw	r1, #542	@ 0x21e
2ffe843a:	e774      	b.n	2ffe8326 <xlat_tables_map_region+0x22>
2ffe843c:	f8cd 8000 	str.w	r8, [sp]
2ffe8440:	4602      	mov	r2, r0
2ffe8442:	6929      	ldr	r1, [r5, #16]
2ffe8444:	4638      	mov	r0, r7
2ffe8446:	f7ff fefb 	bl	2ffe8240 <xlat_desc>
2ffe844a:	e9c6 0100 	strd	r0, r1, [r6]
2ffe844e:	9b04      	ldr	r3, [sp, #16]
2ffe8450:	3401      	adds	r4, #1
2ffe8452:	3608      	adds	r6, #8
2ffe8454:	46d1      	mov	r9, sl
2ffe8456:	4553      	cmp	r3, sl
2ffe8458:	d902      	bls.n	2ffe8460 <xlat_tables_map_region+0x15c>
2ffe845a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffe845c:	429c      	cmp	r4, r3
2ffe845e:	d392      	bcc.n	2ffe8386 <xlat_tables_map_region+0x82>
2ffe8460:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
2ffe8464:	e7d0      	b.n	2ffe8408 <xlat_tables_map_region+0x104>
2ffe8466:	3301      	adds	r3, #1
2ffe8468:	e7c4      	b.n	2ffe83f4 <xlat_tables_map_region+0xf0>
2ffe846a:	9305      	str	r3, [sp, #20]
2ffe846c:	f043 0003 	orr.w	r0, r3, #3
2ffe8470:	e9c6 0100 	strd	r0, r1, [r6]
2ffe8474:	f108 0101 	add.w	r1, r8, #1
2ffe8478:	464a      	mov	r2, r9
2ffe847a:	9101      	str	r1, [sp, #4]
2ffe847c:	f44f 7100 	mov.w	r1, #512	@ 0x200
2ffe8480:	9100      	str	r1, [sp, #0]
2ffe8482:	4638      	mov	r0, r7
2ffe8484:	4629      	mov	r1, r5
2ffe8486:	f7ff ff3d 	bl	2ffe8304 <xlat_tables_map_region>
2ffe848a:	9b05      	ldr	r3, [sp, #20]
2ffe848c:	4681      	mov	r9, r0
2ffe848e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffe8492:	4618      	mov	r0, r3
2ffe8494:	f006 f834 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe8498:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
2ffe849c:	454b      	cmp	r3, r9
2ffe849e:	d0d6      	beq.n	2ffe844e <xlat_tables_map_region+0x14a>
2ffe84a0:	e7b2      	b.n	2ffe8408 <xlat_tables_map_region+0x104>
2ffe84a2:	f422 637f 	bic.w	r3, r2, #4080	@ 0xff0
2ffe84a6:	f108 0101 	add.w	r1, r8, #1
2ffe84aa:	9101      	str	r1, [sp, #4]
2ffe84ac:	f44f 7100 	mov.w	r1, #512	@ 0x200
2ffe84b0:	f023 030f 	bic.w	r3, r3, #15
2ffe84b4:	464a      	mov	r2, r9
2ffe84b6:	9100      	str	r1, [sp, #0]
2ffe84b8:	4638      	mov	r0, r7
2ffe84ba:	9305      	str	r3, [sp, #20]
2ffe84bc:	4629      	mov	r1, r5
2ffe84be:	f7ff ff21 	bl	2ffe8304 <xlat_tables_map_region>
2ffe84c2:	9b05      	ldr	r3, [sp, #20]
2ffe84c4:	4681      	mov	r9, r0
2ffe84c6:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffe84ca:	4618      	mov	r0, r3
2ffe84cc:	f006 f818 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe84d0:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
2ffe84d4:	4599      	cmp	r9, r3
2ffe84d6:	e7e2      	b.n	2ffe849e <xlat_tables_map_region+0x19a>
2ffe84d8:	2fff2b57 	.word	0x2fff2b57

2ffe84dc <mmap_add_region_ctx>:
2ffe84dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe84e0:	4606      	mov	r6, r0
2ffe84e2:	680b      	ldr	r3, [r1, #0]
2ffe84e4:	460d      	mov	r5, r1
2ffe84e6:	e9d1 4902 	ldrd	r4, r9, [r1, #8]
2ffe84ea:	68c7      	ldr	r7, [r0, #12]
2ffe84ec:	f8d0 b010 	ldr.w	fp, [r0, #16]
2ffe84f0:	f8d1 8004 	ldr.w	r8, [r1, #4]
2ffe84f4:	9301      	str	r3, [sp, #4]
2ffe84f6:	f1b9 0f00 	cmp.w	r9, #0
2ffe84fa:	d050      	beq.n	2ffe859e <mmap_add_region_ctx+0xc2>
2ffe84fc:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
2ffe8500:	b123      	cbz	r3, 2ffe850c <mmap_add_region_ctx+0x30>
2ffe8502:	f44f 7145 	mov.w	r1, #788	@ 0x314
2ffe8506:	482e      	ldr	r0, [pc, #184]	@ (2ffe85c0 <mmap_add_region_ctx+0xe4>)
2ffe8508:	f005 f9f4 	bl	2ffed8f4 <__assert>
2ffe850c:	f005 ff66 	bl	2ffee3dc <mmap_add_region_check>
2ffe8510:	4601      	mov	r1, r0
2ffe8512:	b9d0      	cbnz	r0, 2ffe854a <mmap_add_region_ctx+0x6e>
2ffe8514:	eb09 0204 	add.w	r2, r9, r4
2ffe8518:	463c      	mov	r4, r7
2ffe851a:	f102 3aff 	add.w	sl, r2, #4294967295	@ 0xffffffff
2ffe851e:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2ffe8522:	440b      	add	r3, r1
2ffe8524:	3b01      	subs	r3, #1
2ffe8526:	4553      	cmp	r3, sl
2ffe8528:	d200      	bcs.n	2ffe852c <mmap_add_region_ctx+0x50>
2ffe852a:	b9a1      	cbnz	r1, 2ffe8556 <mmap_add_region_ctx+0x7a>
2ffe852c:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2ffe8530:	440b      	add	r3, r1
2ffe8532:	429a      	cmp	r2, r3
2ffe8534:	d011      	beq.n	2ffe855a <mmap_add_region_ctx+0x7e>
2ffe8536:	2318      	movs	r3, #24
2ffe8538:	fb03 7b0b 	mla	fp, r3, fp, r7
2ffe853c:	68fb      	ldr	r3, [r7, #12]
2ffe853e:	b38b      	cbz	r3, 2ffe85a4 <mmap_add_region_ctx+0xc8>
2ffe8540:	455f      	cmp	r7, fp
2ffe8542:	d310      	bcc.n	2ffe8566 <mmap_add_region_ctx+0x8a>
2ffe8544:	f44f 7153 	mov.w	r1, #844	@ 0x34c
2ffe8548:	e7dd      	b.n	2ffe8506 <mmap_add_region_ctx+0x2a>
2ffe854a:	481e      	ldr	r0, [pc, #120]	@ (2ffe85c4 <mmap_add_region_ctx+0xe8>)
2ffe854c:	f7ff fa12 	bl	2ffe7974 <tf_log>
2ffe8550:	f240 3119 	movw	r1, #793	@ 0x319
2ffe8554:	e7d7      	b.n	2ffe8506 <mmap_add_region_ctx+0x2a>
2ffe8556:	3418      	adds	r4, #24
2ffe8558:	e7e1      	b.n	2ffe851e <mmap_add_region_ctx+0x42>
2ffe855a:	2900      	cmp	r1, #0
2ffe855c:	d0eb      	beq.n	2ffe8536 <mmap_add_region_ctx+0x5a>
2ffe855e:	4589      	cmp	r9, r1
2ffe8560:	d9e9      	bls.n	2ffe8536 <mmap_add_region_ctx+0x5a>
2ffe8562:	3418      	adds	r4, #24
2ffe8564:	e7e2      	b.n	2ffe852c <mmap_add_region_ctx+0x50>
2ffe8566:	3718      	adds	r7, #24
2ffe8568:	e7e8      	b.n	2ffe853c <mmap_add_region_ctx+0x60>
2ffe856a:	9b01      	ldr	r3, [sp, #4]
2ffe856c:	3b01      	subs	r3, #1
2ffe856e:	f148 38ff 	adc.w	r8, r8, #4294967295	@ 0xffffffff
2ffe8572:	eb13 0909 	adds.w	r9, r3, r9
2ffe8576:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffe8578:	f148 0700 	adc.w	r7, r8, #0
2ffe857c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffe857e:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	@ 0x30
2ffe8582:	e895 0003 	ldmia.w	r5, {r0, r1}
2ffe8586:	454a      	cmp	r2, r9
2ffe8588:	41bb      	sbcs	r3, r7
2ffe858a:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
2ffe858c:	e884 0003 	stmia.w	r4, {r0, r1}
2ffe8590:	bf38      	it	cc
2ffe8592:	e9c6 970c 	strdcc	r9, r7, [r6, #48]	@ 0x30
2ffe8596:	4553      	cmp	r3, sl
2ffe8598:	d201      	bcs.n	2ffe859e <mmap_add_region_ctx+0xc2>
2ffe859a:	f8c6 a038 	str.w	sl, [r6, #56]	@ 0x38
2ffe859e:	b003      	add	sp, #12
2ffe85a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe85a4:	1b3a      	subs	r2, r7, r4
2ffe85a6:	4621      	mov	r1, r4
2ffe85a8:	f104 0018 	add.w	r0, r4, #24
2ffe85ac:	f007 fb02 	bl	2ffefbb4 <memmove>
2ffe85b0:	f8db 300c 	ldr.w	r3, [fp, #12]
2ffe85b4:	2b00      	cmp	r3, #0
2ffe85b6:	d0d8      	beq.n	2ffe856a <mmap_add_region_ctx+0x8e>
2ffe85b8:	f44f 7156 	mov.w	r1, #856	@ 0x358
2ffe85bc:	e7a3      	b.n	2ffe8506 <mmap_add_region_ctx+0x2a>
2ffe85be:	bf00      	nop
2ffe85c0:	2fff2b57 	.word	0x2fff2b57
2ffe85c4:	2fff2b7d 	.word	0x2fff2b7d

2ffe85c8 <mmap_add_dynamic_region_ctx>:
2ffe85c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe85cc:	b08b      	sub	sp, #44	@ 0x2c
2ffe85ce:	680b      	ldr	r3, [r1, #0]
2ffe85d0:	4604      	mov	r4, r0
2ffe85d2:	e9d1 6902 	ldrd	r6, r9, [r1, #8]
2ffe85d6:	9302      	str	r3, [sp, #8]
2ffe85d8:	460d      	mov	r5, r1
2ffe85da:	684b      	ldr	r3, [r1, #4]
2ffe85dc:	f8d0 a00c 	ldr.w	sl, [r0, #12]
2ffe85e0:	f8d0 b010 	ldr.w	fp, [r0, #16]
2ffe85e4:	9303      	str	r3, [sp, #12]
2ffe85e6:	f1b9 0f00 	cmp.w	r9, #0
2ffe85ea:	f000 8093 	beq.w	2ffe8714 <mmap_add_dynamic_region_ctx+0x14c>
2ffe85ee:	690b      	ldr	r3, [r1, #16]
2ffe85f0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffe85f4:	610b      	str	r3, [r1, #16]
2ffe85f6:	f005 fef1 	bl	2ffee3dc <mmap_add_region_check>
2ffe85fa:	2800      	cmp	r0, #0
2ffe85fc:	d171      	bne.n	2ffe86e2 <mmap_add_dynamic_region_ctx+0x11a>
2ffe85fe:	eb09 0106 	add.w	r1, r9, r6
2ffe8602:	4653      	mov	r3, sl
2ffe8604:	1e4e      	subs	r6, r1, #1
2ffe8606:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2ffe860a:	4698      	mov	r8, r3
2ffe860c:	3318      	adds	r3, #24
2ffe860e:	4402      	add	r2, r0
2ffe8610:	3a01      	subs	r2, #1
2ffe8612:	42b2      	cmp	r2, r6
2ffe8614:	d201      	bcs.n	2ffe861a <mmap_add_dynamic_region_ctx+0x52>
2ffe8616:	2800      	cmp	r0, #0
2ffe8618:	d1f5      	bne.n	2ffe8606 <mmap_add_dynamic_region_ctx+0x3e>
2ffe861a:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2ffe861e:	4647      	mov	r7, r8
2ffe8620:	f108 0818 	add.w	r8, r8, #24
2ffe8624:	4413      	add	r3, r2
2ffe8626:	4299      	cmp	r1, r3
2ffe8628:	d102      	bne.n	2ffe8630 <mmap_add_dynamic_region_ctx+0x68>
2ffe862a:	b10a      	cbz	r2, 2ffe8630 <mmap_add_dynamic_region_ctx+0x68>
2ffe862c:	4591      	cmp	r9, r2
2ffe862e:	d8f4      	bhi.n	2ffe861a <mmap_add_dynamic_region_ctx+0x52>
2ffe8630:	2318      	movs	r3, #24
2ffe8632:	4639      	mov	r1, r7
2ffe8634:	fb03 aa0b 	mla	sl, r3, fp, sl
2ffe8638:	4640      	mov	r0, r8
2ffe863a:	ebaa 0b07 	sub.w	fp, sl, r7
2ffe863e:	465a      	mov	r2, fp
2ffe8640:	f007 fab8 	bl	2ffefbb4 <memmove>
2ffe8644:	f8da a00c 	ldr.w	sl, [sl, #12]
2ffe8648:	f1ba 0f00 	cmp.w	sl, #0
2ffe864c:	d004      	beq.n	2ffe8658 <mmap_add_dynamic_region_ctx+0x90>
2ffe864e:	4832      	ldr	r0, [pc, #200]	@ (2ffe8718 <mmap_add_dynamic_region_ctx+0x150>)
2ffe8650:	f240 31e3 	movw	r1, #995	@ 0x3e3
2ffe8654:	f005 f94e 	bl	2ffed8f4 <__assert>
2ffe8658:	46ae      	mov	lr, r5
2ffe865a:	46bc      	mov	ip, r7
2ffe865c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2ffe8660:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2ffe8664:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
2ffe8668:	e89e 0003 	ldmia.w	lr, {r0, r1}
2ffe866c:	e88c 0003 	stmia.w	ip, {r0, r1}
2ffe8670:	2b00      	cmp	r3, #0
2ffe8672:	d03b      	beq.n	2ffe86ec <mmap_add_dynamic_region_ctx+0x124>
2ffe8674:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffe8676:	4652      	mov	r2, sl
2ffe8678:	4639      	mov	r1, r7
2ffe867a:	4620      	mov	r0, r4
2ffe867c:	9301      	str	r3, [sp, #4]
2ffe867e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffe8680:	9300      	str	r3, [sp, #0]
2ffe8682:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffe8684:	f7ff fe3e 	bl	2ffe8304 <xlat_tables_map_region>
2ffe8688:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffe868a:	4606      	mov	r6, r0
2ffe868c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffe868e:	00c9      	lsls	r1, r1, #3
2ffe8690:	f005 ff36 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe8694:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2ffe8698:	4413      	add	r3, r2
2ffe869a:	3b01      	subs	r3, #1
2ffe869c:	42b3      	cmp	r3, r6
2ffe869e:	d023      	beq.n	2ffe86e8 <mmap_add_dynamic_region_ctx+0x120>
2ffe86a0:	465a      	mov	r2, fp
2ffe86a2:	4641      	mov	r1, r8
2ffe86a4:	4638      	mov	r0, r7
2ffe86a6:	f007 fa85 	bl	2ffefbb4 <memmove>
2ffe86aa:	68ad      	ldr	r5, [r5, #8]
2ffe86ac:	42b5      	cmp	r5, r6
2ffe86ae:	d216      	bcs.n	2ffe86de <mmap_add_dynamic_region_ctx+0x116>
2ffe86b0:	2218      	movs	r2, #24
2ffe86b2:	4651      	mov	r1, sl
2ffe86b4:	a804      	add	r0, sp, #16
2ffe86b6:	f007 fa93 	bl	2ffefbe0 <memset>
2ffe86ba:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffe86bc:	a904      	add	r1, sp, #16
2ffe86be:	9506      	str	r5, [sp, #24]
2ffe86c0:	4620      	mov	r0, r4
2ffe86c2:	9301      	str	r3, [sp, #4]
2ffe86c4:	4652      	mov	r2, sl
2ffe86c6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffe86c8:	1b75      	subs	r5, r6, r5
2ffe86ca:	9300      	str	r3, [sp, #0]
2ffe86cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffe86ce:	9507      	str	r5, [sp, #28]
2ffe86d0:	f7ff fd18 	bl	2ffe8104 <xlat_tables_unmap_region>
2ffe86d4:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffe86d6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffe86d8:	00c9      	lsls	r1, r1, #3
2ffe86da:	f005 ff11 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe86de:	f06f 000b 	mvn.w	r0, #11
2ffe86e2:	b00b      	add	sp, #44	@ 0x2c
2ffe86e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe86e8:	f3bf 8f4a 	dsb	ishst
2ffe86ec:	9b02      	ldr	r3, [sp, #8]
2ffe86ee:	9a03      	ldr	r2, [sp, #12]
2ffe86f0:	e9d4 010c 	ldrd	r0, r1, [r4, #48]	@ 0x30
2ffe86f4:	3b01      	subs	r3, #1
2ffe86f6:	f142 32ff 	adc.w	r2, r2, #4294967295	@ 0xffffffff
2ffe86fa:	eb13 0309 	adds.w	r3, r3, r9
2ffe86fe:	f142 0200 	adc.w	r2, r2, #0
2ffe8702:	4298      	cmp	r0, r3
2ffe8704:	4191      	sbcs	r1, r2
2ffe8706:	bf38      	it	cc
2ffe8708:	e9c4 320c 	strdcc	r3, r2, [r4, #48]	@ 0x30
2ffe870c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2ffe870e:	42b3      	cmp	r3, r6
2ffe8710:	bf38      	it	cc
2ffe8712:	63a6      	strcc	r6, [r4, #56]	@ 0x38
2ffe8714:	2000      	movs	r0, #0
2ffe8716:	e7e4      	b.n	2ffe86e2 <mmap_add_dynamic_region_ctx+0x11a>
2ffe8718:	2fff2b57 	.word	0x2fff2b57

2ffe871c <mmap_remove_dynamic_region_ctx>:
2ffe871c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8720:	2318      	movs	r3, #24
2ffe8722:	68c5      	ldr	r5, [r0, #12]
2ffe8724:	b085      	sub	sp, #20
2ffe8726:	6907      	ldr	r7, [r0, #16]
2ffe8728:	4604      	mov	r4, r0
2ffe872a:	fb03 5707 	mla	r7, r3, r7, r5
2ffe872e:	68fb      	ldr	r3, [r7, #12]
2ffe8730:	b153      	cbz	r3, 2ffe8748 <mmap_remove_dynamic_region_ctx+0x2c>
2ffe8732:	483a      	ldr	r0, [pc, #232]	@ (2ffe881c <mmap_remove_dynamic_region_ctx+0x100>)
2ffe8734:	f240 4147 	movw	r1, #1095	@ 0x447
2ffe8738:	f005 f8dc 	bl	2ffed8f4 <__assert>
2ffe873c:	68a8      	ldr	r0, [r5, #8]
2ffe873e:	4288      	cmp	r0, r1
2ffe8740:	d101      	bne.n	2ffe8746 <mmap_remove_dynamic_region_ctx+0x2a>
2ffe8742:	4293      	cmp	r3, r2
2ffe8744:	d008      	beq.n	2ffe8758 <mmap_remove_dynamic_region_ctx+0x3c>
2ffe8746:	3518      	adds	r5, #24
2ffe8748:	68eb      	ldr	r3, [r5, #12]
2ffe874a:	2b00      	cmp	r3, #0
2ffe874c:	d1f6      	bne.n	2ffe873c <mmap_remove_dynamic_region_ctx+0x20>
2ffe874e:	f06f 0015 	mvn.w	r0, #21
2ffe8752:	b005      	add	sp, #20
2ffe8754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe8758:	692b      	ldr	r3, [r5, #16]
2ffe875a:	2b00      	cmp	r3, #0
2ffe875c:	da5b      	bge.n	2ffe8816 <mmap_remove_dynamic_region_ctx+0xfa>
2ffe875e:	e9d5 3600 	ldrd	r3, r6, [r5]
2ffe8762:	f8d4 b038 	ldr.w	fp, [r4, #56]	@ 0x38
2ffe8766:	f102 38ff 	add.w	r8, r2, #4294967295	@ 0xffffffff
2ffe876a:	18d2      	adds	r2, r2, r3
2ffe876c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffe876e:	f146 0600 	adc.w	r6, r6, #0
2ffe8772:	f112 39ff 	adds.w	r9, r2, #4294967295	@ 0xffffffff
2ffe8776:	9303      	str	r3, [sp, #12]
2ffe8778:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
2ffe877c:	4488      	add	r8, r1
2ffe877e:	f146 36ff 	adc.w	r6, r6, #4294967295	@ 0xffffffff
2ffe8782:	f8d4 a034 	ldr.w	sl, [r4, #52]	@ 0x34
2ffe8786:	b183      	cbz	r3, 2ffe87aa <mmap_remove_dynamic_region_ctx+0x8e>
2ffe8788:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffe878a:	2200      	movs	r2, #0
2ffe878c:	4629      	mov	r1, r5
2ffe878e:	4620      	mov	r0, r4
2ffe8790:	9301      	str	r3, [sp, #4]
2ffe8792:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffe8794:	9300      	str	r3, [sp, #0]
2ffe8796:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffe8798:	f7ff fcb4 	bl	2ffe8104 <xlat_tables_unmap_region>
2ffe879c:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffe879e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffe87a0:	00c9      	lsls	r1, r1, #3
2ffe87a2:	f005 fead 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe87a6:	f005 fe11 	bl	2ffee3cc <xlat_arch_tlbi_va_sync>
2ffe87aa:	1b7a      	subs	r2, r7, r5
2ffe87ac:	f105 0118 	add.w	r1, r5, #24
2ffe87b0:	4628      	mov	r0, r5
2ffe87b2:	f007 f9ff 	bl	2ffefbb4 <memmove>
2ffe87b6:	45d8      	cmp	r8, fp
2ffe87b8:	d00e      	beq.n	2ffe87d8 <mmap_remove_dynamic_region_ctx+0xbc>
2ffe87ba:	9b03      	ldr	r3, [sp, #12]
2ffe87bc:	4556      	cmp	r6, sl
2ffe87be:	bf08      	it	eq
2ffe87c0:	4599      	cmpeq	r9, r3
2ffe87c2:	d107      	bne.n	2ffe87d4 <mmap_remove_dynamic_region_ctx+0xb8>
2ffe87c4:	2200      	movs	r2, #0
2ffe87c6:	2300      	movs	r3, #0
2ffe87c8:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
2ffe87cc:	68e2      	ldr	r2, [r4, #12]
2ffe87ce:	68d0      	ldr	r0, [r2, #12]
2ffe87d0:	3218      	adds	r2, #24
2ffe87d2:	b980      	cbnz	r0, 2ffe87f6 <mmap_remove_dynamic_region_ctx+0xda>
2ffe87d4:	2000      	movs	r0, #0
2ffe87d6:	e7bc      	b.n	2ffe8752 <mmap_remove_dynamic_region_ctx+0x36>
2ffe87d8:	68e2      	ldr	r2, [r4, #12]
2ffe87da:	2300      	movs	r3, #0
2ffe87dc:	63a3      	str	r3, [r4, #56]	@ 0x38
2ffe87de:	68d3      	ldr	r3, [r2, #12]
2ffe87e0:	2b00      	cmp	r3, #0
2ffe87e2:	d0ea      	beq.n	2ffe87ba <mmap_remove_dynamic_region_ctx+0x9e>
2ffe87e4:	6891      	ldr	r1, [r2, #8]
2ffe87e6:	3218      	adds	r2, #24
2ffe87e8:	440b      	add	r3, r1
2ffe87ea:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
2ffe87ec:	3b01      	subs	r3, #1
2ffe87ee:	428b      	cmp	r3, r1
2ffe87f0:	bf88      	it	hi
2ffe87f2:	63a3      	strhi	r3, [r4, #56]	@ 0x38
2ffe87f4:	e7f3      	b.n	2ffe87de <mmap_remove_dynamic_region_ctx+0xc2>
2ffe87f6:	e952 3106 	ldrd	r3, r1, [r2, #-24]
2ffe87fa:	3b01      	subs	r3, #1
2ffe87fc:	f141 31ff 	adc.w	r1, r1, #4294967295	@ 0xffffffff
2ffe8800:	181b      	adds	r3, r3, r0
2ffe8802:	e9d4 500c 	ldrd	r5, r0, [r4, #48]	@ 0x30
2ffe8806:	f141 0100 	adc.w	r1, r1, #0
2ffe880a:	429d      	cmp	r5, r3
2ffe880c:	4188      	sbcs	r0, r1
2ffe880e:	bf38      	it	cc
2ffe8810:	e9c4 310c 	strdcc	r3, r1, [r4, #48]	@ 0x30
2ffe8814:	e7db      	b.n	2ffe87ce <mmap_remove_dynamic_region_ctx+0xb2>
2ffe8816:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe881a:	e79a      	b.n	2ffe8752 <mmap_remove_dynamic_region_ctx+0x36>
2ffe881c:	2fff2b57 	.word	0x2fff2b57

2ffe8820 <init_xlat_tables_ctx>:
2ffe8820:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe8822:	4604      	mov	r4, r0
2ffe8824:	b920      	cbnz	r0, 2ffe8830 <init_xlat_tables_ctx+0x10>
2ffe8826:	f240 41a6 	movw	r1, #1190	@ 0x4a6
2ffe882a:	484b      	ldr	r0, [pc, #300]	@ (2ffe8958 <init_xlat_tables_ctx+0x138>)
2ffe882c:	f005 f862 	bl	2ffed8f4 <__assert>
2ffe8830:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
2ffe8834:	b113      	cbz	r3, 2ffe883c <init_xlat_tables_ctx+0x1c>
2ffe8836:	f240 41a7 	movw	r1, #1191	@ 0x4a7
2ffe883a:	e7f6      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe883c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
2ffe883e:	3b01      	subs	r3, #1
2ffe8840:	2b02      	cmp	r3, #2
2ffe8842:	d902      	bls.n	2ffe884a <init_xlat_tables_ctx+0x2a>
2ffe8844:	f44f 6195 	mov.w	r1, #1192	@ 0x4a8
2ffe8848:	e7ef      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe884a:	f7ff fb63 	bl	2ffe7f14 <is_mmu_enabled_ctx>
2ffe884e:	b110      	cbz	r0, 2ffe8856 <init_xlat_tables_ctx+0x36>
2ffe8850:	f240 41ab 	movw	r1, #1195	@ 0x4ab
2ffe8854:	e7e9      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe8856:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2ffe885a:	f005 fda6 	bl	2ffee3aa <xlat_get_min_virt_addr_space_size>
2ffe885e:	3801      	subs	r0, #1
2ffe8860:	4286      	cmp	r6, r0
2ffe8862:	d202      	bcs.n	2ffe886a <init_xlat_tables_ctx+0x4a>
2ffe8864:	f240 41af 	movw	r1, #1199	@ 0x4af
2ffe8868:	e7df      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe886a:	68a3      	ldr	r3, [r4, #8]
2ffe886c:	1c5e      	adds	r6, r3, #1
2ffe886e:	401e      	ands	r6, r3
2ffe8870:	d002      	beq.n	2ffe8878 <init_xlat_tables_ctx+0x58>
2ffe8872:	f240 41b2 	movw	r1, #1202	@ 0x4b2
2ffe8876:	e7d8      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe8878:	4628      	mov	r0, r5
2ffe887a:	f005 fe5a 	bl	2ffee532 <xlat_mmap_print>
2ffe887e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
2ffe8880:	2000      	movs	r0, #0
2ffe8882:	2100      	movs	r1, #0
2ffe8884:	42b2      	cmp	r2, r6
2ffe8886:	d112      	bne.n	2ffe88ae <init_xlat_tables_ctx+0x8e>
2ffe8888:	2300      	movs	r3, #0
2ffe888a:	2000      	movs	r0, #0
2ffe888c:	461f      	mov	r7, r3
2ffe888e:	2100      	movs	r1, #0
2ffe8890:	69a2      	ldr	r2, [r4, #24]
2ffe8892:	429a      	cmp	r2, r3
2ffe8894:	dc12      	bgt.n	2ffe88bc <init_xlat_tables_ctx+0x9c>
2ffe8896:	68eb      	ldr	r3, [r5, #12]
2ffe8898:	bb03      	cbnz	r3, 2ffe88dc <init_xlat_tables_ctx+0xbc>
2ffe889a:	e9d4 6500 	ldrd	r6, r5, [r4]
2ffe889e:	f005 fd80 	bl	2ffee3a2 <xlat_arch_get_max_supported_pa>
2ffe88a2:	42b0      	cmp	r0, r6
2ffe88a4:	41a9      	sbcs	r1, r5
2ffe88a6:	d23d      	bcs.n	2ffe8924 <init_xlat_tables_ctx+0x104>
2ffe88a8:	f240 41d5 	movw	r1, #1237	@ 0x4d5
2ffe88ac:	e7bd      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe88ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffe88b0:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2ffe88b4:	3601      	adds	r6, #1
2ffe88b6:	e9c3 0100 	strd	r0, r1, [r3]
2ffe88ba:	e7e3      	b.n	2ffe8884 <init_xlat_tables_ctx+0x64>
2ffe88bc:	69e2      	ldr	r2, [r4, #28]
2ffe88be:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2ffe88c2:	6962      	ldr	r2, [r4, #20]
2ffe88c4:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2ffe88c8:	f1a2 0608 	sub.w	r6, r2, #8
2ffe88cc:	f602 72f8 	addw	r2, r2, #4088	@ 0xff8
2ffe88d0:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2ffe88d4:	4296      	cmp	r6, r2
2ffe88d6:	d1fb      	bne.n	2ffe88d0 <init_xlat_tables_ctx+0xb0>
2ffe88d8:	3301      	adds	r3, #1
2ffe88da:	e7d9      	b.n	2ffe8890 <init_xlat_tables_ctx+0x70>
2ffe88dc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffe88de:	2200      	movs	r2, #0
2ffe88e0:	4629      	mov	r1, r5
2ffe88e2:	4620      	mov	r0, r4
2ffe88e4:	9301      	str	r3, [sp, #4]
2ffe88e6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffe88e8:	9300      	str	r3, [sp, #0]
2ffe88ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffe88ec:	f7ff fd0a 	bl	2ffe8304 <xlat_tables_map_region>
2ffe88f0:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffe88f2:	4606      	mov	r6, r0
2ffe88f4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffe88f6:	00c9      	lsls	r1, r1, #3
2ffe88f8:	f005 fe02 	bl	2ffee500 <xlat_clean_dcache_range>
2ffe88fc:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2ffe8900:	188b      	adds	r3, r1, r2
2ffe8902:	3b01      	subs	r3, #1
2ffe8904:	42b3      	cmp	r3, r6
2ffe8906:	d00b      	beq.n	2ffe8920 <init_xlat_tables_ctx+0x100>
2ffe8908:	692b      	ldr	r3, [r5, #16]
2ffe890a:	4814      	ldr	r0, [pc, #80]	@ (2ffe895c <init_xlat_tables_ctx+0x13c>)
2ffe890c:	e9cd 2300 	strd	r2, r3, [sp]
2ffe8910:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffe8914:	f7ff f82e 	bl	2ffe7974 <tf_log>
2ffe8918:	f7ff f8c8 	bl	2ffe7aac <console_flush>
2ffe891c:	f7fb ed8a 	blx	2ffe4434 <do_panic>
2ffe8920:	3518      	adds	r5, #24
2ffe8922:	e7b8      	b.n	2ffe8896 <init_xlat_tables_ctx+0x76>
2ffe8924:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
2ffe8926:	68a3      	ldr	r3, [r4, #8]
2ffe8928:	429a      	cmp	r2, r3
2ffe892a:	d902      	bls.n	2ffe8932 <init_xlat_tables_ctx+0x112>
2ffe892c:	f240 41d6 	movw	r1, #1238	@ 0x4d6
2ffe8930:	e77b      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe8932:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	@ 0x30
2ffe8936:	e9d4 0300 	ldrd	r0, r3, [r4]
2ffe893a:	4288      	cmp	r0, r1
2ffe893c:	4193      	sbcs	r3, r2
2ffe893e:	d202      	bcs.n	2ffe8946 <init_xlat_tables_ctx+0x126>
2ffe8940:	f240 41d7 	movw	r1, #1239	@ 0x4d7
2ffe8944:	e771      	b.n	2ffe882a <init_xlat_tables_ctx+0xa>
2ffe8946:	2301      	movs	r3, #1
2ffe8948:	4620      	mov	r0, r4
2ffe894a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
2ffe894e:	b003      	add	sp, #12
2ffe8950:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffe8954:	f005 bdee 	b.w	2ffee534 <xlat_tables_print>
2ffe8958:	2fff2b57 	.word	0x2fff2b57
2ffe895c:	2fff2ba8 	.word	0x2fff2ba8

2ffe8960 <clk_enable>:
2ffe8960:	4b06      	ldr	r3, [pc, #24]	@ (2ffe897c <clk_enable+0x1c>)
2ffe8962:	b510      	push	{r4, lr}
2ffe8964:	681b      	ldr	r3, [r3, #0]
2ffe8966:	b10b      	cbz	r3, 2ffe896c <clk_enable+0xc>
2ffe8968:	681b      	ldr	r3, [r3, #0]
2ffe896a:	b91b      	cbnz	r3, 2ffe8974 <clk_enable+0x14>
2ffe896c:	4804      	ldr	r0, [pc, #16]	@ (2ffe8980 <clk_enable+0x20>)
2ffe896e:	2112      	movs	r1, #18
2ffe8970:	f004 ffc0 	bl	2ffed8f4 <__assert>
2ffe8974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe8978:	4718      	bx	r3
2ffe897a:	bf00      	nop
2ffe897c:	2fff56c0 	.word	0x2fff56c0
2ffe8980:	2fff2bf7 	.word	0x2fff2bf7

2ffe8984 <clk_disable>:
2ffe8984:	4b06      	ldr	r3, [pc, #24]	@ (2ffe89a0 <clk_disable+0x1c>)
2ffe8986:	b510      	push	{r4, lr}
2ffe8988:	681b      	ldr	r3, [r3, #0]
2ffe898a:	b10b      	cbz	r3, 2ffe8990 <clk_disable+0xc>
2ffe898c:	685b      	ldr	r3, [r3, #4]
2ffe898e:	b91b      	cbnz	r3, 2ffe8998 <clk_disable+0x14>
2ffe8990:	4804      	ldr	r0, [pc, #16]	@ (2ffe89a4 <clk_disable+0x20>)
2ffe8992:	2119      	movs	r1, #25
2ffe8994:	f004 ffae 	bl	2ffed8f4 <__assert>
2ffe8998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe899c:	4718      	bx	r3
2ffe899e:	bf00      	nop
2ffe89a0:	2fff56c0 	.word	0x2fff56c0
2ffe89a4:	2fff2bf7 	.word	0x2fff2bf7

2ffe89a8 <clk_get_rate>:
2ffe89a8:	4b06      	ldr	r3, [pc, #24]	@ (2ffe89c4 <clk_get_rate+0x1c>)
2ffe89aa:	b510      	push	{r4, lr}
2ffe89ac:	681b      	ldr	r3, [r3, #0]
2ffe89ae:	b10b      	cbz	r3, 2ffe89b4 <clk_get_rate+0xc>
2ffe89b0:	689b      	ldr	r3, [r3, #8]
2ffe89b2:	b91b      	cbnz	r3, 2ffe89bc <clk_get_rate+0x14>
2ffe89b4:	4804      	ldr	r0, [pc, #16]	@ (2ffe89c8 <clk_get_rate+0x20>)
2ffe89b6:	2120      	movs	r1, #32
2ffe89b8:	f004 ff9c 	bl	2ffed8f4 <__assert>
2ffe89bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe89c0:	4718      	bx	r3
2ffe89c2:	bf00      	nop
2ffe89c4:	2fff56c0 	.word	0x2fff56c0
2ffe89c8:	2fff2bf7 	.word	0x2fff2bf7

2ffe89cc <clk_is_enabled>:
2ffe89cc:	4b06      	ldr	r3, [pc, #24]	@ (2ffe89e8 <clk_is_enabled+0x1c>)
2ffe89ce:	b510      	push	{r4, lr}
2ffe89d0:	681b      	ldr	r3, [r3, #0]
2ffe89d2:	b10b      	cbz	r3, 2ffe89d8 <clk_is_enabled+0xc>
2ffe89d4:	691b      	ldr	r3, [r3, #16]
2ffe89d6:	b91b      	cbnz	r3, 2ffe89e0 <clk_is_enabled+0x14>
2ffe89d8:	4804      	ldr	r0, [pc, #16]	@ (2ffe89ec <clk_is_enabled+0x20>)
2ffe89da:	212e      	movs	r1, #46	@ 0x2e
2ffe89dc:	f004 ff8a 	bl	2ffed8f4 <__assert>
2ffe89e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe89e4:	4718      	bx	r3
2ffe89e6:	bf00      	nop
2ffe89e8:	2fff56c0 	.word	0x2fff56c0
2ffe89ec:	2fff2bf7 	.word	0x2fff2bf7

2ffe89f0 <clk_register>:
2ffe89f0:	b508      	push	{r3, lr}
2ffe89f2:	b148      	cbz	r0, 2ffe8a08 <clk_register+0x18>
2ffe89f4:	6803      	ldr	r3, [r0, #0]
2ffe89f6:	b13b      	cbz	r3, 2ffe8a08 <clk_register+0x18>
2ffe89f8:	6843      	ldr	r3, [r0, #4]
2ffe89fa:	b12b      	cbz	r3, 2ffe8a08 <clk_register+0x18>
2ffe89fc:	6883      	ldr	r3, [r0, #8]
2ffe89fe:	b11b      	cbz	r3, 2ffe8a08 <clk_register+0x18>
2ffe8a00:	68c3      	ldr	r3, [r0, #12]
2ffe8a02:	b10b      	cbz	r3, 2ffe8a08 <clk_register+0x18>
2ffe8a04:	6903      	ldr	r3, [r0, #16]
2ffe8a06:	b91b      	cbnz	r3, 2ffe8a10 <clk_register+0x20>
2ffe8a08:	4803      	ldr	r0, [pc, #12]	@ (2ffe8a18 <clk_register+0x28>)
2ffe8a0a:	2139      	movs	r1, #57	@ 0x39
2ffe8a0c:	f004 ff72 	bl	2ffed8f4 <__assert>
2ffe8a10:	4b02      	ldr	r3, [pc, #8]	@ (2ffe8a1c <clk_register+0x2c>)
2ffe8a12:	6018      	str	r0, [r3, #0]
2ffe8a14:	bd08      	pop	{r3, pc}
2ffe8a16:	bf00      	nop
2ffe8a18:	2fff2bf7 	.word	0x2fff2bf7
2ffe8a1c:	2fff56c0 	.word	0x2fff56c0

2ffe8a20 <udelay>:
2ffe8a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe8a24:	4604      	mov	r4, r0
2ffe8a26:	4f18      	ldr	r7, [pc, #96]	@ (2ffe8a88 <udelay+0x68>)
2ffe8a28:	683b      	ldr	r3, [r7, #0]
2ffe8a2a:	b12b      	cbz	r3, 2ffe8a38 <udelay+0x18>
2ffe8a2c:	685a      	ldr	r2, [r3, #4]
2ffe8a2e:	b11a      	cbz	r2, 2ffe8a38 <udelay+0x18>
2ffe8a30:	689a      	ldr	r2, [r3, #8]
2ffe8a32:	b10a      	cbz	r2, 2ffe8a38 <udelay+0x18>
2ffe8a34:	681b      	ldr	r3, [r3, #0]
2ffe8a36:	b91b      	cbnz	r3, 2ffe8a40 <udelay+0x20>
2ffe8a38:	2119      	movs	r1, #25
2ffe8a3a:	4814      	ldr	r0, [pc, #80]	@ (2ffe8a8c <udelay+0x6c>)
2ffe8a3c:	f004 ff5a 	bl	2ffed8f4 <__assert>
2ffe8a40:	2600      	movs	r6, #0
2ffe8a42:	4798      	blx	r3
2ffe8a44:	683b      	ldr	r3, [r7, #0]
2ffe8a46:	4680      	mov	r8, r0
2ffe8a48:	685a      	ldr	r2, [r3, #4]
2ffe8a4a:	689d      	ldr	r5, [r3, #8]
2ffe8a4c:	4633      	mov	r3, r6
2ffe8a4e:	1e50      	subs	r0, r2, #1
2ffe8a50:	f146 31ff 	adc.w	r1, r6, #4294967295	@ 0xffffffff
2ffe8a54:	fbe4 0105 	umlal	r0, r1, r4, r5
2ffe8a58:	f004 ede8 	blx	2ffed62c <__aeabi_uldivmod>
2ffe8a5c:	1c44      	adds	r4, r0, #1
2ffe8a5e:	f46f 737a 	mvn.w	r3, #1000	@ 0x3e8
2ffe8a62:	f141 0500 	adc.w	r5, r1, #0
2ffe8a66:	429c      	cmp	r4, r3
2ffe8a68:	f175 0300 	sbcs.w	r3, r5, #0
2ffe8a6c:	d301      	bcc.n	2ffe8a72 <udelay+0x52>
2ffe8a6e:	212f      	movs	r1, #47	@ 0x2f
2ffe8a70:	e7e3      	b.n	2ffe8a3a <udelay+0x1a>
2ffe8a72:	683b      	ldr	r3, [r7, #0]
2ffe8a74:	681b      	ldr	r3, [r3, #0]
2ffe8a76:	4798      	blx	r3
2ffe8a78:	eba8 0300 	sub.w	r3, r8, r0
2ffe8a7c:	42a3      	cmp	r3, r4
2ffe8a7e:	eb76 0305 	sbcs.w	r3, r6, r5
2ffe8a82:	d3f6      	bcc.n	2ffe8a72 <udelay+0x52>
2ffe8a84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe8a88:	2fff56c4 	.word	0x2fff56c4
2ffe8a8c:	2fff2c09 	.word	0x2fff2c09

2ffe8a90 <timer_init>:
2ffe8a90:	b508      	push	{r3, lr}
2ffe8a92:	b128      	cbz	r0, 2ffe8aa0 <timer_init+0x10>
2ffe8a94:	6843      	ldr	r3, [r0, #4]
2ffe8a96:	b11b      	cbz	r3, 2ffe8aa0 <timer_init+0x10>
2ffe8a98:	6883      	ldr	r3, [r0, #8]
2ffe8a9a:	b10b      	cbz	r3, 2ffe8aa0 <timer_init+0x10>
2ffe8a9c:	6803      	ldr	r3, [r0, #0]
2ffe8a9e:	b91b      	cbnz	r3, 2ffe8aa8 <timer_init+0x18>
2ffe8aa0:	4803      	ldr	r0, [pc, #12]	@ (2ffe8ab0 <timer_init+0x20>)
2ffe8aa2:	214c      	movs	r1, #76	@ 0x4c
2ffe8aa4:	f004 ff26 	bl	2ffed8f4 <__assert>
2ffe8aa8:	4b02      	ldr	r3, [pc, #8]	@ (2ffe8ab4 <timer_init+0x24>)
2ffe8aaa:	6018      	str	r0, [r3, #0]
2ffe8aac:	bd08      	pop	{r3, pc}
2ffe8aae:	bf00      	nop
2ffe8ab0:	2fff2c09 	.word	0x2fff2c09
2ffe8ab4:	2fff56c4 	.word	0x2fff56c4

2ffe8ab8 <generic_delay_timer_init_args>:
2ffe8ab8:	4b03      	ldr	r3, [pc, #12]	@ (2ffe8ac8 <generic_delay_timer_init_args+0x10>)
2ffe8aba:	4a04      	ldr	r2, [pc, #16]	@ (2ffe8acc <generic_delay_timer_init_args+0x14>)
2ffe8abc:	6058      	str	r0, [r3, #4]
2ffe8abe:	4618      	mov	r0, r3
2ffe8ac0:	601a      	str	r2, [r3, #0]
2ffe8ac2:	6099      	str	r1, [r3, #8]
2ffe8ac4:	f7ff bfe4 	b.w	2ffe8a90 <timer_init>
2ffe8ac8:	2fff56c8 	.word	0x2fff56c8
2ffe8acc:	2ffee541 	.word	0x2ffee541

2ffe8ad0 <generic_delay_timer_init>:
2ffe8ad0:	b510      	push	{r4, lr}
2ffe8ad2:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2ffe8ad6:	f413 2f70 	tst.w	r3, #983040	@ 0xf0000
2ffe8ada:	d103      	bne.n	2ffe8ae4 <generic_delay_timer_init+0x14>
2ffe8adc:	480f      	ldr	r0, [pc, #60]	@ (2ffe8b1c <generic_delay_timer_init+0x4c>)
2ffe8ade:	212e      	movs	r1, #46	@ 0x2e
2ffe8ae0:	f004 ff08 	bl	2ffed8f4 <__assert>
2ffe8ae4:	f005 fbfd 	bl	2ffee2e2 <plat_get_syscnt_freq2>
2ffe8ae8:	230a      	movs	r3, #10
2ffe8aea:	4601      	mov	r1, r0
2ffe8aec:	fbb0 f2f3 	udiv	r2, r0, r3
2ffe8af0:	fb03 0212 	mls	r2, r3, r2, r0
2ffe8af4:	480a      	ldr	r0, [pc, #40]	@ (2ffe8b20 <generic_delay_timer_init+0x50>)
2ffe8af6:	b96a      	cbnz	r2, 2ffe8b14 <generic_delay_timer_init+0x44>
2ffe8af8:	fbb0 f0f3 	udiv	r0, r0, r3
2ffe8afc:	fbb1 f1f3 	udiv	r1, r1, r3
2ffe8b00:	fbb0 f2f3 	udiv	r2, r0, r3
2ffe8b04:	fbb1 f4f3 	udiv	r4, r1, r3
2ffe8b08:	fb03 0212 	mls	r2, r3, r2, r0
2ffe8b0c:	fb03 1414 	mls	r4, r3, r4, r1
2ffe8b10:	4322      	orrs	r2, r4
2ffe8b12:	d0f1      	beq.n	2ffe8af8 <generic_delay_timer_init+0x28>
2ffe8b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe8b18:	f7ff bfce 	b.w	2ffe8ab8 <generic_delay_timer_init_args>
2ffe8b1c:	2fff2c2b 	.word	0x2fff2c2b
2ffe8b20:	000f4240 	.word	0x000f4240

2ffe8b24 <fdt_get_clock_id>:
2ffe8b24:	b513      	push	{r0, r1, r4, lr}
2ffe8b26:	4604      	mov	r4, r0
2ffe8b28:	a801      	add	r0, sp, #4
2ffe8b2a:	f000 ff67 	bl	2ffe99fc <fdt_get_address>
2ffe8b2e:	b150      	cbz	r0, 2ffe8b46 <fdt_get_clock_id+0x22>
2ffe8b30:	4a08      	ldr	r2, [pc, #32]	@ (2ffe8b54 <fdt_get_clock_id+0x30>)
2ffe8b32:	2300      	movs	r3, #0
2ffe8b34:	9801      	ldr	r0, [sp, #4]
2ffe8b36:	4621      	mov	r1, r4
2ffe8b38:	f006 fec6 	bl	2ffef8c8 <fdt_getprop>
2ffe8b3c:	b130      	cbz	r0, 2ffe8b4c <fdt_get_clock_id+0x28>
2ffe8b3e:	6840      	ldr	r0, [r0, #4]
2ffe8b40:	ba00      	rev	r0, r0
2ffe8b42:	b002      	add	sp, #8
2ffe8b44:	bd10      	pop	{r4, pc}
2ffe8b46:	f06f 0001 	mvn.w	r0, #1
2ffe8b4a:	e7fa      	b.n	2ffe8b42 <fdt_get_clock_id+0x1e>
2ffe8b4c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe8b50:	e7f7      	b.n	2ffe8b42 <fdt_get_clock_id+0x1e>
2ffe8b52:	bf00      	nop
2ffe8b54:	2fff3933 	.word	0x2fff3933

2ffe8b58 <fdt_get_uart_clock_freq>:
2ffe8b58:	b513      	push	{r0, r1, r4, lr}
2ffe8b5a:	4604      	mov	r4, r0
2ffe8b5c:	a801      	add	r0, sp, #4
2ffe8b5e:	f000 ff4d 	bl	2ffe99fc <fdt_get_address>
2ffe8b62:	b910      	cbnz	r0, 2ffe8b6a <fdt_get_uart_clock_freq+0x12>
2ffe8b64:	2000      	movs	r0, #0
2ffe8b66:	b002      	add	sp, #8
2ffe8b68:	bd10      	pop	{r4, pc}
2ffe8b6a:	4806      	ldr	r0, [pc, #24]	@ (2ffe8b84 <fdt_get_uart_clock_freq+0x2c>)
2ffe8b6c:	4621      	mov	r1, r4
2ffe8b6e:	f001 f815 	bl	2ffe9b9c <dt_match_instance_by_compatible>
2ffe8b72:	2800      	cmp	r0, #0
2ffe8b74:	dbf6      	blt.n	2ffe8b64 <fdt_get_uart_clock_freq+0xc>
2ffe8b76:	f7ff ffd5 	bl	2ffe8b24 <fdt_get_clock_id>
2ffe8b7a:	2800      	cmp	r0, #0
2ffe8b7c:	dbf2      	blt.n	2ffe8b64 <fdt_get_uart_clock_freq+0xc>
2ffe8b7e:	f7ff ff13 	bl	2ffe89a8 <clk_get_rate>
2ffe8b82:	e7f0      	b.n	2ffe8b66 <fdt_get_uart_clock_freq+0xe>
2ffe8b84:	2fff1d09 	.word	0x2fff1d09

2ffe8b88 <stm32mp_stgen_config>:
2ffe8b88:	b570      	push	{r4, r5, r6, lr}
2ffe8b8a:	4604      	mov	r4, r0
2ffe8b8c:	4d10      	ldr	r5, [pc, #64]	@ (2ffe8bd0 <stm32mp_stgen_config+0x48>)
2ffe8b8e:	6a2a      	ldr	r2, [r5, #32]
2ffe8b90:	4290      	cmp	r0, r2
2ffe8b92:	d01b      	beq.n	2ffe8bcc <stm32mp_stgen_config+0x44>
2ffe8b94:	682b      	ldr	r3, [r5, #0]
2ffe8b96:	f023 0301 	bic.w	r3, r3, #1
2ffe8b9a:	602b      	str	r3, [r5, #0]
2ffe8b9c:	b152      	cbz	r2, 2ffe8bb4 <stm32mp_stgen_config+0x2c>
2ffe8b9e:	68ee      	ldr	r6, [r5, #12]
2ffe8ba0:	2300      	movs	r3, #0
2ffe8ba2:	68a8      	ldr	r0, [r5, #8]
2ffe8ba4:	fba0 0104 	umull	r0, r1, r0, r4
2ffe8ba8:	fb04 1106 	mla	r1, r4, r6, r1
2ffe8bac:	f004 ed3e 	blx	2ffed62c <__aeabi_uldivmod>
2ffe8bb0:	60a8      	str	r0, [r5, #8]
2ffe8bb2:	60e9      	str	r1, [r5, #12]
2ffe8bb4:	4b06      	ldr	r3, [pc, #24]	@ (2ffe8bd0 <stm32mp_stgen_config+0x48>)
2ffe8bb6:	621c      	str	r4, [r3, #32]
2ffe8bb8:	681a      	ldr	r2, [r3, #0]
2ffe8bba:	f042 0201 	orr.w	r2, r2, #1
2ffe8bbe:	601a      	str	r2, [r3, #0]
2ffe8bc0:	ee0e 4f10 	mcr	15, 0, r4, cr14, cr0, {0}
2ffe8bc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe8bc8:	f7ff bf82 	b.w	2ffe8ad0 <generic_delay_timer_init>
2ffe8bcc:	bd70      	pop	{r4, r5, r6, pc}
2ffe8bce:	bf00      	nop
2ffe8bd0:	5c008000 	.word	0x5c008000

2ffe8bd4 <stm32mp_stgen_restore_rate>:
2ffe8bd4:	4b02      	ldr	r3, [pc, #8]	@ (2ffe8be0 <stm32mp_stgen_restore_rate+0xc>)
2ffe8bd6:	6a1b      	ldr	r3, [r3, #32]
2ffe8bd8:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2ffe8bdc:	4770      	bx	lr
2ffe8bde:	bf00      	nop
2ffe8be0:	5c008000 	.word	0x5c008000

2ffe8be4 <stm32mp_ddr_set_reg>:
2ffe8be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe8be6:	eb03 1301 	add.w	r3, r3, r1, lsl #4
2ffe8bea:	68d9      	ldr	r1, [r3, #12]
2ffe8bec:	7a1d      	ldrb	r5, [r3, #8]
2ffe8bee:	2901      	cmp	r1, #1
2ffe8bf0:	6859      	ldr	r1, [r3, #4]
2ffe8bf2:	f04f 0300 	mov.w	r3, #0
2ffe8bf6:	bf0c      	ite	eq
2ffe8bf8:	6940      	ldreq	r0, [r0, #20]
2ffe8bfa:	6900      	ldrne	r0, [r0, #16]
2ffe8bfc:	1c8e      	adds	r6, r1, #2
2ffe8bfe:	42ab      	cmp	r3, r5
2ffe8c00:	d300      	bcc.n	2ffe8c04 <stm32mp_ddr_set_reg+0x20>
2ffe8c02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe8c04:	f816 4023 	ldrb.w	r4, [r6, r3, lsl #2]
2ffe8c08:	f831 7023 	ldrh.w	r7, [r1, r3, lsl #2]
2ffe8c0c:	2cff      	cmp	r4, #255	@ 0xff
2ffe8c0e:	d106      	bne.n	2ffe8c1e <stm32mp_ddr_set_reg+0x3a>
2ffe8c10:	4805      	ldr	r0, [pc, #20]	@ (2ffe8c28 <stm32mp_ddr_set_reg+0x44>)
2ffe8c12:	f7fe feaf 	bl	2ffe7974 <tf_log>
2ffe8c16:	f7fe ff49 	bl	2ffe7aac <console_flush>
2ffe8c1a:	f7fb ec0c 	blx	2ffe4434 <do_panic>
2ffe8c1e:	5914      	ldr	r4, [r2, r4]
2ffe8c20:	3301      	adds	r3, #1
2ffe8c22:	503c      	str	r4, [r7, r0]
2ffe8c24:	e7eb      	b.n	2ffe8bfe <stm32mp_ddr_set_reg+0x1a>
2ffe8c26:	bf00      	nop
2ffe8c28:	2fff2c55 	.word	0x2fff2c55

2ffe8c2c <stm32mp_ddr_sw_selfref_entry>:
2ffe8c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe8c2e:	4604      	mov	r4, r0
2ffe8c30:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffe8c32:	f043 0320 	orr.w	r3, r3, #32
2ffe8c36:	6303      	str	r3, [r0, #48]	@ 0x30
2ffe8c38:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffe8c3c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe8c40:	4a0f      	ldr	r2, [pc, #60]	@ (2ffe8c80 <stm32mp_ddr_sw_selfref_entry+0x54>)
2ffe8c42:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffe8c46:	2300      	movs	r3, #0
2ffe8c48:	fba1 0100 	umull	r0, r1, r1, r0
2ffe8c4c:	f004 ecee 	blx	2ffed62c <__aeabi_uldivmod>
2ffe8c50:	1983      	adds	r3, r0, r6
2ffe8c52:	eb41 0107 	adc.w	r1, r1, r7
2ffe8c56:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe8c5a:	42b3      	cmp	r3, r6
2ffe8c5c:	eb71 0207 	sbcs.w	r2, r1, r7
2ffe8c60:	d202      	bcs.n	2ffe8c68 <stm32mp_ddr_sw_selfref_entry+0x3c>
2ffe8c62:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe8c66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe8c68:	6862      	ldr	r2, [r4, #4]
2ffe8c6a:	f002 0007 	and.w	r0, r2, #7
2ffe8c6e:	2803      	cmp	r0, #3
2ffe8c70:	d1f1      	bne.n	2ffe8c56 <stm32mp_ddr_sw_selfref_entry+0x2a>
2ffe8c72:	f002 0230 	and.w	r2, r2, #48	@ 0x30
2ffe8c76:	2a20      	cmp	r2, #32
2ffe8c78:	d1ed      	bne.n	2ffe8c56 <stm32mp_ddr_sw_selfref_entry+0x2a>
2ffe8c7a:	2000      	movs	r0, #0
2ffe8c7c:	e7f3      	b.n	2ffe8c66 <stm32mp_ddr_sw_selfref_entry+0x3a>
2ffe8c7e:	bf00      	nop
2ffe8c80:	000f4240 	.word	0x000f4240

2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>:
2ffe8c84:	f8d0 3490 	ldr.w	r3, [r0, #1168]	@ 0x490
2ffe8c88:	b510      	push	{r4, lr}
2ffe8c8a:	4604      	mov	r4, r0
2ffe8c8c:	07da      	lsls	r2, r3, #31
2ffe8c8e:	d509      	bpl.n	2ffe8ca4 <stm32mp_ddr_set_qd3_update_conditions+0x20>
2ffe8c90:	f005 fc85 	bl	2ffee59e <stm32mp_ddr_disable_axi_port>
2ffe8c94:	b118      	cbz	r0, 2ffe8c9e <stm32mp_ddr_set_qd3_update_conditions+0x1a>
2ffe8c96:	f7fe ff09 	bl	2ffe7aac <console_flush>
2ffe8c9a:	f7fb ebcc 	blx	2ffe4434 <do_panic>
2ffe8c9e:	4b0a      	ldr	r3, [pc, #40]	@ (2ffe8cc8 <stm32mp_ddr_set_qd3_update_conditions+0x44>)
2ffe8ca0:	2201      	movs	r2, #1
2ffe8ca2:	701a      	strb	r2, [r3, #0]
2ffe8ca4:	f8d4 3304 	ldr.w	r3, [r4, #772]	@ 0x304
2ffe8ca8:	079b      	lsls	r3, r3, #30
2ffe8caa:	d405      	bmi.n	2ffe8cb8 <stm32mp_ddr_set_qd3_update_conditions+0x34>
2ffe8cac:	4620      	mov	r0, r4
2ffe8cae:	f005 fc9a 	bl	2ffee5e6 <stm32mp_ddr_disable_host_interface>
2ffe8cb2:	4b06      	ldr	r3, [pc, #24]	@ (2ffe8ccc <stm32mp_ddr_set_qd3_update_conditions+0x48>)
2ffe8cb4:	2201      	movs	r2, #1
2ffe8cb6:	701a      	strb	r2, [r3, #0]
2ffe8cb8:	f8d4 3320 	ldr.w	r3, [r4, #800]	@ 0x320
2ffe8cbc:	f023 0301 	bic.w	r3, r3, #1
2ffe8cc0:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
2ffe8cc4:	bd10      	pop	{r4, pc}
2ffe8cc6:	bf00      	nop
2ffe8cc8:	2fff5c1c 	.word	0x2fff5c1c
2ffe8ccc:	2fff5c1b 	.word	0x2fff5c1b

2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>:
2ffe8cd0:	b510      	push	{r4, lr}
2ffe8cd2:	4604      	mov	r4, r0
2ffe8cd4:	f005 fc3f 	bl	2ffee556 <stm32mp_ddr_wait_sw_done_ack>
2ffe8cd8:	4a0b      	ldr	r2, [pc, #44]	@ (2ffe8d08 <stm32mp_ddr_unset_qd3_update_conditions+0x38>)
2ffe8cda:	7813      	ldrb	r3, [r2, #0]
2ffe8cdc:	b13b      	cbz	r3, 2ffe8cee <stm32mp_ddr_unset_qd3_update_conditions+0x1e>
2ffe8cde:	f8d4 3304 	ldr.w	r3, [r4, #772]	@ 0x304
2ffe8ce2:	f023 0302 	bic.w	r3, r3, #2
2ffe8ce6:	f8c4 3304 	str.w	r3, [r4, #772]	@ 0x304
2ffe8cea:	2300      	movs	r3, #0
2ffe8cec:	7013      	strb	r3, [r2, #0]
2ffe8cee:	4a07      	ldr	r2, [pc, #28]	@ (2ffe8d0c <stm32mp_ddr_unset_qd3_update_conditions+0x3c>)
2ffe8cf0:	7813      	ldrb	r3, [r2, #0]
2ffe8cf2:	b13b      	cbz	r3, 2ffe8d04 <stm32mp_ddr_unset_qd3_update_conditions+0x34>
2ffe8cf4:	f8d4 3490 	ldr.w	r3, [r4, #1168]	@ 0x490
2ffe8cf8:	f043 0301 	orr.w	r3, r3, #1
2ffe8cfc:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
2ffe8d00:	2300      	movs	r3, #0
2ffe8d02:	7013      	strb	r3, [r2, #0]
2ffe8d04:	bd10      	pop	{r4, pc}
2ffe8d06:	bf00      	nop
2ffe8d08:	2fff5c1b 	.word	0x2fff5c1b
2ffe8d0c:	2fff5c1c 	.word	0x2fff5c1c

2ffe8d10 <set_gpio.constprop.0>:
2ffe8d10:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8d14:	460c      	mov	r4, r1
2ffe8d16:	9001      	str	r0, [sp, #4]
2ffe8d18:	4616      	mov	r6, r2
2ffe8d1a:	461d      	mov	r5, r3
2ffe8d1c:	e9dd 980c 	ldrd	r9, r8, [sp, #48]	@ 0x30
2ffe8d20:	e9dd 7a0e 	ldrd	r7, sl, [sp, #56]	@ 0x38
2ffe8d24:	f001 f924 	bl	2ffe9f70 <stm32_get_gpio_bank_base>
2ffe8d28:	4683      	mov	fp, r0
2ffe8d2a:	9801      	ldr	r0, [sp, #4]
2ffe8d2c:	f001 f93a 	bl	2ffe9fa4 <stm32_get_gpio_bank_clock>
2ffe8d30:	9001      	str	r0, [sp, #4]
2ffe8d32:	2c0f      	cmp	r4, #15
2ffe8d34:	d903      	bls.n	2ffe8d3e <set_gpio.constprop.0+0x2e>
2ffe8d36:	4831      	ldr	r0, [pc, #196]	@ (2ffe8dfc <set_gpio.constprop.0+0xec>)
2ffe8d38:	21ea      	movs	r1, #234	@ 0xea
2ffe8d3a:	f004 fddb 	bl	2ffed8f4 <__assert>
2ffe8d3e:	40a5      	lsls	r5, r4
2ffe8d40:	f7ff fe0e 	bl	2ffe8960 <clk_enable>
2ffe8d44:	ea4f 0c44 	mov.w	ip, r4, lsl #1
2ffe8d48:	2203      	movs	r2, #3
2ffe8d4a:	f8db 1000 	ldr.w	r1, [fp]
2ffe8d4e:	2001      	movs	r0, #1
2ffe8d50:	fa02 f20c 	lsl.w	r2, r2, ip
2ffe8d54:	2c07      	cmp	r4, #7
2ffe8d56:	ea21 0102 	bic.w	r1, r1, r2
2ffe8d5a:	fa06 f60c 	lsl.w	r6, r6, ip
2ffe8d5e:	ea46 0601 	orr.w	r6, r6, r1
2ffe8d62:	f8cb 6000 	str.w	r6, [fp]
2ffe8d66:	f8db 6004 	ldr.w	r6, [fp, #4]
2ffe8d6a:	fa00 f004 	lsl.w	r0, r0, r4
2ffe8d6e:	ea26 0600 	bic.w	r6, r6, r0
2ffe8d72:	ea45 0506 	orr.w	r5, r5, r6
2ffe8d76:	f8cb 5004 	str.w	r5, [fp, #4]
2ffe8d7a:	ea6f 0100 	mvn.w	r1, r0
2ffe8d7e:	f8db 0008 	ldr.w	r0, [fp, #8]
2ffe8d82:	fa09 f90c 	lsl.w	r9, r9, ip
2ffe8d86:	ea20 0002 	bic.w	r0, r0, r2
2ffe8d8a:	ea49 0000 	orr.w	r0, r9, r0
2ffe8d8e:	f8cb 0008 	str.w	r0, [fp, #8]
2ffe8d92:	f8db 000c 	ldr.w	r0, [fp, #12]
2ffe8d96:	fa08 f80c 	lsl.w	r8, r8, ip
2ffe8d9a:	ea20 0202 	bic.w	r2, r0, r2
2ffe8d9e:	ea48 0202 	orr.w	r2, r8, r2
2ffe8da2:	f8cb 200c 	str.w	r2, [fp, #12]
2ffe8da6:	f04f 020f 	mov.w	r2, #15
2ffe8daa:	d817      	bhi.n	2ffe8ddc <set_gpio.constprop.0+0xcc>
2ffe8dac:	00a5      	lsls	r5, r4, #2
2ffe8dae:	f8db 0020 	ldr.w	r0, [fp, #32]
2ffe8db2:	40aa      	lsls	r2, r5
2ffe8db4:	ea20 0202 	bic.w	r2, r0, r2
2ffe8db8:	fa0a f505 	lsl.w	r5, sl, r5
2ffe8dbc:	432a      	orrs	r2, r5
2ffe8dbe:	f8cb 2020 	str.w	r2, [fp, #32]
2ffe8dc2:	f8db 2014 	ldr.w	r2, [fp, #20]
2ffe8dc6:	40a7      	lsls	r7, r4
2ffe8dc8:	9801      	ldr	r0, [sp, #4]
2ffe8dca:	4011      	ands	r1, r2
2ffe8dcc:	430f      	orrs	r7, r1
2ffe8dce:	f8cb 7014 	str.w	r7, [fp, #20]
2ffe8dd2:	b003      	add	sp, #12
2ffe8dd4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8dd8:	f7ff bdd4 	b.w	2ffe8984 <clk_disable>
2ffe8ddc:	f8db 0024 	ldr.w	r0, [fp, #36]	@ 0x24
2ffe8de0:	f1a4 0508 	sub.w	r5, r4, #8
2ffe8de4:	00ad      	lsls	r5, r5, #2
2ffe8de6:	40aa      	lsls	r2, r5
2ffe8de8:	ea20 0202 	bic.w	r2, r0, r2
2ffe8dec:	fa0a fa05 	lsl.w	sl, sl, r5
2ffe8df0:	ea42 020a 	orr.w	r2, r2, sl
2ffe8df4:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
2ffe8df8:	e7e3      	b.n	2ffe8dc2 <set_gpio.constprop.0+0xb2>
2ffe8dfa:	bf00      	nop
2ffe8dfc:	2fff2c70 	.word	0x2fff2c70

2ffe8e00 <dt_set_pinctrl_config>:
2ffe8e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe8e04:	b093      	sub	sp, #76	@ 0x4c
2ffe8e06:	4604      	mov	r4, r0
2ffe8e08:	a810      	add	r0, sp, #64	@ 0x40
2ffe8e0a:	f000 fdf7 	bl	2ffe99fc <fdt_get_address>
2ffe8e0e:	b920      	cbnz	r0, 2ffe8e1a <dt_set_pinctrl_config+0x1a>
2ffe8e10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe8e14:	b013      	add	sp, #76	@ 0x4c
2ffe8e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe8e1a:	4620      	mov	r0, r4
2ffe8e1c:	f000 fe08 	bl	2ffe9a30 <fdt_get_status>
2ffe8e20:	2800      	cmp	r0, #0
2ffe8e22:	d0f5      	beq.n	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8e24:	4a7a      	ldr	r2, [pc, #488]	@ (2ffe9010 <dt_set_pinctrl_config+0x210>)
2ffe8e26:	ab0f      	add	r3, sp, #60	@ 0x3c
2ffe8e28:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffe8e2a:	4621      	mov	r1, r4
2ffe8e2c:	f006 fd4c 	bl	2ffef8c8 <fdt_getprop>
2ffe8e30:	9006      	str	r0, [sp, #24]
2ffe8e32:	2800      	cmp	r0, #0
2ffe8e34:	d0ec      	beq.n	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8e36:	f04f 0a00 	mov.w	sl, #0
2ffe8e3a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
2ffe8e3c:	ebba 0f93 	cmp.w	sl, r3, lsr #2
2ffe8e40:	d301      	bcc.n	2ffe8e46 <dt_set_pinctrl_config+0x46>
2ffe8e42:	2000      	movs	r0, #0
2ffe8e44:	e7e6      	b.n	2ffe8e14 <dt_set_pinctrl_config+0x14>
2ffe8e46:	9b06      	ldr	r3, [sp, #24]
2ffe8e48:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
2ffe8e4c:	f005 fc1b 	bl	2ffee686 <fdt32_to_cpu>
2ffe8e50:	4601      	mov	r1, r0
2ffe8e52:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffe8e54:	f006 fdf5 	bl	2ffefa42 <fdt_node_offset_by_phandle>
2ffe8e58:	1e01      	subs	r1, r0, #0
2ffe8e5a:	dbd9      	blt.n	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8e5c:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffe8e5e:	f006 fbc2 	bl	2ffef5e6 <fdt_first_subnode>
2ffe8e62:	2800      	cmp	r0, #0
2ffe8e64:	4605      	mov	r5, r0
2ffe8e66:	da02      	bge.n	2ffe8e6e <dt_set_pinctrl_config+0x6e>
2ffe8e68:	f10a 0a01 	add.w	sl, sl, #1
2ffe8e6c:	e7e5      	b.n	2ffe8e3a <dt_set_pinctrl_config+0x3a>
2ffe8e6e:	9e10      	ldr	r6, [sp, #64]	@ 0x40
2ffe8e70:	ab11      	add	r3, sp, #68	@ 0x44
2ffe8e72:	4a68      	ldr	r2, [pc, #416]	@ (2ffe9014 <dt_set_pinctrl_config+0x214>)
2ffe8e74:	4629      	mov	r1, r5
2ffe8e76:	4630      	mov	r0, r6
2ffe8e78:	f006 fd26 	bl	2ffef8c8 <fdt_getprop>
2ffe8e7c:	9007      	str	r0, [sp, #28]
2ffe8e7e:	2800      	cmp	r0, #0
2ffe8e80:	d0c6      	beq.n	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8e82:	4629      	mov	r1, r5
2ffe8e84:	4630      	mov	r0, r6
2ffe8e86:	f006 fdcc 	bl	2ffefa22 <fdt_parent_offset>
2ffe8e8a:	4601      	mov	r1, r0
2ffe8e8c:	4630      	mov	r0, r6
2ffe8e8e:	f006 fdc8 	bl	2ffefa22 <fdt_parent_offset>
2ffe8e92:	1e03      	subs	r3, r0, #0
2ffe8e94:	930a      	str	r3, [sp, #40]	@ 0x28
2ffe8e96:	dbbb      	blt.n	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8e98:	4a5f      	ldr	r2, [pc, #380]	@ (2ffe9018 <dt_set_pinctrl_config+0x218>)
2ffe8e9a:	2300      	movs	r3, #0
2ffe8e9c:	4629      	mov	r1, r5
2ffe8e9e:	4630      	mov	r0, r6
2ffe8ea0:	f006 fd12 	bl	2ffef8c8 <fdt_getprop>
2ffe8ea4:	b110      	cbz	r0, 2ffe8eac <dt_set_pinctrl_config+0xac>
2ffe8ea6:	6800      	ldr	r0, [r0, #0]
2ffe8ea8:	f005 fbed 	bl	2ffee686 <fdt32_to_cpu>
2ffe8eac:	9008      	str	r0, [sp, #32]
2ffe8eae:	2300      	movs	r3, #0
2ffe8eb0:	4a5a      	ldr	r2, [pc, #360]	@ (2ffe901c <dt_set_pinctrl_config+0x21c>)
2ffe8eb2:	4629      	mov	r1, r5
2ffe8eb4:	4630      	mov	r0, r6
2ffe8eb6:	f006 fd07 	bl	2ffef8c8 <fdt_getprop>
2ffe8eba:	4603      	mov	r3, r0
2ffe8ebc:	b9a0      	cbnz	r0, 2ffe8ee8 <dt_set_pinctrl_config+0xe8>
2ffe8ebe:	4a58      	ldr	r2, [pc, #352]	@ (2ffe9020 <dt_set_pinctrl_config+0x220>)
2ffe8ec0:	4629      	mov	r1, r5
2ffe8ec2:	4630      	mov	r0, r6
2ffe8ec4:	f006 fd00 	bl	2ffef8c8 <fdt_getprop>
2ffe8ec8:	3800      	subs	r0, #0
2ffe8eca:	bf18      	it	ne
2ffe8ecc:	2001      	movne	r0, #1
2ffe8ece:	0043      	lsls	r3, r0, #1
2ffe8ed0:	9309      	str	r3, [sp, #36]	@ 0x24
2ffe8ed2:	f04f 0b00 	mov.w	fp, #0
2ffe8ed6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffe8ed8:	ebbb 0f93 	cmp.w	fp, r3, lsr #2
2ffe8edc:	d306      	bcc.n	2ffe8eec <dt_set_pinctrl_config+0xec>
2ffe8ede:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffe8ee0:	4629      	mov	r1, r5
2ffe8ee2:	f006 fb93 	bl	2ffef60c <fdt_next_subnode>
2ffe8ee6:	e7bc      	b.n	2ffe8e62 <dt_set_pinctrl_config+0x62>
2ffe8ee8:	2301      	movs	r3, #1
2ffe8eea:	e7f1      	b.n	2ffe8ed0 <dt_set_pinctrl_config+0xd0>
2ffe8eec:	9b07      	ldr	r3, [sp, #28]
2ffe8eee:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
2ffe8ef2:	f005 fbc8 	bl	2ffee686 <fdt32_to_cpu>
2ffe8ef6:	f3c0 3304 	ubfx	r3, r0, #12, #5
2ffe8efa:	b2c4      	uxtb	r4, r0
2ffe8efc:	9305      	str	r3, [sp, #20]
2ffe8efe:	2c10      	cmp	r4, #16
2ffe8f00:	f3c0 2303 	ubfx	r3, r0, #8, #4
2ffe8f04:	930b      	str	r3, [sp, #44]	@ 0x2c
2ffe8f06:	d833      	bhi.n	2ffe8f70 <dt_set_pinctrl_config+0x170>
2ffe8f08:	2c00      	cmp	r4, #0
2ffe8f0a:	d137      	bne.n	2ffe8f7c <dt_set_pinctrl_config+0x17c>
2ffe8f0c:	46a0      	mov	r8, r4
2ffe8f0e:	4a45      	ldr	r2, [pc, #276]	@ (2ffe9024 <dt_set_pinctrl_config+0x224>)
2ffe8f10:	2300      	movs	r3, #0
2ffe8f12:	4629      	mov	r1, r5
2ffe8f14:	4630      	mov	r0, r6
2ffe8f16:	f006 fcd7 	bl	2ffef8c8 <fdt_getprop>
2ffe8f1a:	1e03      	subs	r3, r0, #0
2ffe8f1c:	4629      	mov	r1, r5
2ffe8f1e:	4a42      	ldr	r2, [pc, #264]	@ (2ffe9028 <dt_set_pinctrl_config+0x228>)
2ffe8f20:	bf18      	it	ne
2ffe8f22:	2301      	movne	r3, #1
2ffe8f24:	930d      	str	r3, [sp, #52]	@ 0x34
2ffe8f26:	4630      	mov	r0, r6
2ffe8f28:	2300      	movs	r3, #0
2ffe8f2a:	f006 fccd 	bl	2ffef8c8 <fdt_getprop>
2ffe8f2e:	4607      	mov	r7, r0
2ffe8f30:	b110      	cbz	r0, 2ffe8f38 <dt_set_pinctrl_config+0x138>
2ffe8f32:	bb4c      	cbnz	r4, 2ffe8f88 <dt_set_pinctrl_config+0x188>
2ffe8f34:	2401      	movs	r4, #1
2ffe8f36:	4627      	mov	r7, r4
2ffe8f38:	4a3c      	ldr	r2, [pc, #240]	@ (2ffe902c <dt_set_pinctrl_config+0x22c>)
2ffe8f3a:	2300      	movs	r3, #0
2ffe8f3c:	4629      	mov	r1, r5
2ffe8f3e:	4630      	mov	r0, r6
2ffe8f40:	f006 fcc2 	bl	2ffef8c8 <fdt_getprop>
2ffe8f44:	b110      	cbz	r0, 2ffe8f4c <dt_set_pinctrl_config+0x14c>
2ffe8f46:	b90c      	cbnz	r4, 2ffe8f4c <dt_set_pinctrl_config+0x14c>
2ffe8f48:	4627      	mov	r7, r4
2ffe8f4a:	2401      	movs	r4, #1
2ffe8f4c:	9805      	ldr	r0, [sp, #20]
2ffe8f4e:	f001 f81d 	bl	2ffe9f8c <stm32_get_gpio_bank_offset>
2ffe8f52:	900c      	str	r0, [sp, #48]	@ 0x30
2ffe8f54:	4630      	mov	r0, r6
2ffe8f56:	990a      	ldr	r1, [sp, #40]	@ 0x28
2ffe8f58:	f006 fb45 	bl	2ffef5e6 <fdt_first_subnode>
2ffe8f5c:	2800      	cmp	r0, #0
2ffe8f5e:	4681      	mov	r9, r0
2ffe8f60:	da14      	bge.n	2ffe8f8c <dt_set_pinctrl_config+0x18c>
2ffe8f62:	4833      	ldr	r0, [pc, #204]	@ (2ffe9030 <dt_set_pinctrl_config+0x230>)
2ffe8f64:	f7fe fd06 	bl	2ffe7974 <tf_log>
2ffe8f68:	f7fe fda0 	bl	2ffe7aac <console_flush>
2ffe8f6c:	f7fb ea62 	blx	2ffe4434 <do_panic>
2ffe8f70:	2c11      	cmp	r4, #17
2ffe8f72:	f04f 0800 	mov.w	r8, #0
2ffe8f76:	d005      	beq.n	2ffe8f84 <dt_set_pinctrl_config+0x184>
2ffe8f78:	2401      	movs	r4, #1
2ffe8f7a:	e7c8      	b.n	2ffe8f0e <dt_set_pinctrl_config+0x10e>
2ffe8f7c:	f104 38ff 	add.w	r8, r4, #4294967295	@ 0xffffffff
2ffe8f80:	2402      	movs	r4, #2
2ffe8f82:	e7c4      	b.n	2ffe8f0e <dt_set_pinctrl_config+0x10e>
2ffe8f84:	2403      	movs	r4, #3
2ffe8f86:	e7c2      	b.n	2ffe8f0e <dt_set_pinctrl_config+0x10e>
2ffe8f88:	2700      	movs	r7, #0
2ffe8f8a:	e7d5      	b.n	2ffe8f38 <dt_set_pinctrl_config+0x138>
2ffe8f8c:	4a29      	ldr	r2, [pc, #164]	@ (2ffe9034 <dt_set_pinctrl_config+0x234>)
2ffe8f8e:	2300      	movs	r3, #0
2ffe8f90:	4649      	mov	r1, r9
2ffe8f92:	4630      	mov	r0, r6
2ffe8f94:	f006 fc98 	bl	2ffef8c8 <fdt_getprop>
2ffe8f98:	b920      	cbnz	r0, 2ffe8fa4 <dt_set_pinctrl_config+0x1a4>
2ffe8f9a:	4649      	mov	r1, r9
2ffe8f9c:	4630      	mov	r0, r6
2ffe8f9e:	f006 fb35 	bl	2ffef60c <fdt_next_subnode>
2ffe8fa2:	e7db      	b.n	2ffe8f5c <dt_set_pinctrl_config+0x15c>
2ffe8fa4:	4a24      	ldr	r2, [pc, #144]	@ (2ffe9038 <dt_set_pinctrl_config+0x238>)
2ffe8fa6:	2300      	movs	r3, #0
2ffe8fa8:	4649      	mov	r1, r9
2ffe8faa:	4630      	mov	r0, r6
2ffe8fac:	f006 fc8c 	bl	2ffef8c8 <fdt_getprop>
2ffe8fb0:	2800      	cmp	r0, #0
2ffe8fb2:	d0f2      	beq.n	2ffe8f9a <dt_set_pinctrl_config+0x19a>
2ffe8fb4:	6800      	ldr	r0, [r0, #0]
2ffe8fb6:	f005 fb66 	bl	2ffee686 <fdt32_to_cpu>
2ffe8fba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
2ffe8fbc:	4283      	cmp	r3, r0
2ffe8fbe:	d1ec      	bne.n	2ffe8f9a <dt_set_pinctrl_config+0x19a>
2ffe8fc0:	4648      	mov	r0, r9
2ffe8fc2:	f000 fd35 	bl	2ffe9a30 <fdt_get_status>
2ffe8fc6:	2800      	cmp	r0, #0
2ffe8fc8:	d0e7      	beq.n	2ffe8f9a <dt_set_pinctrl_config+0x19a>
2ffe8fca:	f1b9 0f00 	cmp.w	r9, #0
2ffe8fce:	d0c8      	beq.n	2ffe8f62 <dt_set_pinctrl_config+0x162>
2ffe8fd0:	4648      	mov	r0, r9
2ffe8fd2:	f7ff fda7 	bl	2ffe8b24 <fdt_get_clock_id>
2ffe8fd6:	f1b0 0900 	subs.w	r9, r0, #0
2ffe8fda:	f6ff af19 	blt.w	2ffe8e10 <dt_set_pinctrl_config+0x10>
2ffe8fde:	9805      	ldr	r0, [sp, #20]
2ffe8fe0:	f000 ffe0 	bl	2ffe9fa4 <stm32_get_gpio_bank_clock>
2ffe8fe4:	4548      	cmp	r0, r9
2ffe8fe6:	d003      	beq.n	2ffe8ff0 <dt_set_pinctrl_config+0x1f0>
2ffe8fe8:	4814      	ldr	r0, [pc, #80]	@ (2ffe903c <dt_set_pinctrl_config+0x23c>)
2ffe8fea:	21aa      	movs	r1, #170	@ 0xaa
2ffe8fec:	f004 fc82 	bl	2ffed8f4 <__assert>
2ffe8ff0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffe8ff2:	4622      	mov	r2, r4
2ffe8ff4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
2ffe8ff6:	f10b 0b01 	add.w	fp, fp, #1
2ffe8ffa:	9301      	str	r3, [sp, #4]
2ffe8ffc:	9b08      	ldr	r3, [sp, #32]
2ffe8ffe:	9805      	ldr	r0, [sp, #20]
2ffe9000:	9300      	str	r3, [sp, #0]
2ffe9002:	f8cd 800c 	str.w	r8, [sp, #12]
2ffe9006:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
2ffe9008:	9702      	str	r7, [sp, #8]
2ffe900a:	f7ff fe81 	bl	2ffe8d10 <set_gpio.constprop.0>
2ffe900e:	e762      	b.n	2ffe8ed6 <dt_set_pinctrl_config+0xd6>
2ffe9010:	2fff2c8d 	.word	0x2fff2c8d
2ffe9014:	2fff2c97 	.word	0x2fff2c97
2ffe9018:	2fff2c9e 	.word	0x2fff2c9e
2ffe901c:	2fff2ca8 	.word	0x2fff2ca8
2ffe9020:	2fff2cb5 	.word	0x2fff2cb5
2ffe9024:	2fff2cc4 	.word	0x2fff2cc4
2ffe9028:	2fff2cd5 	.word	0x2fff2cd5
2ffe902c:	2fff2ce1 	.word	0x2fff2ce1
2ffe9030:	2fff2cfc 	.word	0x2fff2cfc
2ffe9034:	2fff2cec 	.word	0x2fff2cec
2ffe9038:	2fff1aa7 	.word	0x2fff1aa7
2ffe903c:	2fff2c70 	.word	0x2fff2c70

2ffe9040 <nvmem_driver_register>:
2ffe9040:	4b06      	ldr	r3, [pc, #24]	@ (2ffe905c <nvmem_driver_register+0x1c>)
2ffe9042:	b510      	push	{r4, lr}
2ffe9044:	4604      	mov	r4, r0
2ffe9046:	6858      	ldr	r0, [r3, #4]
2ffe9048:	b128      	cbz	r0, 2ffe9056 <nvmem_driver_register+0x16>
2ffe904a:	4805      	ldr	r0, [pc, #20]	@ (2ffe9060 <nvmem_driver_register+0x20>)
2ffe904c:	f7fe fc92 	bl	2ffe7974 <tf_log>
2ffe9050:	f06f 000b 	mvn.w	r0, #11
2ffe9054:	bd10      	pop	{r4, pc}
2ffe9056:	e883 0016 	stmia.w	r3, {r1, r2, r4}
2ffe905a:	e7fb      	b.n	2ffe9054 <nvmem_driver_register+0x14>
2ffe905c:	2fff56d4 	.word	0x2fff56d4
2ffe9060:	2fff2d19 	.word	0x2fff2d19

2ffe9064 <nvmem_get_cell_by_index>:
2ffe9064:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe9066:	4617      	mov	r7, r2
2ffe9068:	4a1c      	ldr	r2, [pc, #112]	@ (2ffe90dc <nvmem_get_cell_by_index+0x78>)
2ffe906a:	461d      	mov	r5, r3
2ffe906c:	2400      	movs	r4, #0
2ffe906e:	ab01      	add	r3, sp, #4
2ffe9070:	9401      	str	r4, [sp, #4]
2ffe9072:	4606      	mov	r6, r0
2ffe9074:	f006 fc28 	bl	2ffef8c8 <fdt_getprop>
2ffe9078:	b928      	cbnz	r0, 2ffe9086 <nvmem_get_cell_by_index+0x22>
2ffe907a:	4819      	ldr	r0, [pc, #100]	@ (2ffe90e0 <nvmem_get_cell_by_index+0x7c>)
2ffe907c:	f7fe fc7a 	bl	2ffe7974 <tf_log>
2ffe9080:	9801      	ldr	r0, [sp, #4]
2ffe9082:	b003      	add	sp, #12
2ffe9084:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe9086:	f850 1027 	ldr.w	r1, [r0, r7, lsl #2]
2ffe908a:	4630      	mov	r0, r6
2ffe908c:	ba09      	rev	r1, r1
2ffe908e:	f006 fcd8 	bl	2ffefa42 <fdt_node_offset_by_phandle>
2ffe9092:	4a14      	ldr	r2, [pc, #80]	@ (2ffe90e4 <nvmem_get_cell_by_index+0x80>)
2ffe9094:	4607      	mov	r7, r0
2ffe9096:	4601      	mov	r1, r0
2ffe9098:	ab01      	add	r3, sp, #4
2ffe909a:	4630      	mov	r0, r6
2ffe909c:	f006 fc14 	bl	2ffef8c8 <fdt_getprop>
2ffe90a0:	b1c0      	cbz	r0, 2ffe90d4 <nvmem_get_cell_by_index+0x70>
2ffe90a2:	9b01      	ldr	r3, [sp, #4]
2ffe90a4:	2b08      	cmp	r3, #8
2ffe90a6:	d115      	bne.n	2ffe90d4 <nvmem_get_cell_by_index+0x70>
2ffe90a8:	6803      	ldr	r3, [r0, #0]
2ffe90aa:	4639      	mov	r1, r7
2ffe90ac:	ba1b      	rev	r3, r3
2ffe90ae:	602b      	str	r3, [r5, #0]
2ffe90b0:	6843      	ldr	r3, [r0, #4]
2ffe90b2:	4630      	mov	r0, r6
2ffe90b4:	ba1b      	rev	r3, r3
2ffe90b6:	606b      	str	r3, [r5, #4]
2ffe90b8:	f006 fcb3 	bl	2ffefa22 <fdt_parent_offset>
2ffe90bc:	4b0a      	ldr	r3, [pc, #40]	@ (2ffe90e8 <nvmem_get_cell_by_index+0x84>)
2ffe90be:	4602      	mov	r2, r0
2ffe90c0:	6899      	ldr	r1, [r3, #8]
2ffe90c2:	4281      	cmp	r1, r0
2ffe90c4:	d102      	bne.n	2ffe90cc <nvmem_get_cell_by_index+0x68>
2ffe90c6:	60ab      	str	r3, [r5, #8]
2ffe90c8:	4620      	mov	r0, r4
2ffe90ca:	e7da      	b.n	2ffe9082 <nvmem_get_cell_by_index+0x1e>
2ffe90cc:	4907      	ldr	r1, [pc, #28]	@ (2ffe90ec <nvmem_get_cell_by_index+0x88>)
2ffe90ce:	4808      	ldr	r0, [pc, #32]	@ (2ffe90f0 <nvmem_get_cell_by_index+0x8c>)
2ffe90d0:	f7fe fc50 	bl	2ffe7974 <tf_log>
2ffe90d4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe90d8:	e7d3      	b.n	2ffe9082 <nvmem_get_cell_by_index+0x1e>
2ffe90da:	bf00      	nop
2ffe90dc:	2fff2d63 	.word	0x2fff2d63
2ffe90e0:	2fff2d6f 	.word	0x2fff2d6f
2ffe90e4:	2fff1aa7 	.word	0x2fff1aa7
2ffe90e8:	2fff56d4 	.word	0x2fff56d4
2ffe90ec:	2fff2daf 	.word	0x2fff2daf
2ffe90f0:	2fff2d86 	.word	0x2fff2d86

2ffe90f4 <nvmem_get_cell_by_name>:
2ffe90f4:	b570      	push	{r4, r5, r6, lr}
2ffe90f6:	461e      	mov	r6, r3
2ffe90f8:	4613      	mov	r3, r2
2ffe90fa:	4604      	mov	r4, r0
2ffe90fc:	4a07      	ldr	r2, [pc, #28]	@ (2ffe911c <nvmem_get_cell_by_name+0x28>)
2ffe90fe:	460d      	mov	r5, r1
2ffe9100:	f006 fce3 	bl	2ffefaca <fdt_stringlist_search>
2ffe9104:	1e02      	subs	r2, r0, #0
2ffe9106:	db06      	blt.n	2ffe9116 <nvmem_get_cell_by_name+0x22>
2ffe9108:	4633      	mov	r3, r6
2ffe910a:	4629      	mov	r1, r5
2ffe910c:	4620      	mov	r0, r4
2ffe910e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe9112:	f7ff bfa7 	b.w	2ffe9064 <nvmem_get_cell_by_index>
2ffe9116:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe911a:	bd70      	pop	{r4, r5, r6, pc}
2ffe911c:	2fff2d9e 	.word	0x2fff2d9e

2ffe9120 <stm32_tamp_nvram_write_bkp>:
2ffe9120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe9124:	460d      	mov	r5, r1
2ffe9126:	ea4f 0891 	mov.w	r8, r1, lsr #2
2ffe912a:	4606      	mov	r6, r0
2ffe912c:	4641      	mov	r1, r8
2ffe912e:	4617      	mov	r7, r2
2ffe9130:	f005 fac1 	bl	2ffee6b6 <stm32_tamp_nvram_reg_get_zone>
2ffe9134:	1e04      	subs	r4, r0, #0
2ffe9136:	db1f      	blt.n	2ffe9178 <stm32_tamp_nvram_write_bkp+0x58>
2ffe9138:	2030      	movs	r0, #48	@ 0x30
2ffe913a:	f7ff fc47 	bl	2ffe89cc <clk_is_enabled>
2ffe913e:	6a33      	ldr	r3, [r6, #32]
2ffe9140:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
2ffe9144:	2b03      	cmp	r3, #3
2ffe9146:	d804      	bhi.n	2ffe9152 <stm32_tamp_nvram_write_bkp+0x32>
2ffe9148:	b12b      	cbz	r3, 2ffe9156 <stm32_tamp_nvram_write_bkp+0x36>
2ffe914a:	b138      	cbz	r0, 2ffe915c <stm32_tamp_nvram_write_bkp+0x3c>
2ffe914c:	6833      	ldr	r3, [r6, #0]
2ffe914e:	50ef      	str	r7, [r5, r3]
2ffe9150:	e001      	b.n	2ffe9156 <stm32_tamp_nvram_write_bkp+0x36>
2ffe9152:	2b04      	cmp	r3, #4
2ffe9154:	d10b      	bne.n	2ffe916e <stm32_tamp_nvram_write_bkp+0x4e>
2ffe9156:	2000      	movs	r0, #0
2ffe9158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe915c:	2030      	movs	r0, #48	@ 0x30
2ffe915e:	f7ff fbff 	bl	2ffe8960 <clk_enable>
2ffe9162:	6833      	ldr	r3, [r6, #0]
2ffe9164:	2030      	movs	r0, #48	@ 0x30
2ffe9166:	50ef      	str	r7, [r5, r3]
2ffe9168:	f7ff fc0c 	bl	2ffe8984 <clk_disable>
2ffe916c:	e7f3      	b.n	2ffe9156 <stm32_tamp_nvram_write_bkp+0x36>
2ffe916e:	4804      	ldr	r0, [pc, #16]	@ (2ffe9180 <stm32_tamp_nvram_write_bkp+0x60>)
2ffe9170:	4642      	mov	r2, r8
2ffe9172:	4621      	mov	r1, r4
2ffe9174:	f7fe fbfe 	bl	2ffe7974 <tf_log>
2ffe9178:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe917c:	e7ec      	b.n	2ffe9158 <stm32_tamp_nvram_write_bkp+0x38>
2ffe917e:	bf00      	nop
2ffe9180:	2fff2dc1 	.word	0x2fff2dc1

2ffe9184 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>:
2ffe9184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe9188:	460e      	mov	r6, r1
2ffe918a:	ea4f 0891 	mov.w	r8, r1, lsr #2
2ffe918e:	4607      	mov	r7, r0
2ffe9190:	4641      	mov	r1, r8
2ffe9192:	4615      	mov	r5, r2
2ffe9194:	f005 fa8f 	bl	2ffee6b6 <stm32_tamp_nvram_reg_get_zone>
2ffe9198:	1e04      	subs	r4, r0, #0
2ffe919a:	db14      	blt.n	2ffe91c6 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x42>
2ffe919c:	2030      	movs	r0, #48	@ 0x30
2ffe919e:	f7ff fc15 	bl	2ffe89cc <clk_is_enabled>
2ffe91a2:	6a3b      	ldr	r3, [r7, #32]
2ffe91a4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
2ffe91a8:	2b03      	cmp	r3, #3
2ffe91aa:	d908      	bls.n	2ffe91be <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x3a>
2ffe91ac:	2b04      	cmp	r3, #4
2ffe91ae:	d017      	beq.n	2ffe91e0 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x5c>
2ffe91b0:	480c      	ldr	r0, [pc, #48]	@ (2ffe91e4 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x60>)
2ffe91b2:	4642      	mov	r2, r8
2ffe91b4:	4621      	mov	r1, r4
2ffe91b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffe91ba:	f7fe bbdb 	b.w	2ffe7974 <tf_log>
2ffe91be:	b120      	cbz	r0, 2ffe91ca <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x46>
2ffe91c0:	683b      	ldr	r3, [r7, #0]
2ffe91c2:	58f3      	ldr	r3, [r6, r3]
2ffe91c4:	602b      	str	r3, [r5, #0]
2ffe91c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe91ca:	2030      	movs	r0, #48	@ 0x30
2ffe91cc:	f7ff fbc8 	bl	2ffe8960 <clk_enable>
2ffe91d0:	683b      	ldr	r3, [r7, #0]
2ffe91d2:	2030      	movs	r0, #48	@ 0x30
2ffe91d4:	58f3      	ldr	r3, [r6, r3]
2ffe91d6:	602b      	str	r3, [r5, #0]
2ffe91d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffe91dc:	f7ff bbd2 	b.w	2ffe8984 <clk_disable>
2ffe91e0:	2300      	movs	r3, #0
2ffe91e2:	e7ef      	b.n	2ffe91c4 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x40>
2ffe91e4:	2fff2dc1 	.word	0x2fff2dc1

2ffe91e8 <stm32_tamp_nvram_read_cell>:
2ffe91e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe91ec:	460e      	mov	r6, r1
2ffe91ee:	6881      	ldr	r1, [r0, #8]
2ffe91f0:	f8d1 8004 	ldr.w	r8, [r1, #4]
2ffe91f4:	6841      	ldr	r1, [r0, #4]
2ffe91f6:	4291      	cmp	r1, r2
2ffe91f8:	d904      	bls.n	2ffe9204 <stm32_tamp_nvram_read_cell+0x1c>
2ffe91fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe91fe:	b003      	add	sp, #12
2ffe9200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe9204:	b103      	cbz	r3, 2ffe9208 <stm32_tamp_nvram_read_cell+0x20>
2ffe9206:	6019      	str	r1, [r3, #0]
2ffe9208:	6807      	ldr	r7, [r0, #0]
2ffe920a:	f04f 0900 	mov.w	r9, #0
2ffe920e:	6845      	ldr	r5, [r0, #4]
2ffe9210:	463c      	mov	r4, r7
2ffe9212:	443d      	add	r5, r7
2ffe9214:	42a5      	cmp	r5, r4
2ffe9216:	d801      	bhi.n	2ffe921c <stm32_tamp_nvram_read_cell+0x34>
2ffe9218:	2000      	movs	r0, #0
2ffe921a:	e7f0      	b.n	2ffe91fe <stm32_tamp_nvram_read_cell+0x16>
2ffe921c:	f024 0103 	bic.w	r1, r4, #3
2ffe9220:	f104 0a04 	add.w	sl, r4, #4
2ffe9224:	4555      	cmp	r5, sl
2ffe9226:	d31c      	bcc.n	2ffe9262 <stm32_tamp_nvram_read_cell+0x7a>
2ffe9228:	1e63      	subs	r3, r4, #1
2ffe922a:	f043 0303 	orr.w	r3, r3, #3
2ffe922e:	3301      	adds	r3, #1
2ffe9230:	428b      	cmp	r3, r1
2ffe9232:	d116      	bne.n	2ffe9262 <stm32_tamp_nvram_read_cell+0x7a>
2ffe9234:	eba4 0b07 	sub.w	fp, r4, r7
2ffe9238:	aa01      	add	r2, sp, #4
2ffe923a:	44b3      	add	fp, r6
2ffe923c:	4621      	mov	r1, r4
2ffe923e:	f8cd 9004 	str.w	r9, [sp, #4]
2ffe9242:	4640      	mov	r0, r8
2ffe9244:	f7ff ff9e 	bl	2ffe9184 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffe9248:	2204      	movs	r2, #4
2ffe924a:	4658      	mov	r0, fp
2ffe924c:	eb0d 0102 	add.w	r1, sp, r2
2ffe9250:	f006 fca5 	bl	2ffefb9e <memcpy>
2ffe9254:	4583      	cmp	fp, r0
2ffe9256:	d014      	beq.n	2ffe9282 <stm32_tamp_nvram_read_cell+0x9a>
2ffe9258:	08a1      	lsrs	r1, r4, #2
2ffe925a:	480b      	ldr	r0, [pc, #44]	@ (2ffe9288 <stm32_tamp_nvram_read_cell+0xa0>)
2ffe925c:	f7fe fb8a 	bl	2ffe7974 <tf_log>
2ffe9260:	e7cb      	b.n	2ffe91fa <stm32_tamp_nvram_read_cell+0x12>
2ffe9262:	eba4 0a01 	sub.w	sl, r4, r1
2ffe9266:	aa01      	add	r2, sp, #4
2ffe9268:	f8cd 9004 	str.w	r9, [sp, #4]
2ffe926c:	4640      	mov	r0, r8
2ffe926e:	ea4f 0aca 	mov.w	sl, sl, lsl #3
2ffe9272:	f7ff ff87 	bl	2ffe9184 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffe9276:	9b01      	ldr	r3, [sp, #4]
2ffe9278:	fa23 f30a 	lsr.w	r3, r3, sl
2ffe927c:	f104 0a01 	add.w	sl, r4, #1
2ffe9280:	5533      	strb	r3, [r6, r4]
2ffe9282:	4654      	mov	r4, sl
2ffe9284:	e7c6      	b.n	2ffe9214 <stm32_tamp_nvram_read_cell+0x2c>
2ffe9286:	bf00      	nop
2ffe9288:	2fff2de8 	.word	0x2fff2de8

2ffe928c <stm32_tamp_nvram_write_cell>:
2ffe928c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe9290:	460e      	mov	r6, r1
2ffe9292:	6845      	ldr	r5, [r0, #4]
2ffe9294:	b085      	sub	sp, #20
2ffe9296:	6883      	ldr	r3, [r0, #8]
2ffe9298:	4295      	cmp	r5, r2
2ffe929a:	f8d3 9004 	ldr.w	r9, [r3, #4]
2ffe929e:	d327      	bcc.n	2ffe92f0 <stm32_tamp_nvram_write_cell+0x64>
2ffe92a0:	f8d0 8000 	ldr.w	r8, [r0]
2ffe92a4:	f10d 0a0c 	add.w	sl, sp, #12
2ffe92a8:	4445      	add	r5, r8
2ffe92aa:	4644      	mov	r4, r8
2ffe92ac:	42a5      	cmp	r5, r4
2ffe92ae:	d801      	bhi.n	2ffe92b4 <stm32_tamp_nvram_write_cell+0x28>
2ffe92b0:	2400      	movs	r4, #0
2ffe92b2:	e02b      	b.n	2ffe930c <stm32_tamp_nvram_write_cell+0x80>
2ffe92b4:	eba4 0708 	sub.w	r7, r4, r8
2ffe92b8:	f104 0b04 	add.w	fp, r4, #4
2ffe92bc:	455d      	cmp	r5, fp
2ffe92be:	f024 0103 	bic.w	r1, r4, #3
2ffe92c2:	eb06 0007 	add.w	r0, r6, r7
2ffe92c6:	d325      	bcc.n	2ffe9314 <stm32_tamp_nvram_write_cell+0x88>
2ffe92c8:	1e62      	subs	r2, r4, #1
2ffe92ca:	f042 0203 	orr.w	r2, r2, #3
2ffe92ce:	3201      	adds	r2, #1
2ffe92d0:	428a      	cmp	r2, r1
2ffe92d2:	d11f      	bne.n	2ffe9314 <stm32_tamp_nvram_write_cell+0x88>
2ffe92d4:	2300      	movs	r3, #0
2ffe92d6:	4601      	mov	r1, r0
2ffe92d8:	9303      	str	r3, [sp, #12]
2ffe92da:	2204      	movs	r2, #4
2ffe92dc:	08a7      	lsrs	r7, r4, #2
2ffe92de:	4650      	mov	r0, sl
2ffe92e0:	f006 fc5d 	bl	2ffefb9e <memcpy>
2ffe92e4:	4582      	cmp	sl, r0
2ffe92e6:	d006      	beq.n	2ffe92f6 <stm32_tamp_nvram_write_cell+0x6a>
2ffe92e8:	4818      	ldr	r0, [pc, #96]	@ (2ffe934c <stm32_tamp_nvram_write_cell+0xc0>)
2ffe92ea:	4639      	mov	r1, r7
2ffe92ec:	f7fe fb42 	bl	2ffe7974 <tf_log>
2ffe92f0:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe92f4:	e00a      	b.n	2ffe930c <stm32_tamp_nvram_write_cell+0x80>
2ffe92f6:	9a03      	ldr	r2, [sp, #12]
2ffe92f8:	4621      	mov	r1, r4
2ffe92fa:	4648      	mov	r0, r9
2ffe92fc:	f7ff ff10 	bl	2ffe9120 <stm32_tamp_nvram_write_bkp>
2ffe9300:	4604      	mov	r4, r0
2ffe9302:	b308      	cbz	r0, 2ffe9348 <stm32_tamp_nvram_write_cell+0xbc>
2ffe9304:	4811      	ldr	r0, [pc, #68]	@ (2ffe934c <stm32_tamp_nvram_write_cell+0xc0>)
2ffe9306:	4639      	mov	r1, r7
2ffe9308:	f7fe fb34 	bl	2ffe7974 <tf_log>
2ffe930c:	4620      	mov	r0, r4
2ffe930e:	b005      	add	sp, #20
2ffe9310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe9314:	f816 b007 	ldrb.w	fp, [r6, r7]
2ffe9318:	2300      	movs	r3, #0
2ffe931a:	1a67      	subs	r7, r4, r1
2ffe931c:	4652      	mov	r2, sl
2ffe931e:	9303      	str	r3, [sp, #12]
2ffe9320:	4648      	mov	r0, r9
2ffe9322:	00ff      	lsls	r7, r7, #3
2ffe9324:	9101      	str	r1, [sp, #4]
2ffe9326:	f7ff ff2d 	bl	2ffe9184 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffe932a:	9a03      	ldr	r2, [sp, #12]
2ffe932c:	23ff      	movs	r3, #255	@ 0xff
2ffe932e:	9901      	ldr	r1, [sp, #4]
2ffe9330:	fa03 f007 	lsl.w	r0, r3, r7
2ffe9334:	ea22 0200 	bic.w	r2, r2, r0
2ffe9338:	4648      	mov	r0, r9
2ffe933a:	fa0b f307 	lsl.w	r3, fp, r7
2ffe933e:	f104 0b01 	add.w	fp, r4, #1
2ffe9342:	431a      	orrs	r2, r3
2ffe9344:	f7ff feec 	bl	2ffe9120 <stm32_tamp_nvram_write_bkp>
2ffe9348:	465c      	mov	r4, fp
2ffe934a:	e7af      	b.n	2ffe92ac <stm32_tamp_nvram_write_cell+0x20>
2ffe934c:	2fff2de8 	.word	0x2fff2de8

2ffe9350 <stm32_tamp_nvram_update_rights>:
2ffe9350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe9354:	2030      	movs	r0, #48	@ 0x30
2ffe9356:	b089      	sub	sp, #36	@ 0x24
2ffe9358:	f7ff fb38 	bl	2ffe89cc <clk_is_enabled>
2ffe935c:	f080 0001 	eor.w	r0, r0, #1
2ffe9360:	f010 03ff 	ands.w	r3, r0, #255	@ 0xff
2ffe9364:	9303      	str	r3, [sp, #12]
2ffe9366:	d002      	beq.n	2ffe936e <stm32_tamp_nvram_update_rights+0x1e>
2ffe9368:	2030      	movs	r0, #48	@ 0x30
2ffe936a:	f7ff faf9 	bl	2ffe8960 <clk_enable>
2ffe936e:	4d24      	ldr	r5, [pc, #144]	@ (2ffe9400 <stm32_tamp_nvram_update_rights+0xb0>)
2ffe9370:	f04f 0b0c 	mov.w	fp, #12
2ffe9374:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 2ffe9404 <stm32_tamp_nvram_update_rights+0xb4>
2ffe9378:	ae05      	add	r6, sp, #20
2ffe937a:	f8d5 a024 	ldr.w	sl, [r5, #36]	@ 0x24
2ffe937e:	2400      	movs	r4, #0
2ffe9380:	9404      	str	r4, [sp, #16]
2ffe9382:	46c1      	mov	r9, r8
2ffe9384:	f8da 7000 	ldr.w	r7, [sl]
2ffe9388:	3f01      	subs	r7, #1
2ffe938a:	42bc      	cmp	r4, r7
2ffe938c:	d30c      	bcc.n	2ffe93a8 <stm32_tamp_nvram_update_rights+0x58>
2ffe938e:	69ab      	ldr	r3, [r5, #24]
2ffe9390:	481b      	ldr	r0, [pc, #108]	@ (2ffe9400 <stm32_tamp_nvram_update_rights+0xb0>)
2ffe9392:	f8c5 901c 	str.w	r9, [r5, #28]
2ffe9396:	3b01      	subs	r3, #1
2ffe9398:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
2ffe939c:	f002 fdee 	bl	2ffebf7c <stm32_tamp_nvram_get_access_rights>
2ffe93a0:	6228      	str	r0, [r5, #32]
2ffe93a2:	bb20      	cbnz	r0, 2ffe93ee <stm32_tamp_nvram_update_rights+0x9e>
2ffe93a4:	4818      	ldr	r0, [pc, #96]	@ (2ffe9408 <stm32_tamp_nvram_update_rights+0xb8>)
2ffe93a6:	e015      	b.n	2ffe93d4 <stm32_tamp_nvram_update_rights+0x84>
2ffe93a8:	f8da 3004 	ldr.w	r3, [sl, #4]
2ffe93ac:	fb0b 3304 	mla	r3, fp, r4, r3
2ffe93b0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
2ffe93b4:	ab04      	add	r3, sp, #16
2ffe93b6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
2ffe93ba:	9300      	str	r3, [sp, #0]
2ffe93bc:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
2ffe93c0:	6868      	ldr	r0, [r5, #4]
2ffe93c2:	f005 f98d 	bl	2ffee6e0 <stm32_tamp_nvram_reg_field_read>
2ffe93c6:	b160      	cbz	r0, 2ffe93e2 <stm32_tamp_nvram_update_rights+0x92>
2ffe93c8:	4810      	ldr	r0, [pc, #64]	@ (2ffe940c <stm32_tamp_nvram_update_rights+0xbc>)
2ffe93ca:	f7fe fad3 	bl	2ffe7974 <tf_log>
2ffe93ce:	4810      	ldr	r0, [pc, #64]	@ (2ffe9410 <stm32_tamp_nvram_update_rights+0xc0>)
2ffe93d0:	2300      	movs	r3, #0
2ffe93d2:	61eb      	str	r3, [r5, #28]
2ffe93d4:	f7fe face 	bl	2ffe7974 <tf_log>
2ffe93d8:	f06f 000b 	mvn.w	r0, #11
2ffe93dc:	b009      	add	sp, #36	@ 0x24
2ffe93de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe93e2:	9b04      	ldr	r3, [sp, #16]
2ffe93e4:	3401      	adds	r4, #1
2ffe93e6:	3b01      	subs	r3, #1
2ffe93e8:	f848 3b04 	str.w	r3, [r8], #4
2ffe93ec:	e7cd      	b.n	2ffe938a <stm32_tamp_nvram_update_rights+0x3a>
2ffe93ee:	9b03      	ldr	r3, [sp, #12]
2ffe93f0:	b90b      	cbnz	r3, 2ffe93f6 <stm32_tamp_nvram_update_rights+0xa6>
2ffe93f2:	2000      	movs	r0, #0
2ffe93f4:	e7f2      	b.n	2ffe93dc <stm32_tamp_nvram_update_rights+0x8c>
2ffe93f6:	2030      	movs	r0, #48	@ 0x30
2ffe93f8:	f7ff fac4 	bl	2ffe8984 <clk_disable>
2ffe93fc:	e7f9      	b.n	2ffe93f2 <stm32_tamp_nvram_update_rights+0xa2>
2ffe93fe:	bf00      	nop
2ffe9400:	2fff56ec 	.word	0x2fff56ec
2ffe9404:	2fff56e0 	.word	0x2fff56e0
2ffe9408:	2fff2e58 	.word	0x2fff2e58
2ffe940c:	2fff2e01 	.word	0x2fff2e01
2ffe9410:	2fff2e28 	.word	0x2fff2e28

2ffe9414 <stm32_tamp_nvram_init>:
2ffe9414:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe9416:	2600      	movs	r6, #0
2ffe9418:	4668      	mov	r0, sp
2ffe941a:	e9cd 6600 	strd	r6, r6, [sp]
2ffe941e:	f000 faed 	bl	2ffe99fc <fdt_get_address>
2ffe9422:	b918      	cbnz	r0, 2ffe942c <stm32_tamp_nvram_init+0x18>
2ffe9424:	f7fe fb42 	bl	2ffe7aac <console_flush>
2ffe9428:	f7fb e804 	blx	2ffe4434 <do_panic>
2ffe942c:	4a25      	ldr	r2, [pc, #148]	@ (2ffe94c4 <stm32_tamp_nvram_init+0xb0>)
2ffe942e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9432:	9800      	ldr	r0, [sp, #0]
2ffe9434:	f006 fb7c 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9438:	1e05      	subs	r5, r0, #0
2ffe943a:	da03      	bge.n	2ffe9444 <stm32_tamp_nvram_init+0x30>
2ffe943c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9440:	b002      	add	sp, #8
2ffe9442:	bd70      	pop	{r4, r5, r6, pc}
2ffe9444:	4c20      	ldr	r4, [pc, #128]	@ (2ffe94c8 <stm32_tamp_nvram_init+0xb4>)
2ffe9446:	f002 fd95 	bl	2ffebf74 <stm32_tamp_nvram_get_cdata>
2ffe944a:	4a20      	ldr	r2, [pc, #128]	@ (2ffe94cc <stm32_tamp_nvram_init+0xb8>)
2ffe944c:	ab01      	add	r3, sp, #4
2ffe944e:	6260      	str	r0, [r4, #36]	@ 0x24
2ffe9450:	4629      	mov	r1, r5
2ffe9452:	9800      	ldr	r0, [sp, #0]
2ffe9454:	f006 fa38 	bl	2ffef8c8 <fdt_getprop>
2ffe9458:	4603      	mov	r3, r0
2ffe945a:	2800      	cmp	r0, #0
2ffe945c:	d0ee      	beq.n	2ffe943c <stm32_tamp_nvram_init+0x28>
2ffe945e:	9a01      	ldr	r2, [sp, #4]
2ffe9460:	2a08      	cmp	r2, #8
2ffe9462:	d1eb      	bne.n	2ffe943c <stm32_tamp_nvram_init+0x28>
2ffe9464:	6800      	ldr	r0, [r0, #0]
2ffe9466:	4629      	mov	r1, r5
2ffe9468:	f005 f923 	bl	2ffee6b2 <fdt32_to_cpu>
2ffe946c:	6020      	str	r0, [r4, #0]
2ffe946e:	6858      	ldr	r0, [r3, #4]
2ffe9470:	f005 f91f 	bl	2ffee6b2 <fdt32_to_cpu>
2ffe9474:	60a0      	str	r0, [r4, #8]
2ffe9476:	9800      	ldr	r0, [sp, #0]
2ffe9478:	f006 fad3 	bl	2ffefa22 <fdt_parent_offset>
2ffe947c:	1e01      	subs	r1, r0, #0
2ffe947e:	dbdd      	blt.n	2ffe943c <stm32_tamp_nvram_init+0x28>
2ffe9480:	4a12      	ldr	r2, [pc, #72]	@ (2ffe94cc <stm32_tamp_nvram_init+0xb8>)
2ffe9482:	ab01      	add	r3, sp, #4
2ffe9484:	9800      	ldr	r0, [sp, #0]
2ffe9486:	f006 fa1f 	bl	2ffef8c8 <fdt_getprop>
2ffe948a:	4603      	mov	r3, r0
2ffe948c:	2800      	cmp	r0, #0
2ffe948e:	d0d5      	beq.n	2ffe943c <stm32_tamp_nvram_init+0x28>
2ffe9490:	9a01      	ldr	r2, [sp, #4]
2ffe9492:	2a08      	cmp	r2, #8
2ffe9494:	d1d2      	bne.n	2ffe943c <stm32_tamp_nvram_init+0x28>
2ffe9496:	6800      	ldr	r0, [r0, #0]
2ffe9498:	f005 f90b 	bl	2ffee6b2 <fdt32_to_cpu>
2ffe949c:	6060      	str	r0, [r4, #4]
2ffe949e:	6858      	ldr	r0, [r3, #4]
2ffe94a0:	f005 f907 	bl	2ffee6b2 <fdt32_to_cpu>
2ffe94a4:	68a3      	ldr	r3, [r4, #8]
2ffe94a6:	60e0      	str	r0, [r4, #12]
2ffe94a8:	089b      	lsrs	r3, r3, #2
2ffe94aa:	61a3      	str	r3, [r4, #24]
2ffe94ac:	f7ff ff50 	bl	2ffe9350 <stm32_tamp_nvram_update_rights>
2ffe94b0:	9b00      	ldr	r3, [sp, #0]
2ffe94b2:	4622      	mov	r2, r4
2ffe94b4:	4906      	ldr	r1, [pc, #24]	@ (2ffe94d0 <stm32_tamp_nvram_init+0xbc>)
2ffe94b6:	4628      	mov	r0, r5
2ffe94b8:	6165      	str	r5, [r4, #20]
2ffe94ba:	6123      	str	r3, [r4, #16]
2ffe94bc:	f7ff fdc0 	bl	2ffe9040 <nvmem_driver_register>
2ffe94c0:	4630      	mov	r0, r6
2ffe94c2:	e7bd      	b.n	2ffe9440 <stm32_tamp_nvram_init+0x2c>
2ffe94c4:	2fff2e87 	.word	0x2fff2e87
2ffe94c8:	2fff56ec 	.word	0x2fff56ec
2ffe94cc:	2fff1aa7 	.word	0x2fff1aa7
2ffe94d0:	2fff0040 	.word	0x2fff0040

2ffe94d4 <regulator_get_by_name>:
2ffe94d4:	b570      	push	{r4, r5, r6, lr}
2ffe94d6:	4605      	mov	r5, r0
2ffe94d8:	b9b0      	cbnz	r0, 2ffe9508 <regulator_get_by_name+0x34>
2ffe94da:	480d      	ldr	r0, [pc, #52]	@ (2ffe9510 <regulator_get_by_name+0x3c>)
2ffe94dc:	2146      	movs	r1, #70	@ 0x46
2ffe94de:	f004 fa09 	bl	2ffed8f4 <__assert>
2ffe94e2:	6818      	ldr	r0, [r3, #0]
2ffe94e4:	4629      	mov	r1, r5
2ffe94e6:	f006 fc67 	bl	2ffefdb8 <strcmp>
2ffe94ea:	b158      	cbz	r0, 2ffe9504 <regulator_get_by_name+0x30>
2ffe94ec:	3414      	adds	r4, #20
2ffe94ee:	3e01      	subs	r6, #1
2ffe94f0:	d002      	beq.n	2ffe94f8 <regulator_get_by_name+0x24>
2ffe94f2:	6823      	ldr	r3, [r4, #0]
2ffe94f4:	2b00      	cmp	r3, #0
2ffe94f6:	d1f4      	bne.n	2ffe94e2 <regulator_get_by_name+0xe>
2ffe94f8:	4906      	ldr	r1, [pc, #24]	@ (2ffe9514 <regulator_get_by_name+0x40>)
2ffe94fa:	462a      	mov	r2, r5
2ffe94fc:	4806      	ldr	r0, [pc, #24]	@ (2ffe9518 <regulator_get_by_name+0x44>)
2ffe94fe:	2400      	movs	r4, #0
2ffe9500:	f7fe fa38 	bl	2ffe7974 <tf_log>
2ffe9504:	4620      	mov	r0, r4
2ffe9506:	bd70      	pop	{r4, r5, r6, pc}
2ffe9508:	4c04      	ldr	r4, [pc, #16]	@ (2ffe951c <regulator_get_by_name+0x48>)
2ffe950a:	2614      	movs	r6, #20
2ffe950c:	e7ef      	b.n	2ffe94ee <regulator_get_by_name+0x1a>
2ffe950e:	bf00      	nop
2ffe9510:	2fff2e9f 	.word	0x2fff2e9f
2ffe9514:	2fff30f8 	.word	0x2fff30f8
2ffe9518:	2fff2ec5 	.word	0x2fff2ec5
2ffe951c:	2fff5718 	.word	0x2fff5718

2ffe9520 <regulator_get_by_supply_name>:
2ffe9520:	b530      	push	{r4, r5, lr}
2ffe9522:	b091      	sub	sp, #68	@ 0x44
2ffe9524:	4613      	mov	r3, r2
2ffe9526:	4604      	mov	r4, r0
2ffe9528:	4a15      	ldr	r2, [pc, #84]	@ (2ffe9580 <regulator_get_by_supply_name+0x60>)
2ffe952a:	460d      	mov	r5, r1
2ffe952c:	4668      	mov	r0, sp
2ffe952e:	213f      	movs	r1, #63	@ 0x3f
2ffe9530:	f006 fc2a 	bl	2ffefd88 <snprintf>
2ffe9534:	283e      	cmp	r0, #62	@ 0x3e
2ffe9536:	d903      	bls.n	2ffe9540 <regulator_get_by_supply_name+0x20>
2ffe9538:	4812      	ldr	r0, [pc, #72]	@ (2ffe9584 <regulator_get_by_supply_name+0x64>)
2ffe953a:	215b      	movs	r1, #91	@ 0x5b
2ffe953c:	f004 f9da 	bl	2ffed8f4 <__assert>
2ffe9540:	2300      	movs	r3, #0
2ffe9542:	466a      	mov	r2, sp
2ffe9544:	4629      	mov	r1, r5
2ffe9546:	4620      	mov	r0, r4
2ffe9548:	f006 f9be 	bl	2ffef8c8 <fdt_getprop>
2ffe954c:	b120      	cbz	r0, 2ffe9558 <regulator_get_by_supply_name+0x38>
2ffe954e:	6800      	ldr	r0, [r0, #0]
2ffe9550:	f005 f8de 	bl	2ffee710 <fdt32_to_cpu>
2ffe9554:	1e02      	subs	r2, r0, #0
2ffe9556:	da10      	bge.n	2ffe957a <regulator_get_by_supply_name+0x5a>
2ffe9558:	2000      	movs	r0, #0
2ffe955a:	b011      	add	sp, #68	@ 0x44
2ffe955c:	bd30      	pop	{r4, r5, pc}
2ffe955e:	6841      	ldr	r1, [r0, #4]
2ffe9560:	428a      	cmp	r2, r1
2ffe9562:	d0fa      	beq.n	2ffe955a <regulator_get_by_supply_name+0x3a>
2ffe9564:	3014      	adds	r0, #20
2ffe9566:	3b01      	subs	r3, #1
2ffe9568:	d002      	beq.n	2ffe9570 <regulator_get_by_supply_name+0x50>
2ffe956a:	6801      	ldr	r1, [r0, #0]
2ffe956c:	2900      	cmp	r1, #0
2ffe956e:	d1f6      	bne.n	2ffe955e <regulator_get_by_supply_name+0x3e>
2ffe9570:	4905      	ldr	r1, [pc, #20]	@ (2ffe9588 <regulator_get_by_supply_name+0x68>)
2ffe9572:	4806      	ldr	r0, [pc, #24]	@ (2ffe958c <regulator_get_by_supply_name+0x6c>)
2ffe9574:	f7fe f9fe 	bl	2ffe7974 <tf_log>
2ffe9578:	e7ee      	b.n	2ffe9558 <regulator_get_by_supply_name+0x38>
2ffe957a:	4805      	ldr	r0, [pc, #20]	@ (2ffe9590 <regulator_get_by_supply_name+0x70>)
2ffe957c:	2314      	movs	r3, #20
2ffe957e:	e7f2      	b.n	2ffe9566 <regulator_get_by_supply_name+0x46>
2ffe9580:	2fff2ed8 	.word	0x2fff2ed8
2ffe9584:	2fff2e9f 	.word	0x2fff2e9f
2ffe9588:	2fff30df 	.word	0x2fff30df
2ffe958c:	2fff2ee2 	.word	0x2fff2ee2
2ffe9590:	2fff5718 	.word	0x2fff5718

2ffe9594 <regulator_enable>:
2ffe9594:	b538      	push	{r3, r4, r5, lr}
2ffe9596:	4604      	mov	r4, r0
2ffe9598:	b918      	cbnz	r0, 2ffe95a2 <regulator_enable+0xe>
2ffe959a:	4809      	ldr	r0, [pc, #36]	@ (2ffe95c0 <regulator_enable+0x2c>)
2ffe959c:	218c      	movs	r1, #140	@ 0x8c
2ffe959e:	f004 f9a9 	bl	2ffed8f4 <__assert>
2ffe95a2:	6800      	ldr	r0, [r0, #0]
2ffe95a4:	6843      	ldr	r3, [r0, #4]
2ffe95a6:	681b      	ldr	r3, [r3, #0]
2ffe95a8:	b13b      	cbz	r3, 2ffe95ba <regulator_enable+0x26>
2ffe95aa:	2101      	movs	r1, #1
2ffe95ac:	4798      	blx	r3
2ffe95ae:	4605      	mov	r5, r0
2ffe95b0:	6920      	ldr	r0, [r4, #16]
2ffe95b2:	f7ff fa35 	bl	2ffe8a20 <udelay>
2ffe95b6:	4628      	mov	r0, r5
2ffe95b8:	bd38      	pop	{r3, r4, r5, pc}
2ffe95ba:	f06f 0512 	mvn.w	r5, #18
2ffe95be:	e7f7      	b.n	2ffe95b0 <regulator_enable+0x1c>
2ffe95c0:	2fff2e9f 	.word	0x2fff2e9f

2ffe95c4 <regulator_get_voltage>:
2ffe95c4:	b538      	push	{r3, r4, r5, lr}
2ffe95c6:	4604      	mov	r4, r0
2ffe95c8:	b920      	cbnz	r0, 2ffe95d4 <regulator_get_voltage+0x10>
2ffe95ca:	480f      	ldr	r0, [pc, #60]	@ (2ffe9608 <regulator_get_voltage+0x44>)
2ffe95cc:	f44f 7184 	mov.w	r1, #264	@ 0x108
2ffe95d0:	f004 f990 	bl	2ffed8f4 <__assert>
2ffe95d4:	6800      	ldr	r0, [r0, #0]
2ffe95d6:	6843      	ldr	r3, [r0, #4]
2ffe95d8:	68db      	ldr	r3, [r3, #12]
2ffe95da:	b913      	cbnz	r3, 2ffe95e2 <regulator_get_voltage+0x1e>
2ffe95dc:	8925      	ldrh	r5, [r4, #8]
2ffe95de:	4628      	mov	r0, r5
2ffe95e0:	bd38      	pop	{r3, r4, r5, pc}
2ffe95e2:	f005 f89c 	bl	2ffee71e <lock_driver.isra.0>
2ffe95e6:	6820      	ldr	r0, [r4, #0]
2ffe95e8:	6843      	ldr	r3, [r0, #4]
2ffe95ea:	68db      	ldr	r3, [r3, #12]
2ffe95ec:	4798      	blx	r3
2ffe95ee:	1e05      	subs	r5, r0, #0
2ffe95f0:	da05      	bge.n	2ffe95fe <regulator_get_voltage+0x3a>
2ffe95f2:	6823      	ldr	r3, [r4, #0]
2ffe95f4:	462a      	mov	r2, r5
2ffe95f6:	4805      	ldr	r0, [pc, #20]	@ (2ffe960c <regulator_get_voltage+0x48>)
2ffe95f8:	6819      	ldr	r1, [r3, #0]
2ffe95fa:	f7fe f9bb 	bl	2ffe7974 <tf_log>
2ffe95fe:	6820      	ldr	r0, [r4, #0]
2ffe9600:	f005 f888 	bl	2ffee714 <unlock_driver.isra.0>
2ffe9604:	e7eb      	b.n	2ffe95de <regulator_get_voltage+0x1a>
2ffe9606:	bf00      	nop
2ffe9608:	2fff2e9f 	.word	0x2fff2e9f
2ffe960c:	2fff2efd 	.word	0x2fff2efd

2ffe9610 <regulator_set_voltage>:
2ffe9610:	b538      	push	{r3, r4, r5, lr}
2ffe9612:	460c      	mov	r4, r1
2ffe9614:	4605      	mov	r5, r0
2ffe9616:	b918      	cbnz	r0, 2ffe9620 <regulator_set_voltage+0x10>
2ffe9618:	4816      	ldr	r0, [pc, #88]	@ (2ffe9674 <regulator_set_voltage+0x64>)
2ffe961a:	21d6      	movs	r1, #214	@ 0xd6
2ffe961c:	f004 f96a 	bl	2ffed8f4 <__assert>
2ffe9620:	8903      	ldrh	r3, [r0, #8]
2ffe9622:	428b      	cmp	r3, r1
2ffe9624:	d81e      	bhi.n	2ffe9664 <regulator_set_voltage+0x54>
2ffe9626:	8943      	ldrh	r3, [r0, #10]
2ffe9628:	428b      	cmp	r3, r1
2ffe962a:	d31b      	bcc.n	2ffe9664 <regulator_set_voltage+0x54>
2ffe962c:	f7ff ffca 	bl	2ffe95c4 <regulator_get_voltage>
2ffe9630:	42a0      	cmp	r0, r4
2ffe9632:	d01a      	beq.n	2ffe966a <regulator_set_voltage+0x5a>
2ffe9634:	6828      	ldr	r0, [r5, #0]
2ffe9636:	6843      	ldr	r3, [r0, #4]
2ffe9638:	689b      	ldr	r3, [r3, #8]
2ffe963a:	b1c3      	cbz	r3, 2ffe966e <regulator_set_voltage+0x5e>
2ffe963c:	f005 f86f 	bl	2ffee71e <lock_driver.isra.0>
2ffe9640:	6828      	ldr	r0, [r5, #0]
2ffe9642:	4621      	mov	r1, r4
2ffe9644:	6843      	ldr	r3, [r0, #4]
2ffe9646:	689b      	ldr	r3, [r3, #8]
2ffe9648:	4798      	blx	r3
2ffe964a:	1e04      	subs	r4, r0, #0
2ffe964c:	da05      	bge.n	2ffe965a <regulator_set_voltage+0x4a>
2ffe964e:	682b      	ldr	r3, [r5, #0]
2ffe9650:	4622      	mov	r2, r4
2ffe9652:	4809      	ldr	r0, [pc, #36]	@ (2ffe9678 <regulator_set_voltage+0x68>)
2ffe9654:	6819      	ldr	r1, [r3, #0]
2ffe9656:	f7fe f98d 	bl	2ffe7974 <tf_log>
2ffe965a:	6828      	ldr	r0, [r5, #0]
2ffe965c:	f005 f85a 	bl	2ffee714 <unlock_driver.isra.0>
2ffe9660:	4620      	mov	r0, r4
2ffe9662:	bd38      	pop	{r3, r4, r5, pc}
2ffe9664:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe9668:	e7fa      	b.n	2ffe9660 <regulator_set_voltage+0x50>
2ffe966a:	2400      	movs	r4, #0
2ffe966c:	e7f8      	b.n	2ffe9660 <regulator_set_voltage+0x50>
2ffe966e:	f06f 0412 	mvn.w	r4, #18
2ffe9672:	e7f5      	b.n	2ffe9660 <regulator_set_voltage+0x50>
2ffe9674:	2fff2e9f 	.word	0x2fff2e9f
2ffe9678:	2fff2f23 	.word	0x2fff2f23

2ffe967c <regulator_list_voltages>:
2ffe967c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe967e:	460e      	mov	r6, r1
2ffe9680:	4617      	mov	r7, r2
2ffe9682:	4604      	mov	r4, r0
2ffe9684:	b920      	cbnz	r0, 2ffe9690 <regulator_list_voltages+0x14>
2ffe9686:	f44f 7195 	mov.w	r1, #298	@ 0x12a
2ffe968a:	482f      	ldr	r0, [pc, #188]	@ (2ffe9748 <regulator_list_voltages+0xcc>)
2ffe968c:	f004 f932 	bl	2ffed8f4 <__assert>
2ffe9690:	b911      	cbnz	r1, 2ffe9698 <regulator_list_voltages+0x1c>
2ffe9692:	f240 112b 	movw	r1, #299	@ 0x12b
2ffe9696:	e7f8      	b.n	2ffe968a <regulator_list_voltages+0xe>
2ffe9698:	b912      	cbnz	r2, 2ffe96a0 <regulator_list_voltages+0x24>
2ffe969a:	f44f 7196 	mov.w	r1, #300	@ 0x12c
2ffe969e:	e7f4      	b.n	2ffe968a <regulator_list_voltages+0xe>
2ffe96a0:	6800      	ldr	r0, [r0, #0]
2ffe96a2:	6843      	ldr	r3, [r0, #4]
2ffe96a4:	691b      	ldr	r3, [r3, #16]
2ffe96a6:	2b00      	cmp	r3, #0
2ffe96a8:	d03f      	beq.n	2ffe972a <regulator_list_voltages+0xae>
2ffe96aa:	f005 f838 	bl	2ffee71e <lock_driver.isra.0>
2ffe96ae:	6820      	ldr	r0, [r4, #0]
2ffe96b0:	463a      	mov	r2, r7
2ffe96b2:	4631      	mov	r1, r6
2ffe96b4:	6843      	ldr	r3, [r0, #4]
2ffe96b6:	691b      	ldr	r3, [r3, #16]
2ffe96b8:	4798      	blx	r3
2ffe96ba:	4605      	mov	r5, r0
2ffe96bc:	6820      	ldr	r0, [r4, #0]
2ffe96be:	f005 f829 	bl	2ffee714 <unlock_driver.isra.0>
2ffe96c2:	2d00      	cmp	r5, #0
2ffe96c4:	da07      	bge.n	2ffe96d6 <regulator_list_voltages+0x5a>
2ffe96c6:	6823      	ldr	r3, [r4, #0]
2ffe96c8:	462a      	mov	r2, r5
2ffe96ca:	4820      	ldr	r0, [pc, #128]	@ (2ffe974c <regulator_list_voltages+0xd0>)
2ffe96cc:	6819      	ldr	r1, [r3, #0]
2ffe96ce:	f7fe f951 	bl	2ffe7974 <tf_log>
2ffe96d2:	4628      	mov	r0, r5
2ffe96d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe96d6:	683b      	ldr	r3, [r7, #0]
2ffe96d8:	6830      	ldr	r0, [r6, #0]
2ffe96da:	8962      	ldrh	r2, [r4, #10]
2ffe96dc:	eb00 0143 	add.w	r1, r0, r3, lsl #1
2ffe96e0:	2b01      	cmp	r3, #1
2ffe96e2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
2ffe96e6:	d923      	bls.n	2ffe9730 <regulator_list_voltages+0xb4>
2ffe96e8:	428a      	cmp	r2, r1
2ffe96ea:	d306      	bcc.n	2ffe96fa <regulator_list_voltages+0x7e>
2ffe96ec:	d00a      	beq.n	2ffe9704 <regulator_list_voltages+0x88>
2ffe96ee:	6823      	ldr	r3, [r4, #0]
2ffe96f0:	4817      	ldr	r0, [pc, #92]	@ (2ffe9750 <regulator_list_voltages+0xd4>)
2ffe96f2:	6819      	ldr	r1, [r3, #0]
2ffe96f4:	f7fe f93e 	bl	2ffe7974 <tf_log>
2ffe96f8:	e023      	b.n	2ffe9742 <regulator_list_voltages+0xc6>
2ffe96fa:	3b01      	subs	r3, #1
2ffe96fc:	e7ee      	b.n	2ffe96dc <regulator_list_voltages+0x60>
2ffe96fe:	3b01      	subs	r3, #1
2ffe9700:	3202      	adds	r2, #2
2ffe9702:	6032      	str	r2, [r6, #0]
2ffe9704:	2b01      	cmp	r3, #1
2ffe9706:	d004      	beq.n	2ffe9712 <regulator_list_voltages+0x96>
2ffe9708:	6832      	ldr	r2, [r6, #0]
2ffe970a:	8921      	ldrh	r1, [r4, #8]
2ffe970c:	8810      	ldrh	r0, [r2, #0]
2ffe970e:	4288      	cmp	r0, r1
2ffe9710:	d3f5      	bcc.n	2ffe96fe <regulator_list_voltages+0x82>
2ffe9712:	6831      	ldr	r1, [r6, #0]
2ffe9714:	8922      	ldrh	r2, [r4, #8]
2ffe9716:	8809      	ldrh	r1, [r1, #0]
2ffe9718:	4291      	cmp	r1, r2
2ffe971a:	d003      	beq.n	2ffe9724 <regulator_list_voltages+0xa8>
2ffe971c:	6823      	ldr	r3, [r4, #0]
2ffe971e:	480d      	ldr	r0, [pc, #52]	@ (2ffe9754 <regulator_list_voltages+0xd8>)
2ffe9720:	6819      	ldr	r1, [r3, #0]
2ffe9722:	e7e7      	b.n	2ffe96f4 <regulator_list_voltages+0x78>
2ffe9724:	603b      	str	r3, [r7, #0]
2ffe9726:	2500      	movs	r5, #0
2ffe9728:	e7d3      	b.n	2ffe96d2 <regulator_list_voltages+0x56>
2ffe972a:	f06f 0512 	mvn.w	r5, #18
2ffe972e:	e7d0      	b.n	2ffe96d2 <regulator_list_voltages+0x56>
2ffe9730:	428a      	cmp	r2, r1
2ffe9732:	d1dc      	bne.n	2ffe96ee <regulator_list_voltages+0x72>
2ffe9734:	2b00      	cmp	r3, #0
2ffe9736:	d1ec      	bne.n	2ffe9712 <regulator_list_voltages+0x96>
2ffe9738:	6823      	ldr	r3, [r4, #0]
2ffe973a:	4807      	ldr	r0, [pc, #28]	@ (2ffe9758 <regulator_list_voltages+0xdc>)
2ffe973c:	6819      	ldr	r1, [r3, #0]
2ffe973e:	f7fe f919 	bl	2ffe7974 <tf_log>
2ffe9742:	f06f 0515 	mvn.w	r5, #21
2ffe9746:	e7c4      	b.n	2ffe96d2 <regulator_list_voltages+0x56>
2ffe9748:	2fff2e9f 	.word	0x2fff2e9f
2ffe974c:	2fff2f46 	.word	0x2fff2f46
2ffe9750:	2fff2f6f 	.word	0x2fff2f6f
2ffe9754:	2fff2fba 	.word	0x2fff2fba
2ffe9758:	2fff2f93 	.word	0x2fff2f93

2ffe975c <regulator_get_range>:
2ffe975c:	b508      	push	{r3, lr}
2ffe975e:	b920      	cbnz	r0, 2ffe976a <regulator_get_range+0xe>
2ffe9760:	4805      	ldr	r0, [pc, #20]	@ (2ffe9778 <regulator_get_range+0x1c>)
2ffe9762:	f240 1173 	movw	r1, #371	@ 0x173
2ffe9766:	f004 f8c5 	bl	2ffed8f4 <__assert>
2ffe976a:	b109      	cbz	r1, 2ffe9770 <regulator_get_range+0x14>
2ffe976c:	8903      	ldrh	r3, [r0, #8]
2ffe976e:	800b      	strh	r3, [r1, #0]
2ffe9770:	b10a      	cbz	r2, 2ffe9776 <regulator_get_range+0x1a>
2ffe9772:	8943      	ldrh	r3, [r0, #10]
2ffe9774:	8013      	strh	r3, [r2, #0]
2ffe9776:	bd08      	pop	{r3, pc}
2ffe9778:	2fff2e9f 	.word	0x2fff2e9f

2ffe977c <regulator_register>:
2ffe977c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffe977e:	460e      	mov	r6, r1
2ffe9780:	b9a8      	cbnz	r0, 2ffe97ae <regulator_register+0x32>
2ffe9782:	4853      	ldr	r0, [pc, #332]	@ (2ffe98d0 <regulator_register+0x154>)
2ffe9784:	f44f 7105 	mov.w	r1, #532	@ 0x214
2ffe9788:	f004 f8b4 	bl	2ffed8f4 <__assert>
2ffe978c:	3414      	adds	r4, #20
2ffe978e:	3b01      	subs	r3, #1
2ffe9790:	d002      	beq.n	2ffe9798 <regulator_register+0x1c>
2ffe9792:	6822      	ldr	r2, [r4, #0]
2ffe9794:	2a00      	cmp	r2, #0
2ffe9796:	d1f9      	bne.n	2ffe978c <regulator_register+0x10>
2ffe9798:	4b4e      	ldr	r3, [pc, #312]	@ (2ffe98d4 <regulator_register+0x158>)
2ffe979a:	429c      	cmp	r4, r3
2ffe979c:	d90a      	bls.n	2ffe97b4 <regulator_register+0x38>
2ffe979e:	484e      	ldr	r0, [pc, #312]	@ (2ffe98d8 <regulator_register+0x15c>)
2ffe97a0:	f06f 050b 	mvn.w	r5, #11
2ffe97a4:	f7fe f8e6 	bl	2ffe7974 <tf_log>
2ffe97a8:	4628      	mov	r0, r5
2ffe97aa:	b004      	add	sp, #16
2ffe97ac:	bd70      	pop	{r4, r5, r6, pc}
2ffe97ae:	4c4b      	ldr	r4, [pc, #300]	@ (2ffe98dc <regulator_register+0x160>)
2ffe97b0:	2314      	movs	r3, #20
2ffe97b2:	e7ec      	b.n	2ffe978e <regulator_register+0x12>
2ffe97b4:	6903      	ldr	r3, [r0, #16]
2ffe97b6:	6020      	str	r0, [r4, #0]
2ffe97b8:	6123      	str	r3, [r4, #16]
2ffe97ba:	6843      	ldr	r3, [r0, #4]
2ffe97bc:	691b      	ldr	r3, [r3, #16]
2ffe97be:	2b00      	cmp	r3, #0
2ffe97c0:	d071      	beq.n	2ffe98a6 <regulator_register+0x12a>
2ffe97c2:	f004 ffac 	bl	2ffee71e <lock_driver.isra.0>
2ffe97c6:	6820      	ldr	r0, [r4, #0]
2ffe97c8:	aa03      	add	r2, sp, #12
2ffe97ca:	a902      	add	r1, sp, #8
2ffe97cc:	6843      	ldr	r3, [r0, #4]
2ffe97ce:	691b      	ldr	r3, [r3, #16]
2ffe97d0:	4798      	blx	r3
2ffe97d2:	4605      	mov	r5, r0
2ffe97d4:	6820      	ldr	r0, [r4, #0]
2ffe97d6:	f004 ff9d 	bl	2ffee714 <unlock_driver.isra.0>
2ffe97da:	2d00      	cmp	r5, #0
2ffe97dc:	da06      	bge.n	2ffe97ec <regulator_register+0x70>
2ffe97de:	6823      	ldr	r3, [r4, #0]
2ffe97e0:	462a      	mov	r2, r5
2ffe97e2:	483f      	ldr	r0, [pc, #252]	@ (2ffe98e0 <regulator_register+0x164>)
2ffe97e4:	6819      	ldr	r1, [r3, #0]
2ffe97e6:	f7fe f8c5 	bl	2ffe7974 <tf_log>
2ffe97ea:	e7dd      	b.n	2ffe97a8 <regulator_register+0x2c>
2ffe97ec:	9a02      	ldr	r2, [sp, #8]
2ffe97ee:	8813      	ldrh	r3, [r2, #0]
2ffe97f0:	8123      	strh	r3, [r4, #8]
2ffe97f2:	9b03      	ldr	r3, [sp, #12]
2ffe97f4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
2ffe97f8:	3b01      	subs	r3, #1
2ffe97fa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
2ffe97fe:	8163      	strh	r3, [r4, #10]
2ffe9800:	a801      	add	r0, sp, #4
2ffe9802:	f000 f8fb 	bl	2ffe99fc <fdt_get_address>
2ffe9806:	2800      	cmp	r0, #0
2ffe9808:	d05e      	beq.n	2ffe98c8 <regulator_register+0x14c>
2ffe980a:	9801      	ldr	r0, [sp, #4]
2ffe980c:	4631      	mov	r1, r6
2ffe980e:	f004 f825 	bl	2ffed85c <fdt_get_phandle>
2ffe9812:	6060      	str	r0, [r4, #4]
2ffe9814:	2300      	movs	r3, #0
2ffe9816:	4a33      	ldr	r2, [pc, #204]	@ (2ffe98e4 <regulator_register+0x168>)
2ffe9818:	4631      	mov	r1, r6
2ffe981a:	9801      	ldr	r0, [sp, #4]
2ffe981c:	f006 f854 	bl	2ffef8c8 <fdt_getprop>
2ffe9820:	b158      	cbz	r0, 2ffe983a <regulator_register+0xbe>
2ffe9822:	6800      	ldr	r0, [r0, #0]
2ffe9824:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffe9828:	f004 ff72 	bl	2ffee710 <fdt32_to_cpu>
2ffe982c:	fbb0 f2f3 	udiv	r2, r0, r3
2ffe9830:	8961      	ldrh	r1, [r4, #10]
2ffe9832:	b293      	uxth	r3, r2
2ffe9834:	4299      	cmp	r1, r3
2ffe9836:	d339      	bcc.n	2ffe98ac <regulator_register+0x130>
2ffe9838:	8123      	strh	r3, [r4, #8]
2ffe983a:	4a2b      	ldr	r2, [pc, #172]	@ (2ffe98e8 <regulator_register+0x16c>)
2ffe983c:	2300      	movs	r3, #0
2ffe983e:	9801      	ldr	r0, [sp, #4]
2ffe9840:	4631      	mov	r1, r6
2ffe9842:	f006 f841 	bl	2ffef8c8 <fdt_getprop>
2ffe9846:	b158      	cbz	r0, 2ffe9860 <regulator_register+0xe4>
2ffe9848:	6800      	ldr	r0, [r0, #0]
2ffe984a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffe984e:	f004 ff5f 	bl	2ffee710 <fdt32_to_cpu>
2ffe9852:	fbb0 f2f3 	udiv	r2, r0, r3
2ffe9856:	8921      	ldrh	r1, [r4, #8]
2ffe9858:	b293      	uxth	r3, r2
2ffe985a:	4299      	cmp	r1, r3
2ffe985c:	d82f      	bhi.n	2ffe98be <regulator_register+0x142>
2ffe985e:	8163      	strh	r3, [r4, #10]
2ffe9860:	aa03      	add	r2, sp, #12
2ffe9862:	a902      	add	r1, sp, #8
2ffe9864:	4620      	mov	r0, r4
2ffe9866:	f7ff ff09 	bl	2ffe967c <regulator_list_voltages>
2ffe986a:	4605      	mov	r5, r0
2ffe986c:	b110      	cbz	r0, 2ffe9874 <regulator_register+0xf8>
2ffe986e:	f110 0f13 	cmn.w	r0, #19
2ffe9872:	d199      	bne.n	2ffe97a8 <regulator_register+0x2c>
2ffe9874:	9d01      	ldr	r5, [sp, #4]
2ffe9876:	2300      	movs	r3, #0
2ffe9878:	4a1c      	ldr	r2, [pc, #112]	@ (2ffe98ec <regulator_register+0x170>)
2ffe987a:	4631      	mov	r1, r6
2ffe987c:	4628      	mov	r0, r5
2ffe987e:	f006 f823 	bl	2ffef8c8 <fdt_getprop>
2ffe9882:	b118      	cbz	r0, 2ffe988c <regulator_register+0x110>
2ffe9884:	89a3      	ldrh	r3, [r4, #12]
2ffe9886:	f043 0301 	orr.w	r3, r3, #1
2ffe988a:	81a3      	strh	r3, [r4, #12]
2ffe988c:	4a18      	ldr	r2, [pc, #96]	@ (2ffe98f0 <regulator_register+0x174>)
2ffe988e:	2300      	movs	r3, #0
2ffe9890:	4631      	mov	r1, r6
2ffe9892:	4628      	mov	r0, r5
2ffe9894:	f006 f818 	bl	2ffef8c8 <fdt_getprop>
2ffe9898:	b118      	cbz	r0, 2ffe98a2 <regulator_register+0x126>
2ffe989a:	6800      	ldr	r0, [r0, #0]
2ffe989c:	f004 ff38 	bl	2ffee710 <fdt32_to_cpu>
2ffe98a0:	6120      	str	r0, [r4, #16]
2ffe98a2:	2500      	movs	r5, #0
2ffe98a4:	e780      	b.n	2ffe97a8 <regulator_register+0x2c>
2ffe98a6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
2ffe98aa:	e7a8      	b.n	2ffe97fe <regulator_register+0x82>
2ffe98ac:	6823      	ldr	r3, [r4, #0]
2ffe98ae:	b292      	uxth	r2, r2
2ffe98b0:	4810      	ldr	r0, [pc, #64]	@ (2ffe98f4 <regulator_register+0x178>)
2ffe98b2:	6819      	ldr	r1, [r3, #0]
2ffe98b4:	f06f 0515 	mvn.w	r5, #21
2ffe98b8:	f7fe f85c 	bl	2ffe7974 <tf_log>
2ffe98bc:	e774      	b.n	2ffe97a8 <regulator_register+0x2c>
2ffe98be:	6823      	ldr	r3, [r4, #0]
2ffe98c0:	b292      	uxth	r2, r2
2ffe98c2:	480d      	ldr	r0, [pc, #52]	@ (2ffe98f8 <regulator_register+0x17c>)
2ffe98c4:	6819      	ldr	r1, [r3, #0]
2ffe98c6:	e7f5      	b.n	2ffe98b4 <regulator_register+0x138>
2ffe98c8:	f06f 0501 	mvn.w	r5, #1
2ffe98cc:	e76c      	b.n	2ffe97a8 <regulator_register+0x2c>
2ffe98ce:	bf00      	nop
2ffe98d0:	2fff2e9f 	.word	0x2fff2e9f
2ffe98d4:	2fff5880 	.word	0x2fff5880
2ffe98d8:	2fff2fde 	.word	0x2fff2fde
2ffe98dc:	2fff5718 	.word	0x2fff5718
2ffe98e0:	2fff3024 	.word	0x2fff3024
2ffe98e4:	2fff3048 	.word	0x2fff3048
2ffe98e8:	2fff307c 	.word	0x2fff307c
2ffe98ec:	2fff30af 	.word	0x2fff30af
2ffe98f0:	2fff30c3 	.word	0x2fff30c3
2ffe98f4:	2fff3060 	.word	0x2fff3060
2ffe98f8:	2fff3094 	.word	0x2fff3094

2ffe98fc <fixed_regulator_register>:
2ffe98fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe9900:	a801      	add	r0, sp, #4
2ffe9902:	f000 f87b 	bl	2ffe99fc <fdt_get_address>
2ffe9906:	2800      	cmp	r0, #0
2ffe9908:	d04a      	beq.n	2ffe99a0 <fixed_regulator_register+0xa4>
2ffe990a:	4a27      	ldr	r2, [pc, #156]	@ (2ffe99a8 <fixed_regulator_register+0xac>)
2ffe990c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9910:	9801      	ldr	r0, [sp, #4]
2ffe9912:	f04f 0800 	mov.w	r8, #0
2ffe9916:	4d25      	ldr	r5, [pc, #148]	@ (2ffe99ac <fixed_regulator_register+0xb0>)
2ffe9918:	f006 f90a 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe991c:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 2ffe99b0 <fixed_regulator_register+0xb4>
2ffe9920:	4604      	mov	r4, r0
2ffe9922:	f8df a090 	ldr.w	sl, [pc, #144]	@ 2ffe99b4 <fixed_regulator_register+0xb8>
2ffe9926:	f8df b080 	ldr.w	fp, [pc, #128]	@ 2ffe99a8 <fixed_regulator_register+0xac>
2ffe992a:	2c00      	cmp	r4, #0
2ffe992c:	da01      	bge.n	2ffe9932 <fixed_regulator_register+0x36>
2ffe992e:	2600      	movs	r6, #0
2ffe9930:	e023      	b.n	2ffe997a <fixed_regulator_register+0x7e>
2ffe9932:	9801      	ldr	r0, [sp, #4]
2ffe9934:	2200      	movs	r2, #0
2ffe9936:	4621      	mov	r1, r4
2ffe9938:	f005 fed3 	bl	2ffef6e2 <fdt_get_name>
2ffe993c:	4603      	mov	r3, r0
2ffe993e:	4607      	mov	r7, r0
2ffe9940:	464a      	mov	r2, r9
2ffe9942:	211f      	movs	r1, #31
2ffe9944:	4628      	mov	r0, r5
2ffe9946:	f006 fa1f 	bl	2ffefd88 <snprintf>
2ffe994a:	3801      	subs	r0, #1
2ffe994c:	281d      	cmp	r0, #29
2ffe994e:	d903      	bls.n	2ffe9958 <fixed_regulator_register+0x5c>
2ffe9950:	2143      	movs	r1, #67	@ 0x43
2ffe9952:	4819      	ldr	r0, [pc, #100]	@ (2ffe99b8 <fixed_regulator_register+0xbc>)
2ffe9954:	f003 ffce 	bl	2ffed8f4 <__assert>
2ffe9958:	622d      	str	r5, [r5, #32]
2ffe995a:	4621      	mov	r1, r4
2ffe995c:	62ad      	str	r5, [r5, #40]	@ 0x28
2ffe995e:	f105 0020 	add.w	r0, r5, #32
2ffe9962:	f8c5 a024 	str.w	sl, [r5, #36]	@ 0x24
2ffe9966:	f7ff ff09 	bl	2ffe977c <regulator_register>
2ffe996a:	4606      	mov	r6, r0
2ffe996c:	b148      	cbz	r0, 2ffe9982 <fixed_regulator_register+0x86>
2ffe996e:	4913      	ldr	r1, [pc, #76]	@ (2ffe99bc <fixed_regulator_register+0xc0>)
2ffe9970:	463b      	mov	r3, r7
2ffe9972:	4813      	ldr	r0, [pc, #76]	@ (2ffe99c0 <fixed_regulator_register+0xc4>)
2ffe9974:	224c      	movs	r2, #76	@ 0x4c
2ffe9976:	f7fd fffd 	bl	2ffe7974 <tf_log>
2ffe997a:	4630      	mov	r0, r6
2ffe997c:	b003      	add	sp, #12
2ffe997e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe9982:	f108 0801 	add.w	r8, r8, #1
2ffe9986:	f1b8 0f03 	cmp.w	r8, #3
2ffe998a:	d101      	bne.n	2ffe9990 <fixed_regulator_register+0x94>
2ffe998c:	2151      	movs	r1, #81	@ 0x51
2ffe998e:	e7e0      	b.n	2ffe9952 <fixed_regulator_register+0x56>
2ffe9990:	9801      	ldr	r0, [sp, #4]
2ffe9992:	4621      	mov	r1, r4
2ffe9994:	465a      	mov	r2, fp
2ffe9996:	3534      	adds	r5, #52	@ 0x34
2ffe9998:	f006 f8ca 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe999c:	4604      	mov	r4, r0
2ffe999e:	e7c4      	b.n	2ffe992a <fixed_regulator_register+0x2e>
2ffe99a0:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
2ffe99a4:	e7e9      	b.n	2ffe997a <fixed_regulator_register+0x7e>
2ffe99a6:	bf00      	nop
2ffe99a8:	2fff310e 	.word	0x2fff310e
2ffe99ac:	2fff5894 	.word	0x2fff5894
2ffe99b0:	2fff24a9 	.word	0x2fff24a9
2ffe99b4:	2fff44b8 	.word	0x2fff44b8
2ffe99b8:	2fff311e 	.word	0x2fff311e
2ffe99bc:	2fff3163 	.word	0x2fff3163
2ffe99c0:	2fff3145 	.word	0x2fff3145

2ffe99c4 <fdt_get_node_parent_address_cells>:
2ffe99c4:	b510      	push	{r4, lr}
2ffe99c6:	4601      	mov	r1, r0
2ffe99c8:	4c06      	ldr	r4, [pc, #24]	@ (2ffe99e4 <fdt_get_node_parent_address_cells+0x20>)
2ffe99ca:	6820      	ldr	r0, [r4, #0]
2ffe99cc:	f006 f829 	bl	2ffefa22 <fdt_parent_offset>
2ffe99d0:	1e01      	subs	r1, r0, #0
2ffe99d2:	db04      	blt.n	2ffe99de <fdt_get_node_parent_address_cells+0x1a>
2ffe99d4:	6820      	ldr	r0, [r4, #0]
2ffe99d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe99da:	f003 bed9 	b.w	2ffed790 <fdt_address_cells>
2ffe99de:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe99e2:	bd10      	pop	{r4, pc}
2ffe99e4:	2fff5900 	.word	0x2fff5900

2ffe99e8 <dt_open_and_check>:
2ffe99e8:	b510      	push	{r4, lr}
2ffe99ea:	4604      	mov	r4, r0
2ffe99ec:	f003 fe6a 	bl	2ffed6c4 <fdt_check_header>
2ffe99f0:	b908      	cbnz	r0, 2ffe99f6 <dt_open_and_check+0xe>
2ffe99f2:	4b01      	ldr	r3, [pc, #4]	@ (2ffe99f8 <dt_open_and_check+0x10>)
2ffe99f4:	601c      	str	r4, [r3, #0]
2ffe99f6:	bd10      	pop	{r4, pc}
2ffe99f8:	2fff5900 	.word	0x2fff5900

2ffe99fc <fdt_get_address>:
2ffe99fc:	4b03      	ldr	r3, [pc, #12]	@ (2ffe9a0c <fdt_get_address+0x10>)
2ffe99fe:	681b      	ldr	r3, [r3, #0]
2ffe9a00:	b113      	cbz	r3, 2ffe9a08 <fdt_get_address+0xc>
2ffe9a02:	6003      	str	r3, [r0, #0]
2ffe9a04:	2001      	movs	r0, #1
2ffe9a06:	4770      	bx	lr
2ffe9a08:	4618      	mov	r0, r3
2ffe9a0a:	4770      	bx	lr
2ffe9a0c:	2fff5900 	.word	0x2fff5900

2ffe9a10 <fdt_check_node>:
2ffe9a10:	4b06      	ldr	r3, [pc, #24]	@ (2ffe9a2c <fdt_check_node+0x1c>)
2ffe9a12:	b507      	push	{r0, r1, r2, lr}
2ffe9a14:	4601      	mov	r1, r0
2ffe9a16:	6818      	ldr	r0, [r3, #0]
2ffe9a18:	aa01      	add	r2, sp, #4
2ffe9a1a:	f005 fe62 	bl	2ffef6e2 <fdt_get_name>
2ffe9a1e:	b110      	cbz	r0, 2ffe9a26 <fdt_check_node+0x16>
2ffe9a20:	9801      	ldr	r0, [sp, #4]
2ffe9a22:	43c0      	mvns	r0, r0
2ffe9a24:	0fc0      	lsrs	r0, r0, #31
2ffe9a26:	b003      	add	sp, #12
2ffe9a28:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe9a2c:	2fff5900 	.word	0x2fff5900

2ffe9a30 <fdt_get_status>:
2ffe9a30:	b570      	push	{r4, r5, r6, lr}
2ffe9a32:	4601      	mov	r1, r0
2ffe9a34:	4e17      	ldr	r6, [pc, #92]	@ (2ffe9a94 <fdt_get_status+0x64>)
2ffe9a36:	4605      	mov	r5, r0
2ffe9a38:	4a17      	ldr	r2, [pc, #92]	@ (2ffe9a98 <fdt_get_status+0x68>)
2ffe9a3a:	2300      	movs	r3, #0
2ffe9a3c:	6830      	ldr	r0, [r6, #0]
2ffe9a3e:	f005 ff43 	bl	2ffef8c8 <fdt_getprop>
2ffe9a42:	4604      	mov	r4, r0
2ffe9a44:	b1c0      	cbz	r0, 2ffe9a78 <fdt_get_status+0x48>
2ffe9a46:	4815      	ldr	r0, [pc, #84]	@ (2ffe9a9c <fdt_get_status+0x6c>)
2ffe9a48:	f006 f9d6 	bl	2ffefdf8 <strlen>
2ffe9a4c:	4913      	ldr	r1, [pc, #76]	@ (2ffe9a9c <fdt_get_status+0x6c>)
2ffe9a4e:	4602      	mov	r2, r0
2ffe9a50:	4620      	mov	r0, r4
2ffe9a52:	f006 f9d9 	bl	2ffefe08 <strncmp>
2ffe9a56:	fab0 f480 	clz	r4, r0
2ffe9a5a:	0964      	lsrs	r4, r4, #5
2ffe9a5c:	4a10      	ldr	r2, [pc, #64]	@ (2ffe9aa0 <fdt_get_status+0x70>)
2ffe9a5e:	4629      	mov	r1, r5
2ffe9a60:	6830      	ldr	r0, [r6, #0]
2ffe9a62:	2300      	movs	r3, #0
2ffe9a64:	f005 ff30 	bl	2ffef8c8 <fdt_getprop>
2ffe9a68:	4605      	mov	r5, r0
2ffe9a6a:	b938      	cbnz	r0, 2ffe9a7c <fdt_get_status+0x4c>
2ffe9a6c:	2c01      	cmp	r4, #1
2ffe9a6e:	d101      	bne.n	2ffe9a74 <fdt_get_status+0x44>
2ffe9a70:	f044 0402 	orr.w	r4, r4, #2
2ffe9a74:	4620      	mov	r0, r4
2ffe9a76:	bd70      	pop	{r4, r5, r6, pc}
2ffe9a78:	2401      	movs	r4, #1
2ffe9a7a:	e7ef      	b.n	2ffe9a5c <fdt_get_status+0x2c>
2ffe9a7c:	4807      	ldr	r0, [pc, #28]	@ (2ffe9a9c <fdt_get_status+0x6c>)
2ffe9a7e:	f006 f9bb 	bl	2ffefdf8 <strlen>
2ffe9a82:	4906      	ldr	r1, [pc, #24]	@ (2ffe9a9c <fdt_get_status+0x6c>)
2ffe9a84:	4602      	mov	r2, r0
2ffe9a86:	4628      	mov	r0, r5
2ffe9a88:	f006 f9be 	bl	2ffefe08 <strncmp>
2ffe9a8c:	2800      	cmp	r0, #0
2ffe9a8e:	d0ef      	beq.n	2ffe9a70 <fdt_get_status+0x40>
2ffe9a90:	e7f0      	b.n	2ffe9a74 <fdt_get_status+0x44>
2ffe9a92:	bf00      	nop
2ffe9a94:	2fff5900 	.word	0x2fff5900
2ffe9a98:	2fff3188 	.word	0x2fff3188
2ffe9a9c:	2fff317c 	.word	0x2fff317c
2ffe9aa0:	2fff3181 	.word	0x2fff3181

2ffe9aa4 <dt_set_stdout_pinctrl>:
2ffe9aa4:	b508      	push	{r3, lr}
2ffe9aa6:	4b06      	ldr	r3, [pc, #24]	@ (2ffe9ac0 <dt_set_stdout_pinctrl+0x1c>)
2ffe9aa8:	6818      	ldr	r0, [r3, #0]
2ffe9aaa:	f7fb facf 	bl	2ffe504c <fdt_get_stdout_node_offset>
2ffe9aae:	2800      	cmp	r0, #0
2ffe9ab0:	db03      	blt.n	2ffe9aba <dt_set_stdout_pinctrl+0x16>
2ffe9ab2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe9ab6:	f7ff b9a3 	b.w	2ffe8e00 <dt_set_pinctrl_config>
2ffe9aba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9abe:	bd08      	pop	{r3, pc}
2ffe9ac0:	2fff5900 	.word	0x2fff5900

2ffe9ac4 <dt_fill_device_info>:
2ffe9ac4:	b570      	push	{r4, r5, r6, lr}
2ffe9ac6:	4605      	mov	r5, r0
2ffe9ac8:	4608      	mov	r0, r1
2ffe9aca:	460c      	mov	r4, r1
2ffe9acc:	f7ff ff7a 	bl	2ffe99c4 <fdt_get_node_parent_address_cells>
2ffe9ad0:	2801      	cmp	r0, #1
2ffe9ad2:	d003      	beq.n	2ffe9adc <dt_fill_device_info+0x18>
2ffe9ad4:	4818      	ldr	r0, [pc, #96]	@ (2ffe9b38 <dt_fill_device_info+0x74>)
2ffe9ad6:	2188      	movs	r1, #136	@ 0x88
2ffe9ad8:	f003 ff0c 	bl	2ffed8f4 <__assert>
2ffe9adc:	4e17      	ldr	r6, [pc, #92]	@ (2ffe9b3c <dt_fill_device_info+0x78>)
2ffe9ade:	2300      	movs	r3, #0
2ffe9ae0:	4a17      	ldr	r2, [pc, #92]	@ (2ffe9b40 <dt_fill_device_info+0x7c>)
2ffe9ae2:	4621      	mov	r1, r4
2ffe9ae4:	6830      	ldr	r0, [r6, #0]
2ffe9ae6:	f005 feef 	bl	2ffef8c8 <fdt_getprop>
2ffe9aea:	b110      	cbz	r0, 2ffe9af2 <dt_fill_device_info+0x2e>
2ffe9aec:	6800      	ldr	r0, [r0, #0]
2ffe9aee:	f004 fe22 	bl	2ffee736 <fdt32_to_cpu>
2ffe9af2:	6028      	str	r0, [r5, #0]
2ffe9af4:	2300      	movs	r3, #0
2ffe9af6:	4a13      	ldr	r2, [pc, #76]	@ (2ffe9b44 <dt_fill_device_info+0x80>)
2ffe9af8:	4621      	mov	r1, r4
2ffe9afa:	6830      	ldr	r0, [r6, #0]
2ffe9afc:	f005 fee4 	bl	2ffef8c8 <fdt_getprop>
2ffe9b00:	b198      	cbz	r0, 2ffe9b2a <dt_fill_device_info+0x66>
2ffe9b02:	6840      	ldr	r0, [r0, #4]
2ffe9b04:	f004 fe17 	bl	2ffee736 <fdt32_to_cpu>
2ffe9b08:	6068      	str	r0, [r5, #4]
2ffe9b0a:	2300      	movs	r3, #0
2ffe9b0c:	4a0e      	ldr	r2, [pc, #56]	@ (2ffe9b48 <dt_fill_device_info+0x84>)
2ffe9b0e:	4621      	mov	r1, r4
2ffe9b10:	6830      	ldr	r0, [r6, #0]
2ffe9b12:	f005 fed9 	bl	2ffef8c8 <fdt_getprop>
2ffe9b16:	b158      	cbz	r0, 2ffe9b30 <dt_fill_device_info+0x6c>
2ffe9b18:	6840      	ldr	r0, [r0, #4]
2ffe9b1a:	f004 fe0c 	bl	2ffee736 <fdt32_to_cpu>
2ffe9b1e:	60a8      	str	r0, [r5, #8]
2ffe9b20:	4620      	mov	r0, r4
2ffe9b22:	f7ff ff85 	bl	2ffe9a30 <fdt_get_status>
2ffe9b26:	60e8      	str	r0, [r5, #12]
2ffe9b28:	bd70      	pop	{r4, r5, r6, pc}
2ffe9b2a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9b2e:	e7eb      	b.n	2ffe9b08 <dt_fill_device_info+0x44>
2ffe9b30:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9b34:	e7f3      	b.n	2ffe9b1e <dt_fill_device_info+0x5a>
2ffe9b36:	bf00      	nop
2ffe9b38:	2fff318f 	.word	0x2fff318f
2ffe9b3c:	2fff5900 	.word	0x2fff5900
2ffe9b40:	2fff1aa7 	.word	0x2fff1aa7
2ffe9b44:	2fff3933 	.word	0x2fff3933
2ffe9b48:	2fff31ab 	.word	0x2fff31ab

2ffe9b4c <dt_get_node>:
2ffe9b4c:	b538      	push	{r3, r4, r5, lr}
2ffe9b4e:	4605      	mov	r5, r0
2ffe9b50:	4b07      	ldr	r3, [pc, #28]	@ (2ffe9b70 <dt_get_node+0x24>)
2ffe9b52:	6818      	ldr	r0, [r3, #0]
2ffe9b54:	f005 ffec 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9b58:	1e04      	subs	r4, r0, #0
2ffe9b5a:	db05      	blt.n	2ffe9b68 <dt_get_node+0x1c>
2ffe9b5c:	4621      	mov	r1, r4
2ffe9b5e:	4628      	mov	r0, r5
2ffe9b60:	f7ff ffb0 	bl	2ffe9ac4 <dt_fill_device_info>
2ffe9b64:	4620      	mov	r0, r4
2ffe9b66:	bd38      	pop	{r3, r4, r5, pc}
2ffe9b68:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe9b6c:	e7fa      	b.n	2ffe9b64 <dt_get_node+0x18>
2ffe9b6e:	bf00      	nop
2ffe9b70:	2fff5900 	.word	0x2fff5900

2ffe9b74 <dt_get_stdout_uart_info>:
2ffe9b74:	b538      	push	{r3, r4, r5, lr}
2ffe9b76:	4605      	mov	r5, r0
2ffe9b78:	4b07      	ldr	r3, [pc, #28]	@ (2ffe9b98 <dt_get_stdout_uart_info+0x24>)
2ffe9b7a:	6818      	ldr	r0, [r3, #0]
2ffe9b7c:	f7fb fa66 	bl	2ffe504c <fdt_get_stdout_node_offset>
2ffe9b80:	1e04      	subs	r4, r0, #0
2ffe9b82:	db05      	blt.n	2ffe9b90 <dt_get_stdout_uart_info+0x1c>
2ffe9b84:	4621      	mov	r1, r4
2ffe9b86:	4628      	mov	r0, r5
2ffe9b88:	f7ff ff9c 	bl	2ffe9ac4 <dt_fill_device_info>
2ffe9b8c:	4620      	mov	r0, r4
2ffe9b8e:	bd38      	pop	{r3, r4, r5, pc}
2ffe9b90:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe9b94:	e7fa      	b.n	2ffe9b8c <dt_get_stdout_uart_info+0x18>
2ffe9b96:	bf00      	nop
2ffe9b98:	2fff5900 	.word	0x2fff5900

2ffe9b9c <dt_match_instance_by_compatible>:
2ffe9b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe9ba0:	4602      	mov	r2, r0
2ffe9ba2:	4f17      	ldr	r7, [pc, #92]	@ (2ffe9c00 <dt_match_instance_by_compatible+0x64>)
2ffe9ba4:	4605      	mov	r5, r0
2ffe9ba6:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 2ffe9c04 <dt_match_instance_by_compatible+0x68>
2ffe9baa:	460e      	mov	r6, r1
2ffe9bac:	6838      	ldr	r0, [r7, #0]
2ffe9bae:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9bb2:	f005 ffbd 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9bb6:	4604      	mov	r4, r0
2ffe9bb8:	2c00      	cmp	r4, #0
2ffe9bba:	da04      	bge.n	2ffe9bc6 <dt_match_instance_by_compatible+0x2a>
2ffe9bbc:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffe9bc0:	4620      	mov	r0, r4
2ffe9bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe9bc6:	4620      	mov	r0, r4
2ffe9bc8:	f7ff fefc 	bl	2ffe99c4 <fdt_get_node_parent_address_cells>
2ffe9bcc:	2801      	cmp	r0, #1
2ffe9bce:	d003      	beq.n	2ffe9bd8 <dt_match_instance_by_compatible+0x3c>
2ffe9bd0:	480d      	ldr	r0, [pc, #52]	@ (2ffe9c08 <dt_match_instance_by_compatible+0x6c>)
2ffe9bd2:	21d4      	movs	r1, #212	@ 0xd4
2ffe9bd4:	f003 fe8e 	bl	2ffed8f4 <__assert>
2ffe9bd8:	6838      	ldr	r0, [r7, #0]
2ffe9bda:	2300      	movs	r3, #0
2ffe9bdc:	4642      	mov	r2, r8
2ffe9bde:	4621      	mov	r1, r4
2ffe9be0:	f005 fe72 	bl	2ffef8c8 <fdt_getprop>
2ffe9be4:	b120      	cbz	r0, 2ffe9bf0 <dt_match_instance_by_compatible+0x54>
2ffe9be6:	6800      	ldr	r0, [r0, #0]
2ffe9be8:	f004 fda5 	bl	2ffee736 <fdt32_to_cpu>
2ffe9bec:	42b0      	cmp	r0, r6
2ffe9bee:	d0e7      	beq.n	2ffe9bc0 <dt_match_instance_by_compatible+0x24>
2ffe9bf0:	6838      	ldr	r0, [r7, #0]
2ffe9bf2:	4621      	mov	r1, r4
2ffe9bf4:	462a      	mov	r2, r5
2ffe9bf6:	f005 ff9b 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9bfa:	4604      	mov	r4, r0
2ffe9bfc:	e7dc      	b.n	2ffe9bb8 <dt_match_instance_by_compatible+0x1c>
2ffe9bfe:	bf00      	nop
2ffe9c00:	2fff5900 	.word	0x2fff5900
2ffe9c04:	2fff1aa7 	.word	0x2fff1aa7
2ffe9c08:	2fff318f 	.word	0x2fff318f

2ffe9c0c <dt_get_ddr_size>:
2ffe9c0c:	b570      	push	{r4, r5, r6, lr}
2ffe9c0e:	4d0f      	ldr	r5, [pc, #60]	@ (2ffe9c4c <dt_get_ddr_size+0x40>)
2ffe9c10:	682c      	ldr	r4, [r5, #0]
2ffe9c12:	b964      	cbnz	r4, 2ffe9c2e <dt_get_ddr_size+0x22>
2ffe9c14:	4e0e      	ldr	r6, [pc, #56]	@ (2ffe9c50 <dt_get_ddr_size+0x44>)
2ffe9c16:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9c1a:	4a0e      	ldr	r2, [pc, #56]	@ (2ffe9c54 <dt_get_ddr_size+0x48>)
2ffe9c1c:	6830      	ldr	r0, [r6, #0]
2ffe9c1e:	f005 ff87 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9c22:	1e01      	subs	r1, r0, #0
2ffe9c24:	da05      	bge.n	2ffe9c32 <dt_get_ddr_size+0x26>
2ffe9c26:	490c      	ldr	r1, [pc, #48]	@ (2ffe9c58 <dt_get_ddr_size+0x4c>)
2ffe9c28:	480c      	ldr	r0, [pc, #48]	@ (2ffe9c5c <dt_get_ddr_size+0x50>)
2ffe9c2a:	f7fd fea3 	bl	2ffe7974 <tf_log>
2ffe9c2e:	4620      	mov	r0, r4
2ffe9c30:	bd70      	pop	{r4, r5, r6, pc}
2ffe9c32:	4a0b      	ldr	r2, [pc, #44]	@ (2ffe9c60 <dt_get_ddr_size+0x54>)
2ffe9c34:	4623      	mov	r3, r4
2ffe9c36:	6830      	ldr	r0, [r6, #0]
2ffe9c38:	f004 f8b8 	bl	2ffeddac <fdt_read_uint32_default>
2ffe9c3c:	6028      	str	r0, [r5, #0]
2ffe9c3e:	2104      	movs	r1, #4
2ffe9c40:	4628      	mov	r0, r5
2ffe9c42:	f7fa ec30 	blx	2ffe44a4 <flush_dcache_range>
2ffe9c46:	682c      	ldr	r4, [r5, #0]
2ffe9c48:	e7f1      	b.n	2ffe9c2e <dt_get_ddr_size+0x22>
2ffe9c4a:	bf00      	nop
2ffe9c4c:	2fff58fc 	.word	0x2fff58fc
2ffe9c50:	2fff5900 	.word	0x2fff5900
2ffe9c54:	2fff194e 	.word	0x2fff194e
2ffe9c58:	2fff3275 	.word	0x2fff3275
2ffe9c5c:	2fff31b2 	.word	0x2fff31b2
2ffe9c60:	2fff31d3 	.word	0x2fff31d3

2ffe9c64 <dt_get_vdd_regulator>:
2ffe9c64:	b510      	push	{r4, lr}
2ffe9c66:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9c6a:	4c07      	ldr	r4, [pc, #28]	@ (2ffe9c88 <dt_get_vdd_regulator+0x24>)
2ffe9c6c:	4a07      	ldr	r2, [pc, #28]	@ (2ffe9c8c <dt_get_vdd_regulator+0x28>)
2ffe9c6e:	6820      	ldr	r0, [r4, #0]
2ffe9c70:	f005 ff5e 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9c74:	1e01      	subs	r1, r0, #0
2ffe9c76:	db05      	blt.n	2ffe9c84 <dt_get_vdd_regulator+0x20>
2ffe9c78:	6820      	ldr	r0, [r4, #0]
2ffe9c7a:	4a05      	ldr	r2, [pc, #20]	@ (2ffe9c90 <dt_get_vdd_regulator+0x2c>)
2ffe9c7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe9c80:	f7ff bc4e 	b.w	2ffe9520 <regulator_get_by_supply_name>
2ffe9c84:	2000      	movs	r0, #0
2ffe9c86:	bd10      	pop	{r4, pc}
2ffe9c88:	2fff5900 	.word	0x2fff5900
2ffe9c8c:	2fff31df 	.word	0x2fff31df
2ffe9c90:	2fff31f3 	.word	0x2fff31f3

2ffe9c94 <dt_get_board_model>:
2ffe9c94:	b510      	push	{r4, lr}
2ffe9c96:	4c08      	ldr	r4, [pc, #32]	@ (2ffe9cb8 <dt_get_board_model+0x24>)
2ffe9c98:	4908      	ldr	r1, [pc, #32]	@ (2ffe9cbc <dt_get_board_model+0x28>)
2ffe9c9a:	6820      	ldr	r0, [r4, #0]
2ffe9c9c:	f005 fe6f 	bl	2ffef97e <fdt_path_offset>
2ffe9ca0:	1e01      	subs	r1, r0, #0
2ffe9ca2:	db06      	blt.n	2ffe9cb2 <dt_get_board_model+0x1e>
2ffe9ca4:	6820      	ldr	r0, [r4, #0]
2ffe9ca6:	2300      	movs	r3, #0
2ffe9ca8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe9cac:	4a04      	ldr	r2, [pc, #16]	@ (2ffe9cc0 <dt_get_board_model+0x2c>)
2ffe9cae:	f005 be0b 	b.w	2ffef8c8 <fdt_getprop>
2ffe9cb2:	2000      	movs	r0, #0
2ffe9cb4:	bd10      	pop	{r4, pc}
2ffe9cb6:	bf00      	nop
2ffe9cb8:	2fff5900 	.word	0x2fff5900
2ffe9cbc:	2fff31f7 	.word	0x2fff31f7
2ffe9cc0:	2fff31f9 	.word	0x2fff31f9

2ffe9cc4 <dt_find_otp_name>:
2ffe9cc4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe9cc8:	460f      	mov	r7, r1
2ffe9cca:	4616      	mov	r6, r2
2ffe9ccc:	4605      	mov	r5, r0
2ffe9cce:	b358      	cbz	r0, 2ffe9d28 <dt_find_otp_name+0x64>
2ffe9cd0:	b351      	cbz	r1, 2ffe9d28 <dt_find_otp_name+0x64>
2ffe9cd2:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 2ffe9d54 <dt_find_otp_name+0x90>
2ffe9cd6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9cda:	4a1f      	ldr	r2, [pc, #124]	@ (2ffe9d58 <dt_find_otp_name+0x94>)
2ffe9cdc:	f8d8 0000 	ldr.w	r0, [r8]
2ffe9ce0:	f005 ff26 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9ce4:	1e04      	subs	r4, r0, #0
2ffe9ce6:	db0b      	blt.n	2ffe9d00 <dt_find_otp_name+0x3c>
2ffe9ce8:	f8d8 0000 	ldr.w	r0, [r8]
2ffe9cec:	4621      	mov	r1, r4
2ffe9cee:	462a      	mov	r2, r5
2ffe9cf0:	f005 fd65 	bl	2ffef7be <fdt_subnode_offset>
2ffe9cf4:	1e04      	subs	r4, r0, #0
2ffe9cf6:	da07      	bge.n	2ffe9d08 <dt_find_otp_name+0x44>
2ffe9cf8:	4818      	ldr	r0, [pc, #96]	@ (2ffe9d5c <dt_find_otp_name+0x98>)
2ffe9cfa:	4629      	mov	r1, r5
2ffe9cfc:	f7fd fe3a 	bl	2ffe7974 <tf_log>
2ffe9d00:	4620      	mov	r0, r4
2ffe9d02:	b002      	add	sp, #8
2ffe9d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe9d08:	4a15      	ldr	r2, [pc, #84]	@ (2ffe9d60 <dt_find_otp_name+0x9c>)
2ffe9d0a:	ab01      	add	r3, sp, #4
2ffe9d0c:	f8d8 0000 	ldr.w	r0, [r8]
2ffe9d10:	4621      	mov	r1, r4
2ffe9d12:	f005 fdd9 	bl	2ffef8c8 <fdt_getprop>
2ffe9d16:	4602      	mov	r2, r0
2ffe9d18:	b110      	cbz	r0, 2ffe9d20 <dt_find_otp_name+0x5c>
2ffe9d1a:	9b01      	ldr	r3, [sp, #4]
2ffe9d1c:	2b08      	cmp	r3, #8
2ffe9d1e:	d006      	beq.n	2ffe9d2e <dt_find_otp_name+0x6a>
2ffe9d20:	4810      	ldr	r0, [pc, #64]	@ (2ffe9d64 <dt_find_otp_name+0xa0>)
2ffe9d22:	4629      	mov	r1, r5
2ffe9d24:	f7fd fe26 	bl	2ffe7974 <tf_log>
2ffe9d28:	f06f 040e 	mvn.w	r4, #14
2ffe9d2c:	e7e8      	b.n	2ffe9d00 <dt_find_otp_name+0x3c>
2ffe9d2e:	6800      	ldr	r0, [r0, #0]
2ffe9d30:	f004 fd01 	bl	2ffee736 <fdt32_to_cpu>
2ffe9d34:	0783      	lsls	r3, r0, #30
2ffe9d36:	d002      	beq.n	2ffe9d3e <dt_find_otp_name+0x7a>
2ffe9d38:	480b      	ldr	r0, [pc, #44]	@ (2ffe9d68 <dt_find_otp_name+0xa4>)
2ffe9d3a:	4629      	mov	r1, r5
2ffe9d3c:	e7f2      	b.n	2ffe9d24 <dt_find_otp_name+0x60>
2ffe9d3e:	0880      	lsrs	r0, r0, #2
2ffe9d40:	6038      	str	r0, [r7, #0]
2ffe9d42:	b90e      	cbnz	r6, 2ffe9d48 <dt_find_otp_name+0x84>
2ffe9d44:	2400      	movs	r4, #0
2ffe9d46:	e7db      	b.n	2ffe9d00 <dt_find_otp_name+0x3c>
2ffe9d48:	6850      	ldr	r0, [r2, #4]
2ffe9d4a:	f004 fcf4 	bl	2ffee736 <fdt32_to_cpu>
2ffe9d4e:	00c0      	lsls	r0, r0, #3
2ffe9d50:	6030      	str	r0, [r6, #0]
2ffe9d52:	e7f7      	b.n	2ffe9d44 <dt_find_otp_name+0x80>
2ffe9d54:	2fff5900 	.word	0x2fff5900
2ffe9d58:	2fff31ff 	.word	0x2fff31ff
2ffe9d5c:	2fff3211 	.word	0x2fff3211
2ffe9d60:	2fff1aa7 	.word	0x2fff1aa7
2ffe9d64:	2fff322b 	.word	0x2fff322b
2ffe9d68:	2fff324e 	.word	0x2fff324e

2ffe9d6c <dt_get_otp_by_phandle>:
2ffe9d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe9d70:	4680      	mov	r8, r0
2ffe9d72:	4d1d      	ldr	r5, [pc, #116]	@ (2ffe9de8 <dt_get_otp_by_phandle+0x7c>)
2ffe9d74:	460e      	mov	r6, r1
2ffe9d76:	4617      	mov	r7, r2
2ffe9d78:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9d7c:	4a1b      	ldr	r2, [pc, #108]	@ (2ffe9dec <dt_get_otp_by_phandle+0x80>)
2ffe9d7e:	6828      	ldr	r0, [r5, #0]
2ffe9d80:	f005 fed6 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9d84:	2800      	cmp	r0, #0
2ffe9d86:	db08      	blt.n	2ffe9d9a <dt_get_otp_by_phandle+0x2e>
2ffe9d88:	4601      	mov	r1, r0
2ffe9d8a:	6828      	ldr	r0, [r5, #0]
2ffe9d8c:	f005 fc2b 	bl	2ffef5e6 <fdt_first_subnode>
2ffe9d90:	2800      	cmp	r0, #0
2ffe9d92:	4604      	mov	r4, r0
2ffe9d94:	da03      	bge.n	2ffe9d9e <dt_get_otp_by_phandle+0x32>
2ffe9d96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9d9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe9d9e:	6828      	ldr	r0, [r5, #0]
2ffe9da0:	4621      	mov	r1, r4
2ffe9da2:	f003 fd5b 	bl	2ffed85c <fdt_get_phandle>
2ffe9da6:	4540      	cmp	r0, r8
2ffe9da8:	d010      	beq.n	2ffe9dcc <dt_get_otp_by_phandle+0x60>
2ffe9daa:	6828      	ldr	r0, [r5, #0]
2ffe9dac:	4621      	mov	r1, r4
2ffe9dae:	f005 fc2d 	bl	2ffef60c <fdt_next_subnode>
2ffe9db2:	e7ed      	b.n	2ffe9d90 <dt_get_otp_by_phandle+0x24>
2ffe9db4:	6818      	ldr	r0, [r3, #0]
2ffe9db6:	f004 fcbe 	bl	2ffee736 <fdt32_to_cpu>
2ffe9dba:	4602      	mov	r2, r0
2ffe9dbc:	6858      	ldr	r0, [r3, #4]
2ffe9dbe:	0892      	lsrs	r2, r2, #2
2ffe9dc0:	f004 fcb9 	bl	2ffee736 <fdt32_to_cpu>
2ffe9dc4:	6038      	str	r0, [r7, #0]
2ffe9dc6:	2000      	movs	r0, #0
2ffe9dc8:	6032      	str	r2, [r6, #0]
2ffe9dca:	e7e6      	b.n	2ffe9d9a <dt_get_otp_by_phandle+0x2e>
2ffe9dcc:	4a08      	ldr	r2, [pc, #32]	@ (2ffe9df0 <dt_get_otp_by_phandle+0x84>)
2ffe9dce:	2300      	movs	r3, #0
2ffe9dd0:	6828      	ldr	r0, [r5, #0]
2ffe9dd2:	4621      	mov	r1, r4
2ffe9dd4:	f005 fd78 	bl	2ffef8c8 <fdt_getprop>
2ffe9dd8:	4603      	mov	r3, r0
2ffe9dda:	2800      	cmp	r0, #0
2ffe9ddc:	d1ea      	bne.n	2ffe9db4 <dt_get_otp_by_phandle+0x48>
2ffe9dde:	f7fd fe65 	bl	2ffe7aac <console_flush>
2ffe9de2:	f7fa eb28 	blx	2ffe4434 <do_panic>
2ffe9de6:	bf00      	nop
2ffe9de8:	2fff5900 	.word	0x2fff5900
2ffe9dec:	2fff31ff 	.word	0x2fff31ff
2ffe9df0:	2fff1aa7 	.word	0x2fff1aa7

2ffe9df4 <fconf_populate_stm32mp_fuse_provisioning>:
2ffe9df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe9df8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffe9dfc:	4a40      	ldr	r2, [pc, #256]	@ (2ffe9f00 <fconf_populate_stm32mp_fuse_provisioning+0x10c>)
2ffe9dfe:	b089      	sub	sp, #36	@ 0x24
2ffe9e00:	4606      	mov	r6, r0
2ffe9e02:	f005 fe95 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffe9e06:	1e01      	subs	r1, r0, #0
2ffe9e08:	db05      	blt.n	2ffe9e16 <fconf_populate_stm32mp_fuse_provisioning+0x22>
2ffe9e0a:	4630      	mov	r0, r6
2ffe9e0c:	f005 fbeb 	bl	2ffef5e6 <fdt_first_subnode>
2ffe9e10:	2800      	cmp	r0, #0
2ffe9e12:	4605      	mov	r5, r0
2ffe9e14:	da03      	bge.n	2ffe9e1e <fconf_populate_stm32mp_fuse_provisioning+0x2a>
2ffe9e16:	2000      	movs	r0, #0
2ffe9e18:	b009      	add	sp, #36	@ 0x24
2ffe9e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe9e1e:	4a39      	ldr	r2, [pc, #228]	@ (2ffe9f04 <fconf_populate_stm32mp_fuse_provisioning+0x110>)
2ffe9e20:	2300      	movs	r3, #0
2ffe9e22:	4629      	mov	r1, r5
2ffe9e24:	4630      	mov	r0, r6
2ffe9e26:	f005 fd4f 	bl	2ffef8c8 <fdt_getprop>
2ffe9e2a:	b918      	cbnz	r0, 2ffe9e34 <fconf_populate_stm32mp_fuse_provisioning+0x40>
2ffe9e2c:	f7fd fe3e 	bl	2ffe7aac <console_flush>
2ffe9e30:	f7fa eb00 	blx	2ffe4434 <do_panic>
2ffe9e34:	6800      	ldr	r0, [r0, #0]
2ffe9e36:	aa06      	add	r2, sp, #24
2ffe9e38:	a905      	add	r1, sp, #20
2ffe9e3a:	ba00      	rev	r0, r0
2ffe9e3c:	f7ff ff96 	bl	2ffe9d6c <dt_get_otp_by_phandle>
2ffe9e40:	b118      	cbz	r0, 2ffe9e4a <fconf_populate_stm32mp_fuse_provisioning+0x56>
2ffe9e42:	4831      	ldr	r0, [pc, #196]	@ (2ffe9f08 <fconf_populate_stm32mp_fuse_provisioning+0x114>)
2ffe9e44:	f7fd fd96 	bl	2ffe7974 <tf_log>
2ffe9e48:	e7f0      	b.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9e4a:	4a30      	ldr	r2, [pc, #192]	@ (2ffe9f0c <fconf_populate_stm32mp_fuse_provisioning+0x118>)
2ffe9e4c:	ab04      	add	r3, sp, #16
2ffe9e4e:	4629      	mov	r1, r5
2ffe9e50:	4630      	mov	r0, r6
2ffe9e52:	f005 fd39 	bl	2ffef8c8 <fdt_getprop>
2ffe9e56:	4680      	mov	r8, r0
2ffe9e58:	2800      	cmp	r0, #0
2ffe9e5a:	d0e7      	beq.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9e5c:	9b04      	ldr	r3, [sp, #16]
2ffe9e5e:	2b00      	cmp	r3, #0
2ffe9e60:	dbe4      	blt.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9e62:	0799      	lsls	r1, r3, #30
2ffe9e64:	d1e2      	bne.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9e66:	9a06      	ldr	r2, [sp, #24]
2ffe9e68:	0897      	lsrs	r7, r2, #2
2ffe9e6a:	0792      	lsls	r2, r2, #30
2ffe9e6c:	bf18      	it	ne
2ffe9e6e:	3701      	addne	r7, #1
2ffe9e70:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2ffe9e74:	d040      	beq.n	2ffe9ef8 <fconf_populate_stm32mp_fuse_provisioning+0x104>
2ffe9e76:	4826      	ldr	r0, [pc, #152]	@ (2ffe9f10 <fconf_populate_stm32mp_fuse_provisioning+0x11c>)
2ffe9e78:	e7e4      	b.n	2ffe9e44 <fconf_populate_stm32mp_fuse_provisioning+0x50>
2ffe9e7a:	9805      	ldr	r0, [sp, #20]
2ffe9e7c:	f10d 010f 	add.w	r1, sp, #15
2ffe9e80:	4458      	add	r0, fp
2ffe9e82:	f000 fbef 	bl	2ffea664 <bsec_read_sw_lock>
2ffe9e86:	2800      	cmp	r0, #0
2ffe9e88:	d1d0      	bne.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9e8a:	f89d 200f 	ldrb.w	r2, [sp, #15]
2ffe9e8e:	b10a      	cbz	r2, 2ffe9e94 <fconf_populate_stm32mp_fuse_provisioning+0xa0>
2ffe9e90:	4820      	ldr	r0, [pc, #128]	@ (2ffe9f14 <fconf_populate_stm32mp_fuse_provisioning+0x120>)
2ffe9e92:	e7d7      	b.n	2ffe9e44 <fconf_populate_stm32mp_fuse_provisioning+0x50>
2ffe9e94:	f858 402b 	ldr.w	r4, [r8, fp, lsl #2]
2ffe9e98:	a807      	add	r0, sp, #28
2ffe9e9a:	9905      	ldr	r1, [sp, #20]
2ffe9e9c:	f3c4 2a07 	ubfx	sl, r4, #8, #8
2ffe9ea0:	f3c4 4907 	ubfx	r9, r4, #16, #8
2ffe9ea4:	0623      	lsls	r3, r4, #24
2ffe9ea6:	4459      	add	r1, fp
2ffe9ea8:	ea4f 4a0a 	mov.w	sl, sl, lsl #16
2ffe9eac:	ea4f 2909 	mov.w	r9, r9, lsl #8
2ffe9eb0:	0e24      	lsrs	r4, r4, #24
2ffe9eb2:	9301      	str	r3, [sp, #4]
2ffe9eb4:	f000 fc16 	bl	2ffea6e4 <bsec_shadow_read_otp>
2ffe9eb8:	2800      	cmp	r0, #0
2ffe9eba:	d1b7      	bne.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9ebc:	9a07      	ldr	r2, [sp, #28]
2ffe9ebe:	b11a      	cbz	r2, 2ffe9ec8 <fconf_populate_stm32mp_fuse_provisioning+0xd4>
2ffe9ec0:	9905      	ldr	r1, [sp, #20]
2ffe9ec2:	4815      	ldr	r0, [pc, #84]	@ (2ffe9f18 <fconf_populate_stm32mp_fuse_provisioning+0x124>)
2ffe9ec4:	f7fd fd56 	bl	2ffe7974 <tf_log>
2ffe9ec8:	9a07      	ldr	r2, [sp, #28]
2ffe9eca:	9b01      	ldr	r3, [sp, #4]
2ffe9ecc:	ea44 0002 	orr.w	r0, r4, r2
2ffe9ed0:	4318      	orrs	r0, r3
2ffe9ed2:	9905      	ldr	r1, [sp, #20]
2ffe9ed4:	ea40 000a 	orr.w	r0, r0, sl
2ffe9ed8:	4459      	add	r1, fp
2ffe9eda:	ea40 0009 	orr.w	r0, r0, r9
2ffe9ede:	f000 fbdb 	bl	2ffea698 <bsec_write_otp>
2ffe9ee2:	2800      	cmp	r0, #0
2ffe9ee4:	d1a2      	bne.n	2ffe9e2c <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffe9ee6:	f10b 0b01 	add.w	fp, fp, #1
2ffe9eea:	455f      	cmp	r7, fp
2ffe9eec:	d1c5      	bne.n	2ffe9e7a <fconf_populate_stm32mp_fuse_provisioning+0x86>
2ffe9eee:	4629      	mov	r1, r5
2ffe9ef0:	4630      	mov	r0, r6
2ffe9ef2:	f005 fb8b 	bl	2ffef60c <fdt_next_subnode>
2ffe9ef6:	e78b      	b.n	2ffe9e10 <fconf_populate_stm32mp_fuse_provisioning+0x1c>
2ffe9ef8:	f04f 0b00 	mov.w	fp, #0
2ffe9efc:	e7f5      	b.n	2ffe9eea <fconf_populate_stm32mp_fuse_provisioning+0xf6>
2ffe9efe:	bf00      	nop
2ffe9f00:	2fff3285 	.word	0x2fff3285
2ffe9f04:	2fff2d63 	.word	0x2fff2d63
2ffe9f08:	2fff3295 	.word	0x2fff3295
2ffe9f0c:	2fff32a9 	.word	0x2fff32a9
2ffe9f10:	2fff32b9 	.word	0x2fff32b9
2ffe9f14:	2fff32cc 	.word	0x2fff32cc
2ffe9f18:	2fff32e0 	.word	0x2fff32e0

2ffe9f1c <get_part_number>:
2ffe9f1c:	b510      	push	{r4, lr}
2ffe9f1e:	4c0b      	ldr	r4, [pc, #44]	@ (2ffe9f4c <get_part_number+0x30>)
2ffe9f20:	6820      	ldr	r0, [r4, #0]
2ffe9f22:	b990      	cbnz	r0, 2ffe9f4a <get_part_number+0x2e>
2ffe9f24:	480a      	ldr	r0, [pc, #40]	@ (2ffe9f50 <get_part_number+0x34>)
2ffe9f26:	4621      	mov	r1, r4
2ffe9f28:	f7fd fedc 	bl	2ffe7ce4 <stm32_get_otp_value>
2ffe9f2c:	b118      	cbz	r0, 2ffe9f36 <get_part_number+0x1a>
2ffe9f2e:	f7fd fdbd 	bl	2ffe7aac <console_flush>
2ffe9f32:	f7fa ea80 	blx	2ffe4434 <do_panic>
2ffe9f36:	6823      	ldr	r3, [r4, #0]
2ffe9f38:	f3c3 030b 	ubfx	r3, r3, #0, #12
2ffe9f3c:	6023      	str	r3, [r4, #0]
2ffe9f3e:	f002 f801 	bl	2ffebf44 <stm32mp_syscfg_get_chip_dev_id>
2ffe9f42:	6823      	ldr	r3, [r4, #0]
2ffe9f44:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
2ffe9f48:	6020      	str	r0, [r4, #0]
2ffe9f4a:	bd10      	pop	{r4, pc}
2ffe9f4c:	2fff5904 	.word	0x2fff5904
2ffe9f50:	2fff3311 	.word	0x2fff3311

2ffe9f54 <configure_mmu>:
2ffe9f54:	4805      	ldr	r0, [pc, #20]	@ (2ffe9f6c <configure_mmu+0x18>)
2ffe9f56:	b508      	push	{r3, lr}
2ffe9f58:	f7fe f866 	bl	2ffe8028 <mmap_add>
2ffe9f5c:	f7fe f886 	bl	2ffe806c <init_xlat_tables>
2ffe9f60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe9f64:	2000      	movs	r0, #0
2ffe9f66:	f7fe b89f 	b.w	2ffe80a8 <enable_mmu_svc_mon>
2ffe9f6a:	bf00      	nop
2ffe9f6c:	2ffefe60 	.word	0x2ffefe60

2ffe9f70 <stm32_get_gpio_bank_base>:
2ffe9f70:	2808      	cmp	r0, #8
2ffe9f72:	b508      	push	{r3, lr}
2ffe9f74:	d903      	bls.n	2ffe9f7e <stm32_get_gpio_bank_base+0xe>
2ffe9f76:	4804      	ldr	r0, [pc, #16]	@ (2ffe9f88 <stm32_get_gpio_bank_base+0x18>)
2ffe9f78:	2165      	movs	r1, #101	@ 0x65
2ffe9f7a:	f003 fcbb 	bl	2ffed8f4 <__assert>
2ffe9f7e:	f500 20a0 	add.w	r0, r0, #327680	@ 0x50000
2ffe9f82:	3002      	adds	r0, #2
2ffe9f84:	0300      	lsls	r0, r0, #12
2ffe9f86:	bd08      	pop	{r3, pc}
2ffe9f88:	2fff3321 	.word	0x2fff3321

2ffe9f8c <stm32_get_gpio_bank_offset>:
2ffe9f8c:	2808      	cmp	r0, #8
2ffe9f8e:	b508      	push	{r3, lr}
2ffe9f90:	d903      	bls.n	2ffe9f9a <stm32_get_gpio_bank_offset+0xe>
2ffe9f92:	4803      	ldr	r0, [pc, #12]	@ (2ffe9fa0 <stm32_get_gpio_bank_offset+0x14>)
2ffe9f94:	2175      	movs	r1, #117	@ 0x75
2ffe9f96:	f003 fcad 	bl	2ffed8f4 <__assert>
2ffe9f9a:	0300      	lsls	r0, r0, #12
2ffe9f9c:	bd08      	pop	{r3, pc}
2ffe9f9e:	bf00      	nop
2ffe9fa0:	2fff3321 	.word	0x2fff3321

2ffe9fa4 <stm32_get_gpio_bank_clock>:
2ffe9fa4:	2808      	cmp	r0, #8
2ffe9fa6:	b508      	push	{r3, lr}
2ffe9fa8:	d903      	bls.n	2ffe9fb2 <stm32_get_gpio_bank_clock+0xe>
2ffe9faa:	4803      	ldr	r0, [pc, #12]	@ (2ffe9fb8 <stm32_get_gpio_bank_clock+0x14>)
2ffe9fac:	2193      	movs	r1, #147	@ 0x93
2ffe9fae:	f003 fca1 	bl	2ffed8f4 <__assert>
2ffe9fb2:	3039      	adds	r0, #57	@ 0x39
2ffe9fb4:	bd08      	pop	{r3, pc}
2ffe9fb6:	bf00      	nop
2ffe9fb8:	2fff3321 	.word	0x2fff3321

2ffe9fbc <get_uart_address>:
2ffe9fbc:	3801      	subs	r0, #1
2ffe9fbe:	2807      	cmp	r0, #7
2ffe9fc0:	bf9a      	itte	ls
2ffe9fc2:	4b02      	ldrls	r3, [pc, #8]	@ (2ffe9fcc <get_uart_address+0x10>)
2ffe9fc4:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
2ffe9fc8:	2000      	movhi	r0, #0
2ffe9fca:	4770      	bx	lr
2ffe9fcc:	2fff0048 	.word	0x2fff0048

2ffe9fd0 <stm32mp_get_soc_name>:
2ffe9fd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe9fd2:	4605      	mov	r5, r0
2ffe9fd4:	f7ff ffa2 	bl	2ffe9f1c <get_part_number>
2ffe9fd8:	4a2d      	ldr	r2, [pc, #180]	@ (2ffea090 <stm32mp_get_soc_name+0xc0>)
2ffe9fda:	4603      	mov	r3, r0
2ffe9fdc:	4290      	cmp	r0, r2
2ffe9fde:	d042      	beq.n	2ffea066 <stm32mp_get_soc_name+0x96>
2ffe9fe0:	d831      	bhi.n	2ffea046 <stm32mp_get_soc_name+0x76>
2ffe9fe2:	f2a2 723f 	subw	r2, r2, #1855	@ 0x73f
2ffe9fe6:	4290      	cmp	r0, r2
2ffe9fe8:	d03f      	beq.n	2ffea06a <stm32mp_get_soc_name+0x9a>
2ffe9fea:	d826      	bhi.n	2ffea03a <stm32mp_get_soc_name+0x6a>
2ffe9fec:	3ac0      	subs	r2, #192	@ 0xc0
2ffe9fee:	4290      	cmp	r0, r2
2ffe9ff0:	d03d      	beq.n	2ffea06e <stm32mp_get_soc_name+0x9e>
2ffe9ff2:	32bf      	adds	r2, #191	@ 0xbf
2ffe9ff4:	4290      	cmp	r0, r2
2ffe9ff6:	d03c      	beq.n	2ffea072 <stm32mp_get_soc_name+0xa2>
2ffe9ff8:	4926      	ldr	r1, [pc, #152]	@ (2ffea094 <stm32mp_get_soc_name+0xc4>)
2ffe9ffa:	4c27      	ldr	r4, [pc, #156]	@ (2ffea098 <stm32mp_get_soc_name+0xc8>)
2ffe9ffc:	4a27      	ldr	r2, [pc, #156]	@ (2ffea09c <stm32mp_get_soc_name+0xcc>)
2ffe9ffe:	428b      	cmp	r3, r1
2ffea000:	bf18      	it	ne
2ffea002:	4614      	movne	r4, r2
2ffea004:	f001 ff96 	bl	2ffebf34 <stm32mp_syscfg_get_chip_version>
2ffea008:	f241 0303 	movw	r3, #4099	@ 0x1003
2ffea00c:	4298      	cmp	r0, r3
2ffea00e:	d03a      	beq.n	2ffea086 <stm32mp_get_soc_name+0xb6>
2ffea010:	f5b0 5f00 	cmp.w	r0, #8192	@ 0x2000
2ffea014:	d039      	beq.n	2ffea08a <stm32mp_get_soc_name+0xba>
2ffea016:	4b22      	ldr	r3, [pc, #136]	@ (2ffea0a0 <stm32mp_get_soc_name+0xd0>)
2ffea018:	f241 0101 	movw	r1, #4097	@ 0x1001
2ffea01c:	4a21      	ldr	r2, [pc, #132]	@ (2ffea0a4 <stm32mp_get_soc_name+0xd4>)
2ffea01e:	4288      	cmp	r0, r1
2ffea020:	bf18      	it	ne
2ffea022:	4613      	movne	r3, r2
2ffea024:	9301      	str	r3, [sp, #4]
2ffea026:	2114      	movs	r1, #20
2ffea028:	4b1f      	ldr	r3, [pc, #124]	@ (2ffea0a8 <stm32mp_get_soc_name+0xd8>)
2ffea02a:	4628      	mov	r0, r5
2ffea02c:	4a1f      	ldr	r2, [pc, #124]	@ (2ffea0ac <stm32mp_get_soc_name+0xdc>)
2ffea02e:	9300      	str	r3, [sp, #0]
2ffea030:	4623      	mov	r3, r4
2ffea032:	f005 fea9 	bl	2ffefd88 <snprintf>
2ffea036:	b003      	add	sp, #12
2ffea038:	bd30      	pop	{r4, r5, pc}
2ffea03a:	4a1d      	ldr	r2, [pc, #116]	@ (2ffea0b0 <stm32mp_get_soc_name+0xe0>)
2ffea03c:	4290      	cmp	r0, r2
2ffea03e:	d01a      	beq.n	2ffea076 <stm32mp_get_soc_name+0xa6>
2ffea040:	491c      	ldr	r1, [pc, #112]	@ (2ffea0b4 <stm32mp_get_soc_name+0xe4>)
2ffea042:	4c1d      	ldr	r4, [pc, #116]	@ (2ffea0b8 <stm32mp_get_soc_name+0xe8>)
2ffea044:	e7da      	b.n	2ffe9ffc <stm32mp_get_soc_name+0x2c>
2ffea046:	4a1d      	ldr	r2, [pc, #116]	@ (2ffea0bc <stm32mp_get_soc_name+0xec>)
2ffea048:	4290      	cmp	r0, r2
2ffea04a:	d016      	beq.n	2ffea07a <stm32mp_get_soc_name+0xaa>
2ffea04c:	d805      	bhi.n	2ffea05a <stm32mp_get_soc_name+0x8a>
2ffea04e:	3ac0      	subs	r2, #192	@ 0xc0
2ffea050:	4290      	cmp	r0, r2
2ffea052:	d014      	beq.n	2ffea07e <stm32mp_get_soc_name+0xae>
2ffea054:	491a      	ldr	r1, [pc, #104]	@ (2ffea0c0 <stm32mp_get_soc_name+0xf0>)
2ffea056:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0c4 <stm32mp_get_soc_name+0xf4>)
2ffea058:	e7d0      	b.n	2ffe9ffc <stm32mp_get_soc_name+0x2c>
2ffea05a:	4a1b      	ldr	r2, [pc, #108]	@ (2ffea0c8 <stm32mp_get_soc_name+0xf8>)
2ffea05c:	4290      	cmp	r0, r2
2ffea05e:	d010      	beq.n	2ffea082 <stm32mp_get_soc_name+0xb2>
2ffea060:	491a      	ldr	r1, [pc, #104]	@ (2ffea0cc <stm32mp_get_soc_name+0xfc>)
2ffea062:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0d0 <stm32mp_get_soc_name+0x100>)
2ffea064:	e7ca      	b.n	2ffe9ffc <stm32mp_get_soc_name+0x2c>
2ffea066:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0d4 <stm32mp_get_soc_name+0x104>)
2ffea068:	e7cc      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea06a:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0d8 <stm32mp_get_soc_name+0x108>)
2ffea06c:	e7ca      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea06e:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0dc <stm32mp_get_soc_name+0x10c>)
2ffea070:	e7c8      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea072:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0e0 <stm32mp_get_soc_name+0x110>)
2ffea074:	e7c6      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea076:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0e4 <stm32mp_get_soc_name+0x114>)
2ffea078:	e7c4      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea07a:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0e8 <stm32mp_get_soc_name+0x118>)
2ffea07c:	e7c2      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea07e:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0ec <stm32mp_get_soc_name+0x11c>)
2ffea080:	e7c0      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea082:	4c1b      	ldr	r4, [pc, #108]	@ (2ffea0f0 <stm32mp_get_soc_name+0x120>)
2ffea084:	e7be      	b.n	2ffea004 <stm32mp_get_soc_name+0x34>
2ffea086:	4b1b      	ldr	r3, [pc, #108]	@ (2ffea0f4 <stm32mp_get_soc_name+0x124>)
2ffea088:	e7cc      	b.n	2ffea024 <stm32mp_get_soc_name+0x54>
2ffea08a:	4b1b      	ldr	r3, [pc, #108]	@ (2ffea0f8 <stm32mp_get_soc_name+0x128>)
2ffea08c:	e7ca      	b.n	2ffea024 <stm32mp_get_soc_name+0x54>
2ffea08e:	bf00      	nop
2ffea090:	05010800 	.word	0x05010800
2ffea094:	05010000 	.word	0x05010000
2ffea098:	2fff334f 	.word	0x2fff334f
2ffea09c:	2fff3381 	.word	0x2fff3381
2ffea0a0:	2fff338a 	.word	0x2fff338a
2ffea0a4:	2fff3384 	.word	0x2fff3384
2ffea0a8:	2fff2e57 	.word	0x2fff2e57
2ffea0ac:	2fff338c 	.word	0x2fff338c
2ffea0b0:	050106c8 	.word	0x050106c8
2ffea0b4:	050106c9 	.word	0x050106c9
2ffea0b8:	2fff337c 	.word	0x2fff337c
2ffea0bc:	050108c1 	.word	0x050108c1
2ffea0c0:	050108c0 	.word	0x050108c0
2ffea0c4:	2fff3359 	.word	0x2fff3359
2ffea0c8:	05010ec8 	.word	0x05010ec8
2ffea0cc:	05010ec9 	.word	0x05010ec9
2ffea0d0:	2fff3372 	.word	0x2fff3372
2ffea0d4:	2fff3345 	.word	0x2fff3345
2ffea0d8:	2fff3368 	.word	0x2fff3368
2ffea0dc:	2fff3354 	.word	0x2fff3354
2ffea0e0:	2fff3363 	.word	0x2fff3363
2ffea0e4:	2fff3377 	.word	0x2fff3377
2ffea0e8:	2fff335e 	.word	0x2fff335e
2ffea0ec:	2fff334a 	.word	0x2fff334a
2ffea0f0:	2fff336d 	.word	0x2fff336d
2ffea0f4:	2fff3388 	.word	0x2fff3388
2ffea0f8:	2fff3386 	.word	0x2fff3386

2ffea0fc <stm32mp_print_cpuinfo>:
2ffea0fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffea0fe:	a801      	add	r0, sp, #4
2ffea100:	f7ff ff66 	bl	2ffe9fd0 <stm32mp_get_soc_name>
2ffea104:	4803      	ldr	r0, [pc, #12]	@ (2ffea114 <stm32mp_print_cpuinfo+0x18>)
2ffea106:	a901      	add	r1, sp, #4
2ffea108:	f7fd fc34 	bl	2ffe7974 <tf_log>
2ffea10c:	b007      	add	sp, #28
2ffea10e:	f85d fb04 	ldr.w	pc, [sp], #4
2ffea112:	bf00      	nop
2ffea114:	2fff339f 	.word	0x2fff339f

2ffea118 <stm32mp_print_boardinfo>:
2ffea118:	b507      	push	{r0, r1, r2, lr}
2ffea11a:	2300      	movs	r3, #0
2ffea11c:	4806      	ldr	r0, [pc, #24]	@ (2ffea138 <stm32mp_print_boardinfo+0x20>)
2ffea11e:	a901      	add	r1, sp, #4
2ffea120:	9301      	str	r3, [sp, #4]
2ffea122:	f7fd fddf 	bl	2ffe7ce4 <stm32_get_otp_value>
2ffea126:	b918      	cbnz	r0, 2ffea130 <stm32mp_print_boardinfo+0x18>
2ffea128:	9801      	ldr	r0, [sp, #4]
2ffea12a:	b108      	cbz	r0, 2ffea130 <stm32mp_print_boardinfo+0x18>
2ffea12c:	f7fd fdfc 	bl	2ffe7d28 <stm32_display_board_info>
2ffea130:	b003      	add	sp, #12
2ffea132:	f85d fb04 	ldr.w	pc, [sp], #4
2ffea136:	bf00      	nop
2ffea138:	2fff33a9 	.word	0x2fff33a9

2ffea13c <stm32mp_check_closed_device>:
2ffea13c:	b507      	push	{r0, r1, r2, lr}
2ffea13e:	a901      	add	r1, sp, #4
2ffea140:	4810      	ldr	r0, [pc, #64]	@ (2ffea184 <stm32mp_check_closed_device+0x48>)
2ffea142:	f7fd fdcf 	bl	2ffe7ce4 <stm32_get_otp_value>
2ffea146:	b9b0      	cbnz	r0, 2ffea176 <stm32mp_check_closed_device+0x3a>
2ffea148:	9a01      	ldr	r2, [sp, #4]
2ffea14a:	f3c2 0309 	ubfx	r3, r2, #0, #10
2ffea14e:	9301      	str	r3, [sp, #4]
2ffea150:	2b3f      	cmp	r3, #63	@ 0x3f
2ffea152:	d010      	beq.n	2ffea176 <stm32mp_check_closed_device+0x3a>
2ffea154:	f412 7f70 	tst.w	r2, #960	@ 0x3c0
2ffea158:	d105      	bne.n	2ffea166 <stm32mp_check_closed_device+0x2a>
2ffea15a:	2b17      	cmp	r3, #23
2ffea15c:	d00f      	beq.n	2ffea17e <stm32mp_check_closed_device+0x42>
2ffea15e:	f7fd fca5 	bl	2ffe7aac <console_flush>
2ffea162:	f7fa e968 	blx	2ffe4434 <do_panic>
2ffea166:	f240 127f 	movw	r2, #383	@ 0x17f
2ffea16a:	4293      	cmp	r3, r2
2ffea16c:	d003      	beq.n	2ffea176 <stm32mp_check_closed_device+0x3a>
2ffea16e:	f240 32ff 	movw	r2, #1023	@ 0x3ff
2ffea172:	4293      	cmp	r3, r2
2ffea174:	d1f3      	bne.n	2ffea15e <stm32mp_check_closed_device+0x22>
2ffea176:	4804      	ldr	r0, [pc, #16]	@ (2ffea188 <stm32mp_check_closed_device+0x4c>)
2ffea178:	b003      	add	sp, #12
2ffea17a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffea17e:	4803      	ldr	r0, [pc, #12]	@ (2ffea18c <stm32mp_check_closed_device+0x50>)
2ffea180:	e7fa      	b.n	2ffea178 <stm32mp_check_closed_device+0x3c>
2ffea182:	bf00      	nop
2ffea184:	2fff33b2 	.word	0x2fff33b2
2ffea188:	34d9ccc5 	.word	0x34d9ccc5
2ffea18c:	a764d182 	.word	0xa764d182

2ffea190 <stm32mp_is_auth_supported>:
2ffea190:	b508      	push	{r3, lr}
2ffea192:	f7ff fec3 	bl	2ffe9f1c <get_part_number>
2ffea196:	4b0d      	ldr	r3, [pc, #52]	@ (2ffea1cc <stm32mp_is_auth_supported+0x3c>)
2ffea198:	4298      	cmp	r0, r3
2ffea19a:	d014      	beq.n	2ffea1c6 <stm32mp_is_auth_supported+0x36>
2ffea19c:	d80d      	bhi.n	2ffea1ba <stm32mp_is_auth_supported+0x2a>
2ffea19e:	f5a3 63e8 	sub.w	r3, r3, #1856	@ 0x740
2ffea1a2:	4298      	cmp	r0, r3
2ffea1a4:	d00f      	beq.n	2ffea1c6 <stm32mp_is_auth_supported+0x36>
2ffea1a6:	f503 63c1 	add.w	r3, r3, #1544	@ 0x608
2ffea1aa:	4298      	cmp	r0, r3
2ffea1ac:	d00b      	beq.n	2ffea1c6 <stm32mp_is_auth_supported+0x36>
2ffea1ae:	f5a3 63d9 	sub.w	r3, r3, #1736	@ 0x6c8
2ffea1b2:	1ac3      	subs	r3, r0, r3
2ffea1b4:	4258      	negs	r0, r3
2ffea1b6:	4158      	adcs	r0, r3
2ffea1b8:	bd08      	pop	{r3, pc}
2ffea1ba:	4b05      	ldr	r3, [pc, #20]	@ (2ffea1d0 <stm32mp_is_auth_supported+0x40>)
2ffea1bc:	4298      	cmp	r0, r3
2ffea1be:	d002      	beq.n	2ffea1c6 <stm32mp_is_auth_supported+0x36>
2ffea1c0:	f503 63c1 	add.w	r3, r3, #1544	@ 0x608
2ffea1c4:	e7f5      	b.n	2ffea1b2 <stm32mp_is_auth_supported+0x22>
2ffea1c6:	2001      	movs	r0, #1
2ffea1c8:	e7f6      	b.n	2ffea1b8 <stm32mp_is_auth_supported+0x28>
2ffea1ca:	bf00      	nop
2ffea1cc:	05010800 	.word	0x05010800
2ffea1d0:	050108c0 	.word	0x050108c0

2ffea1d4 <stm32_iwdg_get_instance>:
2ffea1d4:	b508      	push	{r3, lr}
2ffea1d6:	4b07      	ldr	r3, [pc, #28]	@ (2ffea1f4 <stm32_iwdg_get_instance+0x20>)
2ffea1d8:	4298      	cmp	r0, r3
2ffea1da:	d006      	beq.n	2ffea1ea <stm32_iwdg_get_instance+0x16>
2ffea1dc:	4b06      	ldr	r3, [pc, #24]	@ (2ffea1f8 <stm32_iwdg_get_instance+0x24>)
2ffea1de:	4298      	cmp	r0, r3
2ffea1e0:	d005      	beq.n	2ffea1ee <stm32_iwdg_get_instance+0x1a>
2ffea1e2:	f7fd fc63 	bl	2ffe7aac <console_flush>
2ffea1e6:	f7fa e926 	blx	2ffe4434 <do_panic>
2ffea1ea:	2001      	movs	r0, #1
2ffea1ec:	bd08      	pop	{r3, pc}
2ffea1ee:	2000      	movs	r0, #0
2ffea1f0:	e7fc      	b.n	2ffea1ec <stm32_iwdg_get_instance+0x18>
2ffea1f2:	bf00      	nop
2ffea1f4:	5a002000 	.word	0x5a002000
2ffea1f8:	5c003000 	.word	0x5c003000

2ffea1fc <stm32_iwdg_get_otp_config>:
2ffea1fc:	b513      	push	{r0, r1, r4, lr}
2ffea1fe:	4604      	mov	r4, r0
2ffea200:	4809      	ldr	r0, [pc, #36]	@ (2ffea228 <stm32_iwdg_get_otp_config+0x2c>)
2ffea202:	a901      	add	r1, sp, #4
2ffea204:	f7fd fd6e 	bl	2ffe7ce4 <stm32_get_otp_value>
2ffea208:	b118      	cbz	r0, 2ffea212 <stm32_iwdg_get_otp_config+0x16>
2ffea20a:	f7fd fc4f 	bl	2ffe7aac <console_flush>
2ffea20e:	f7fa e912 	blx	2ffe4434 <do_panic>
2ffea212:	9a01      	ldr	r2, [sp, #4]
2ffea214:	3403      	adds	r4, #3
2ffea216:	2301      	movs	r3, #1
2ffea218:	40a3      	lsls	r3, r4
2ffea21a:	4213      	tst	r3, r2
2ffea21c:	bf14      	ite	ne
2ffea21e:	2001      	movne	r0, #1
2ffea220:	2000      	moveq	r0, #0
2ffea222:	b002      	add	sp, #8
2ffea224:	bd10      	pop	{r4, pc}
2ffea226:	bf00      	nop
2ffea228:	2fff33bb 	.word	0x2fff33bb

2ffea22c <stm32mp_bkpram_get_access>:
2ffea22c:	b510      	push	{r4, lr}
2ffea22e:	4c0e      	ldr	r4, [pc, #56]	@ (2ffea268 <stm32mp_bkpram_get_access+0x3c>)
2ffea230:	7820      	ldrb	r0, [r4, #0]
2ffea232:	b1b8      	cbz	r0, 2ffea264 <stm32mp_bkpram_get_access+0x38>
2ffea234:	2030      	movs	r0, #48	@ 0x30
2ffea236:	f7fe fb93 	bl	2ffe8960 <clk_enable>
2ffea23a:	4b0c      	ldr	r3, [pc, #48]	@ (2ffea26c <stm32mp_bkpram_get_access+0x40>)
2ffea23c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
2ffea23e:	b16a      	cbz	r2, 2ffea25c <stm32mp_bkpram_get_access+0x30>
2ffea240:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
2ffea242:	b15a      	cbz	r2, 2ffea25c <stm32mp_bkpram_get_access+0x30>
2ffea244:	685a      	ldr	r2, [r3, #4]
2ffea246:	b2d2      	uxtb	r2, r2
2ffea248:	b11a      	cbz	r2, 2ffea252 <stm32mp_bkpram_get_access+0x26>
2ffea24a:	689b      	ldr	r3, [r3, #8]
2ffea24c:	f3c3 030c 	ubfx	r3, r3, #0, #13
2ffea250:	b923      	cbnz	r3, 2ffea25c <stm32mp_bkpram_get_access+0x30>
2ffea252:	4807      	ldr	r0, [pc, #28]	@ (2ffea270 <stm32mp_bkpram_get_access+0x44>)
2ffea254:	f7fd fb8e 	bl	2ffe7974 <tf_log>
2ffea258:	2300      	movs	r3, #0
2ffea25a:	7023      	strb	r3, [r4, #0]
2ffea25c:	2030      	movs	r0, #48	@ 0x30
2ffea25e:	f7fe fb91 	bl	2ffe8984 <clk_disable>
2ffea262:	7820      	ldrb	r0, [r4, #0]
2ffea264:	bd10      	pop	{r4, pc}
2ffea266:	bf00      	nop
2ffea268:	2fff4773 	.word	0x2fff4773
2ffea26c:	5c00a000 	.word	0x5c00a000
2ffea270:	2fff33c3 	.word	0x2fff33c3

2ffea274 <tzc400_set_action>:
2ffea274:	b508      	push	{r3, lr}
2ffea276:	4b06      	ldr	r3, [pc, #24]	@ (2ffea290 <tzc400_set_action+0x1c>)
2ffea278:	681b      	ldr	r3, [r3, #0]
2ffea27a:	b91b      	cbnz	r3, 2ffea284 <tzc400_set_action+0x10>
2ffea27c:	21b5      	movs	r1, #181	@ 0xb5
2ffea27e:	4805      	ldr	r0, [pc, #20]	@ (2ffea294 <tzc400_set_action+0x20>)
2ffea280:	f003 fb38 	bl	2ffed8f4 <__assert>
2ffea284:	2803      	cmp	r0, #3
2ffea286:	d901      	bls.n	2ffea28c <tzc400_set_action+0x18>
2ffea288:	21b6      	movs	r1, #182	@ 0xb6
2ffea28a:	e7f8      	b.n	2ffea27e <tzc400_set_action+0xa>
2ffea28c:	6058      	str	r0, [r3, #4]
2ffea28e:	bd08      	pop	{r3, pc}
2ffea290:	2fff5908 	.word	0x2fff5908
2ffea294:	2fff33e5 	.word	0x2fff33e5

2ffea298 <tzc400_init>:
2ffea298:	b508      	push	{r3, lr}
2ffea29a:	b918      	cbnz	r0, 2ffea2a4 <tzc400_init+0xc>
2ffea29c:	4812      	ldr	r0, [pc, #72]	@ (2ffea2e8 <tzc400_init+0x50>)
2ffea29e:	21c2      	movs	r1, #194	@ 0xc2
2ffea2a0:	f003 fb28 	bl	2ffed8f4 <__assert>
2ffea2a4:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	@ 0xfe0
2ffea2a8:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	@ 0xfe4
2ffea2ac:	4a0f      	ldr	r2, [pc, #60]	@ (2ffea2ec <tzc400_init+0x54>)
2ffea2ae:	0209      	lsls	r1, r1, #8
2ffea2b0:	6010      	str	r0, [r2, #0]
2ffea2b2:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
2ffea2b6:	4319      	orrs	r1, r3
2ffea2b8:	f5b1 6f8c 	cmp.w	r1, #1120	@ 0x460
2ffea2bc:	d006      	beq.n	2ffea2cc <tzc400_init+0x34>
2ffea2be:	480c      	ldr	r0, [pc, #48]	@ (2ffea2f0 <tzc400_init+0x58>)
2ffea2c0:	f7fd fb58 	bl	2ffe7974 <tf_log>
2ffea2c4:	f7fd fbf2 	bl	2ffe7aac <console_flush>
2ffea2c8:	f7fa e8b4 	blx	2ffe4434 <do_panic>
2ffea2cc:	6803      	ldr	r3, [r0, #0]
2ffea2ce:	f3c3 6101 	ubfx	r1, r3, #24, #2
2ffea2d2:	3101      	adds	r1, #1
2ffea2d4:	7151      	strb	r1, [r2, #5]
2ffea2d6:	f3c3 2105 	ubfx	r1, r3, #8, #6
2ffea2da:	f003 031f 	and.w	r3, r3, #31
2ffea2de:	3101      	adds	r1, #1
2ffea2e0:	3301      	adds	r3, #1
2ffea2e2:	7111      	strb	r1, [r2, #4]
2ffea2e4:	7193      	strb	r3, [r2, #6]
2ffea2e6:	bd08      	pop	{r3, pc}
2ffea2e8:	2fff33e5 	.word	0x2fff33e5
2ffea2ec:	2fff5908 	.word	0x2fff5908
2ffea2f0:	2fff33fe 	.word	0x2fff33fe

2ffea2f4 <tzc400_configure_region0>:
2ffea2f4:	b508      	push	{r3, lr}
2ffea2f6:	4b08      	ldr	r3, [pc, #32]	@ (2ffea318 <tzc400_configure_region0+0x24>)
2ffea2f8:	681b      	ldr	r3, [r3, #0]
2ffea2fa:	b91b      	cbnz	r3, 2ffea304 <tzc400_configure_region0+0x10>
2ffea2fc:	21e0      	movs	r1, #224	@ 0xe0
2ffea2fe:	4807      	ldr	r0, [pc, #28]	@ (2ffea31c <tzc400_configure_region0+0x28>)
2ffea300:	f003 faf8 	bl	2ffed8f4 <__assert>
2ffea304:	2803      	cmp	r0, #3
2ffea306:	d901      	bls.n	2ffea30c <tzc400_configure_region0+0x18>
2ffea308:	21e1      	movs	r1, #225	@ 0xe1
2ffea30a:	e7f8      	b.n	2ffea2fe <tzc400_configure_region0+0xa>
2ffea30c:	0780      	lsls	r0, r0, #30
2ffea30e:	f8c3 0110 	str.w	r0, [r3, #272]	@ 0x110
2ffea312:	f8c3 1114 	str.w	r1, [r3, #276]	@ 0x114
2ffea316:	bd08      	pop	{r3, pc}
2ffea318:	2fff5908 	.word	0x2fff5908
2ffea31c:	2fff33e5 	.word	0x2fff33e5

2ffea320 <tzc400_configure_region>:
2ffea320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffea324:	4d2d      	ldr	r5, [pc, #180]	@ (2ffea3dc <tzc400_configure_region+0xbc>)
2ffea326:	e9dd 7c08 	ldrd	r7, ip, [sp, #32]
2ffea32a:	682c      	ldr	r4, [r5, #0]
2ffea32c:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
2ffea330:	b91c      	cbnz	r4, 2ffea33a <tzc400_configure_region+0x1a>
2ffea332:	21f7      	movs	r1, #247	@ 0xf7
2ffea334:	482a      	ldr	r0, [pc, #168]	@ (2ffea3e0 <tzc400_configure_region+0xc0>)
2ffea336:	f003 fadd 	bl	2ffed8f4 <__assert>
2ffea33a:	796e      	ldrb	r6, [r5, #5]
2ffea33c:	280f      	cmp	r0, #15
2ffea33e:	bf02      	ittt	eq
2ffea340:	2001      	moveq	r0, #1
2ffea342:	40b0      	lsleq	r0, r6
2ffea344:	f100 30ff 	addeq.w	r0, r0, #4294967295	@ 0xffffffff
2ffea348:	fa30 f606 	lsrs.w	r6, r0, r6
2ffea34c:	d102      	bne.n	2ffea354 <tzc400_configure_region+0x34>
2ffea34e:	79ae      	ldrb	r6, [r5, #6]
2ffea350:	428e      	cmp	r6, r1
2ffea352:	d801      	bhi.n	2ffea358 <tzc400_configure_region+0x38>
2ffea354:	21ff      	movs	r1, #255	@ 0xff
2ffea356:	e7ed      	b.n	2ffea334 <tzc400_configure_region+0x14>
2ffea358:	792e      	ldrb	r6, [r5, #4]
2ffea35a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffea35e:	f1c6 0a40 	rsb	sl, r6, #64	@ 0x40
2ffea362:	f1a6 0920 	sub.w	r9, r6, #32
2ffea366:	f1c6 0620 	rsb	r6, r6, #32
2ffea36a:	fa25 f80a 	lsr.w	r8, r5, sl
2ffea36e:	fa05 f909 	lsl.w	r9, r5, r9
2ffea372:	fa25 f606 	lsr.w	r6, r5, r6
2ffea376:	ea48 0809 	orr.w	r8, r8, r9
2ffea37a:	ea48 0806 	orr.w	r8, r8, r6
2ffea37e:	fa25 f50a 	lsr.w	r5, r5, sl
2ffea382:	45b8      	cmp	r8, r7
2ffea384:	eb75 050c 	sbcs.w	r5, r5, ip
2ffea388:	d303      	bcc.n	2ffea392 <tzc400_configure_region+0x72>
2ffea38a:	42ba      	cmp	r2, r7
2ffea38c:	eb73 050c 	sbcs.w	r5, r3, ip
2ffea390:	d302      	bcc.n	2ffea398 <tzc400_configure_region+0x78>
2ffea392:	f44f 7183 	mov.w	r1, #262	@ 0x106
2ffea396:	e7cd      	b.n	2ffea334 <tzc400_configure_region+0x14>
2ffea398:	1c7d      	adds	r5, r7, #1
2ffea39a:	4315      	orrs	r5, r2
2ffea39c:	f3c5 050b 	ubfx	r5, r5, #0, #12
2ffea3a0:	b115      	cbz	r5, 2ffea3a8 <tzc400_configure_region+0x88>
2ffea3a2:	f44f 7185 	mov.w	r1, #266	@ 0x10a
2ffea3a6:	e7c5      	b.n	2ffea334 <tzc400_configure_region+0x14>
2ffea3a8:	f1be 0f03 	cmp.w	lr, #3
2ffea3ac:	d902      	bls.n	2ffea3b4 <tzc400_configure_region+0x94>
2ffea3ae:	f44f 7186 	mov.w	r1, #268	@ 0x10c
2ffea3b2:	e7bf      	b.n	2ffea334 <tzc400_configure_region+0x14>
2ffea3b4:	eb04 1141 	add.w	r1, r4, r1, lsl #5
2ffea3b8:	ea40 708e 	orr.w	r0, r0, lr, lsl #30
2ffea3bc:	f8c1 2100 	str.w	r2, [r1, #256]	@ 0x100
2ffea3c0:	f8c1 3104 	str.w	r3, [r1, #260]	@ 0x104
2ffea3c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
2ffea3c6:	f8c1 7108 	str.w	r7, [r1, #264]	@ 0x108
2ffea3ca:	f8c1 c10c 	str.w	ip, [r1, #268]	@ 0x10c
2ffea3ce:	f8c1 0110 	str.w	r0, [r1, #272]	@ 0x110
2ffea3d2:	f8c1 3114 	str.w	r3, [r1, #276]	@ 0x114
2ffea3d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffea3da:	bf00      	nop
2ffea3dc:	2fff5908 	.word	0x2fff5908
2ffea3e0:	2fff33e5 	.word	0x2fff33e5

2ffea3e4 <tzc400_update_filters>:
2ffea3e4:	b538      	push	{r3, r4, r5, lr}
2ffea3e6:	4b0e      	ldr	r3, [pc, #56]	@ (2ffea420 <tzc400_update_filters+0x3c>)
2ffea3e8:	795c      	ldrb	r4, [r3, #5]
2ffea3ea:	fa31 f204 	lsrs.w	r2, r1, r4
2ffea3ee:	d102      	bne.n	2ffea3f6 <tzc400_update_filters+0x12>
2ffea3f0:	799a      	ldrb	r2, [r3, #6]
2ffea3f2:	4282      	cmp	r2, r0
2ffea3f4:	d804      	bhi.n	2ffea400 <tzc400_update_filters+0x1c>
2ffea3f6:	480b      	ldr	r0, [pc, #44]	@ (2ffea424 <tzc400_update_filters+0x40>)
2ffea3f8:	f44f 718b 	mov.w	r1, #278	@ 0x116
2ffea3fc:	f003 fa7a 	bl	2ffed8f4 <__assert>
2ffea400:	681a      	ldr	r2, [r3, #0]
2ffea402:	f1c4 0420 	rsb	r4, r4, #32
2ffea406:	0140      	lsls	r0, r0, #5
2ffea408:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffea40c:	f502 7288 	add.w	r2, r2, #272	@ 0x110
2ffea410:	fa25 f404 	lsr.w	r4, r5, r4
2ffea414:	5813      	ldr	r3, [r2, r0]
2ffea416:	ea23 0304 	bic.w	r3, r3, r4
2ffea41a:	4319      	orrs	r1, r3
2ffea41c:	5011      	str	r1, [r2, r0]
2ffea41e:	bd38      	pop	{r3, r4, r5, pc}
2ffea420:	2fff5908 	.word	0x2fff5908
2ffea424:	2fff33e5 	.word	0x2fff33e5

2ffea428 <tzc400_enable_filters>:
2ffea428:	b538      	push	{r3, r4, r5, lr}
2ffea42a:	4b16      	ldr	r3, [pc, #88]	@ (2ffea484 <tzc400_enable_filters+0x5c>)
2ffea42c:	681a      	ldr	r2, [r3, #0]
2ffea42e:	b122      	cbz	r2, 2ffea43a <tzc400_enable_filters+0x12>
2ffea430:	795c      	ldrb	r4, [r3, #5]
2ffea432:	2100      	movs	r1, #0
2ffea434:	428c      	cmp	r4, r1
2ffea436:	d805      	bhi.n	2ffea444 <tzc400_enable_filters+0x1c>
2ffea438:	bd38      	pop	{r3, r4, r5, pc}
2ffea43a:	4813      	ldr	r0, [pc, #76]	@ (2ffea488 <tzc400_enable_filters+0x60>)
2ffea43c:	f240 1121 	movw	r1, #289	@ 0x121
2ffea440:	f003 fa58 	bl	2ffed8f4 <__assert>
2ffea444:	6893      	ldr	r3, [r2, #8]
2ffea446:	f102 0508 	add.w	r5, r2, #8
2ffea44a:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffea44e:	40cb      	lsrs	r3, r1
2ffea450:	07db      	lsls	r3, r3, #31
2ffea452:	d507      	bpl.n	2ffea464 <tzc400_enable_filters+0x3c>
2ffea454:	b1a1      	cbz	r1, 2ffea480 <tzc400_enable_filters+0x58>
2ffea456:	480d      	ldr	r0, [pc, #52]	@ (2ffea48c <tzc400_enable_filters+0x64>)
2ffea458:	f7fd fa8c 	bl	2ffe7974 <tf_log>
2ffea45c:	f7fd fb26 	bl	2ffe7aac <console_flush>
2ffea460:	f7f9 efe8 	blx	2ffe4434 <do_panic>
2ffea464:	6890      	ldr	r0, [r2, #8]
2ffea466:	2301      	movs	r3, #1
2ffea468:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffea46c:	408b      	lsls	r3, r1
2ffea46e:	4303      	orrs	r3, r0
2ffea470:	f003 000f 	and.w	r0, r3, #15
2ffea474:	6090      	str	r0, [r2, #8]
2ffea476:	6828      	ldr	r0, [r5, #0]
2ffea478:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffea47c:	4283      	cmp	r3, r0
2ffea47e:	d1fa      	bne.n	2ffea476 <tzc400_enable_filters+0x4e>
2ffea480:	3101      	adds	r1, #1
2ffea482:	e7d7      	b.n	2ffea434 <tzc400_enable_filters+0xc>
2ffea484:	2fff5908 	.word	0x2fff5908
2ffea488:	2fff33e5 	.word	0x2fff33e5
2ffea48c:	2fff3422 	.word	0x2fff3422

2ffea490 <tzc400_disable_filters>:
2ffea490:	4811      	ldr	r0, [pc, #68]	@ (2ffea4d8 <tzc400_disable_filters+0x48>)
2ffea492:	b538      	push	{r3, r4, r5, lr}
2ffea494:	6803      	ldr	r3, [r0, #0]
2ffea496:	b923      	cbnz	r3, 2ffea4a2 <tzc400_disable_filters+0x12>
2ffea498:	4810      	ldr	r0, [pc, #64]	@ (2ffea4dc <tzc400_disable_filters+0x4c>)
2ffea49a:	f240 1143 	movw	r1, #323	@ 0x143
2ffea49e:	f003 fa29 	bl	2ffed8f4 <__assert>
2ffea4a2:	689a      	ldr	r2, [r3, #8]
2ffea4a4:	f103 0108 	add.w	r1, r3, #8
2ffea4a8:	7944      	ldrb	r4, [r0, #5]
2ffea4aa:	2501      	movs	r5, #1
2ffea4ac:	f3c2 4200 	ubfx	r2, r2, #16, #1
2ffea4b0:	4294      	cmp	r4, r2
2ffea4b2:	d800      	bhi.n	2ffea4b6 <tzc400_disable_filters+0x26>
2ffea4b4:	bd38      	pop	{r3, r4, r5, pc}
2ffea4b6:	680b      	ldr	r3, [r1, #0]
2ffea4b8:	fa05 f002 	lsl.w	r0, r5, r2
2ffea4bc:	0c1b      	lsrs	r3, r3, #16
2ffea4be:	ea23 0300 	bic.w	r3, r3, r0
2ffea4c2:	f003 030f 	and.w	r3, r3, #15
2ffea4c6:	600b      	str	r3, [r1, #0]
2ffea4c8:	6808      	ldr	r0, [r1, #0]
2ffea4ca:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffea4ce:	4283      	cmp	r3, r0
2ffea4d0:	d1fa      	bne.n	2ffea4c8 <tzc400_disable_filters+0x38>
2ffea4d2:	3201      	adds	r2, #1
2ffea4d4:	e7ec      	b.n	2ffea4b0 <tzc400_disable_filters+0x20>
2ffea4d6:	bf00      	nop
2ffea4d8:	2fff5908 	.word	0x2fff5908
2ffea4dc:	2fff33e5 	.word	0x2fff33e5

2ffea4e0 <is_otp_invalid_mode>:
2ffea4e0:	4b07      	ldr	r3, [pc, #28]	@ (2ffea500 <is_otp_invalid_mode+0x20>)
2ffea4e2:	b510      	push	{r4, lr}
2ffea4e4:	68db      	ldr	r3, [r3, #12]
2ffea4e6:	f003 0304 	and.w	r3, r3, #4
2ffea4ea:	2b00      	cmp	r3, #0
2ffea4ec:	bf14      	ite	ne
2ffea4ee:	2401      	movne	r4, #1
2ffea4f0:	2400      	moveq	r4, #0
2ffea4f2:	d002      	beq.n	2ffea4fa <is_otp_invalid_mode+0x1a>
2ffea4f4:	4803      	ldr	r0, [pc, #12]	@ (2ffea504 <is_otp_invalid_mode+0x24>)
2ffea4f6:	f7fd fa3d 	bl	2ffe7974 <tf_log>
2ffea4fa:	4620      	mov	r0, r4
2ffea4fc:	bd10      	pop	{r4, pc}
2ffea4fe:	bf00      	nop
2ffea500:	5c005000 	.word	0x5c005000
2ffea504:	2fff3454 	.word	0x2fff3454

2ffea508 <bsec_lock>:
2ffea508:	b508      	push	{r3, lr}
2ffea50a:	f003 fef0 	bl	2ffee2ee <stm32mp_lock_available>
2ffea50e:	b120      	cbz	r0, 2ffea51a <bsec_lock+0x12>
2ffea510:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffea514:	4801      	ldr	r0, [pc, #4]	@ (2ffea51c <bsec_lock+0x14>)
2ffea516:	f009 bc9b 	b.w	2fff3e50 <__spin_lock_from_thumb>
2ffea51a:	bd08      	pop	{r3, pc}
2ffea51c:	2fff5910 	.word	0x2fff5910

2ffea520 <bsec_unlock>:
2ffea520:	b508      	push	{r3, lr}
2ffea522:	f003 fee4 	bl	2ffee2ee <stm32mp_lock_available>
2ffea526:	b120      	cbz	r0, 2ffea532 <bsec_unlock+0x12>
2ffea528:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffea52c:	4801      	ldr	r0, [pc, #4]	@ (2ffea534 <bsec_unlock+0x14>)
2ffea52e:	f009 bc8b 	b.w	2fff3e48 <__spin_unlock_from_thumb>
2ffea532:	bd08      	pop	{r3, pc}
2ffea534:	2fff5910 	.word	0x2fff5910

2ffea538 <bsec_power_safmem>:
2ffea538:	b510      	push	{r4, lr}
2ffea53a:	4604      	mov	r4, r0
2ffea53c:	f7ff ffe4 	bl	2ffea508 <bsec_lock>
2ffea540:	4a12      	ldr	r2, [pc, #72]	@ (2ffea58c <bsec_power_safmem+0x54>)
2ffea542:	6813      	ldr	r3, [r2, #0]
2ffea544:	b16c      	cbz	r4, 2ffea562 <bsec_power_safmem+0x2a>
2ffea546:	f64f 74ff 	movw	r4, #65535	@ 0xffff
2ffea54a:	f043 0301 	orr.w	r3, r3, #1
2ffea54e:	6013      	str	r3, [r2, #0]
2ffea550:	68d3      	ldr	r3, [r2, #12]
2ffea552:	0699      	lsls	r1, r3, #26
2ffea554:	d413      	bmi.n	2ffea57e <bsec_power_safmem+0x46>
2ffea556:	b984      	cbnz	r4, 2ffea57a <bsec_power_safmem+0x42>
2ffea558:	f7ff ffe2 	bl	2ffea520 <bsec_unlock>
2ffea55c:	f06f 0006 	mvn.w	r0, #6
2ffea560:	bd10      	pop	{r4, pc}
2ffea562:	f023 0301 	bic.w	r3, r3, #1
2ffea566:	f64f 74ff 	movw	r4, #65535	@ 0xffff
2ffea56a:	6013      	str	r3, [r2, #0]
2ffea56c:	68d3      	ldr	r3, [r2, #12]
2ffea56e:	069b      	lsls	r3, r3, #26
2ffea570:	d505      	bpl.n	2ffea57e <bsec_power_safmem+0x46>
2ffea572:	2c00      	cmp	r4, #0
2ffea574:	d0f0      	beq.n	2ffea558 <bsec_power_safmem+0x20>
2ffea576:	3c01      	subs	r4, #1
2ffea578:	e7f8      	b.n	2ffea56c <bsec_power_safmem+0x34>
2ffea57a:	3c01      	subs	r4, #1
2ffea57c:	e7e8      	b.n	2ffea550 <bsec_power_safmem+0x18>
2ffea57e:	f7ff ffcf 	bl	2ffea520 <bsec_unlock>
2ffea582:	2c00      	cmp	r4, #0
2ffea584:	d0ea      	beq.n	2ffea55c <bsec_power_safmem+0x24>
2ffea586:	2000      	movs	r0, #0
2ffea588:	e7ea      	b.n	2ffea560 <bsec_power_safmem+0x28>
2ffea58a:	bf00      	nop
2ffea58c:	5c005000 	.word	0x5c005000

2ffea590 <otp_bank_offset>:
2ffea590:	285f      	cmp	r0, #95	@ 0x5f
2ffea592:	b508      	push	{r3, lr}
2ffea594:	d903      	bls.n	2ffea59e <otp_bank_offset+0xe>
2ffea596:	4803      	ldr	r0, [pc, #12]	@ (2ffea5a4 <otp_bank_offset+0x14>)
2ffea598:	21bb      	movs	r1, #187	@ 0xbb
2ffea59a:	f003 f9ab 	bl	2ffed8f4 <__assert>
2ffea59e:	0940      	lsrs	r0, r0, #5
2ffea5a0:	0080      	lsls	r0, r0, #2
2ffea5a2:	bd08      	pop	{r3, pc}
2ffea5a4:	2fff346e 	.word	0x2fff346e

2ffea5a8 <bsec_check_error>:
2ffea5a8:	b538      	push	{r3, r4, r5, lr}
2ffea5aa:	f000 031f 	and.w	r3, r0, #31
2ffea5ae:	2401      	movs	r4, #1
2ffea5b0:	460d      	mov	r5, r1
2ffea5b2:	409c      	lsls	r4, r3
2ffea5b4:	f7ff ffec 	bl	2ffea590 <otp_bank_offset>
2ffea5b8:	4b07      	ldr	r3, [pc, #28]	@ (2ffea5d8 <bsec_check_error+0x30>)
2ffea5ba:	4602      	mov	r2, r0
2ffea5bc:	58c0      	ldr	r0, [r0, r3]
2ffea5be:	4020      	ands	r0, r4
2ffea5c0:	d107      	bne.n	2ffea5d2 <bsec_check_error+0x2a>
2ffea5c2:	b12d      	cbz	r5, 2ffea5d0 <bsec_check_error+0x28>
2ffea5c4:	3b18      	subs	r3, #24
2ffea5c6:	58d0      	ldr	r0, [r2, r3]
2ffea5c8:	4020      	ands	r0, r4
2ffea5ca:	bf18      	it	ne
2ffea5cc:	f06f 0001 	mvnne.w	r0, #1
2ffea5d0:	bd38      	pop	{r3, r4, r5, pc}
2ffea5d2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffea5d6:	e7fb      	b.n	2ffea5d0 <bsec_check_error+0x28>
2ffea5d8:	5c005034 	.word	0x5c005034

2ffea5dc <bsec_probe>:
2ffea5dc:	b508      	push	{r3, lr}
2ffea5de:	f7ff ff7f 	bl	2ffea4e0 <is_otp_invalid_mode>
2ffea5e2:	b980      	cbnz	r0, 2ffea606 <bsec_probe+0x2a>
2ffea5e4:	4a0a      	ldr	r2, [pc, #40]	@ (2ffea610 <bsec_probe+0x34>)
2ffea5e6:	f8d2 3ff4 	ldr.w	r3, [r2, #4084]	@ 0xff4
2ffea5ea:	f8d2 2ff8 	ldr.w	r2, [r2, #4088]	@ 0xff8
2ffea5ee:	b2db      	uxtb	r3, r3
2ffea5f0:	2b11      	cmp	r3, #17
2ffea5f2:	d001      	beq.n	2ffea5f8 <bsec_probe+0x1c>
2ffea5f4:	2b20      	cmp	r3, #32
2ffea5f6:	d102      	bne.n	2ffea5fe <bsec_probe+0x22>
2ffea5f8:	4b06      	ldr	r3, [pc, #24]	@ (2ffea614 <bsec_probe+0x38>)
2ffea5fa:	429a      	cmp	r2, r3
2ffea5fc:	d006      	beq.n	2ffea60c <bsec_probe+0x30>
2ffea5fe:	f7fd fa55 	bl	2ffe7aac <console_flush>
2ffea602:	f7f9 ef18 	blx	2ffe4434 <do_panic>
2ffea606:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffea60a:	bd08      	pop	{r3, pc}
2ffea60c:	2000      	movs	r0, #0
2ffea60e:	e7fc      	b.n	2ffea60a <bsec_probe+0x2e>
2ffea610:	5c005000 	.word	0x5c005000
2ffea614:	00100032 	.word	0x00100032

2ffea618 <bsec_read_debug_conf>:
2ffea618:	4b01      	ldr	r3, [pc, #4]	@ (2ffea620 <bsec_read_debug_conf+0x8>)
2ffea61a:	6958      	ldr	r0, [r3, #20]
2ffea61c:	4770      	bx	lr
2ffea61e:	bf00      	nop
2ffea620:	5c005000 	.word	0x5c005000

2ffea624 <bsec_write_scratch>:
2ffea624:	4b01      	ldr	r3, [pc, #4]	@ (2ffea62c <bsec_write_scratch+0x8>)
2ffea626:	f8c3 00b4 	str.w	r0, [r3, #180]	@ 0xb4
2ffea62a:	4770      	bx	lr
2ffea62c:	5c005000 	.word	0x5c005000

2ffea630 <bsec_read_sr_lock>:
2ffea630:	b538      	push	{r3, r4, r5, lr}
2ffea632:	4604      	mov	r4, r0
2ffea634:	460d      	mov	r5, r1
2ffea636:	f7ff ffab 	bl	2ffea590 <otp_bank_offset>
2ffea63a:	f004 021f 	and.w	r2, r4, #31
2ffea63e:	2301      	movs	r3, #1
2ffea640:	2c5f      	cmp	r4, #95	@ 0x5f
2ffea642:	fa03 f302 	lsl.w	r3, r3, r2
2ffea646:	d808      	bhi.n	2ffea65a <bsec_read_sr_lock+0x2a>
2ffea648:	4a05      	ldr	r2, [pc, #20]	@ (2ffea660 <bsec_read_sr_lock+0x30>)
2ffea64a:	5882      	ldr	r2, [r0, r2]
2ffea64c:	2000      	movs	r0, #0
2ffea64e:	4213      	tst	r3, r2
2ffea650:	bf14      	ite	ne
2ffea652:	2301      	movne	r3, #1
2ffea654:	2300      	moveq	r3, #0
2ffea656:	702b      	strb	r3, [r5, #0]
2ffea658:	bd38      	pop	{r3, r4, r5, pc}
2ffea65a:	f06f 0003 	mvn.w	r0, #3
2ffea65e:	e7fb      	b.n	2ffea658 <bsec_read_sr_lock+0x28>
2ffea660:	5c005094 	.word	0x5c005094

2ffea664 <bsec_read_sw_lock>:
2ffea664:	b538      	push	{r3, r4, r5, lr}
2ffea666:	4604      	mov	r4, r0
2ffea668:	460d      	mov	r5, r1
2ffea66a:	f7ff ff91 	bl	2ffea590 <otp_bank_offset>
2ffea66e:	f004 021f 	and.w	r2, r4, #31
2ffea672:	2301      	movs	r3, #1
2ffea674:	2c5f      	cmp	r4, #95	@ 0x5f
2ffea676:	fa03 f302 	lsl.w	r3, r3, r2
2ffea67a:	d808      	bhi.n	2ffea68e <bsec_read_sw_lock+0x2a>
2ffea67c:	4a05      	ldr	r2, [pc, #20]	@ (2ffea694 <bsec_read_sw_lock+0x30>)
2ffea67e:	5882      	ldr	r2, [r0, r2]
2ffea680:	2000      	movs	r0, #0
2ffea682:	4213      	tst	r3, r2
2ffea684:	bf14      	ite	ne
2ffea686:	2301      	movne	r3, #1
2ffea688:	2300      	moveq	r3, #0
2ffea68a:	702b      	strb	r3, [r5, #0]
2ffea68c:	bd38      	pop	{r3, r4, r5, pc}
2ffea68e:	f06f 0003 	mvn.w	r0, #3
2ffea692:	e7fb      	b.n	2ffea68c <bsec_read_sw_lock+0x28>
2ffea694:	5c00507c 	.word	0x5c00507c

2ffea698 <bsec_write_otp>:
2ffea698:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffea69a:	4606      	mov	r6, r0
2ffea69c:	460c      	mov	r4, r1
2ffea69e:	f7ff ff1f 	bl	2ffea4e0 <is_otp_invalid_mode>
2ffea6a2:	b9c8      	cbnz	r0, 2ffea6d8 <bsec_write_otp+0x40>
2ffea6a4:	f10d 0107 	add.w	r1, sp, #7
2ffea6a8:	4620      	mov	r0, r4
2ffea6aa:	f7ff ffdb 	bl	2ffea664 <bsec_read_sw_lock>
2ffea6ae:	4605      	mov	r5, r0
2ffea6b0:	b138      	cbz	r0, 2ffea6c2 <bsec_write_otp+0x2a>
2ffea6b2:	4602      	mov	r2, r0
2ffea6b4:	4621      	mov	r1, r4
2ffea6b6:	480a      	ldr	r0, [pc, #40]	@ (2ffea6e0 <bsec_write_otp+0x48>)
2ffea6b8:	f7fd f95c 	bl	2ffe7974 <tf_log>
2ffea6bc:	4628      	mov	r0, r5
2ffea6be:	b002      	add	sp, #8
2ffea6c0:	bd70      	pop	{r4, r5, r6, pc}
2ffea6c2:	f104 54b8 	add.w	r4, r4, #385875968	@ 0x17000000
2ffea6c6:	f7ff ff1f 	bl	2ffea508 <bsec_lock>
2ffea6ca:	f504 54a4 	add.w	r4, r4, #5248	@ 0x1480
2ffea6ce:	00a4      	lsls	r4, r4, #2
2ffea6d0:	6026      	str	r6, [r4, #0]
2ffea6d2:	f7ff ff25 	bl	2ffea520 <bsec_unlock>
2ffea6d6:	e7f1      	b.n	2ffea6bc <bsec_write_otp+0x24>
2ffea6d8:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffea6dc:	e7ee      	b.n	2ffea6bc <bsec_write_otp+0x24>
2ffea6de:	bf00      	nop
2ffea6e0:	2fff3486 	.word	0x2fff3486

2ffea6e4 <bsec_shadow_read_otp>:
2ffea6e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffea6e8:	4607      	mov	r7, r0
2ffea6ea:	460d      	mov	r5, r1
2ffea6ec:	f7ff fef8 	bl	2ffea4e0 <is_otp_invalid_mode>
2ffea6f0:	4606      	mov	r6, r0
2ffea6f2:	2800      	cmp	r0, #0
2ffea6f4:	d13a      	bne.n	2ffea76c <bsec_shadow_read_otp+0x88>
2ffea6f6:	f10d 0107 	add.w	r1, sp, #7
2ffea6fa:	4628      	mov	r0, r5
2ffea6fc:	f7ff ff98 	bl	2ffea630 <bsec_read_sr_lock>
2ffea700:	4604      	mov	r4, r0
2ffea702:	b168      	cbz	r0, 2ffea720 <bsec_shadow_read_otp+0x3c>
2ffea704:	4602      	mov	r2, r0
2ffea706:	4629      	mov	r1, r5
2ffea708:	4820      	ldr	r0, [pc, #128]	@ (2ffea78c <bsec_shadow_read_otp+0xa8>)
2ffea70a:	f7fd f933 	bl	2ffe7974 <tf_log>
2ffea70e:	4820      	ldr	r0, [pc, #128]	@ (2ffea790 <bsec_shadow_read_otp+0xac>)
2ffea710:	4622      	mov	r2, r4
2ffea712:	4629      	mov	r1, r5
2ffea714:	f7fd f92e 	bl	2ffe7974 <tf_log>
2ffea718:	4620      	mov	r0, r4
2ffea71a:	b002      	add	sp, #8
2ffea71c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffea720:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 2ffea794 <bsec_shadow_read_otp+0xb0>
2ffea724:	f8d8 300c 	ldr.w	r3, [r8, #12]
2ffea728:	069b      	lsls	r3, r3, #26
2ffea72a:	d406      	bmi.n	2ffea73a <bsec_shadow_read_otp+0x56>
2ffea72c:	2001      	movs	r0, #1
2ffea72e:	f7ff ff03 	bl	2ffea538 <bsec_power_safmem>
2ffea732:	4604      	mov	r4, r0
2ffea734:	2800      	cmp	r0, #0
2ffea736:	d1ea      	bne.n	2ffea70e <bsec_shadow_read_otp+0x2a>
2ffea738:	2601      	movs	r6, #1
2ffea73a:	f7ff fee5 	bl	2ffea508 <bsec_lock>
2ffea73e:	4a15      	ldr	r2, [pc, #84]	@ (2ffea794 <bsec_shadow_read_otp+0xb0>)
2ffea740:	f8c8 5004 	str.w	r5, [r8, #4]
2ffea744:	68d3      	ldr	r3, [r2, #12]
2ffea746:	f013 0808 	ands.w	r8, r3, #8
2ffea74a:	d1fb      	bne.n	2ffea744 <bsec_shadow_read_otp+0x60>
2ffea74c:	2101      	movs	r1, #1
2ffea74e:	4628      	mov	r0, r5
2ffea750:	f7ff ff2a 	bl	2ffea5a8 <bsec_check_error>
2ffea754:	4604      	mov	r4, r0
2ffea756:	f7ff fee3 	bl	2ffea520 <bsec_unlock>
2ffea75a:	b156      	cbz	r6, 2ffea772 <bsec_shadow_read_otp+0x8e>
2ffea75c:	4640      	mov	r0, r8
2ffea75e:	f7ff feeb 	bl	2ffea538 <bsec_power_safmem>
2ffea762:	b130      	cbz	r0, 2ffea772 <bsec_shadow_read_otp+0x8e>
2ffea764:	f7fd f9a2 	bl	2ffe7aac <console_flush>
2ffea768:	f7f9 ee64 	blx	2ffe4434 <do_panic>
2ffea76c:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffea770:	e7cd      	b.n	2ffea70e <bsec_shadow_read_otp+0x2a>
2ffea772:	2c00      	cmp	r4, #0
2ffea774:	d1cb      	bne.n	2ffea70e <bsec_shadow_read_otp+0x2a>
2ffea776:	4629      	mov	r1, r5
2ffea778:	4638      	mov	r0, r7
2ffea77a:	f003 fff5 	bl	2ffee768 <bsec_read_otp>
2ffea77e:	4604      	mov	r4, r0
2ffea780:	2800      	cmp	r0, #0
2ffea782:	d0c9      	beq.n	2ffea718 <bsec_shadow_read_otp+0x34>
2ffea784:	4602      	mov	r2, r0
2ffea786:	4629      	mov	r1, r5
2ffea788:	4803      	ldr	r0, [pc, #12]	@ (2ffea798 <bsec_shadow_read_otp+0xb4>)
2ffea78a:	e7c3      	b.n	2ffea714 <bsec_shadow_read_otp+0x30>
2ffea78c:	2fff34b0 	.word	0x2fff34b0
2ffea790:	2fff34d9 	.word	0x2fff34d9
2ffea794:	5c005000 	.word	0x5c005000
2ffea798:	2fff34f7 	.word	0x2fff34f7

2ffea79c <ddr_sw_self_refresh_exit>:
2ffea79c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffea7a0:	f003 fda2 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffea7a4:	4606      	mov	r6, r0
2ffea7a6:	f7fd fa59 	bl	2ffe7c5c <stm32mp_pwr_base>
2ffea7aa:	4607      	mov	r7, r0
2ffea7ac:	f7fd fa4e 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffea7b0:	4605      	mov	r5, r0
2ffea7b2:	f7fd fa4f 	bl	2ffe7c54 <stm32mp_ddrphyc_base>
2ffea7b6:	4604      	mov	r4, r0
2ffea7b8:	f003 ffec 	bl	2ffee794 <ddr_enable_clock>
2ffea7bc:	4628      	mov	r0, r5
2ffea7be:	f7fe fa61 	bl	2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>
2ffea7c2:	f8d5 31b0 	ldr.w	r3, [r5, #432]	@ 0x1b0
2ffea7c6:	4628      	mov	r0, r5
2ffea7c8:	f023 0301 	bic.w	r3, r3, #1
2ffea7cc:	f8c5 31b0 	str.w	r3, [r5, #432]	@ 0x1b0
2ffea7d0:	f7fe fa7e 	bl	2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffea7d4:	f004 fded 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffea7d8:	f8d6 35c0 	ldr.w	r3, [r6, #1472]	@ 0x5c0
2ffea7dc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2ffea7e0:	f8c6 35c0 	str.w	r3, [r6, #1472]	@ 0x5c0
2ffea7e4:	f004 fde7 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffea7e8:	6963      	ldr	r3, [r4, #20]
2ffea7ea:	2032      	movs	r0, #50	@ 0x32
2ffea7ec:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffea7f0:	6163      	str	r3, [r4, #20]
2ffea7f2:	f8d4 31cc 	ldr.w	r3, [r4, #460]	@ 0x1cc
2ffea7f6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffea7fa:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
2ffea7fe:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
2ffea802:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffea806:	f8c4 320c 	str.w	r3, [r4, #524]	@ 0x20c
2ffea80a:	f7fe f909 	bl	2ffe8a20 <udelay>
2ffea80e:	f004 fdd0 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffea812:	f8d6 35c0 	ldr.w	r3, [r6, #1472]	@ 0x5c0
2ffea816:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2ffea81a:	f8c6 35c0 	str.w	r3, [r6, #1472]	@ 0x5c0
2ffea81e:	f004 fdca 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffea822:	6963      	ldr	r3, [r4, #20]
2ffea824:	200a      	movs	r0, #10
2ffea826:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
2ffea82a:	6163      	str	r3, [r4, #20]
2ffea82c:	f7fe f8f8 	bl	2ffe8a20 <udelay>
2ffea830:	6963      	ldr	r3, [r4, #20]
2ffea832:	2001      	movs	r0, #1
2ffea834:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffea838:	6163      	str	r3, [r4, #20]
2ffea83a:	2317      	movs	r3, #23
2ffea83c:	6063      	str	r3, [r4, #4]
2ffea83e:	f7fe f8ef 	bl	2ffe8a20 <udelay>
2ffea842:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffea846:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2ffea84a:	4a44      	ldr	r2, [pc, #272]	@ (2ffea95c <ddr_sw_self_refresh_exit+0x1c0>)
2ffea84c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffea850:	2300      	movs	r3, #0
2ffea852:	fba1 0100 	umull	r0, r1, r1, r0
2ffea856:	f002 eeea 	blx	2ffed62c <__aeabi_uldivmod>
2ffea85a:	eb10 0309 	adds.w	r3, r0, r9
2ffea85e:	eb41 020a 	adc.w	r2, r1, sl
2ffea862:	68e1      	ldr	r1, [r4, #12]
2ffea864:	07c9      	lsls	r1, r1, #31
2ffea866:	d568      	bpl.n	2ffea93a <ddr_sw_self_refresh_exit+0x19e>
2ffea868:	4628      	mov	r0, r5
2ffea86a:	f7fe fa0b 	bl	2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>
2ffea86e:	f8d5 31b0 	ldr.w	r3, [r5, #432]	@ 0x1b0
2ffea872:	4628      	mov	r0, r5
2ffea874:	f043 0301 	orr.w	r3, r3, #1
2ffea878:	f8c5 31b0 	str.w	r3, [r5, #432]	@ 0x1b0
2ffea87c:	f7fe fa28 	bl	2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffea880:	f7fd f9f0 	bl	2ffe7c64 <stm32mp_pwr_regs_lock>
2ffea884:	68fb      	ldr	r3, [r7, #12]
2ffea886:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
2ffea88a:	60fb      	str	r3, [r7, #12]
2ffea88c:	f7fd f9f6 	bl	2ffe7c7c <stm32mp_pwr_regs_unlock>
2ffea890:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
2ffea894:	4628      	mov	r0, r5
2ffea896:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffea89a:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
2ffea89e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffea8a0:	f023 0308 	bic.w	r3, r3, #8
2ffea8a4:	6263      	str	r3, [r4, #36]	@ 0x24
2ffea8a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffea8a8:	f043 0302 	orr.w	r3, r3, #2
2ffea8ac:	6263      	str	r3, [r4, #36]	@ 0x24
2ffea8ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffea8b0:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
2ffea8b4:	6263      	str	r3, [r4, #36]	@ 0x24
2ffea8b6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffea8b8:	f423 1370 	bic.w	r3, r3, #3932160	@ 0x3c0000
2ffea8bc:	6263      	str	r3, [r4, #36]	@ 0x24
2ffea8be:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffea8c0:	f023 0304 	bic.w	r3, r3, #4
2ffea8c4:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffea8c6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffea8c8:	f023 0308 	bic.w	r3, r3, #8
2ffea8cc:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffea8ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffea8d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
2ffea8d4:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffea8d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffea8d8:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
2ffea8dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffea8de:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffea8e0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2ffea8e4:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffea8e6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffea8e8:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
2ffea8ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffea8ee:	f003 fe9f 	bl	2ffee630 <stm32mp_ddr_sw_selfref_exit>
2ffea8f2:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffea8f6:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffea8fa:	4a18      	ldr	r2, [pc, #96]	@ (2ffea95c <ddr_sw_self_refresh_exit+0x1c0>)
2ffea8fc:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffea900:	2300      	movs	r3, #0
2ffea902:	4644      	mov	r4, r8
2ffea904:	fba1 0100 	umull	r0, r1, r1, r0
2ffea908:	f002 ee90 	blx	2ffed62c <__aeabi_uldivmod>
2ffea90c:	1900      	adds	r0, r0, r4
2ffea90e:	eb41 0109 	adc.w	r1, r1, r9
2ffea912:	686b      	ldr	r3, [r5, #4]
2ffea914:	f003 0307 	and.w	r3, r3, #7
2ffea918:	2b01      	cmp	r3, #1
2ffea91a:	d118      	bne.n	2ffea94e <ddr_sw_self_refresh_exit+0x1b2>
2ffea91c:	4628      	mov	r0, r5
2ffea91e:	f003 fe37 	bl	2ffee590 <stm32mp_ddr_enable_axi_port>
2ffea922:	f004 fd46 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffea926:	f8d6 35c0 	ldr.w	r3, [r6, #1472]	@ 0x5c0
2ffea92a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffea92e:	f8c6 35c0 	str.w	r3, [r6, #1472]	@ 0x5c0
2ffea932:	f004 fd40 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffea936:	2000      	movs	r0, #0
2ffea938:	e007      	b.n	2ffea94a <ddr_sw_self_refresh_exit+0x1ae>
2ffea93a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffea93e:	4283      	cmp	r3, r0
2ffea940:	eb72 0101 	sbcs.w	r1, r2, r1
2ffea944:	d28d      	bcs.n	2ffea862 <ddr_sw_self_refresh_exit+0xc6>
2ffea946:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffea94a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffea94e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffea952:	4290      	cmp	r0, r2
2ffea954:	eb71 0303 	sbcs.w	r3, r1, r3
2ffea958:	d2db      	bcs.n	2ffea912 <ddr_sw_self_refresh_exit+0x176>
2ffea95a:	e7f4      	b.n	2ffea946 <ddr_sw_self_refresh_exit+0x1aa>
2ffea95c:	000f4240 	.word	0x000f4240

2ffea960 <ddr_read_sr_mode>:
2ffea960:	b508      	push	{r3, lr}
2ffea962:	f7fd f973 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffea966:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffea968:	4a02      	ldr	r2, [pc, #8]	@ (2ffea974 <ddr_read_sr_mode+0x14>)
2ffea96a:	f003 0309 	and.w	r3, r3, #9
2ffea96e:	5cd0      	ldrb	r0, [r2, r3]
2ffea970:	bd08      	pop	{r3, pc}
2ffea972:	bf00      	nop
2ffea974:	2fff352c 	.word	0x2fff352c

2ffea978 <ddr_set_sr_mode>:
2ffea978:	2802      	cmp	r0, #2
2ffea97a:	b538      	push	{r3, r4, r5, lr}
2ffea97c:	d05e      	beq.n	2ffeaa3c <ddr_set_sr_mode+0xc4>
2ffea97e:	2803      	cmp	r0, #3
2ffea980:	f000 8095 	beq.w	2ffeaaae <ddr_set_sr_mode+0x136>
2ffea984:	2801      	cmp	r0, #1
2ffea986:	f040 80ce 	bne.w	2ffeab26 <ddr_set_sr_mode+0x1ae>
2ffea98a:	f003 fcad 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffea98e:	4604      	mov	r4, r0
2ffea990:	f7fd f95c 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffea994:	4605      	mov	r5, r0
2ffea996:	f004 fd0c 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffea99a:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea99e:	f043 0302 	orr.w	r3, r3, #2
2ffea9a2:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9a6:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9aa:	f043 0301 	orr.w	r3, r3, #1
2ffea9ae:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9b2:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
2ffea9ba:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9be:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9c2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
2ffea9c6:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9ca:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2ffea9d2:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9d6:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9da:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
2ffea9de:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9e2:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9e6:	f043 0310 	orr.w	r3, r3, #16
2ffea9ea:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9ee:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9f2:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2ffea9f6:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffea9fa:	f8d4 35c0 	ldr.w	r3, [r4, #1472]	@ 0x5c0
2ffea9fe:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffeaa02:	f8c4 35c0 	str.w	r3, [r4, #1472]	@ 0x5c0
2ffeaa06:	f004 fcd6 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffeaa0a:	4628      	mov	r0, r5
2ffeaa0c:	f7fe f93a 	bl	2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>
2ffeaa10:	6bab      	ldr	r3, [r5, #56]	@ 0x38
2ffeaa12:	4628      	mov	r0, r5
2ffeaa14:	f023 0301 	bic.w	r3, r3, #1
2ffeaa18:	63ab      	str	r3, [r5, #56]	@ 0x38
2ffeaa1a:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
2ffeaa1c:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffeaa20:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffeaa24:	636b      	str	r3, [r5, #52]	@ 0x34
2ffeaa26:	f7fe f953 	bl	2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffeaa2a:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2ffeaa2c:	f023 0308 	bic.w	r3, r3, #8
2ffeaa30:	632b      	str	r3, [r5, #48]	@ 0x30
2ffeaa32:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2ffeaa34:	f023 0301 	bic.w	r3, r3, #1
2ffeaa38:	632b      	str	r3, [r5, #48]	@ 0x30
2ffeaa3a:	bd38      	pop	{r3, r4, r5, pc}
2ffeaa3c:	f003 fc54 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffeaa40:	4605      	mov	r5, r0
2ffeaa42:	f7fd f903 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffeaa46:	4604      	mov	r4, r0
2ffeaa48:	f004 fcb3 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffeaa4c:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffeaa54:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa58:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa5c:	f023 0302 	bic.w	r3, r3, #2
2ffeaa60:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa64:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa68:	f043 0320 	orr.w	r3, r3, #32
2ffeaa6c:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa70:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa74:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffeaa78:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
2ffeaa7c:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaa80:	f004 fc99 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffeaa84:	4620      	mov	r0, r4
2ffeaa86:	f7fe f8fd 	bl	2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>
2ffeaa8a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2ffeaa8c:	4620      	mov	r0, r4
2ffeaa8e:	f043 0301 	orr.w	r3, r3, #1
2ffeaa92:	63a3      	str	r3, [r4, #56]	@ 0x38
2ffeaa94:	6b63      	ldr	r3, [r4, #52]	@ 0x34
2ffeaa96:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffeaa9a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffeaa9e:	6363      	str	r3, [r4, #52]	@ 0x34
2ffeaaa0:	f7fe f916 	bl	2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffeaaa4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffeaaa6:	f043 0308 	orr.w	r3, r3, #8
2ffeaaaa:	6323      	str	r3, [r4, #48]	@ 0x30
2ffeaaac:	e7c5      	b.n	2ffeaa3a <ddr_set_sr_mode+0xc2>
2ffeaaae:	f003 fc1b 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffeaab2:	4605      	mov	r5, r0
2ffeaab4:	f7fd f8ca 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffeaab8:	4604      	mov	r4, r0
2ffeaaba:	f004 fc7a 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffeaabe:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaac2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffeaac6:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaaca:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaace:	f043 0302 	orr.w	r3, r3, #2
2ffeaad2:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaad6:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaada:	f043 0320 	orr.w	r3, r3, #32
2ffeaade:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaae2:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffeaae6:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffeaaea:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
2ffeaaee:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffeaaf2:	f004 fc60 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffeaaf6:	4620      	mov	r0, r4
2ffeaaf8:	f7fe f8c4 	bl	2ffe8c84 <stm32mp_ddr_set_qd3_update_conditions>
2ffeaafc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2ffeaafe:	4620      	mov	r0, r4
2ffeab00:	f043 0301 	orr.w	r3, r3, #1
2ffeab04:	63a3      	str	r3, [r4, #56]	@ 0x38
2ffeab06:	6b63      	ldr	r3, [r4, #52]	@ 0x34
2ffeab08:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffeab0c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffeab10:	6363      	str	r3, [r4, #52]	@ 0x34
2ffeab12:	f7fe f8dd 	bl	2ffe8cd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffeab16:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffeab18:	f043 0308 	orr.w	r3, r3, #8
2ffeab1c:	6323      	str	r3, [r4, #48]	@ 0x30
2ffeab1e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffeab20:	f043 0301 	orr.w	r3, r3, #1
2ffeab24:	e7c1      	b.n	2ffeaaaa <ddr_set_sr_mode+0x132>
2ffeab26:	4803      	ldr	r0, [pc, #12]	@ (2ffeab34 <ddr_set_sr_mode+0x1bc>)
2ffeab28:	f7fc ff24 	bl	2ffe7974 <tf_log>
2ffeab2c:	f7fc ffbe 	bl	2ffe7aac <console_flush>
2ffeab30:	f7f9 ec80 	blx	2ffe4434 <do_panic>
2ffeab34:	2fff3510 	.word	0x2fff3510

2ffeab38 <i2c_transfer_config.isra.0>:
2ffeab38:	b530      	push	{r4, r5, lr}
2ffeab3a:	9d03      	ldr	r5, [sp, #12]
2ffeab3c:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffeab40:	432b      	orrs	r3, r5
2ffeab42:	0412      	lsls	r2, r2, #16
2ffeab44:	430b      	orrs	r3, r1
2ffeab46:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
2ffeab4a:	4313      	orrs	r3, r2
2ffeab4c:	4a04      	ldr	r2, [pc, #16]	@ (2ffeab60 <i2c_transfer_config.isra.0+0x28>)
2ffeab4e:	6844      	ldr	r4, [r0, #4]
2ffeab50:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2ffeab54:	ea24 0402 	bic.w	r4, r4, r2
2ffeab58:	4323      	orrs	r3, r4
2ffeab5a:	6043      	str	r3, [r0, #4]
2ffeab5c:	bd30      	pop	{r4, r5, pc}
2ffeab5e:	bf00      	nop
2ffeab60:	03ff63ff 	.word	0x03ff63ff

2ffeab64 <i2c_read.constprop.0>:
2ffeab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeab68:	b085      	sub	sp, #20
2ffeab6a:	469a      	mov	sl, r3
2ffeab6c:	4604      	mov	r4, r0
2ffeab6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffeab70:	4689      	mov	r9, r1
2ffeab72:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
2ffeab76:	4690      	mov	r8, r2
2ffeab78:	2b10      	cmp	r3, #16
2ffeab7a:	d002      	beq.n	2ffeab82 <i2c_read.constprop.0+0x1e>
2ffeab7c:	2b40      	cmp	r3, #64	@ 0x40
2ffeab7e:	f040 80d9 	bne.w	2ffead34 <i2c_read.constprop.0+0x1d0>
2ffeab82:	6923      	ldr	r3, [r4, #16]
2ffeab84:	2b20      	cmp	r3, #32
2ffeab86:	f040 80d8 	bne.w	2ffead3a <i2c_read.constprop.0+0x1d6>
2ffeab8a:	7b23      	ldrb	r3, [r4, #12]
2ffeab8c:	2b00      	cmp	r3, #0
2ffeab8e:	f040 80d4 	bne.w	2ffead3a <i2c_read.constprop.0+0x1d6>
2ffeab92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffeab94:	2b00      	cmp	r3, #0
2ffeab96:	f000 80d3 	beq.w	2ffead40 <i2c_read.constprop.0+0x1dc>
2ffeab9a:	2d00      	cmp	r5, #0
2ffeab9c:	f000 80d0 	beq.w	2ffead40 <i2c_read.constprop.0+0x1dc>
2ffeaba0:	68a0      	ldr	r0, [r4, #8]
2ffeaba2:	f04f 0b01 	mov.w	fp, #1
2ffeaba6:	f7fd fedb 	bl	2ffe8960 <clk_enable>
2ffeabaa:	f884 b00c 	strb.w	fp, [r4, #12]
2ffeabae:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeabb2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeabb6:	f246 10a8 	movw	r0, #25000	@ 0x61a8
2ffeabba:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffeabbe:	9e02      	ldr	r6, [sp, #8]
2ffeabc0:	2300      	movs	r3, #0
2ffeabc2:	4a61      	ldr	r2, [pc, #388]	@ (2ffead48 <i2c_read.constprop.0+0x1e4>)
2ffeabc4:	fba1 0100 	umull	r0, r1, r1, r0
2ffeabc8:	f002 ed30 	blx	2ffed62c <__aeabi_uldivmod>
2ffeabcc:	9b03      	ldr	r3, [sp, #12]
2ffeabce:	465a      	mov	r2, fp
2ffeabd0:	1986      	adds	r6, r0, r6
2ffeabd2:	4620      	mov	r0, r4
2ffeabd4:	eb41 0703 	adc.w	r7, r1, r3
2ffeabd8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
2ffeabdc:	e9cd 6700 	strd	r6, r7, [sp]
2ffeabe0:	f003 fea4 	bl	2ffee92c <i2c_wait_flag>
2ffeabe4:	4603      	mov	r3, r0
2ffeabe6:	b150      	cbz	r0, 2ffeabfe <i2c_read.constprop.0+0x9a>
2ffeabe8:	f06f 0604 	mvn.w	r6, #4
2ffeabec:	68a0      	ldr	r0, [r4, #8]
2ffeabee:	2300      	movs	r3, #0
2ffeabf0:	7323      	strb	r3, [r4, #12]
2ffeabf2:	f7fd fec7 	bl	2ffe8984 <clk_disable>
2ffeabf6:	4630      	mov	r0, r6
2ffeabf8:	b005      	add	sp, #20
2ffeabfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeabfe:	61a0      	str	r0, [r4, #24]
2ffeac00:	2222      	movs	r2, #34	@ 0x22
2ffeac02:	6122      	str	r2, [r4, #16]
2ffeac04:	9a10      	ldr	r2, [sp, #64]	@ 0x40
2ffeac06:	6820      	ldr	r0, [r4, #0]
2ffeac08:	6162      	str	r2, [r4, #20]
2ffeac0a:	2a40      	cmp	r2, #64	@ 0x40
2ffeac0c:	d00c      	beq.n	2ffeac28 <i2c_read.constprop.0+0xc4>
2ffeac0e:	6820      	ldr	r0, [r4, #0]
2ffeac10:	2dff      	cmp	r5, #255	@ 0xff
2ffeac12:	4b4e      	ldr	r3, [pc, #312]	@ (2ffead4c <i2c_read.constprop.0+0x1e8>)
2ffeac14:	d836      	bhi.n	2ffeac84 <i2c_read.constprop.0+0x120>
2ffeac16:	9300      	str	r3, [sp, #0]
2ffeac18:	462a      	mov	r2, r5
2ffeac1a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffeac1e:	4649      	mov	r1, r9
2ffeac20:	46a8      	mov	r8, r5
2ffeac22:	f7ff ff89 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeac26:	e036      	b.n	2ffeac96 <i2c_read.constprop.0+0x132>
2ffeac28:	4a49      	ldr	r2, [pc, #292]	@ (2ffead50 <i2c_read.constprop.0+0x1ec>)
2ffeac2a:	4649      	mov	r1, r9
2ffeac2c:	9200      	str	r2, [sp, #0]
2ffeac2e:	4652      	mov	r2, sl
2ffeac30:	f7ff ff82 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeac34:	4632      	mov	r2, r6
2ffeac36:	463b      	mov	r3, r7
2ffeac38:	4620      	mov	r0, r4
2ffeac3a:	f003 fedf 	bl	2ffee9fc <i2c_wait_txis>
2ffeac3e:	2800      	cmp	r0, #0
2ffeac40:	d1d2      	bne.n	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffeac42:	6823      	ldr	r3, [r4, #0]
2ffeac44:	f1ba 0f01 	cmp.w	sl, #1
2ffeac48:	d10d      	bne.n	2ffeac66 <i2c_read.constprop.0+0x102>
2ffeac4a:	fa5f f888 	uxtb.w	r8, r8
2ffeac4e:	f883 8028 	strb.w	r8, [r3, #40]	@ 0x28
2ffeac52:	2200      	movs	r2, #0
2ffeac54:	2140      	movs	r1, #64	@ 0x40
2ffeac56:	4620      	mov	r0, r4
2ffeac58:	e9cd 6700 	strd	r6, r7, [sp]
2ffeac5c:	f003 fe66 	bl	2ffee92c <i2c_wait_flag>
2ffeac60:	2800      	cmp	r0, #0
2ffeac62:	d0d4      	beq.n	2ffeac0e <i2c_read.constprop.0+0xaa>
2ffeac64:	e7c0      	b.n	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffeac66:	ea4f 2218 	mov.w	r2, r8, lsr #8
2ffeac6a:	4620      	mov	r0, r4
2ffeac6c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffeac70:	4632      	mov	r2, r6
2ffeac72:	463b      	mov	r3, r7
2ffeac74:	f003 fec2 	bl	2ffee9fc <i2c_wait_txis>
2ffeac78:	2800      	cmp	r0, #0
2ffeac7a:	d1b5      	bne.n	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffeac7c:	6823      	ldr	r3, [r4, #0]
2ffeac7e:	fa5f f888 	uxtb.w	r8, r8
2ffeac82:	e7e4      	b.n	2ffeac4e <i2c_read.constprop.0+0xea>
2ffeac84:	9300      	str	r3, [sp, #0]
2ffeac86:	22ff      	movs	r2, #255	@ 0xff
2ffeac88:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeac8c:	4649      	mov	r1, r9
2ffeac8e:	f04f 08ff 	mov.w	r8, #255	@ 0xff
2ffeac92:	f7ff ff51 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeac96:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffeac98:	f103 3aff 	add.w	sl, r3, #4294967295	@ 0xffffffff
2ffeac9c:	2200      	movs	r2, #0
2ffeac9e:	2104      	movs	r1, #4
2ffeaca0:	4620      	mov	r0, r4
2ffeaca2:	e9cd 6700 	strd	r6, r7, [sp]
2ffeaca6:	f003 fe41 	bl	2ffee92c <i2c_wait_flag>
2ffeacaa:	2800      	cmp	r0, #0
2ffeacac:	d19c      	bne.n	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffeacae:	6823      	ldr	r3, [r4, #0]
2ffeacb0:	3d01      	subs	r5, #1
2ffeacb2:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
2ffeacb6:	f80a 3f01 	strb.w	r3, [sl, #1]!
2ffeacba:	d118      	bne.n	2ffeacee <i2c_read.constprop.0+0x18a>
2ffeacbc:	4632      	mov	r2, r6
2ffeacbe:	463b      	mov	r3, r7
2ffeacc0:	4620      	mov	r0, r4
2ffeacc2:	f003 febc 	bl	2ffeea3e <i2c_wait_stop>
2ffeacc6:	4606      	mov	r6, r0
2ffeacc8:	2800      	cmp	r0, #0
2ffeacca:	d18d      	bne.n	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffeaccc:	6823      	ldr	r3, [r4, #0]
2ffeacce:	2220      	movs	r2, #32
2ffeacd0:	61da      	str	r2, [r3, #28]
2ffeacd2:	6821      	ldr	r1, [r4, #0]
2ffeacd4:	684b      	ldr	r3, [r1, #4]
2ffeacd6:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2ffeacda:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2ffeacde:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2ffeace2:	f023 0301 	bic.w	r3, r3, #1
2ffeace6:	604b      	str	r3, [r1, #4]
2ffeace8:	6122      	str	r2, [r4, #16]
2ffeacea:	6165      	str	r5, [r4, #20]
2ffeacec:	e77e      	b.n	2ffeabec <i2c_read.constprop.0+0x88>
2ffeacee:	f1b8 0801 	subs.w	r8, r8, #1
2ffeacf2:	d1d3      	bne.n	2ffeac9c <i2c_read.constprop.0+0x138>
2ffeacf4:	4642      	mov	r2, r8
2ffeacf6:	2180      	movs	r1, #128	@ 0x80
2ffeacf8:	4620      	mov	r0, r4
2ffeacfa:	e9cd 6700 	strd	r6, r7, [sp]
2ffeacfe:	f003 fe15 	bl	2ffee92c <i2c_wait_flag>
2ffead02:	2800      	cmp	r0, #0
2ffead04:	f47f af70 	bne.w	2ffeabe8 <i2c_read.constprop.0+0x84>
2ffead08:	6820      	ldr	r0, [r4, #0]
2ffead0a:	2dff      	cmp	r5, #255	@ 0xff
2ffead0c:	f8cd 8000 	str.w	r8, [sp]
2ffead10:	d908      	bls.n	2ffead24 <i2c_read.constprop.0+0x1c0>
2ffead12:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffead16:	22ff      	movs	r2, #255	@ 0xff
2ffead18:	4649      	mov	r1, r9
2ffead1a:	f04f 08ff 	mov.w	r8, #255	@ 0xff
2ffead1e:	f7ff ff0b 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffead22:	e7bb      	b.n	2ffeac9c <i2c_read.constprop.0+0x138>
2ffead24:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffead28:	b2aa      	uxth	r2, r5
2ffead2a:	4649      	mov	r1, r9
2ffead2c:	46a8      	mov	r8, r5
2ffead2e:	f7ff ff03 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffead32:	e7b3      	b.n	2ffeac9c <i2c_read.constprop.0+0x138>
2ffead34:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
2ffead38:	e75d      	b.n	2ffeabf6 <i2c_read.constprop.0+0x92>
2ffead3a:	f06f 060f 	mvn.w	r6, #15
2ffead3e:	e75a      	b.n	2ffeabf6 <i2c_read.constprop.0+0x92>
2ffead40:	f06f 0615 	mvn.w	r6, #21
2ffead44:	e757      	b.n	2ffeabf6 <i2c_read.constprop.0+0x92>
2ffead46:	bf00      	nop
2ffead48:	000f4240 	.word	0x000f4240
2ffead4c:	80002400 	.word	0x80002400
2ffead50:	80002000 	.word	0x80002000

2ffead54 <i2c_write>:
2ffead54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffead58:	b085      	sub	sp, #20
2ffead5a:	469a      	mov	sl, r3
2ffead5c:	4604      	mov	r4, r0
2ffead5e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffead60:	460e      	mov	r6, r1
2ffead62:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
2ffead66:	4617      	mov	r7, r2
2ffead68:	2b10      	cmp	r3, #16
2ffead6a:	d002      	beq.n	2ffead72 <i2c_write+0x1e>
2ffead6c:	2b40      	cmp	r3, #64	@ 0x40
2ffead6e:	f040 80ef 	bne.w	2ffeaf50 <i2c_write+0x1fc>
2ffead72:	6923      	ldr	r3, [r4, #16]
2ffead74:	2b20      	cmp	r3, #32
2ffead76:	f040 80ee 	bne.w	2ffeaf56 <i2c_write+0x202>
2ffead7a:	7b23      	ldrb	r3, [r4, #12]
2ffead7c:	2b00      	cmp	r3, #0
2ffead7e:	f040 80ea 	bne.w	2ffeaf56 <i2c_write+0x202>
2ffead82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffead84:	2b00      	cmp	r3, #0
2ffead86:	f000 80e9 	beq.w	2ffeaf5c <i2c_write+0x208>
2ffead8a:	2d00      	cmp	r5, #0
2ffead8c:	f000 80e6 	beq.w	2ffeaf5c <i2c_write+0x208>
2ffead90:	68a0      	ldr	r0, [r4, #8]
2ffead92:	f04f 0b01 	mov.w	fp, #1
2ffead96:	f7fd fde3 	bl	2ffe8960 <clk_enable>
2ffead9a:	f884 b00c 	strb.w	fp, [r4, #12]
2ffead9e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeada2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeada6:	f246 10a8 	movw	r0, #25000	@ 0x61a8
2ffeadaa:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffeadae:	f8dd 8008 	ldr.w	r8, [sp, #8]
2ffeadb2:	2300      	movs	r3, #0
2ffeadb4:	4a6b      	ldr	r2, [pc, #428]	@ (2ffeaf64 <i2c_write+0x210>)
2ffeadb6:	fba1 0100 	umull	r0, r1, r1, r0
2ffeadba:	f002 ec38 	blx	2ffed62c <__aeabi_uldivmod>
2ffeadbe:	9b03      	ldr	r3, [sp, #12]
2ffeadc0:	465a      	mov	r2, fp
2ffeadc2:	eb10 0008 	adds.w	r0, r0, r8
2ffeadc6:	eb41 0103 	adc.w	r1, r1, r3
2ffeadca:	e9cd 0100 	strd	r0, r1, [sp]
2ffeadce:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
2ffeadd2:	4620      	mov	r0, r4
2ffeadd4:	f003 fdaa 	bl	2ffee92c <i2c_wait_flag>
2ffeadd8:	b150      	cbz	r0, 2ffeadf0 <i2c_write+0x9c>
2ffeadda:	f06f 0504 	mvn.w	r5, #4
2ffeadde:	68a0      	ldr	r0, [r4, #8]
2ffeade0:	2300      	movs	r3, #0
2ffeade2:	7323      	strb	r3, [r4, #12]
2ffeade4:	f7fd fdce 	bl	2ffe8984 <clk_disable>
2ffeade8:	4628      	mov	r0, r5
2ffeadea:	b005      	add	sp, #20
2ffeadec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeadf0:	61a0      	str	r0, [r4, #24]
2ffeadf2:	2321      	movs	r3, #33	@ 0x21
2ffeadf4:	6123      	str	r3, [r4, #16]
2ffeadf6:	46ab      	mov	fp, r5
2ffeadf8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffeadfa:	6163      	str	r3, [r4, #20]
2ffeadfc:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffeae00:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeae04:	9910      	ldr	r1, [sp, #64]	@ 0x40
2ffeae06:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffeae0a:	f8dd 8008 	ldr.w	r8, [sp, #8]
2ffeae0e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffeae12:	4359      	muls	r1, r3
2ffeae14:	4a53      	ldr	r2, [pc, #332]	@ (2ffeaf64 <i2c_write+0x210>)
2ffeae16:	2300      	movs	r3, #0
2ffeae18:	fba1 0100 	umull	r0, r1, r1, r0
2ffeae1c:	f002 ec06 	blx	2ffed62c <__aeabi_uldivmod>
2ffeae20:	9b03      	ldr	r3, [sp, #12]
2ffeae22:	eb10 0808 	adds.w	r8, r0, r8
2ffeae26:	eb41 0903 	adc.w	r9, r1, r3
2ffeae2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffeae2c:	6820      	ldr	r0, [r4, #0]
2ffeae2e:	2b40      	cmp	r3, #64	@ 0x40
2ffeae30:	4b4d      	ldr	r3, [pc, #308]	@ (2ffeaf68 <i2c_write+0x214>)
2ffeae32:	9300      	str	r3, [sp, #0]
2ffeae34:	d168      	bne.n	2ffeaf08 <i2c_write+0x1b4>
2ffeae36:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeae3a:	4652      	mov	r2, sl
2ffeae3c:	4631      	mov	r1, r6
2ffeae3e:	f7ff fe7b 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeae42:	4642      	mov	r2, r8
2ffeae44:	464b      	mov	r3, r9
2ffeae46:	4620      	mov	r0, r4
2ffeae48:	f003 fdd8 	bl	2ffee9fc <i2c_wait_txis>
2ffeae4c:	2800      	cmp	r0, #0
2ffeae4e:	d1c4      	bne.n	2ffeadda <i2c_write+0x86>
2ffeae50:	6823      	ldr	r3, [r4, #0]
2ffeae52:	f1ba 0f01 	cmp.w	sl, #1
2ffeae56:	d118      	bne.n	2ffeae8a <i2c_write+0x136>
2ffeae58:	b2ff      	uxtb	r7, r7
2ffeae5a:	f883 7028 	strb.w	r7, [r3, #40]	@ 0x28
2ffeae5e:	2200      	movs	r2, #0
2ffeae60:	2180      	movs	r1, #128	@ 0x80
2ffeae62:	4620      	mov	r0, r4
2ffeae64:	e9cd 8900 	strd	r8, r9, [sp]
2ffeae68:	f003 fd60 	bl	2ffee92c <i2c_wait_flag>
2ffeae6c:	4603      	mov	r3, r0
2ffeae6e:	2800      	cmp	r0, #0
2ffeae70:	d1b3      	bne.n	2ffeadda <i2c_write+0x86>
2ffeae72:	6820      	ldr	r0, [r4, #0]
2ffeae74:	2dff      	cmp	r5, #255	@ 0xff
2ffeae76:	9300      	str	r3, [sp, #0]
2ffeae78:	d914      	bls.n	2ffeaea4 <i2c_write+0x150>
2ffeae7a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeae7e:	22ff      	movs	r2, #255	@ 0xff
2ffeae80:	4631      	mov	r1, r6
2ffeae82:	25ff      	movs	r5, #255	@ 0xff
2ffeae84:	f7ff fe58 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeae88:	e012      	b.n	2ffeaeb0 <i2c_write+0x15c>
2ffeae8a:	0a3a      	lsrs	r2, r7, #8
2ffeae8c:	4620      	mov	r0, r4
2ffeae8e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffeae92:	4642      	mov	r2, r8
2ffeae94:	464b      	mov	r3, r9
2ffeae96:	f003 fdb1 	bl	2ffee9fc <i2c_wait_txis>
2ffeae9a:	2800      	cmp	r0, #0
2ffeae9c:	d19d      	bne.n	2ffeadda <i2c_write+0x86>
2ffeae9e:	6823      	ldr	r3, [r4, #0]
2ffeaea0:	b2ff      	uxtb	r7, r7
2ffeaea2:	e7da      	b.n	2ffeae5a <i2c_write+0x106>
2ffeaea4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffeaea8:	462a      	mov	r2, r5
2ffeaeaa:	4631      	mov	r1, r6
2ffeaeac:	f7ff fe44 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeaeb0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffeaeb2:	1e5f      	subs	r7, r3, #1
2ffeaeb4:	4642      	mov	r2, r8
2ffeaeb6:	464b      	mov	r3, r9
2ffeaeb8:	4620      	mov	r0, r4
2ffeaeba:	f003 fd9f 	bl	2ffee9fc <i2c_wait_txis>
2ffeaebe:	2800      	cmp	r0, #0
2ffeaec0:	d18b      	bne.n	2ffeadda <i2c_write+0x86>
2ffeaec2:	f817 2f01 	ldrb.w	r2, [r7, #1]!
2ffeaec6:	f1bb 0b01 	subs.w	fp, fp, #1
2ffeaeca:	6823      	ldr	r3, [r4, #0]
2ffeaecc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffeaed0:	d11c      	bne.n	2ffeaf0c <i2c_write+0x1b8>
2ffeaed2:	4642      	mov	r2, r8
2ffeaed4:	464b      	mov	r3, r9
2ffeaed6:	4620      	mov	r0, r4
2ffeaed8:	f003 fdb1 	bl	2ffeea3e <i2c_wait_stop>
2ffeaedc:	4605      	mov	r5, r0
2ffeaede:	2800      	cmp	r0, #0
2ffeaee0:	f47f af7b 	bne.w	2ffeadda <i2c_write+0x86>
2ffeaee4:	6823      	ldr	r3, [r4, #0]
2ffeaee6:	2220      	movs	r2, #32
2ffeaee8:	61da      	str	r2, [r3, #28]
2ffeaeea:	6821      	ldr	r1, [r4, #0]
2ffeaeec:	684b      	ldr	r3, [r1, #4]
2ffeaeee:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2ffeaef2:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2ffeaef6:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2ffeaefa:	f023 0301 	bic.w	r3, r3, #1
2ffeaefe:	604b      	str	r3, [r1, #4]
2ffeaf00:	6122      	str	r2, [r4, #16]
2ffeaf02:	f8c4 b014 	str.w	fp, [r4, #20]
2ffeaf06:	e76a      	b.n	2ffeadde <i2c_write+0x8a>
2ffeaf08:	2dff      	cmp	r5, #255	@ 0xff
2ffeaf0a:	e7b5      	b.n	2ffeae78 <i2c_write+0x124>
2ffeaf0c:	3d01      	subs	r5, #1
2ffeaf0e:	d1d1      	bne.n	2ffeaeb4 <i2c_write+0x160>
2ffeaf10:	462a      	mov	r2, r5
2ffeaf12:	2180      	movs	r1, #128	@ 0x80
2ffeaf14:	4620      	mov	r0, r4
2ffeaf16:	e9cd 8900 	strd	r8, r9, [sp]
2ffeaf1a:	f003 fd07 	bl	2ffee92c <i2c_wait_flag>
2ffeaf1e:	2800      	cmp	r0, #0
2ffeaf20:	f47f af5b 	bne.w	2ffeadda <i2c_write+0x86>
2ffeaf24:	6820      	ldr	r0, [r4, #0]
2ffeaf26:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
2ffeaf2a:	9500      	str	r5, [sp, #0]
2ffeaf2c:	d907      	bls.n	2ffeaf3e <i2c_write+0x1ea>
2ffeaf2e:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeaf32:	22ff      	movs	r2, #255	@ 0xff
2ffeaf34:	4631      	mov	r1, r6
2ffeaf36:	25ff      	movs	r5, #255	@ 0xff
2ffeaf38:	f7ff fdfe 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeaf3c:	e7ba      	b.n	2ffeaeb4 <i2c_write+0x160>
2ffeaf3e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffeaf42:	fa1f f28b 	uxth.w	r2, fp
2ffeaf46:	4631      	mov	r1, r6
2ffeaf48:	465d      	mov	r5, fp
2ffeaf4a:	f7ff fdf5 	bl	2ffeab38 <i2c_transfer_config.isra.0>
2ffeaf4e:	e7b1      	b.n	2ffeaeb4 <i2c_write+0x160>
2ffeaf50:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffeaf54:	e748      	b.n	2ffeade8 <i2c_write+0x94>
2ffeaf56:	f06f 050f 	mvn.w	r5, #15
2ffeaf5a:	e745      	b.n	2ffeade8 <i2c_write+0x94>
2ffeaf5c:	f06f 0515 	mvn.w	r5, #21
2ffeaf60:	e742      	b.n	2ffeade8 <i2c_write+0x94>
2ffeaf62:	bf00      	nop
2ffeaf64:	000f4240 	.word	0x000f4240
2ffeaf68:	80002000 	.word	0x80002000

2ffeaf6c <stm32_i2c_get_setup_from_fdt>:
2ffeaf6c:	b570      	push	{r4, r5, r6, lr}
2ffeaf6e:	2319      	movs	r3, #25
2ffeaf70:	4615      	mov	r5, r2
2ffeaf72:	4606      	mov	r6, r0
2ffeaf74:	4a10      	ldr	r2, [pc, #64]	@ (2ffeafb8 <stm32_i2c_get_setup_from_fdt+0x4c>)
2ffeaf76:	460c      	mov	r4, r1
2ffeaf78:	f002 ff18 	bl	2ffeddac <fdt_read_uint32_default>
2ffeaf7c:	61e8      	str	r0, [r5, #28]
2ffeaf7e:	230a      	movs	r3, #10
2ffeaf80:	4a0e      	ldr	r2, [pc, #56]	@ (2ffeafbc <stm32_i2c_get_setup_from_fdt+0x50>)
2ffeaf82:	4621      	mov	r1, r4
2ffeaf84:	4630      	mov	r0, r6
2ffeaf86:	f002 ff11 	bl	2ffeddac <fdt_read_uint32_default>
2ffeaf8a:	6228      	str	r0, [r5, #32]
2ffeaf8c:	4621      	mov	r1, r4
2ffeaf8e:	4a0c      	ldr	r2, [pc, #48]	@ (2ffeafc0 <stm32_i2c_get_setup_from_fdt+0x54>)
2ffeaf90:	4630      	mov	r0, r6
2ffeaf92:	4b0c      	ldr	r3, [pc, #48]	@ (2ffeafc4 <stm32_i2c_get_setup_from_fdt+0x58>)
2ffeaf94:	f002 ff0a 	bl	2ffeddac <fdt_read_uint32_default>
2ffeaf98:	4a0b      	ldr	r2, [pc, #44]	@ (2ffeafc8 <stm32_i2c_get_setup_from_fdt+0x5c>)
2ffeaf9a:	4601      	mov	r1, r0
2ffeaf9c:	4290      	cmp	r0, r2
2ffeaf9e:	d805      	bhi.n	2ffeafac <stm32_i2c_get_setup_from_fdt+0x40>
2ffeafa0:	6268      	str	r0, [r5, #36]	@ 0x24
2ffeafa2:	4620      	mov	r0, r4
2ffeafa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffeafa8:	f7fd bf2a 	b.w	2ffe8e00 <dt_set_pinctrl_config>
2ffeafac:	4807      	ldr	r0, [pc, #28]	@ (2ffeafcc <stm32_i2c_get_setup_from_fdt+0x60>)
2ffeafae:	f7fc fce1 	bl	2ffe7974 <tf_log>
2ffeafb2:	f06f 000e 	mvn.w	r0, #14
2ffeafb6:	bd70      	pop	{r4, r5, r6, pc}
2ffeafb8:	2fff3536 	.word	0x2fff3536
2ffeafbc:	2fff354d 	.word	0x2fff354d
2ffeafc0:	2fff3565 	.word	0x2fff3565
2ffeafc4:	000186a0 	.word	0x000186a0
2ffeafc8:	000f4240 	.word	0x000f4240
2ffeafcc:	2fff3575 	.word	0x2fff3575

2ffeafd0 <stm32_i2c_init>:
2ffeafd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeafd4:	460d      	mov	r5, r1
2ffeafd6:	b0a3      	sub	sp, #140	@ 0x8c
2ffeafd8:	4604      	mov	r4, r0
2ffeafda:	2800      	cmp	r0, #0
2ffeafdc:	f000 8207 	beq.w	2ffeb3ee <stm32_i2c_init+0x41e>
2ffeafe0:	6903      	ldr	r3, [r0, #16]
2ffeafe2:	b903      	cbnz	r3, 2ffeafe6 <stm32_i2c_init+0x16>
2ffeafe4:	7303      	strb	r3, [r0, #12]
2ffeafe6:	68a0      	ldr	r0, [r4, #8]
2ffeafe8:	2324      	movs	r3, #36	@ 0x24
2ffeafea:	6123      	str	r3, [r4, #16]
2ffeafec:	f7fd fcdc 	bl	2ffe89a8 <clk_get_rate>
2ffeaff0:	9002      	str	r0, [sp, #8]
2ffeaff2:	b940      	cbnz	r0, 2ffeb006 <stm32_i2c_init+0x36>
2ffeaff4:	4897      	ldr	r0, [pc, #604]	@ (2ffeb254 <stm32_i2c_init+0x284>)
2ffeaff6:	f06f 0715 	mvn.w	r7, #21
2ffeaffa:	f7fc fcbb 	bl	2ffe7974 <tf_log>
2ffeaffe:	4638      	mov	r0, r7
2ffeb000:	b023      	add	sp, #140	@ 0x8c
2ffeb002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeb006:	6a23      	ldr	r3, [r4, #32]
2ffeb008:	9a02      	ldr	r2, [sp, #8]
2ffeb00a:	429a      	cmp	r2, r3
2ffeb00c:	d02c      	beq.n	2ffeb068 <stm32_i2c_init+0x98>
2ffeb00e:	4b92      	ldr	r3, [pc, #584]	@ (2ffeb258 <stm32_i2c_init+0x288>)
2ffeb010:	eb03 0652 	add.w	r6, r3, r2, lsr #1
2ffeb014:	fbb6 f6f2 	udiv	r6, r6, r2
2ffeb018:	0073      	lsls	r3, r6, #1
2ffeb01a:	9309      	str	r3, [sp, #36]	@ 0x24
2ffeb01c:	6a69      	ldr	r1, [r5, #36]	@ 0x24
2ffeb01e:	4b8f      	ldr	r3, [pc, #572]	@ (2ffeb25c <stm32_i2c_init+0x28c>)
2ffeb020:	4299      	cmp	r1, r3
2ffeb022:	d97f      	bls.n	2ffeb124 <stm32_i2c_init+0x154>
2ffeb024:	4b8e      	ldr	r3, [pc, #568]	@ (2ffeb260 <stm32_i2c_init+0x290>)
2ffeb026:	4299      	cmp	r1, r3
2ffeb028:	d97f      	bls.n	2ffeb12a <stm32_i2c_init+0x15a>
2ffeb02a:	4b8e      	ldr	r3, [pc, #568]	@ (2ffeb264 <stm32_i2c_init+0x294>)
2ffeb02c:	4299      	cmp	r1, r3
2ffeb02e:	d87f      	bhi.n	2ffeb130 <stm32_i2c_init+0x160>
2ffeb030:	f04f 0902 	mov.w	r9, #2
2ffeb034:	4a8c      	ldr	r2, [pc, #560]	@ (2ffeb268 <stm32_i2c_init+0x298>)
2ffeb036:	ea4f 1349 	mov.w	r3, r9, lsl #5
2ffeb03a:	eb02 1149 	add.w	r1, r2, r9, lsl #5
2ffeb03e:	f852 8003 	ldr.w	r8, [r2, r3]
2ffeb042:	4b85      	ldr	r3, [pc, #532]	@ (2ffeb258 <stm32_i2c_init+0x288>)
2ffeb044:	688a      	ldr	r2, [r1, #8]
2ffeb046:	eb03 0358 	add.w	r3, r3, r8, lsr #1
2ffeb04a:	69e8      	ldr	r0, [r5, #28]
2ffeb04c:	fbb3 f3f8 	udiv	r3, r3, r8
2ffeb050:	4290      	cmp	r0, r2
2ffeb052:	9307      	str	r3, [sp, #28]
2ffeb054:	6849      	ldr	r1, [r1, #4]
2ffeb056:	6a2b      	ldr	r3, [r5, #32]
2ffeb058:	f240 8084 	bls.w	2ffeb164 <stm32_i2c_init+0x194>
2ffeb05c:	9100      	str	r1, [sp, #0]
2ffeb05e:	4601      	mov	r1, r0
2ffeb060:	4882      	ldr	r0, [pc, #520]	@ (2ffeb26c <stm32_i2c_init+0x29c>)
2ffeb062:	f7fc fc87 	bl	2ffe7974 <tf_log>
2ffeb066:	e066      	b.n	2ffeb136 <stm32_i2c_init+0x166>
2ffeb068:	69e6      	ldr	r6, [r4, #28]
2ffeb06a:	68a0      	ldr	r0, [r4, #8]
2ffeb06c:	f026 6670 	bic.w	r6, r6, #251658240	@ 0xf000000
2ffeb070:	f7fd fc76 	bl	2ffe8960 <clk_enable>
2ffeb074:	6822      	ldr	r2, [r4, #0]
2ffeb076:	2120      	movs	r1, #32
2ffeb078:	6813      	ldr	r3, [r2, #0]
2ffeb07a:	f023 0301 	bic.w	r3, r3, #1
2ffeb07e:	6013      	str	r3, [r2, #0]
2ffeb080:	6823      	ldr	r3, [r4, #0]
2ffeb082:	611e      	str	r6, [r3, #16]
2ffeb084:	6822      	ldr	r2, [r4, #0]
2ffeb086:	6893      	ldr	r3, [r2, #8]
2ffeb088:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
2ffeb08c:	6093      	str	r3, [r2, #8]
2ffeb08e:	686b      	ldr	r3, [r5, #4]
2ffeb090:	6822      	ldr	r2, [r4, #0]
2ffeb092:	2b01      	cmp	r3, #1
2ffeb094:	682b      	ldr	r3, [r5, #0]
2ffeb096:	bf0c      	ite	eq
2ffeb098:	f443 4300 	orreq.w	r3, r3, #32768	@ 0x8000
2ffeb09c:	f443 4304 	orrne.w	r3, r3, #33792	@ 0x8400
2ffeb0a0:	6093      	str	r3, [r2, #8]
2ffeb0a2:	2200      	movs	r2, #0
2ffeb0a4:	6823      	ldr	r3, [r4, #0]
2ffeb0a6:	605a      	str	r2, [r3, #4]
2ffeb0a8:	686b      	ldr	r3, [r5, #4]
2ffeb0aa:	2b02      	cmp	r3, #2
2ffeb0ac:	bf01      	itttt	eq
2ffeb0ae:	6822      	ldreq	r2, [r4, #0]
2ffeb0b0:	6853      	ldreq	r3, [r2, #4]
2ffeb0b2:	f443 6300 	orreq.w	r3, r3, #2048	@ 0x800
2ffeb0b6:	6053      	streq	r3, [r2, #4]
2ffeb0b8:	6822      	ldr	r2, [r4, #0]
2ffeb0ba:	6853      	ldr	r3, [r2, #4]
2ffeb0bc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
2ffeb0c0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
2ffeb0c4:	6053      	str	r3, [r2, #4]
2ffeb0c6:	6822      	ldr	r2, [r4, #0]
2ffeb0c8:	68d3      	ldr	r3, [r2, #12]
2ffeb0ca:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
2ffeb0ce:	60d3      	str	r3, [r2, #12]
2ffeb0d0:	68ea      	ldr	r2, [r5, #12]
2ffeb0d2:	68ab      	ldr	r3, [r5, #8]
2ffeb0d4:	4313      	orrs	r3, r2
2ffeb0d6:	692a      	ldr	r2, [r5, #16]
2ffeb0d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffeb0dc:	6822      	ldr	r2, [r4, #0]
2ffeb0de:	60d3      	str	r3, [r2, #12]
2ffeb0e0:	69aa      	ldr	r2, [r5, #24]
2ffeb0e2:	696b      	ldr	r3, [r5, #20]
2ffeb0e4:	4313      	orrs	r3, r2
2ffeb0e6:	6822      	ldr	r2, [r4, #0]
2ffeb0e8:	6013      	str	r3, [r2, #0]
2ffeb0ea:	6822      	ldr	r2, [r4, #0]
2ffeb0ec:	6813      	ldr	r3, [r2, #0]
2ffeb0ee:	f043 0301 	orr.w	r3, r3, #1
2ffeb0f2:	6013      	str	r3, [r2, #0]
2ffeb0f4:	2300      	movs	r3, #0
2ffeb0f6:	61a3      	str	r3, [r4, #24]
2ffeb0f8:	6163      	str	r3, [r4, #20]
2ffeb0fa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
2ffeb0fc:	7b27      	ldrb	r7, [r4, #12]
2ffeb0fe:	fab3 f383 	clz	r3, r3
2ffeb102:	6121      	str	r1, [r4, #16]
2ffeb104:	095b      	lsrs	r3, r3, #5
2ffeb106:	031b      	lsls	r3, r3, #12
2ffeb108:	2f00      	cmp	r7, #0
2ffeb10a:	f000 8155 	beq.w	2ffeb3b8 <stm32_i2c_init+0x3e8>
2ffeb10e:	4858      	ldr	r0, [pc, #352]	@ (2ffeb270 <stm32_i2c_init+0x2a0>)
2ffeb110:	f06f 010f 	mvn.w	r1, #15
2ffeb114:	f06f 070f 	mvn.w	r7, #15
2ffeb118:	f7fc fc2c 	bl	2ffe7974 <tf_log>
2ffeb11c:	68a0      	ldr	r0, [r4, #8]
2ffeb11e:	f7fd fc31 	bl	2ffe8984 <clk_disable>
2ffeb122:	e76c      	b.n	2ffeaffe <stm32_i2c_init+0x2e>
2ffeb124:	f04f 0900 	mov.w	r9, #0
2ffeb128:	e784      	b.n	2ffeb034 <stm32_i2c_init+0x64>
2ffeb12a:	f04f 0901 	mov.w	r9, #1
2ffeb12e:	e781      	b.n	2ffeb034 <stm32_i2c_init+0x64>
2ffeb130:	4850      	ldr	r0, [pc, #320]	@ (2ffeb274 <stm32_i2c_init+0x2a4>)
2ffeb132:	f7fc fc1f 	bl	2ffe7974 <tf_log>
2ffeb136:	f06f 0715 	mvn.w	r7, #21
2ffeb13a:	484f      	ldr	r0, [pc, #316]	@ (2ffeb278 <stm32_i2c_init+0x2a8>)
2ffeb13c:	f7fc fc1a 	bl	2ffe7974 <tf_log>
2ffeb140:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
2ffeb142:	4846      	ldr	r0, [pc, #280]	@ (2ffeb25c <stm32_i2c_init+0x28c>)
2ffeb144:	4283      	cmp	r3, r0
2ffeb146:	f240 8133 	bls.w	2ffeb3b0 <stm32_i2c_init+0x3e0>
2ffeb14a:	4946      	ldr	r1, [pc, #280]	@ (2ffeb264 <stm32_i2c_init+0x294>)
2ffeb14c:	428b      	cmp	r3, r1
2ffeb14e:	d804      	bhi.n	2ffeb15a <stm32_i2c_init+0x18a>
2ffeb150:	4a43      	ldr	r2, [pc, #268]	@ (2ffeb260 <stm32_i2c_init+0x290>)
2ffeb152:	4293      	cmp	r3, r2
2ffeb154:	bf94      	ite	ls
2ffeb156:	4601      	movls	r1, r0
2ffeb158:	4611      	movhi	r1, r2
2ffeb15a:	4848      	ldr	r0, [pc, #288]	@ (2ffeb27c <stm32_i2c_init+0x2ac>)
2ffeb15c:	6269      	str	r1, [r5, #36]	@ 0x24
2ffeb15e:	f7fc fc09 	bl	2ffe7974 <tf_log>
2ffeb162:	e75b      	b.n	2ffeb01c <stm32_i2c_init+0x4c>
2ffeb164:	428b      	cmp	r3, r1
2ffeb166:	f63f af79 	bhi.w	2ffeb05c <stm32_i2c_init+0x8c>
2ffeb16a:	f895 102c 	ldrb.w	r1, [r5, #44]	@ 0x2c
2ffeb16e:	2910      	cmp	r1, #16
2ffeb170:	d904      	bls.n	2ffeb17c <stm32_i2c_init+0x1ac>
2ffeb172:	4843      	ldr	r0, [pc, #268]	@ (2ffeb280 <stm32_i2c_init+0x2b0>)
2ffeb174:	2210      	movs	r2, #16
2ffeb176:	f7fc fbfd 	bl	2ffe7974 <tf_log>
2ffeb17a:	e7dc      	b.n	2ffeb136 <stm32_i2c_init+0x166>
2ffeb17c:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
2ffeb17e:	bb6f      	cbnz	r7, 2ffeb1dc <stm32_i2c_init+0x20c>
2ffeb180:	46be      	mov	lr, r7
2ffeb182:	fb06 f201 	mul.w	r2, r6, r1
2ffeb186:	3103      	adds	r1, #3
2ffeb188:	9205      	str	r2, [sp, #20]
2ffeb18a:	4a37      	ldr	r2, [pc, #220]	@ (2ffeb268 <stm32_i2c_init+0x298>)
2ffeb18c:	4371      	muls	r1, r6
2ffeb18e:	eb02 1c49 	add.w	ip, r2, r9, lsl #5
2ffeb192:	1a5b      	subs	r3, r3, r1
2ffeb194:	f8dc 200c 	ldr.w	r2, [ip, #12]
2ffeb198:	4431      	add	r1, r6
2ffeb19a:	4413      	add	r3, r2
2ffeb19c:	1bdb      	subs	r3, r3, r7
2ffeb19e:	9303      	str	r3, [sp, #12]
2ffeb1a0:	f8dc 3010 	ldr.w	r3, [ip, #16]
2ffeb1a4:	4401      	add	r1, r0
2ffeb1a6:	1a5b      	subs	r3, r3, r1
2ffeb1a8:	2150      	movs	r1, #80	@ 0x50
2ffeb1aa:	eba3 030e 	sub.w	r3, r3, lr
2ffeb1ae:	9304      	str	r3, [sp, #16]
2ffeb1b0:	f8dc 3014 	ldr.w	r3, [ip, #20]
2ffeb1b4:	18c3      	adds	r3, r0, r3
2ffeb1b6:	a80e      	add	r0, sp, #56	@ 0x38
2ffeb1b8:	9308      	str	r3, [sp, #32]
2ffeb1ba:	9b03      	ldr	r3, [sp, #12]
2ffeb1bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2ffeb1c0:	9303      	str	r3, [sp, #12]
2ffeb1c2:	9b04      	ldr	r3, [sp, #16]
2ffeb1c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2ffeb1c8:	9304      	str	r3, [sp, #16]
2ffeb1ca:	f7f9 ea34 	blx	2ffe4634 <zero_normalmem>
2ffeb1ce:	4630      	mov	r0, r6
2ffeb1d0:	2300      	movs	r3, #0
2ffeb1d2:	f04f 0c10 	mov.w	ip, #16
2ffeb1d6:	4682      	mov	sl, r0
2ffeb1d8:	2100      	movs	r1, #0
2ffeb1da:	e00d      	b.n	2ffeb1f8 <stm32_i2c_init+0x228>
2ffeb1dc:	2732      	movs	r7, #50	@ 0x32
2ffeb1de:	f44f 7e82 	mov.w	lr, #260	@ 0x104
2ffeb1e2:	e7ce      	b.n	2ffeb182 <stm32_i2c_init+0x1b2>
2ffeb1e4:	4486      	add	lr, r0
2ffeb1e6:	3201      	adds	r2, #1
2ffeb1e8:	b292      	uxth	r2, r2
2ffeb1ea:	2a10      	cmp	r2, #16
2ffeb1ec:	d10c      	bne.n	2ffeb208 <stm32_i2c_init+0x238>
2ffeb1ee:	459c      	cmp	ip, r3
2ffeb1f0:	d023      	beq.n	2ffeb23a <stm32_i2c_init+0x26a>
2ffeb1f2:	4482      	add	sl, r0
2ffeb1f4:	2910      	cmp	r1, #16
2ffeb1f6:	d020      	beq.n	2ffeb23a <stm32_i2c_init+0x26a>
2ffeb1f8:	9a08      	ldr	r2, [sp, #32]
2ffeb1fa:	9106      	str	r1, [sp, #24]
2ffeb1fc:	3101      	adds	r1, #1
2ffeb1fe:	4552      	cmp	r2, sl
2ffeb200:	b289      	uxth	r1, r1
2ffeb202:	d8f6      	bhi.n	2ffeb1f2 <stm32_i2c_init+0x222>
2ffeb204:	46b6      	mov	lr, r6
2ffeb206:	2200      	movs	r2, #0
2ffeb208:	f8dd b00c 	ldr.w	fp, [sp, #12]
2ffeb20c:	45f3      	cmp	fp, lr
2ffeb20e:	d8e9      	bhi.n	2ffeb1e4 <stm32_i2c_init+0x214>
2ffeb210:	f8dd b010 	ldr.w	fp, [sp, #16]
2ffeb214:	45f3      	cmp	fp, lr
2ffeb216:	d3e5      	bcc.n	2ffeb1e4 <stm32_i2c_init+0x214>
2ffeb218:	459c      	cmp	ip, r3
2ffeb21a:	d0e3      	beq.n	2ffeb1e4 <stm32_i2c_init+0x214>
2ffeb21c:	eb03 0183 	add.w	r1, r3, r3, lsl #2
2ffeb220:	f8dd c018 	ldr.w	ip, [sp, #24]
2ffeb224:	3188      	adds	r1, #136	@ 0x88
2ffeb226:	4469      	add	r1, sp
2ffeb228:	f801 cc50 	strb.w	ip, [r1, #-80]
2ffeb22c:	469c      	mov	ip, r3
2ffeb22e:	f801 2c4f 	strb.w	r2, [r1, #-79]
2ffeb232:	f04f 0201 	mov.w	r2, #1
2ffeb236:	f801 2c4c 	strb.w	r2, [r1, #-76]
2ffeb23a:	4430      	add	r0, r6
2ffeb23c:	3301      	adds	r3, #1
2ffeb23e:	2b10      	cmp	r3, #16
2ffeb240:	d1c9      	bne.n	2ffeb1d6 <stm32_i2c_init+0x206>
2ffeb242:	f1bc 0f10 	cmp.w	ip, #16
2ffeb246:	d11f      	bne.n	2ffeb288 <stm32_i2c_init+0x2b8>
2ffeb248:	480e      	ldr	r0, [pc, #56]	@ (2ffeb284 <stm32_i2c_init+0x2b4>)
2ffeb24a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
2ffeb24e:	f7fc fb91 	bl	2ffe7974 <tf_log>
2ffeb252:	e772      	b.n	2ffeb13a <stm32_i2c_init+0x16a>
2ffeb254:	2fff3593 	.word	0x2fff3593
2ffeb258:	3b9aca00 	.word	0x3b9aca00
2ffeb25c:	000186a0 	.word	0x000186a0
2ffeb260:	00061a80 	.word	0x00061a80
2ffeb264:	000f4240 	.word	0x000f4240
2ffeb268:	2fff0068 	.word	0x2fff0068
2ffeb26c:	2fff35c7 	.word	0x2fff35c7
2ffeb270:	2fff36ae 	.word	0x2fff36ae
2ffeb274:	2fff35a9 	.word	0x2fff35a9
2ffeb278:	2fff364b 	.word	0x2fff364b
2ffeb27c:	2fff366b 	.word	0x2fff366b
2ffeb280:	2fff35fb 	.word	0x2fff35fb
2ffeb284:	2fff3614 	.word	0x2fff3614
2ffeb288:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2ffeb28a:	f10d 0c38 	add.w	ip, sp, #56	@ 0x38
2ffeb28e:	9b05      	ldr	r3, [sp, #20]
2ffeb290:	4630      	mov	r0, r6
2ffeb292:	f04f 0e00 	mov.w	lr, #0
2ffeb296:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb29a:	4413      	add	r3, r2
2ffeb29c:	2250      	movs	r2, #80	@ 0x50
2ffeb29e:	443b      	add	r3, r7
2ffeb2a0:	9308      	str	r3, [sp, #32]
2ffeb2a2:	2364      	movs	r3, #100	@ 0x64
2ffeb2a4:	fbb8 f3f3 	udiv	r3, r8, r3
2ffeb2a8:	4353      	muls	r3, r2
2ffeb2aa:	4a52      	ldr	r2, [pc, #328]	@ (2ffeb3f4 <stm32_i2c_init+0x424>)
2ffeb2ac:	fbb2 f3f3 	udiv	r3, r2, r3
2ffeb2b0:	930a      	str	r3, [sp, #40]	@ 0x28
2ffeb2b2:	fbb2 f3f8 	udiv	r3, r2, r8
2ffeb2b6:	930b      	str	r3, [sp, #44]	@ 0x2c
2ffeb2b8:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
2ffeb2bc:	9303      	str	r3, [sp, #12]
2ffeb2be:	4b4e      	ldr	r3, [pc, #312]	@ (2ffeb3f8 <stm32_i2c_init+0x428>)
2ffeb2c0:	eb03 1349 	add.w	r3, r3, r9, lsl #5
2ffeb2c4:	9306      	str	r3, [sp, #24]
2ffeb2c6:	9b05      	ldr	r3, [sp, #20]
2ffeb2c8:	443b      	add	r3, r7
2ffeb2ca:	930d      	str	r3, [sp, #52]	@ 0x34
2ffeb2cc:	f89c 3004 	ldrb.w	r3, [ip, #4]
2ffeb2d0:	2b00      	cmp	r3, #0
2ffeb2d2:	d045      	beq.n	2ffeb360 <stm32_i2c_init+0x390>
2ffeb2d4:	9b06      	ldr	r3, [sp, #24]
2ffeb2d6:	f04f 0900 	mov.w	r9, #0
2ffeb2da:	699b      	ldr	r3, [r3, #24]
2ffeb2dc:	9305      	str	r3, [sp, #20]
2ffeb2de:	9b08      	ldr	r3, [sp, #32]
2ffeb2e0:	4403      	add	r3, r0
2ffeb2e2:	9304      	str	r3, [sp, #16]
2ffeb2e4:	4698      	mov	r8, r3
2ffeb2e6:	9b05      	ldr	r3, [sp, #20]
2ffeb2e8:	4543      	cmp	r3, r8
2ffeb2ea:	d833      	bhi.n	2ffeb354 <stm32_i2c_init+0x384>
2ffeb2ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
2ffeb2ee:	eba8 0303 	sub.w	r3, r8, r3
2ffeb2f2:	ebb6 0f93 	cmp.w	r6, r3, lsr #2
2ffeb2f6:	d22d      	bcs.n	2ffeb354 <stm32_i2c_init+0x384>
2ffeb2f8:	6a2b      	ldr	r3, [r5, #32]
2ffeb2fa:	f04f 0a00 	mov.w	sl, #0
2ffeb2fe:	69ea      	ldr	r2, [r5, #28]
2ffeb300:	9f07      	ldr	r7, [sp, #28]
2ffeb302:	441a      	add	r2, r3
2ffeb304:	4442      	add	r2, r8
2ffeb306:	9b04      	ldr	r3, [sp, #16]
2ffeb308:	1bd7      	subs	r7, r2, r7
2ffeb30a:	970c      	str	r7, [sp, #48]	@ 0x30
2ffeb30c:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
2ffeb310:	18d7      	adds	r7, r2, r3
2ffeb312:	45bb      	cmp	fp, r7
2ffeb314:	d818      	bhi.n	2ffeb348 <stm32_i2c_init+0x378>
2ffeb316:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
2ffeb31a:	45bb      	cmp	fp, r7
2ffeb31c:	d314      	bcc.n	2ffeb348 <stm32_i2c_init+0x378>
2ffeb31e:	9f06      	ldr	r7, [sp, #24]
2ffeb320:	69ff      	ldr	r7, [r7, #28]
2ffeb322:	429f      	cmp	r7, r3
2ffeb324:	d810      	bhi.n	2ffeb348 <stm32_i2c_init+0x378>
2ffeb326:	429e      	cmp	r6, r3
2ffeb328:	d20e      	bcs.n	2ffeb348 <stm32_i2c_init+0x378>
2ffeb32a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
2ffeb32c:	f8dd b00c 	ldr.w	fp, [sp, #12]
2ffeb330:	441f      	add	r7, r3
2ffeb332:	2f00      	cmp	r7, #0
2ffeb334:	bfb8      	it	lt
2ffeb336:	427f      	neglt	r7, r7
2ffeb338:	45bb      	cmp	fp, r7
2ffeb33a:	bfc1      	itttt	gt
2ffeb33c:	f88c 9003 	strbgt.w	r9, [ip, #3]
2ffeb340:	4671      	movgt	r1, lr
2ffeb342:	f88c a002 	strbgt.w	sl, [ip, #2]
2ffeb346:	9703      	strgt	r7, [sp, #12]
2ffeb348:	4403      	add	r3, r0
2ffeb34a:	f10a 0a01 	add.w	sl, sl, #1
2ffeb34e:	f5ba 7f80 	cmp.w	sl, #256	@ 0x100
2ffeb352:	d1db      	bne.n	2ffeb30c <stm32_i2c_init+0x33c>
2ffeb354:	4480      	add	r8, r0
2ffeb356:	f109 0901 	add.w	r9, r9, #1
2ffeb35a:	f5b9 7f80 	cmp.w	r9, #256	@ 0x100
2ffeb35e:	d1c2      	bne.n	2ffeb2e6 <stm32_i2c_init+0x316>
2ffeb360:	4430      	add	r0, r6
2ffeb362:	f10e 0e01 	add.w	lr, lr, #1
2ffeb366:	f1be 0f10 	cmp.w	lr, #16
2ffeb36a:	f10c 0c05 	add.w	ip, ip, #5
2ffeb36e:	d1ad      	bne.n	2ffeb2cc <stm32_i2c_init+0x2fc>
2ffeb370:	1c4b      	adds	r3, r1, #1
2ffeb372:	d101      	bne.n	2ffeb378 <stm32_i2c_init+0x3a8>
2ffeb374:	4821      	ldr	r0, [pc, #132]	@ (2ffeb3fc <stm32_i2c_init+0x42c>)
2ffeb376:	e768      	b.n	2ffeb24a <stm32_i2c_init+0x27a>
2ffeb378:	eb01 0381 	add.w	r3, r1, r1, lsl #2
2ffeb37c:	3388      	adds	r3, #136	@ 0x88
2ffeb37e:	446b      	add	r3, sp
2ffeb380:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2ffeb384:	f813 2c4e 	ldrb.w	r2, [r3, #-78]
2ffeb388:	ea46 7601 	orr.w	r6, r6, r1, lsl #28
2ffeb38c:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
2ffeb390:	f813 2c50 	ldrb.w	r2, [r3, #-80]
2ffeb394:	f813 3c4f 	ldrb.w	r3, [r3, #-79]
2ffeb398:	0512      	lsls	r2, r2, #20
2ffeb39a:	041b      	lsls	r3, r3, #16
2ffeb39c:	f402 0270 	and.w	r2, r2, #15728640	@ 0xf00000
2ffeb3a0:	4316      	orrs	r6, r2
2ffeb3a2:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
2ffeb3a6:	431e      	orrs	r6, r3
2ffeb3a8:	9b02      	ldr	r3, [sp, #8]
2ffeb3aa:	61e6      	str	r6, [r4, #28]
2ffeb3ac:	6223      	str	r3, [r4, #32]
2ffeb3ae:	e65c      	b.n	2ffeb06a <stm32_i2c_init+0x9a>
2ffeb3b0:	4813      	ldr	r0, [pc, #76]	@ (2ffeb400 <stm32_i2c_init+0x430>)
2ffeb3b2:	f7fc fadf 	bl	2ffe7974 <tf_log>
2ffeb3b6:	e622      	b.n	2ffeaffe <stm32_i2c_init+0x2e>
2ffeb3b8:	6820      	ldr	r0, [r4, #0]
2ffeb3ba:	2224      	movs	r2, #36	@ 0x24
2ffeb3bc:	6122      	str	r2, [r4, #16]
2ffeb3be:	6802      	ldr	r2, [r0, #0]
2ffeb3c0:	f022 0201 	bic.w	r2, r2, #1
2ffeb3c4:	6002      	str	r2, [r0, #0]
2ffeb3c6:	6820      	ldr	r0, [r4, #0]
2ffeb3c8:	6802      	ldr	r2, [r0, #0]
2ffeb3ca:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2ffeb3ce:	6002      	str	r2, [r0, #0]
2ffeb3d0:	6820      	ldr	r0, [r4, #0]
2ffeb3d2:	6802      	ldr	r2, [r0, #0]
2ffeb3d4:	4313      	orrs	r3, r2
2ffeb3d6:	6003      	str	r3, [r0, #0]
2ffeb3d8:	6822      	ldr	r2, [r4, #0]
2ffeb3da:	6813      	ldr	r3, [r2, #0]
2ffeb3dc:	f043 0301 	orr.w	r3, r3, #1
2ffeb3e0:	6013      	str	r3, [r2, #0]
2ffeb3e2:	6121      	str	r1, [r4, #16]
2ffeb3e4:	68a0      	ldr	r0, [r4, #8]
2ffeb3e6:	7327      	strb	r7, [r4, #12]
2ffeb3e8:	f7fd facc 	bl	2ffe8984 <clk_disable>
2ffeb3ec:	e607      	b.n	2ffeaffe <stm32_i2c_init+0x2e>
2ffeb3ee:	f06f 0701 	mvn.w	r7, #1
2ffeb3f2:	e604      	b.n	2ffeaffe <stm32_i2c_init+0x2e>
2ffeb3f4:	3b9aca00 	.word	0x3b9aca00
2ffeb3f8:	2fff0068 	.word	0x2fff0068
2ffeb3fc:	2fff3631 	.word	0x2fff3631
2ffeb400:	2fff368a 	.word	0x2fff368a

2ffeb404 <stm32_i2c_is_device_ready>:
2ffeb404:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeb408:	461f      	mov	r7, r3
2ffeb40a:	6903      	ldr	r3, [r0, #16]
2ffeb40c:	4604      	mov	r4, r0
2ffeb40e:	468a      	mov	sl, r1
2ffeb410:	4693      	mov	fp, r2
2ffeb412:	2b20      	cmp	r3, #32
2ffeb414:	f040 808a 	bne.w	2ffeb52c <stm32_i2c_is_device_ready+0x128>
2ffeb418:	7b05      	ldrb	r5, [r0, #12]
2ffeb41a:	2d00      	cmp	r5, #0
2ffeb41c:	f040 8086 	bne.w	2ffeb52c <stm32_i2c_is_device_ready+0x128>
2ffeb420:	6880      	ldr	r0, [r0, #8]
2ffeb422:	f7fd fa9d 	bl	2ffe8960 <clk_enable>
2ffeb426:	6165      	str	r5, [r4, #20]
2ffeb428:	2301      	movs	r3, #1
2ffeb42a:	7323      	strb	r3, [r4, #12]
2ffeb42c:	6823      	ldr	r3, [r4, #0]
2ffeb42e:	699d      	ldr	r5, [r3, #24]
2ffeb430:	f415 4500 	ands.w	r5, r5, #32768	@ 0x8000
2ffeb434:	d136      	bne.n	2ffeb4a4 <stm32_i2c_is_device_ready+0xa0>
2ffeb436:	f3ca 0a09 	ubfx	sl, sl, #0, #10
2ffeb43a:	2324      	movs	r3, #36	@ 0x24
2ffeb43c:	6123      	str	r3, [r4, #16]
2ffeb43e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffeb442:	435f      	muls	r7, r3
2ffeb444:	61a5      	str	r5, [r4, #24]
2ffeb446:	6823      	ldr	r3, [r4, #0]
2ffeb448:	689a      	ldr	r2, [r3, #8]
2ffeb44a:	0552      	lsls	r2, r2, #21
2ffeb44c:	bf56      	itet	pl
2ffeb44e:	f04a 7200 	orrpl.w	r2, sl, #33554432	@ 0x2000000
2ffeb452:	f44a 5220 	orrmi.w	r2, sl, #10240	@ 0x2800
2ffeb456:	f442 5200 	orrpl.w	r2, r2, #8192	@ 0x2000
2ffeb45a:	605a      	str	r2, [r3, #4]
2ffeb45c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffeb460:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffeb464:	4a32      	ldr	r2, [pc, #200]	@ (2ffeb530 <stm32_i2c_is_device_ready+0x12c>)
2ffeb466:	2300      	movs	r3, #0
2ffeb468:	fba7 0100 	umull	r0, r1, r7, r0
2ffeb46c:	4646      	mov	r6, r8
2ffeb46e:	f002 e8de 	blx	2ffed62c <__aeabi_uldivmod>
2ffeb472:	1986      	adds	r6, r0, r6
2ffeb474:	eb41 0809 	adc.w	r8, r1, r9
2ffeb478:	f8d4 9000 	ldr.w	r9, [r4]
2ffeb47c:	f109 0c18 	add.w	ip, r9, #24
2ffeb480:	f8dc 2000 	ldr.w	r2, [ip]
2ffeb484:	f012 0230 	ands.w	r2, r2, #48	@ 0x30
2ffeb488:	d116      	bne.n	2ffeb4b8 <stm32_i2c_is_device_ready+0xb4>
2ffeb48a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffeb48e:	4286      	cmp	r6, r0
2ffeb490:	eb78 0301 	sbcs.w	r3, r8, r1
2ffeb494:	d2f4      	bcs.n	2ffeb480 <stm32_i2c_is_device_ready+0x7c>
2ffeb496:	69a3      	ldr	r3, [r4, #24]
2ffeb498:	6162      	str	r2, [r4, #20]
2ffeb49a:	f043 0320 	orr.w	r3, r3, #32
2ffeb49e:	61a3      	str	r3, [r4, #24]
2ffeb4a0:	2320      	movs	r3, #32
2ffeb4a2:	6123      	str	r3, [r4, #16]
2ffeb4a4:	2500      	movs	r5, #0
2ffeb4a6:	68a0      	ldr	r0, [r4, #8]
2ffeb4a8:	2300      	movs	r3, #0
2ffeb4aa:	7323      	strb	r3, [r4, #12]
2ffeb4ac:	f7fd fa6a 	bl	2ffe8984 <clk_disable>
2ffeb4b0:	4628      	mov	r0, r5
2ffeb4b2:	b003      	add	sp, #12
2ffeb4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeb4b8:	f8d9 2018 	ldr.w	r2, [r9, #24]
2ffeb4bc:	e9cd 6800 	strd	r6, r8, [sp]
2ffeb4c0:	f012 0210 	ands.w	r2, r2, #16
2ffeb4c4:	d10a      	bne.n	2ffeb4dc <stm32_i2c_is_device_ready+0xd8>
2ffeb4c6:	2120      	movs	r1, #32
2ffeb4c8:	4620      	mov	r0, r4
2ffeb4ca:	f003 fa2f 	bl	2ffee92c <i2c_wait_flag>
2ffeb4ce:	2800      	cmp	r0, #0
2ffeb4d0:	d1e8      	bne.n	2ffeb4a4 <stm32_i2c_is_device_ready+0xa0>
2ffeb4d2:	f8c9 101c 	str.w	r1, [r9, #28]
2ffeb4d6:	2501      	movs	r5, #1
2ffeb4d8:	6121      	str	r1, [r4, #16]
2ffeb4da:	e7e4      	b.n	2ffeb4a6 <stm32_i2c_is_device_ready+0xa2>
2ffeb4dc:	2200      	movs	r2, #0
2ffeb4de:	2120      	movs	r1, #32
2ffeb4e0:	4620      	mov	r0, r4
2ffeb4e2:	f003 fa23 	bl	2ffee92c <i2c_wait_flag>
2ffeb4e6:	4602      	mov	r2, r0
2ffeb4e8:	2800      	cmp	r0, #0
2ffeb4ea:	d1db      	bne.n	2ffeb4a4 <stm32_i2c_is_device_ready+0xa0>
2ffeb4ec:	455d      	cmp	r5, fp
2ffeb4ee:	f04f 0310 	mov.w	r3, #16
2ffeb4f2:	f8c9 301c 	str.w	r3, [r9, #28]
2ffeb4f6:	6823      	ldr	r3, [r4, #0]
2ffeb4f8:	61d9      	str	r1, [r3, #28]
2ffeb4fa:	d10d      	bne.n	2ffeb518 <stm32_i2c_is_device_ready+0x114>
2ffeb4fc:	6820      	ldr	r0, [r4, #0]
2ffeb4fe:	6843      	ldr	r3, [r0, #4]
2ffeb500:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
2ffeb504:	6043      	str	r3, [r0, #4]
2ffeb506:	4620      	mov	r0, r4
2ffeb508:	e9cd 6800 	strd	r6, r8, [sp]
2ffeb50c:	f003 fa0e 	bl	2ffee92c <i2c_wait_flag>
2ffeb510:	2800      	cmp	r0, #0
2ffeb512:	d1c7      	bne.n	2ffeb4a4 <stm32_i2c_is_device_ready+0xa0>
2ffeb514:	6823      	ldr	r3, [r4, #0]
2ffeb516:	61d9      	str	r1, [r3, #28]
2ffeb518:	3501      	adds	r5, #1
2ffeb51a:	45ab      	cmp	fp, r5
2ffeb51c:	d893      	bhi.n	2ffeb446 <stm32_i2c_is_device_ready+0x42>
2ffeb51e:	69a3      	ldr	r3, [r4, #24]
2ffeb520:	f043 0320 	orr.w	r3, r3, #32
2ffeb524:	61a3      	str	r3, [r4, #24]
2ffeb526:	2300      	movs	r3, #0
2ffeb528:	6163      	str	r3, [r4, #20]
2ffeb52a:	e7b9      	b.n	2ffeb4a0 <stm32_i2c_is_device_ready+0x9c>
2ffeb52c:	2500      	movs	r5, #0
2ffeb52e:	e7bf      	b.n	2ffeb4b0 <stm32_i2c_is_device_ready+0xac>
2ffeb530:	000f4240 	.word	0x000f4240

2ffeb534 <stm32_iwdg_refresh>:
2ffeb534:	b510      	push	{r4, lr}
2ffeb536:	4c0e      	ldr	r4, [pc, #56]	@ (2ffeb570 <stm32_iwdg_refresh+0x3c>)
2ffeb538:	6823      	ldr	r3, [r4, #0]
2ffeb53a:	b14b      	cbz	r3, 2ffeb550 <stm32_iwdg_refresh+0x1c>
2ffeb53c:	6860      	ldr	r0, [r4, #4]
2ffeb53e:	f7fd fa0f 	bl	2ffe8960 <clk_enable>
2ffeb542:	6823      	ldr	r3, [r4, #0]
2ffeb544:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
2ffeb548:	601a      	str	r2, [r3, #0]
2ffeb54a:	6860      	ldr	r0, [r4, #4]
2ffeb54c:	f7fd fa1a 	bl	2ffe8984 <clk_disable>
2ffeb550:	68e3      	ldr	r3, [r4, #12]
2ffeb552:	b15b      	cbz	r3, 2ffeb56c <stm32_iwdg_refresh+0x38>
2ffeb554:	6920      	ldr	r0, [r4, #16]
2ffeb556:	f7fd fa03 	bl	2ffe8960 <clk_enable>
2ffeb55a:	68e3      	ldr	r3, [r4, #12]
2ffeb55c:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
2ffeb560:	601a      	str	r2, [r3, #0]
2ffeb562:	6920      	ldr	r0, [r4, #16]
2ffeb564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeb568:	f7fd ba0c 	b.w	2ffe8984 <clk_disable>
2ffeb56c:	bd10      	pop	{r4, pc}
2ffeb56e:	bf00      	nop
2ffeb570:	2fff5914 	.word	0x2fff5914

2ffeb574 <stm32_iwdg_init>:
2ffeb574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffeb578:	b086      	sub	sp, #24
2ffeb57a:	a801      	add	r0, sp, #4
2ffeb57c:	f7fe fa3e 	bl	2ffe99fc <fdt_get_address>
2ffeb580:	b918      	cbnz	r0, 2ffeb58a <stm32_iwdg_init+0x16>
2ffeb582:	f7fc fa93 	bl	2ffe7aac <console_flush>
2ffeb586:	f7f8 ef56 	blx	2ffe4434 <do_panic>
2ffeb58a:	4a23      	ldr	r2, [pc, #140]	@ (2ffeb618 <stm32_iwdg_init+0xa4>)
2ffeb58c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb590:	4d22      	ldr	r5, [pc, #136]	@ (2ffeb61c <stm32_iwdg_init+0xa8>)
2ffeb592:	a802      	add	r0, sp, #8
2ffeb594:	f8df 9080 	ldr.w	r9, [pc, #128]	@ 2ffeb618 <stm32_iwdg_init+0xa4>
2ffeb598:	f7fe fad8 	bl	2ffe9b4c <dt_get_node>
2ffeb59c:	ea40 74e0 	orr.w	r4, r0, r0, asr #31
2ffeb5a0:	f04f 080c 	mov.w	r8, #12
2ffeb5a4:	1c63      	adds	r3, r4, #1
2ffeb5a6:	d103      	bne.n	2ffeb5b0 <stm32_iwdg_init+0x3c>
2ffeb5a8:	2000      	movs	r0, #0
2ffeb5aa:	b006      	add	sp, #24
2ffeb5ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffeb5b0:	9802      	ldr	r0, [sp, #8]
2ffeb5b2:	f7fe fe0f 	bl	2ffea1d4 <stm32_iwdg_get_instance>
2ffeb5b6:	fb08 f700 	mul.w	r7, r8, r0
2ffeb5ba:	9b02      	ldr	r3, [sp, #8]
2ffeb5bc:	4682      	mov	sl, r0
2ffeb5be:	19ee      	adds	r6, r5, r7
2ffeb5c0:	51eb      	str	r3, [r5, r7]
2ffeb5c2:	9b03      	ldr	r3, [sp, #12]
2ffeb5c4:	6073      	str	r3, [r6, #4]
2ffeb5c6:	f7fe fe19 	bl	2ffea1fc <stm32_iwdg_get_otp_config>
2ffeb5ca:	9b05      	ldr	r3, [sp, #20]
2ffeb5cc:	f010 0f01 	tst.w	r0, #1
2ffeb5d0:	d006      	beq.n	2ffeb5e0 <stm32_iwdg_init+0x6c>
2ffeb5d2:	b953      	cbnz	r3, 2ffeb5ea <stm32_iwdg_init+0x76>
2ffeb5d4:	4812      	ldr	r0, [pc, #72]	@ (2ffeb620 <stm32_iwdg_init+0xac>)
2ffeb5d6:	f10a 0101 	add.w	r1, sl, #1
2ffeb5da:	f7fc f9cb 	bl	2ffe7974 <tf_log>
2ffeb5de:	e7d0      	b.n	2ffeb582 <stm32_iwdg_init+0xe>
2ffeb5e0:	b95b      	cbnz	r3, 2ffeb5fa <stm32_iwdg_init+0x86>
2ffeb5e2:	210c      	movs	r1, #12
2ffeb5e4:	4630      	mov	r0, r6
2ffeb5e6:	f7f9 e826 	blx	2ffe4634 <zero_normalmem>
2ffeb5ea:	4621      	mov	r1, r4
2ffeb5ec:	464a      	mov	r2, r9
2ffeb5ee:	a802      	add	r0, sp, #8
2ffeb5f0:	f7fe faac 	bl	2ffe9b4c <dt_get_node>
2ffeb5f4:	ea40 74e0 	orr.w	r4, r0, r0, asr #31
2ffeb5f8:	e7d4      	b.n	2ffeb5a4 <stm32_iwdg_init+0x30>
2ffeb5fa:	59eb      	ldr	r3, [r5, r7]
2ffeb5fc:	2b00      	cmp	r3, #0
2ffeb5fe:	d0c0      	beq.n	2ffeb582 <stm32_iwdg_init+0xe>
2ffeb600:	6870      	ldr	r0, [r6, #4]
2ffeb602:	f7fd f9ad 	bl	2ffe8960 <clk_enable>
2ffeb606:	59eb      	ldr	r3, [r5, r7]
2ffeb608:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
2ffeb60c:	601a      	str	r2, [r3, #0]
2ffeb60e:	6870      	ldr	r0, [r6, #4]
2ffeb610:	f7fd f9b8 	bl	2ffe8984 <clk_disable>
2ffeb614:	e7e9      	b.n	2ffeb5ea <stm32_iwdg_init+0x76>
2ffeb616:	bf00      	nop
2ffeb618:	2fff36d9 	.word	0x2fff36d9
2ffeb61c:	2fff5914 	.word	0x2fff5914
2ffeb620:	2fff36ea 	.word	0x2fff36ea

2ffeb624 <dt_get_pmic_node>:
2ffeb624:	b510      	push	{r4, lr}
2ffeb626:	4c06      	ldr	r4, [pc, #24]	@ (2ffeb640 <dt_get_pmic_node+0x1c>)
2ffeb628:	6823      	ldr	r3, [r4, #0]
2ffeb62a:	3304      	adds	r3, #4
2ffeb62c:	d105      	bne.n	2ffeb63a <dt_get_pmic_node+0x16>
2ffeb62e:	4a05      	ldr	r2, [pc, #20]	@ (2ffeb644 <dt_get_pmic_node+0x20>)
2ffeb630:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb634:	f004 fa7c 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffeb638:	6020      	str	r0, [r4, #0]
2ffeb63a:	6820      	ldr	r0, [r4, #0]
2ffeb63c:	bd10      	pop	{r4, pc}
2ffeb63e:	bf00      	nop
2ffeb640:	2fff44dc 	.word	0x2fff44dc
2ffeb644:	2fff370f 	.word	0x2fff370f

2ffeb648 <dt_pmic_status>:
2ffeb648:	b513      	push	{r0, r1, r4, lr}
2ffeb64a:	4c0b      	ldr	r4, [pc, #44]	@ (2ffeb678 <dt_pmic_status+0x30>)
2ffeb64c:	6820      	ldr	r0, [r4, #0]
2ffeb64e:	f110 0f0f 	cmn.w	r0, #15
2ffeb652:	d10c      	bne.n	2ffeb66e <dt_pmic_status+0x26>
2ffeb654:	a801      	add	r0, sp, #4
2ffeb656:	f7fe f9d1 	bl	2ffe99fc <fdt_get_address>
2ffeb65a:	b150      	cbz	r0, 2ffeb672 <dt_pmic_status+0x2a>
2ffeb65c:	9801      	ldr	r0, [sp, #4]
2ffeb65e:	f7ff ffe1 	bl	2ffeb624 <dt_get_pmic_node>
2ffeb662:	2800      	cmp	r0, #0
2ffeb664:	bfd4      	ite	le
2ffeb666:	f04f 30ff 	movle.w	r0, #4294967295	@ 0xffffffff
2ffeb66a:	2002      	movgt	r0, #2
2ffeb66c:	6020      	str	r0, [r4, #0]
2ffeb66e:	b002      	add	sp, #8
2ffeb670:	bd10      	pop	{r4, pc}
2ffeb672:	f06f 0001 	mvn.w	r0, #1
2ffeb676:	e7fa      	b.n	2ffeb66e <dt_pmic_status+0x26>
2ffeb678:	2fff44e0 	.word	0x2fff44e0

2ffeb67c <initialize_pmic_i2c>:
2ffeb67c:	b570      	push	{r4, r5, r6, lr}
2ffeb67e:	b092      	sub	sp, #72	@ 0x48
2ffeb680:	a801      	add	r0, sp, #4
2ffeb682:	f7fe f9bb 	bl	2ffe99fc <fdt_get_address>
2ffeb686:	b940      	cbnz	r0, 2ffeb69a <initialize_pmic_i2c+0x1e>
2ffeb688:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb68c:	4837      	ldr	r0, [pc, #220]	@ (2ffeb76c <initialize_pmic_i2c+0xf0>)
2ffeb68e:	f7fc f971 	bl	2ffe7974 <tf_log>
2ffeb692:	f7fc fa0b 	bl	2ffe7aac <console_flush>
2ffeb696:	f7f8 eece 	blx	2ffe4434 <do_panic>
2ffeb69a:	4d35      	ldr	r5, [pc, #212]	@ (2ffeb770 <initialize_pmic_i2c+0xf4>)
2ffeb69c:	682b      	ldr	r3, [r5, #0]
2ffeb69e:	3301      	adds	r3, #1
2ffeb6a0:	d11e      	bne.n	2ffeb6e0 <initialize_pmic_i2c+0x64>
2ffeb6a2:	9801      	ldr	r0, [sp, #4]
2ffeb6a4:	f7ff ffbe 	bl	2ffeb624 <dt_get_pmic_node>
2ffeb6a8:	1e04      	subs	r4, r0, #0
2ffeb6aa:	db2a      	blt.n	2ffeb702 <initialize_pmic_i2c+0x86>
2ffeb6ac:	4a31      	ldr	r2, [pc, #196]	@ (2ffeb774 <initialize_pmic_i2c+0xf8>)
2ffeb6ae:	2300      	movs	r3, #0
2ffeb6b0:	9801      	ldr	r0, [sp, #4]
2ffeb6b2:	4621      	mov	r1, r4
2ffeb6b4:	f004 f908 	bl	2ffef8c8 <fdt_getprop>
2ffeb6b8:	2800      	cmp	r0, #0
2ffeb6ba:	d0e5      	beq.n	2ffeb688 <initialize_pmic_i2c+0xc>
2ffeb6bc:	6803      	ldr	r3, [r0, #0]
2ffeb6be:	4a2e      	ldr	r2, [pc, #184]	@ (2ffeb778 <initialize_pmic_i2c+0xfc>)
2ffeb6c0:	ba1b      	rev	r3, r3
2ffeb6c2:	005b      	lsls	r3, r3, #1
2ffeb6c4:	6013      	str	r3, [r2, #0]
2ffeb6c6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
2ffeb6ca:	d302      	bcc.n	2ffeb6d2 <initialize_pmic_i2c+0x56>
2ffeb6cc:	f06f 010e 	mvn.w	r1, #14
2ffeb6d0:	e7dc      	b.n	2ffeb68c <initialize_pmic_i2c+0x10>
2ffeb6d2:	9801      	ldr	r0, [sp, #4]
2ffeb6d4:	4621      	mov	r1, r4
2ffeb6d6:	f004 f9a4 	bl	2ffefa22 <fdt_parent_offset>
2ffeb6da:	6028      	str	r0, [r5, #0]
2ffeb6dc:	2800      	cmp	r0, #0
2ffeb6de:	dbd3      	blt.n	2ffeb688 <initialize_pmic_i2c+0xc>
2ffeb6e0:	6829      	ldr	r1, [r5, #0]
2ffeb6e2:	a802      	add	r0, sp, #8
2ffeb6e4:	f7fe f9ee 	bl	2ffe9ac4 <dt_fill_device_info>
2ffeb6e8:	9b02      	ldr	r3, [sp, #8]
2ffeb6ea:	2b00      	cmp	r3, #0
2ffeb6ec:	d0cc      	beq.n	2ffeb688 <initialize_pmic_i2c+0xc>
2ffeb6ee:	6829      	ldr	r1, [r5, #0]
2ffeb6f0:	2302      	movs	r3, #2
2ffeb6f2:	9801      	ldr	r0, [sp, #4]
2ffeb6f4:	aa06      	add	r2, sp, #24
2ffeb6f6:	9305      	str	r3, [sp, #20]
2ffeb6f8:	f7ff fc38 	bl	2ffeaf6c <stm32_i2c_get_setup_from_fdt>
2ffeb6fc:	1e01      	subs	r1, r0, #0
2ffeb6fe:	dbc5      	blt.n	2ffeb68c <initialize_pmic_i2c+0x10>
2ffeb700:	d003      	beq.n	2ffeb70a <initialize_pmic_i2c+0x8e>
2ffeb702:	2500      	movs	r5, #0
2ffeb704:	4628      	mov	r0, r5
2ffeb706:	b012      	add	sp, #72	@ 0x48
2ffeb708:	bd70      	pop	{r4, r5, r6, pc}
2ffeb70a:	4c1c      	ldr	r4, [pc, #112]	@ (2ffeb77c <initialize_pmic_i2c+0x100>)
2ffeb70c:	2501      	movs	r5, #1
2ffeb70e:	9b02      	ldr	r3, [sp, #8]
2ffeb710:	4e19      	ldr	r6, [pc, #100]	@ (2ffeb778 <initialize_pmic_i2c+0xfc>)
2ffeb712:	4620      	mov	r0, r4
2ffeb714:	6023      	str	r3, [r4, #0]
2ffeb716:	9b05      	ldr	r3, [sp, #20]
2ffeb718:	6121      	str	r1, [r4, #16]
2ffeb71a:	6063      	str	r3, [r4, #4]
2ffeb71c:	9b03      	ldr	r3, [sp, #12]
2ffeb71e:	e9cd 1108 	strd	r1, r1, [sp, #32]
2ffeb722:	60a3      	str	r3, [r4, #8]
2ffeb724:	6833      	ldr	r3, [r6, #0]
2ffeb726:	e9cd 110a 	strd	r1, r1, [sp, #40]	@ 0x28
2ffeb72a:	910c      	str	r1, [sp, #48]	@ 0x30
2ffeb72c:	f88d 1044 	strb.w	r1, [sp, #68]	@ 0x44
2ffeb730:	a906      	add	r1, sp, #24
2ffeb732:	9306      	str	r3, [sp, #24]
2ffeb734:	9507      	str	r5, [sp, #28]
2ffeb736:	9510      	str	r5, [sp, #64]	@ 0x40
2ffeb738:	f7ff fc4a 	bl	2ffeafd0 <stm32_i2c_init>
2ffeb73c:	4602      	mov	r2, r0
2ffeb73e:	b120      	cbz	r0, 2ffeb74a <initialize_pmic_i2c+0xce>
2ffeb740:	6821      	ldr	r1, [r4, #0]
2ffeb742:	480f      	ldr	r0, [pc, #60]	@ (2ffeb780 <initialize_pmic_i2c+0x104>)
2ffeb744:	f7fc f916 	bl	2ffe7974 <tf_log>
2ffeb748:	e7a3      	b.n	2ffeb692 <initialize_pmic_i2c+0x16>
2ffeb74a:	8831      	ldrh	r1, [r6, #0]
2ffeb74c:	462a      	mov	r2, r5
2ffeb74e:	2319      	movs	r3, #25
2ffeb750:	4620      	mov	r0, r4
2ffeb752:	f7ff fe57 	bl	2ffeb404 <stm32_i2c_is_device_ready>
2ffeb756:	4605      	mov	r5, r0
2ffeb758:	b918      	cbnz	r0, 2ffeb762 <initialize_pmic_i2c+0xe6>
2ffeb75a:	480a      	ldr	r0, [pc, #40]	@ (2ffeb784 <initialize_pmic_i2c+0x108>)
2ffeb75c:	f7fc f90a 	bl	2ffe7974 <tf_log>
2ffeb760:	e797      	b.n	2ffeb692 <initialize_pmic_i2c+0x16>
2ffeb762:	8831      	ldrh	r1, [r6, #0]
2ffeb764:	4620      	mov	r0, r4
2ffeb766:	f000 fa25 	bl	2ffebbb4 <stpmic1_bind_i2c>
2ffeb76a:	e7cb      	b.n	2ffeb704 <initialize_pmic_i2c+0x88>
2ffeb76c:	2fff371a 	.word	0x2fff371a
2ffeb770:	2fff44d8 	.word	0x2fff44d8
2ffeb774:	2fff1aa7 	.word	0x2fff1aa7
2ffeb778:	2fff592c 	.word	0x2fff592c
2ffeb77c:	2fff5930 	.word	0x2fff5930
2ffeb780:	2fff3738 	.word	0x2fff3738
2ffeb784:	2fff3758 	.word	0x2fff3758

2ffeb788 <initialize_pmic>:
2ffeb788:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffeb78c:	f7ff ff76 	bl	2ffeb67c <initialize_pmic_i2c>
2ffeb790:	b1f0      	cbz	r0, 2ffeb7d0 <initialize_pmic+0x48>
2ffeb792:	f7ff ff59 	bl	2ffeb648 <dt_pmic_status>
2ffeb796:	a801      	add	r0, sp, #4
2ffeb798:	f7fe f930 	bl	2ffe99fc <fdt_get_address>
2ffeb79c:	2800      	cmp	r0, #0
2ffeb79e:	d043      	beq.n	2ffeb828 <initialize_pmic+0xa0>
2ffeb7a0:	9801      	ldr	r0, [sp, #4]
2ffeb7a2:	f7ff ff3f 	bl	2ffeb624 <dt_get_pmic_node>
2ffeb7a6:	1e01      	subs	r1, r0, #0
2ffeb7a8:	db3e      	blt.n	2ffeb828 <initialize_pmic+0xa0>
2ffeb7aa:	4a2c      	ldr	r2, [pc, #176]	@ (2ffeb85c <initialize_pmic+0xd4>)
2ffeb7ac:	9801      	ldr	r0, [sp, #4]
2ffeb7ae:	f004 f806 	bl	2ffef7be <fdt_subnode_offset>
2ffeb7b2:	1e01      	subs	r1, r0, #0
2ffeb7b4:	db38      	blt.n	2ffeb828 <initialize_pmic+0xa0>
2ffeb7b6:	9801      	ldr	r0, [sp, #4]
2ffeb7b8:	f04f 0814 	mov.w	r8, #20
2ffeb7bc:	4f28      	ldr	r7, [pc, #160]	@ (2ffeb860 <initialize_pmic+0xd8>)
2ffeb7be:	f003 ff12 	bl	2ffef5e6 <fdt_first_subnode>
2ffeb7c2:	4604      	mov	r4, r0
2ffeb7c4:	2c00      	cmp	r4, #0
2ffeb7c6:	da06      	bge.n	2ffeb7d6 <initialize_pmic+0x4e>
2ffeb7c8:	f003 f9e0 	bl	2ffeeb8c <stpmic1_powerctrl_on>
2ffeb7cc:	2800      	cmp	r0, #0
2ffeb7ce:	db2b      	blt.n	2ffeb828 <initialize_pmic+0xa0>
2ffeb7d0:	b002      	add	sp, #8
2ffeb7d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffeb7d6:	9801      	ldr	r0, [sp, #4]
2ffeb7d8:	2200      	movs	r2, #0
2ffeb7da:	4621      	mov	r1, r4
2ffeb7dc:	2500      	movs	r5, #0
2ffeb7de:	f003 ff80 	bl	2ffef6e2 <fdt_get_name>
2ffeb7e2:	4606      	mov	r6, r0
2ffeb7e4:	fb08 f305 	mul.w	r3, r8, r5
2ffeb7e8:	4631      	mov	r1, r6
2ffeb7ea:	f857 9003 	ldr.w	r9, [r7, r3]
2ffeb7ee:	eb03 0a07 	add.w	sl, r3, r7
2ffeb7f2:	4648      	mov	r0, r9
2ffeb7f4:	f004 fae0 	bl	2ffefdb8 <strcmp>
2ffeb7f8:	b138      	cbz	r0, 2ffeb80a <initialize_pmic+0x82>
2ffeb7fa:	3501      	adds	r5, #1
2ffeb7fc:	2d0e      	cmp	r5, #14
2ffeb7fe:	d1f1      	bne.n	2ffeb7e4 <initialize_pmic+0x5c>
2ffeb800:	4818      	ldr	r0, [pc, #96]	@ (2ffeb864 <initialize_pmic+0xdc>)
2ffeb802:	f44f 71d1 	mov.w	r1, #418	@ 0x1a2
2ffeb806:	f002 f875 	bl	2ffed8f4 <__assert>
2ffeb80a:	4621      	mov	r1, r4
2ffeb80c:	4650      	mov	r0, sl
2ffeb80e:	f7fd ffb5 	bl	2ffe977c <regulator_register>
2ffeb812:	4605      	mov	r5, r0
2ffeb814:	b160      	cbz	r0, 2ffeb830 <initialize_pmic+0xa8>
2ffeb816:	4914      	ldr	r1, [pc, #80]	@ (2ffeb868 <initialize_pmic+0xe0>)
2ffeb818:	4633      	mov	r3, r6
2ffeb81a:	4814      	ldr	r0, [pc, #80]	@ (2ffeb86c <initialize_pmic+0xe4>)
2ffeb81c:	f240 12a7 	movw	r2, #423	@ 0x1a7
2ffeb820:	f7fc f8a8 	bl	2ffe7974 <tf_log>
2ffeb824:	2d00      	cmp	r5, #0
2ffeb826:	dacf      	bge.n	2ffeb7c8 <initialize_pmic+0x40>
2ffeb828:	f7fc f940 	bl	2ffe7aac <console_flush>
2ffeb82c:	f7f8 ee02 	blx	2ffe4434 <do_panic>
2ffeb830:	4a0f      	ldr	r2, [pc, #60]	@ (2ffeb870 <initialize_pmic+0xe8>)
2ffeb832:	4603      	mov	r3, r0
2ffeb834:	9801      	ldr	r0, [sp, #4]
2ffeb836:	4621      	mov	r1, r4
2ffeb838:	f004 f846 	bl	2ffef8c8 <fdt_getprop>
2ffeb83c:	b140      	cbz	r0, 2ffeb850 <initialize_pmic+0xc8>
2ffeb83e:	4648      	mov	r0, r9
2ffeb840:	f003 f9d4 	bl	2ffeebec <stpmic1_regulator_mask_reset_set>
2ffeb844:	4605      	mov	r5, r0
2ffeb846:	b118      	cbz	r0, 2ffeb850 <initialize_pmic+0xc8>
2ffeb848:	480a      	ldr	r0, [pc, #40]	@ (2ffeb874 <initialize_pmic+0xec>)
2ffeb84a:	f7fc f893 	bl	2ffe7974 <tf_log>
2ffeb84e:	e7e9      	b.n	2ffeb824 <initialize_pmic+0x9c>
2ffeb850:	9801      	ldr	r0, [sp, #4]
2ffeb852:	4621      	mov	r1, r4
2ffeb854:	f003 feda 	bl	2ffef60c <fdt_next_subnode>
2ffeb858:	4604      	mov	r4, r0
2ffeb85a:	e7b3      	b.n	2ffeb7c4 <initialize_pmic+0x3c>
2ffeb85c:	2fff376f 	.word	0x2fff376f
2ffeb860:	2fff00c8 	.word	0x2fff00c8
2ffeb864:	2fff377a 	.word	0x2fff377a
2ffeb868:	2fff37fc 	.word	0x2fff37fc
2ffeb86c:	2fff3145 	.word	0x2fff3145
2ffeb870:	2fff3799 	.word	0x2fff3799
2ffeb874:	2fff37a7 	.word	0x2fff37a7

2ffeb878 <print_pmic_info_and_debug>:
2ffeb878:	b507      	push	{r0, r1, r2, lr}
2ffeb87a:	a801      	add	r0, sp, #4
2ffeb87c:	f003 f9da 	bl	2ffeec34 <stpmic1_get_version>
2ffeb880:	b130      	cbz	r0, 2ffeb890 <print_pmic_info_and_debug+0x18>
2ffeb882:	4807      	ldr	r0, [pc, #28]	@ (2ffeb8a0 <print_pmic_info_and_debug+0x28>)
2ffeb884:	f7fc f876 	bl	2ffe7974 <tf_log>
2ffeb888:	f7fc f910 	bl	2ffe7aac <console_flush>
2ffeb88c:	f7f8 edd2 	blx	2ffe4434 <do_panic>
2ffeb890:	9901      	ldr	r1, [sp, #4]
2ffeb892:	4804      	ldr	r0, [pc, #16]	@ (2ffeb8a4 <print_pmic_info_and_debug+0x2c>)
2ffeb894:	f7fc f86e 	bl	2ffe7974 <tf_log>
2ffeb898:	b003      	add	sp, #12
2ffeb89a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffeb89e:	bf00      	nop
2ffeb8a0:	2fff37bf 	.word	0x2fff37bf
2ffeb8a4:	2fff37d7 	.word	0x2fff37d7

2ffeb8a8 <pmic_voltages_init>:
2ffeb8a8:	b538      	push	{r3, r4, r5, lr}
2ffeb8aa:	480c      	ldr	r0, [pc, #48]	@ (2ffeb8dc <pmic_voltages_init+0x34>)
2ffeb8ac:	f7fd fe12 	bl	2ffe94d4 <regulator_get_by_name>
2ffeb8b0:	4605      	mov	r5, r0
2ffeb8b2:	b910      	cbnz	r0, 2ffeb8ba <pmic_voltages_init+0x12>
2ffeb8b4:	f06f 0001 	mvn.w	r0, #1
2ffeb8b8:	bd38      	pop	{r3, r4, r5, pc}
2ffeb8ba:	4809      	ldr	r0, [pc, #36]	@ (2ffeb8e0 <pmic_voltages_init+0x38>)
2ffeb8bc:	f7fd fe0a 	bl	2ffe94d4 <regulator_get_by_name>
2ffeb8c0:	4604      	mov	r4, r0
2ffeb8c2:	2800      	cmp	r0, #0
2ffeb8c4:	d0f6      	beq.n	2ffeb8b4 <pmic_voltages_init+0xc>
2ffeb8c6:	4628      	mov	r0, r5
2ffeb8c8:	f002 ff2e 	bl	2ffee728 <regulator_set_min_voltage>
2ffeb8cc:	2800      	cmp	r0, #0
2ffeb8ce:	d1f3      	bne.n	2ffeb8b8 <pmic_voltages_init+0x10>
2ffeb8d0:	4620      	mov	r0, r4
2ffeb8d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffeb8d6:	f002 bf27 	b.w	2ffee728 <regulator_set_min_voltage>
2ffeb8da:	bf00      	nop
2ffeb8dc:	2fff37f0 	.word	0x2fff37f0
2ffeb8e0:	2fff37f6 	.word	0x2fff37f6

2ffeb8e4 <get_regulator_data>:
2ffeb8e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffeb8e8:	4605      	mov	r5, r0
2ffeb8ea:	4e0e      	ldr	r6, [pc, #56]	@ (2ffeb924 <get_regulator_data+0x40>)
2ffeb8ec:	2400      	movs	r4, #0
2ffeb8ee:	f04f 0914 	mov.w	r9, #20
2ffeb8f2:	fb09 f304 	mul.w	r3, r9, r4
2ffeb8f6:	58f7      	ldr	r7, [r6, r3]
2ffeb8f8:	eb03 0806 	add.w	r8, r3, r6
2ffeb8fc:	4638      	mov	r0, r7
2ffeb8fe:	f004 fa7b 	bl	2ffefdf8 <strlen>
2ffeb902:	4602      	mov	r2, r0
2ffeb904:	4639      	mov	r1, r7
2ffeb906:	4628      	mov	r0, r5
2ffeb908:	f004 fa7e 	bl	2ffefe08 <strncmp>
2ffeb90c:	b130      	cbz	r0, 2ffeb91c <get_regulator_data+0x38>
2ffeb90e:	3401      	adds	r4, #1
2ffeb910:	2c0e      	cmp	r4, #14
2ffeb912:	d1ee      	bne.n	2ffeb8f2 <get_regulator_data+0xe>
2ffeb914:	f7fc f8ca 	bl	2ffe7aac <console_flush>
2ffeb918:	f7f8 ed8c 	blx	2ffe4434 <do_panic>
2ffeb91c:	4640      	mov	r0, r8
2ffeb91e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffeb922:	bf00      	nop
2ffeb924:	2fff0200 	.word	0x2fff0200

2ffeb928 <stpmic1_regulator_levels_mv>:
2ffeb928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeb92a:	4607      	mov	r7, r0
2ffeb92c:	460e      	mov	r6, r1
2ffeb92e:	4615      	mov	r5, r2
2ffeb930:	f7ff ffd8 	bl	2ffeb8e4 <get_regulator_data>
2ffeb934:	4909      	ldr	r1, [pc, #36]	@ (2ffeb95c <stpmic1_regulator_levels_mv+0x34>)
2ffeb936:	4604      	mov	r4, r0
2ffeb938:	2205      	movs	r2, #5
2ffeb93a:	4638      	mov	r0, r7
2ffeb93c:	f004 fa64 	bl	2ffefe08 <strncmp>
2ffeb940:	b940      	cbnz	r0, 2ffeb954 <stpmic1_regulator_levels_mv+0x2c>
2ffeb942:	4b07      	ldr	r3, [pc, #28]	@ (2ffeb960 <stpmic1_regulator_levels_mv+0x38>)
2ffeb944:	781b      	ldrb	r3, [r3, #0]
2ffeb946:	b12b      	cbz	r3, 2ffeb954 <stpmic1_regulator_levels_mv+0x2c>
2ffeb948:	2301      	movs	r3, #1
2ffeb94a:	602b      	str	r3, [r5, #0]
2ffeb94c:	4b05      	ldr	r3, [pc, #20]	@ (2ffeb964 <stpmic1_regulator_levels_mv+0x3c>)
2ffeb94e:	6033      	str	r3, [r6, #0]
2ffeb950:	2000      	movs	r0, #0
2ffeb952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeb954:	7a23      	ldrb	r3, [r4, #8]
2ffeb956:	602b      	str	r3, [r5, #0]
2ffeb958:	6863      	ldr	r3, [r4, #4]
2ffeb95a:	e7f8      	b.n	2ffeb94e <stpmic1_regulator_levels_mv+0x26>
2ffeb95c:	2fff381a 	.word	0x2fff381a
2ffeb960:	2fff5c1d 	.word	0x2fff5c1d
2ffeb964:	2fff0e4a 	.word	0x2fff0e4a

2ffeb968 <stpmic1_register_read>:
2ffeb968:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffeb96a:	2319      	movs	r3, #25
2ffeb96c:	9302      	str	r3, [sp, #8]
2ffeb96e:	2301      	movs	r3, #1
2ffeb970:	e9cd 1300 	strd	r1, r3, [sp]
2ffeb974:	4904      	ldr	r1, [pc, #16]	@ (2ffeb988 <stpmic1_register_read+0x20>)
2ffeb976:	4602      	mov	r2, r0
2ffeb978:	4804      	ldr	r0, [pc, #16]	@ (2ffeb98c <stpmic1_register_read+0x24>)
2ffeb97a:	8809      	ldrh	r1, [r1, #0]
2ffeb97c:	6800      	ldr	r0, [r0, #0]
2ffeb97e:	f003 f88d 	bl	2ffeea9c <stm32_i2c_mem_read>
2ffeb982:	b005      	add	sp, #20
2ffeb984:	f85d fb04 	ldr.w	pc, [sp], #4
2ffeb988:	2fff5ba6 	.word	0x2fff5ba6
2ffeb98c:	2fff5954 	.word	0x2fff5954

2ffeb990 <stpmic1_regulator_voltage_get>:
2ffeb990:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffeb992:	4604      	mov	r4, r0
2ffeb994:	f7ff ffa6 	bl	2ffeb8e4 <get_regulator_data>
2ffeb998:	491c      	ldr	r1, [pc, #112]	@ (2ffeba0c <stpmic1_regulator_voltage_get+0x7c>)
2ffeb99a:	4605      	mov	r5, r0
2ffeb99c:	2205      	movs	r2, #5
2ffeb99e:	4620      	mov	r0, r4
2ffeb9a0:	f004 fa32 	bl	2ffefe08 <strncmp>
2ffeb9a4:	b928      	cbnz	r0, 2ffeb9b2 <stpmic1_regulator_voltage_get+0x22>
2ffeb9a6:	4b1a      	ldr	r3, [pc, #104]	@ (2ffeba10 <stpmic1_regulator_voltage_get+0x80>)
2ffeb9a8:	781b      	ldrb	r3, [r3, #0]
2ffeb9aa:	b113      	cbz	r3, 2ffeb9b2 <stpmic1_regulator_voltage_get+0x22>
2ffeb9ac:	2000      	movs	r0, #0
2ffeb9ae:	b003      	add	sp, #12
2ffeb9b0:	bd30      	pop	{r4, r5, pc}
2ffeb9b2:	4918      	ldr	r1, [pc, #96]	@ (2ffeba14 <stpmic1_regulator_voltage_get+0x84>)
2ffeb9b4:	2204      	movs	r2, #4
2ffeb9b6:	4620      	mov	r0, r4
2ffeb9b8:	f004 fa26 	bl	2ffefe08 <strncmp>
2ffeb9bc:	b318      	cbz	r0, 2ffeba06 <stpmic1_regulator_voltage_get+0x76>
2ffeb9be:	4916      	ldr	r1, [pc, #88]	@ (2ffeba18 <stpmic1_regulator_voltage_get+0x88>)
2ffeb9c0:	2203      	movs	r2, #3
2ffeb9c2:	4620      	mov	r0, r4
2ffeb9c4:	f004 fa20 	bl	2ffefe08 <strncmp>
2ffeb9c8:	2800      	cmp	r0, #0
2ffeb9ca:	d1ef      	bne.n	2ffeb9ac <stpmic1_regulator_voltage_get+0x1c>
2ffeb9cc:	4913      	ldr	r1, [pc, #76]	@ (2ffeba1c <stpmic1_regulator_voltage_get+0x8c>)
2ffeb9ce:	2205      	movs	r2, #5
2ffeb9d0:	4620      	mov	r0, r4
2ffeb9d2:	f004 fa19 	bl	2ffefe08 <strncmp>
2ffeb9d6:	2800      	cmp	r0, #0
2ffeb9d8:	d0e8      	beq.n	2ffeb9ac <stpmic1_regulator_voltage_get+0x1c>
2ffeb9da:	247c      	movs	r4, #124	@ 0x7c
2ffeb9dc:	7a68      	ldrb	r0, [r5, #9]
2ffeb9de:	f10d 0107 	add.w	r1, sp, #7
2ffeb9e2:	f7ff ffc1 	bl	2ffeb968 <stpmic1_register_read>
2ffeb9e6:	2800      	cmp	r0, #0
2ffeb9e8:	dbe1      	blt.n	2ffeb9ae <stpmic1_regulator_voltage_get+0x1e>
2ffeb9ea:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffeb9ee:	401c      	ands	r4, r3
2ffeb9f0:	7a2b      	ldrb	r3, [r5, #8]
2ffeb9f2:	08a2      	lsrs	r2, r4, #2
2ffeb9f4:	ebb3 0f94 	cmp.w	r3, r4, lsr #2
2ffeb9f8:	bf32      	itee	cc
2ffeb9fa:	f06f 0021 	mvncc.w	r0, #33	@ 0x21
2ffeb9fe:	686b      	ldrcs	r3, [r5, #4]
2ffeba00:	f833 0012 	ldrhcs.w	r0, [r3, r2, lsl #1]
2ffeba04:	e7d3      	b.n	2ffeb9ae <stpmic1_regulator_voltage_get+0x1e>
2ffeba06:	24fc      	movs	r4, #252	@ 0xfc
2ffeba08:	e7e8      	b.n	2ffeb9dc <stpmic1_regulator_voltage_get+0x4c>
2ffeba0a:	bf00      	nop
2ffeba0c:	2fff381a 	.word	0x2fff381a
2ffeba10:	2fff5c1d 	.word	0x2fff5c1d
2ffeba14:	2fff3844 	.word	0x2fff3844
2ffeba18:	2fff3849 	.word	0x2fff3849
2ffeba1c:	2fff381f 	.word	0x2fff381f

2ffeba20 <stpmic1_register_write>:
2ffeba20:	b530      	push	{r4, r5, lr}
2ffeba22:	b089      	sub	sp, #36	@ 0x24
2ffeba24:	f10d 0217 	add.w	r2, sp, #23
2ffeba28:	2319      	movs	r3, #25
2ffeba2a:	9200      	str	r2, [sp, #0]
2ffeba2c:	4604      	mov	r4, r0
2ffeba2e:	f88d 1017 	strb.w	r1, [sp, #23]
2ffeba32:	4602      	mov	r2, r0
2ffeba34:	4910      	ldr	r1, [pc, #64]	@ (2ffeba78 <stpmic1_register_write+0x58>)
2ffeba36:	4811      	ldr	r0, [pc, #68]	@ (2ffeba7c <stpmic1_register_write+0x5c>)
2ffeba38:	9302      	str	r3, [sp, #8]
2ffeba3a:	2301      	movs	r3, #1
2ffeba3c:	9301      	str	r3, [sp, #4]
2ffeba3e:	8809      	ldrh	r1, [r1, #0]
2ffeba40:	6800      	ldr	r0, [r0, #0]
2ffeba42:	f003 f81d 	bl	2ffeea80 <stm32_i2c_mem_write>
2ffeba46:	4605      	mov	r5, r0
2ffeba48:	b990      	cbnz	r0, 2ffeba70 <stpmic1_register_write+0x50>
2ffeba4a:	2c1b      	cmp	r4, #27
2ffeba4c:	d010      	beq.n	2ffeba70 <stpmic1_register_write+0x50>
2ffeba4e:	2c40      	cmp	r4, #64	@ 0x40
2ffeba50:	d80e      	bhi.n	2ffeba70 <stpmic1_register_write+0x50>
2ffeba52:	f10d 011f 	add.w	r1, sp, #31
2ffeba56:	4620      	mov	r0, r4
2ffeba58:	f7ff ff86 	bl	2ffeb968 <stpmic1_register_read>
2ffeba5c:	b938      	cbnz	r0, 2ffeba6e <stpmic1_register_write+0x4e>
2ffeba5e:	f89d 201f 	ldrb.w	r2, [sp, #31]
2ffeba62:	f89d 3017 	ldrb.w	r3, [sp, #23]
2ffeba66:	429a      	cmp	r2, r3
2ffeba68:	d002      	beq.n	2ffeba70 <stpmic1_register_write+0x50>
2ffeba6a:	f06f 0004 	mvn.w	r0, #4
2ffeba6e:	4605      	mov	r5, r0
2ffeba70:	4628      	mov	r0, r5
2ffeba72:	b009      	add	sp, #36	@ 0x24
2ffeba74:	bd30      	pop	{r4, r5, pc}
2ffeba76:	bf00      	nop
2ffeba78:	2fff5ba6 	.word	0x2fff5ba6
2ffeba7c:	2fff5954 	.word	0x2fff5954

2ffeba80 <stpmic1_regulator_voltage_set>:
2ffeba80:	b570      	push	{r4, r5, r6, lr}
2ffeba82:	4604      	mov	r4, r0
2ffeba84:	460e      	mov	r6, r1
2ffeba86:	f7ff ff2d 	bl	2ffeb8e4 <get_regulator_data>
2ffeba8a:	7a02      	ldrb	r2, [r0, #8]
2ffeba8c:	2300      	movs	r3, #0
2ffeba8e:	b2dd      	uxtb	r5, r3
2ffeba90:	4295      	cmp	r5, r2
2ffeba92:	d303      	bcc.n	2ffeba9c <stpmic1_regulator_voltage_set+0x1c>
2ffeba94:	f7fc f80a 	bl	2ffe7aac <console_flush>
2ffeba98:	f7f8 eccc 	blx	2ffe4434 <do_panic>
2ffeba9c:	6841      	ldr	r1, [r0, #4]
2ffeba9e:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
2ffebaa2:	3301      	adds	r3, #1
2ffebaa4:	428e      	cmp	r6, r1
2ffebaa6:	d1f2      	bne.n	2ffeba8e <stpmic1_regulator_voltage_set+0xe>
2ffebaa8:	4620      	mov	r0, r4
2ffebaaa:	f7ff ff1b 	bl	2ffeb8e4 <get_regulator_data>
2ffebaae:	4915      	ldr	r1, [pc, #84]	@ (2ffebb04 <stpmic1_regulator_voltage_set+0x84>)
2ffebab0:	4606      	mov	r6, r0
2ffebab2:	2205      	movs	r2, #5
2ffebab4:	4620      	mov	r0, r4
2ffebab6:	f004 f9a7 	bl	2ffefe08 <strncmp>
2ffebaba:	b1d0      	cbz	r0, 2ffebaf2 <stpmic1_regulator_voltage_set+0x72>
2ffebabc:	4912      	ldr	r1, [pc, #72]	@ (2ffebb08 <stpmic1_regulator_voltage_set+0x88>)
2ffebabe:	2204      	movs	r2, #4
2ffebac0:	4620      	mov	r0, r4
2ffebac2:	f004 f9a1 	bl	2ffefe08 <strncmp>
2ffebac6:	b1d0      	cbz	r0, 2ffebafe <stpmic1_regulator_voltage_set+0x7e>
2ffebac8:	4910      	ldr	r1, [pc, #64]	@ (2ffebb0c <stpmic1_regulator_voltage_set+0x8c>)
2ffebaca:	2203      	movs	r2, #3
2ffebacc:	4620      	mov	r0, r4
2ffebace:	f004 f99b 	bl	2ffefe08 <strncmp>
2ffebad2:	b990      	cbnz	r0, 2ffebafa <stpmic1_regulator_voltage_set+0x7a>
2ffebad4:	490e      	ldr	r1, [pc, #56]	@ (2ffebb10 <stpmic1_regulator_voltage_set+0x90>)
2ffebad6:	2205      	movs	r2, #5
2ffebad8:	4620      	mov	r0, r4
2ffebada:	f004 f995 	bl	2ffefe08 <strncmp>
2ffebade:	b160      	cbz	r0, 2ffebafa <stpmic1_regulator_voltage_set+0x7a>
2ffebae0:	227c      	movs	r2, #124	@ 0x7c
2ffebae2:	00a9      	lsls	r1, r5, #2
2ffebae4:	7a70      	ldrb	r0, [r6, #9]
2ffebae6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
2ffebaea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffebaee:	f003 b836 	b.w	2ffeeb5e <stpmic1_register_update>
2ffebaf2:	4b08      	ldr	r3, [pc, #32]	@ (2ffebb14 <stpmic1_regulator_voltage_set+0x94>)
2ffebaf4:	781b      	ldrb	r3, [r3, #0]
2ffebaf6:	2b00      	cmp	r3, #0
2ffebaf8:	d0e0      	beq.n	2ffebabc <stpmic1_regulator_voltage_set+0x3c>
2ffebafa:	2000      	movs	r0, #0
2ffebafc:	bd70      	pop	{r4, r5, r6, pc}
2ffebafe:	22fc      	movs	r2, #252	@ 0xfc
2ffebb00:	e7ef      	b.n	2ffebae2 <stpmic1_regulator_voltage_set+0x62>
2ffebb02:	bf00      	nop
2ffebb04:	2fff381a 	.word	0x2fff381a
2ffebb08:	2fff3844 	.word	0x2fff3844
2ffebb0c:	2fff3849 	.word	0x2fff3849
2ffebb10:	2fff381f 	.word	0x2fff381f
2ffebb14:	2fff5c1d 	.word	0x2fff5c1d

2ffebb18 <stpmic1_regulator_sink_mode_set>:
2ffebb18:	b508      	push	{r3, lr}
2ffebb1a:	2205      	movs	r2, #5
2ffebb1c:	4908      	ldr	r1, [pc, #32]	@ (2ffebb40 <stpmic1_regulator_sink_mode_set+0x28>)
2ffebb1e:	f004 f973 	bl	2ffefe08 <strncmp>
2ffebb22:	b948      	cbnz	r0, 2ffebb38 <stpmic1_regulator_sink_mode_set+0x20>
2ffebb24:	4b07      	ldr	r3, [pc, #28]	@ (2ffebb44 <stpmic1_regulator_sink_mode_set+0x2c>)
2ffebb26:	2201      	movs	r2, #1
2ffebb28:	217c      	movs	r1, #124	@ 0x7c
2ffebb2a:	2027      	movs	r0, #39	@ 0x27
2ffebb2c:	701a      	strb	r2, [r3, #0]
2ffebb2e:	22fc      	movs	r2, #252	@ 0xfc
2ffebb30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffebb34:	f003 b813 	b.w	2ffeeb5e <stpmic1_register_update>
2ffebb38:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffebb3c:	bd08      	pop	{r3, pc}
2ffebb3e:	bf00      	nop
2ffebb40:	2fff381a 	.word	0x2fff381a
2ffebb44:	2fff5c1d 	.word	0x2fff5c1d

2ffebb48 <stpmic1_regulator_bypass_mode_set>:
2ffebb48:	b508      	push	{r3, lr}
2ffebb4a:	2205      	movs	r2, #5
2ffebb4c:	4908      	ldr	r1, [pc, #32]	@ (2ffebb70 <stpmic1_regulator_bypass_mode_set+0x28>)
2ffebb4e:	f004 f95b 	bl	2ffefe08 <strncmp>
2ffebb52:	b948      	cbnz	r0, 2ffebb68 <stpmic1_regulator_bypass_mode_set+0x20>
2ffebb54:	4b07      	ldr	r3, [pc, #28]	@ (2ffebb74 <stpmic1_regulator_bypass_mode_set+0x2c>)
2ffebb56:	2201      	movs	r2, #1
2ffebb58:	2180      	movs	r1, #128	@ 0x80
2ffebb5a:	2027      	movs	r0, #39	@ 0x27
2ffebb5c:	701a      	strb	r2, [r3, #0]
2ffebb5e:	22fc      	movs	r2, #252	@ 0xfc
2ffebb60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffebb64:	f002 bffb 	b.w	2ffeeb5e <stpmic1_register_update>
2ffebb68:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffebb6c:	bd08      	pop	{r3, pc}
2ffebb6e:	bf00      	nop
2ffebb70:	2fff381a 	.word	0x2fff381a
2ffebb74:	2fff5c1d 	.word	0x2fff5c1d

2ffebb78 <stpmic1_active_discharge_mode_set>:
2ffebb78:	b510      	push	{r4, lr}
2ffebb7a:	2208      	movs	r2, #8
2ffebb7c:	490b      	ldr	r1, [pc, #44]	@ (2ffebbac <stpmic1_active_discharge_mode_set+0x34>)
2ffebb7e:	4604      	mov	r4, r0
2ffebb80:	f004 f942 	bl	2ffefe08 <strncmp>
2ffebb84:	b930      	cbnz	r0, 2ffebb94 <stpmic1_active_discharge_mode_set+0x1c>
2ffebb86:	2210      	movs	r2, #16
2ffebb88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffebb8c:	4611      	mov	r1, r2
2ffebb8e:	2040      	movs	r0, #64	@ 0x40
2ffebb90:	f002 bfe5 	b.w	2ffeeb5e <stpmic1_register_update>
2ffebb94:	4906      	ldr	r1, [pc, #24]	@ (2ffebbb0 <stpmic1_active_discharge_mode_set+0x38>)
2ffebb96:	2208      	movs	r2, #8
2ffebb98:	4620      	mov	r0, r4
2ffebb9a:	f004 f935 	bl	2ffefe08 <strncmp>
2ffebb9e:	b908      	cbnz	r0, 2ffebba4 <stpmic1_active_discharge_mode_set+0x2c>
2ffebba0:	2220      	movs	r2, #32
2ffebba2:	e7f1      	b.n	2ffebb88 <stpmic1_active_discharge_mode_set+0x10>
2ffebba4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffebba8:	bd10      	pop	{r4, pc}
2ffebbaa:	bf00      	nop
2ffebbac:	2fff3834 	.word	0x2fff3834
2ffebbb0:	2fff383c 	.word	0x2fff383c

2ffebbb4 <stpmic1_bind_i2c>:
2ffebbb4:	4b02      	ldr	r3, [pc, #8]	@ (2ffebbc0 <stpmic1_bind_i2c+0xc>)
2ffebbb6:	6018      	str	r0, [r3, #0]
2ffebbb8:	4b02      	ldr	r3, [pc, #8]	@ (2ffebbc4 <stpmic1_bind_i2c+0x10>)
2ffebbba:	8019      	strh	r1, [r3, #0]
2ffebbbc:	4770      	bx	lr
2ffebbbe:	bf00      	nop
2ffebbc0:	2fff5954 	.word	0x2fff5954
2ffebbc4:	2fff5ba6 	.word	0x2fff5ba6

2ffebbc8 <stm32mp_reset_assert>:
2ffebbc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffebbcc:	4605      	mov	r5, r0
2ffebbce:	f000 031f 	and.w	r3, r0, #31
2ffebbd2:	2601      	movs	r6, #1
2ffebbd4:	096d      	lsrs	r5, r5, #5
2ffebbd6:	460c      	mov	r4, r1
2ffebbd8:	409e      	lsls	r6, r3
2ffebbda:	f002 fb85 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffebbde:	eb00 0785 	add.w	r7, r0, r5, lsl #2
2ffebbe2:	f840 6025 	str.w	r6, [r0, r5, lsl #2]
2ffebbe6:	b184      	cbz	r4, 2ffebc0a <stm32mp_reset_assert+0x42>
2ffebbe8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffebbec:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffebbf0:	4a0c      	ldr	r2, [pc, #48]	@ (2ffebc24 <stm32mp_reset_assert+0x5c>)
2ffebbf2:	2300      	movs	r3, #0
2ffebbf4:	fba4 0100 	umull	r0, r1, r4, r0
2ffebbf8:	4645      	mov	r5, r8
2ffebbfa:	f001 ed18 	blx	2ffed62c <__aeabi_uldivmod>
2ffebbfe:	1940      	adds	r0, r0, r5
2ffebc00:	eb41 0109 	adc.w	r1, r1, r9
2ffebc04:	683b      	ldr	r3, [r7, #0]
2ffebc06:	421e      	tst	r6, r3
2ffebc08:	d002      	beq.n	2ffebc10 <stm32mp_reset_assert+0x48>
2ffebc0a:	2000      	movs	r0, #0
2ffebc0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffebc10:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffebc14:	4290      	cmp	r0, r2
2ffebc16:	eb71 0303 	sbcs.w	r3, r1, r3
2ffebc1a:	d2f3      	bcs.n	2ffebc04 <stm32mp_reset_assert+0x3c>
2ffebc1c:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffebc20:	e7f4      	b.n	2ffebc0c <stm32mp_reset_assert+0x44>
2ffebc22:	bf00      	nop
2ffebc24:	000f4240 	.word	0x000f4240

2ffebc28 <stm32mp_reset_deassert>:
2ffebc28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffebc2c:	4605      	mov	r5, r0
2ffebc2e:	f000 031f 	and.w	r3, r0, #31
2ffebc32:	2601      	movs	r6, #1
2ffebc34:	096d      	lsrs	r5, r5, #5
2ffebc36:	460c      	mov	r4, r1
2ffebc38:	409e      	lsls	r6, r3
2ffebc3a:	3501      	adds	r5, #1
2ffebc3c:	f002 fb54 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffebc40:	eb00 0785 	add.w	r7, r0, r5, lsl #2
2ffebc44:	f840 6025 	str.w	r6, [r0, r5, lsl #2]
2ffebc48:	b184      	cbz	r4, 2ffebc6c <stm32mp_reset_deassert+0x44>
2ffebc4a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffebc4e:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffebc52:	4a0c      	ldr	r2, [pc, #48]	@ (2ffebc84 <stm32mp_reset_deassert+0x5c>)
2ffebc54:	2300      	movs	r3, #0
2ffebc56:	fba4 0100 	umull	r0, r1, r4, r0
2ffebc5a:	4645      	mov	r5, r8
2ffebc5c:	f001 ece6 	blx	2ffed62c <__aeabi_uldivmod>
2ffebc60:	1940      	adds	r0, r0, r5
2ffebc62:	eb41 0109 	adc.w	r1, r1, r9
2ffebc66:	683c      	ldr	r4, [r7, #0]
2ffebc68:	4034      	ands	r4, r6
2ffebc6a:	d102      	bne.n	2ffebc72 <stm32mp_reset_deassert+0x4a>
2ffebc6c:	4620      	mov	r0, r4
2ffebc6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffebc72:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffebc76:	4290      	cmp	r0, r2
2ffebc78:	eb71 0303 	sbcs.w	r3, r1, r3
2ffebc7c:	d2f3      	bcs.n	2ffebc66 <stm32mp_reset_deassert+0x3e>
2ffebc7e:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffebc82:	e7f4      	b.n	2ffebc6e <stm32mp_reset_deassert+0x46>
2ffebc84:	000f4240 	.word	0x000f4240

2ffebc88 <stm32_pm_get_optee_ep>:
2ffebc88:	b508      	push	{r3, lr}
2ffebc8a:	f04f 43a8 	mov.w	r3, #1409286144	@ 0x54000000
2ffebc8e:	681b      	ldr	r3, [r3, #0]
2ffebc90:	0c1a      	lsrs	r2, r3, #16
2ffebc92:	0412      	lsls	r2, r2, #16
2ffebc94:	f5b2 3f00 	cmp.w	r2, #131072	@ 0x20000
2ffebc98:	d004      	beq.n	2ffebca4 <stm32_pm_get_optee_ep+0x1c>
2ffebc9a:	4a0a      	ldr	r2, [pc, #40]	@ (2ffebcc4 <stm32_pm_get_optee_ep+0x3c>)
2ffebc9c:	401a      	ands	r2, r3
2ffebc9e:	f5b2 3f80 	cmp.w	r2, #65536	@ 0x10000
2ffebca2:	d106      	bne.n	2ffebcb2 <stm32_pm_get_optee_ep+0x2a>
2ffebca4:	b29b      	uxth	r3, r3
2ffebca6:	2b40      	cmp	r3, #64	@ 0x40
2ffebca8:	d007      	beq.n	2ffebcba <stm32_pm_get_optee_ep+0x32>
2ffebcaa:	f7fb feff 	bl	2ffe7aac <console_flush>
2ffebcae:	f7f8 ebc2 	blx	2ffe4434 <do_panic>
2ffebcb2:	4805      	ldr	r0, [pc, #20]	@ (2ffebcc8 <stm32_pm_get_optee_ep+0x40>)
2ffebcb4:	f7fb fe5e 	bl	2ffe7974 <tf_log>
2ffebcb8:	e7f7      	b.n	2ffebcaa <stm32_pm_get_optee_ep+0x22>
2ffebcba:	f04f 43a8 	mov.w	r3, #1409286144	@ 0x54000000
2ffebcbe:	6858      	ldr	r0, [r3, #4]
2ffebcc0:	bd08      	pop	{r3, pc}
2ffebcc2:	bf00      	nop
2ffebcc4:	fffd0000 	.word	0xfffd0000
2ffebcc8:	2fff384d 	.word	0x2fff384d

2ffebccc <stm32_context_save_bl2_param>:
2ffebccc:	b510      	push	{r4, lr}
2ffebcce:	f7fe faad 	bl	2ffea22c <stm32mp_bkpram_get_access>
2ffebcd2:	b1d8      	cbz	r0, 2ffebd0c <stm32_context_save_bl2_param+0x40>
2ffebcd4:	2044      	movs	r0, #68	@ 0x44
2ffebcd6:	f04f 44a8 	mov.w	r4, #1409286144	@ 0x54000000
2ffebcda:	f7fc fe41 	bl	2ffe8960 <clk_enable>
2ffebcde:	4b0c      	ldr	r3, [pc, #48]	@ (2ffebd10 <stm32_context_save_bl2_param+0x44>)
2ffebce0:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
2ffebce4:	4b0b      	ldr	r3, [pc, #44]	@ (2ffebd14 <stm32_context_save_bl2_param+0x48>)
2ffebce6:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
2ffebcea:	4b0b      	ldr	r3, [pc, #44]	@ (2ffebd18 <stm32_context_save_bl2_param+0x4c>)
2ffebcec:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
2ffebcf0:	4b0a      	ldr	r3, [pc, #40]	@ (2ffebd1c <stm32_context_save_bl2_param+0x50>)
2ffebcf2:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
2ffebcf6:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
2ffebcfa:	6023      	str	r3, [r4, #0]
2ffebcfc:	f002 fd5b 	bl	2ffee7b6 <ddr_get_io_calibration_val>
2ffebd00:	60a0      	str	r0, [r4, #8]
2ffebd02:	2044      	movs	r0, #68	@ 0x44
2ffebd04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffebd08:	f7fc be3c 	b.w	2ffe8984 <clk_disable>
2ffebd0c:	bd10      	pop	{r4, pc}
2ffebd0e:	bf00      	nop
2ffebd10:	2ffe4288 	.word	0x2ffe4288
2ffebd14:	2ffe4000 	.word	0x2ffe4000
2ffebd18:	2fff4000 	.word	0x2fff4000
2ffebd1c:	2fff8000 	.word	0x2fff8000

2ffebd20 <stm32_restore_ddr_training_area>:
2ffebd20:	b508      	push	{r3, lr}
2ffebd22:	2044      	movs	r0, #68	@ 0x44
2ffebd24:	f7fc fe1c 	bl	2ffe8960 <clk_enable>
2ffebd28:	4906      	ldr	r1, [pc, #24]	@ (2ffebd44 <stm32_restore_ddr_training_area+0x24>)
2ffebd2a:	2240      	movs	r2, #64	@ 0x40
2ffebd2c:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffebd30:	f003 ff35 	bl	2ffefb9e <memcpy>
2ffebd34:	f3bf 8f4f 	dsb	sy
2ffebd38:	2044      	movs	r0, #68	@ 0x44
2ffebd3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffebd3e:	f7fc be21 	b.w	2ffe8984 <clk_disable>
2ffebd42:	bf00      	nop
2ffebd44:	5400000c 	.word	0x5400000c

2ffebd48 <stm32mp1_pm_save_mce_region>:
2ffebd48:	b510      	push	{r4, lr}
2ffebd4a:	460c      	mov	r4, r1
2ffebd4c:	b118      	cbz	r0, 2ffebd56 <stm32mp1_pm_save_mce_region+0xe>
2ffebd4e:	f7fb fead 	bl	2ffe7aac <console_flush>
2ffebd52:	f7f8 eb70 	blx	2ffe4434 <do_panic>
2ffebd56:	f7fe fa69 	bl	2ffea22c <stm32mp_bkpram_get_access>
2ffebd5a:	b160      	cbz	r0, 2ffebd76 <stm32mp1_pm_save_mce_region+0x2e>
2ffebd5c:	2044      	movs	r0, #68	@ 0x44
2ffebd5e:	f7fc fdff 	bl	2ffe8960 <clk_enable>
2ffebd62:	4805      	ldr	r0, [pc, #20]	@ (2ffebd78 <stm32mp1_pm_save_mce_region+0x30>)
2ffebd64:	4621      	mov	r1, r4
2ffebd66:	220c      	movs	r2, #12
2ffebd68:	f003 ff19 	bl	2ffefb9e <memcpy>
2ffebd6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffebd70:	2044      	movs	r0, #68	@ 0x44
2ffebd72:	f7fc be07 	b.w	2ffe8984 <clk_disable>
2ffebd76:	bd10      	pop	{r4, pc}
2ffebd78:	540000ac 	.word	0x540000ac

2ffebd7c <enable_io_comp_cell_finish>:
2ffebd7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffebd7e:	4604      	mov	r4, r0
2ffebd80:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffebd84:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffebd88:	4a0f      	ldr	r2, [pc, #60]	@ (2ffebdc8 <enable_io_comp_cell_finish+0x4c>)
2ffebd8a:	f242 7010 	movw	r0, #10000	@ 0x2710
2ffebd8e:	2300      	movs	r3, #0
2ffebd90:	f104 44a0 	add.w	r4, r4, #1342177280	@ 0x50000000
2ffebd94:	fba1 0100 	umull	r0, r1, r1, r0
2ffebd98:	f504 3400 	add.w	r4, r4, #131072	@ 0x20000
2ffebd9c:	f001 ec46 	blx	2ffed62c <__aeabi_uldivmod>
2ffebda0:	1980      	adds	r0, r0, r6
2ffebda2:	eb41 0107 	adc.w	r1, r1, r7
2ffebda6:	6823      	ldr	r3, [r4, #0]
2ffebda8:	05db      	lsls	r3, r3, #23
2ffebdaa:	d408      	bmi.n	2ffebdbe <enable_io_comp_cell_finish+0x42>
2ffebdac:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffebdb0:	4290      	cmp	r0, r2
2ffebdb2:	eb71 0303 	sbcs.w	r3, r1, r3
2ffebdb6:	d2f6      	bcs.n	2ffebda6 <enable_io_comp_cell_finish+0x2a>
2ffebdb8:	4804      	ldr	r0, [pc, #16]	@ (2ffebdcc <enable_io_comp_cell_finish+0x50>)
2ffebdba:	f7fb fddb 	bl	2ffe7974 <tf_log>
2ffebdbe:	6823      	ldr	r3, [r4, #0]
2ffebdc0:	f023 0302 	bic.w	r3, r3, #2
2ffebdc4:	6023      	str	r3, [r4, #0]
2ffebdc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffebdc8:	000f4240 	.word	0x000f4240
2ffebdcc:	2fff3865 	.word	0x2fff3865

2ffebdd0 <sdmmc_is_low_voltage>:
2ffebdd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffebdd2:	4604      	mov	r4, r0
2ffebdd4:	2500      	movs	r5, #0
2ffebdd6:	a801      	add	r0, sp, #4
2ffebdd8:	9501      	str	r5, [sp, #4]
2ffebdda:	f7fd fe0f 	bl	2ffe99fc <fdt_get_address>
2ffebdde:	b910      	cbnz	r0, 2ffebde6 <sdmmc_is_low_voltage+0x16>
2ffebde0:	2000      	movs	r0, #0
2ffebde2:	b003      	add	sp, #12
2ffebde4:	bd30      	pop	{r4, r5, pc}
2ffebde6:	9b01      	ldr	r3, [sp, #4]
2ffebde8:	2b00      	cmp	r3, #0
2ffebdea:	d0f9      	beq.n	2ffebde0 <sdmmc_is_low_voltage+0x10>
2ffebdec:	4812      	ldr	r0, [pc, #72]	@ (2ffebe38 <sdmmc_is_low_voltage+0x68>)
2ffebdee:	4621      	mov	r1, r4
2ffebdf0:	f7fd fed4 	bl	2ffe9b9c <dt_match_instance_by_compatible>
2ffebdf4:	1e01      	subs	r1, r0, #0
2ffebdf6:	db1d      	blt.n	2ffebe34 <sdmmc_is_low_voltage+0x64>
2ffebdf8:	9c01      	ldr	r4, [sp, #4]
2ffebdfa:	462b      	mov	r3, r5
2ffebdfc:	4a0f      	ldr	r2, [pc, #60]	@ (2ffebe3c <sdmmc_is_low_voltage+0x6c>)
2ffebdfe:	4620      	mov	r0, r4
2ffebe00:	f003 fd62 	bl	2ffef8c8 <fdt_getprop>
2ffebe04:	2800      	cmp	r0, #0
2ffebe06:	d0eb      	beq.n	2ffebde0 <sdmmc_is_low_voltage+0x10>
2ffebe08:	6801      	ldr	r1, [r0, #0]
2ffebe0a:	4620      	mov	r0, r4
2ffebe0c:	ba09      	rev	r1, r1
2ffebe0e:	f003 fe18 	bl	2ffefa42 <fdt_node_offset_by_phandle>
2ffebe12:	1e01      	subs	r1, r0, #0
2ffebe14:	dbe4      	blt.n	2ffebde0 <sdmmc_is_low_voltage+0x10>
2ffebe16:	4a0a      	ldr	r2, [pc, #40]	@ (2ffebe40 <sdmmc_is_low_voltage+0x70>)
2ffebe18:	462b      	mov	r3, r5
2ffebe1a:	4620      	mov	r0, r4
2ffebe1c:	f003 fd54 	bl	2ffef8c8 <fdt_getprop>
2ffebe20:	2800      	cmp	r0, #0
2ffebe22:	d0dd      	beq.n	2ffebde0 <sdmmc_is_low_voltage+0x10>
2ffebe24:	6800      	ldr	r0, [r0, #0]
2ffebe26:	4b07      	ldr	r3, [pc, #28]	@ (2ffebe44 <sdmmc_is_low_voltage+0x74>)
2ffebe28:	ba00      	rev	r0, r0
2ffebe2a:	4298      	cmp	r0, r3
2ffebe2c:	bf8c      	ite	hi
2ffebe2e:	2000      	movhi	r0, #0
2ffebe30:	2001      	movls	r0, #1
2ffebe32:	e7d6      	b.n	2ffebde2 <sdmmc_is_low_voltage+0x12>
2ffebe34:	2001      	movs	r0, #1
2ffebe36:	e7d4      	b.n	2ffebde2 <sdmmc_is_low_voltage+0x12>
2ffebe38:	2fff3886 	.word	0x2fff3886
2ffebe3c:	2fff3896 	.word	0x2fff3896
2ffebe40:	2fff307c 	.word	0x2fff307c
2ffebe44:	001b7740 	.word	0x001b7740

2ffebe48 <stm32mp_syscfg_enable_io_compensation_start>:
2ffebe48:	b508      	push	{r3, lr}
2ffebe4a:	2028      	movs	r0, #40	@ 0x28
2ffebe4c:	f7fc fd88 	bl	2ffe8960 <clk_enable>
2ffebe50:	4b06      	ldr	r3, [pc, #24]	@ (2ffebe6c <stm32mp_syscfg_enable_io_compensation_start+0x24>)
2ffebe52:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2ffebe54:	f042 0201 	orr.w	r2, r2, #1
2ffebe58:	625a      	str	r2, [r3, #36]	@ 0x24
2ffebe5a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
2ffebe5c:	f042 0201 	orr.w	r2, r2, #1
2ffebe60:	635a      	str	r2, [r3, #52]	@ 0x34
2ffebe62:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
2ffebe64:	f042 0201 	orr.w	r2, r2, #1
2ffebe68:	645a      	str	r2, [r3, #68]	@ 0x44
2ffebe6a:	bd08      	pop	{r3, pc}
2ffebe6c:	50020000 	.word	0x50020000

2ffebe70 <stm32mp_syscfg_init>:
2ffebe70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffebe72:	a901      	add	r1, sp, #4
2ffebe74:	4824      	ldr	r0, [pc, #144]	@ (2ffebf08 <stm32mp_syscfg_init+0x98>)
2ffebe76:	f7fb ff35 	bl	2ffe7ce4 <stm32_get_otp_value>
2ffebe7a:	4604      	mov	r4, r0
2ffebe7c:	b118      	cbz	r0, 2ffebe86 <stm32mp_syscfg_init+0x16>
2ffebe7e:	f7fb fe15 	bl	2ffe7aac <console_flush>
2ffebe82:	f7f8 ead8 	blx	2ffe4434 <do_panic>
2ffebe86:	9d01      	ldr	r5, [sp, #4]
2ffebe88:	f002 fc57 	bl	2ffee73a <dt_get_pwr_vdd_voltage>
2ffebe8c:	b938      	cbnz	r0, 2ffebe9e <stm32mp_syscfg_init+0x2e>
2ffebe8e:	481f      	ldr	r0, [pc, #124]	@ (2ffebf0c <stm32mp_syscfg_init+0x9c>)
2ffebe90:	f7fb fd70 	bl	2ffe7974 <tf_log>
2ffebe94:	b003      	add	sp, #12
2ffebe96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffebe9a:	f7ff bfd5 	b.w	2ffebe48 <stm32mp_syscfg_enable_io_compensation_start>
2ffebe9e:	4b1c      	ldr	r3, [pc, #112]	@ (2ffebf10 <stm32mp_syscfg_init+0xa0>)
2ffebea0:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
2ffebea4:	4298      	cmp	r0, r3
2ffebea6:	d223      	bcs.n	2ffebef0 <stm32mp_syscfg_init+0x80>
2ffebea8:	4e1a      	ldr	r6, [pc, #104]	@ (2ffebf14 <stm32mp_syscfg_init+0xa4>)
2ffebeaa:	4620      	mov	r0, r4
2ffebeac:	4f1a      	ldr	r7, [pc, #104]	@ (2ffebf18 <stm32mp_syscfg_init+0xa8>)
2ffebeae:	4c1b      	ldr	r4, [pc, #108]	@ (2ffebf1c <stm32mp_syscfg_init+0xac>)
2ffebeb0:	2804      	cmp	r0, #4
2ffebeb2:	d00c      	beq.n	2ffebece <stm32mp_syscfg_init+0x5e>
2ffebeb4:	2805      	cmp	r0, #5
2ffebeb6:	d00e      	beq.n	2ffebed6 <stm32mp_syscfg_init+0x66>
2ffebeb8:	f241 0318 	movw	r3, #4120	@ 0x1018
2ffebebc:	f846 3020 	str.w	r3, [r6, r0, lsl #2]
2ffebec0:	3001      	adds	r0, #1
2ffebec2:	280c      	cmp	r0, #12
2ffebec4:	d1f4      	bne.n	2ffebeb0 <stm32mp_syscfg_init+0x40>
2ffebec6:	2d00      	cmp	r5, #0
2ffebec8:	d1e4      	bne.n	2ffebe94 <stm32mp_syscfg_init+0x24>
2ffebeca:	4815      	ldr	r0, [pc, #84]	@ (2ffebf20 <stm32mp_syscfg_init+0xb0>)
2ffebecc:	e7e0      	b.n	2ffebe90 <stm32mp_syscfg_init+0x20>
2ffebece:	4815      	ldr	r0, [pc, #84]	@ (2ffebf24 <stm32mp_syscfg_init+0xb4>)
2ffebed0:	f7ff ff7e 	bl	2ffebdd0 <sdmmc_is_low_voltage>
2ffebed4:	b940      	cbnz	r0, 2ffebee8 <stm32mp_syscfg_init+0x78>
2ffebed6:	4638      	mov	r0, r7
2ffebed8:	f7ff ff7a 	bl	2ffebdd0 <sdmmc_is_low_voltage>
2ffebedc:	b110      	cbz	r0, 2ffebee4 <stm32mp_syscfg_init+0x74>
2ffebede:	f241 0318 	movw	r3, #4120	@ 0x1018
2ffebee2:	6663      	str	r3, [r4, #100]	@ 0x64
2ffebee4:	2006      	movs	r0, #6
2ffebee6:	e7e7      	b.n	2ffebeb8 <stm32mp_syscfg_init+0x48>
2ffebee8:	f241 0318 	movw	r3, #4120	@ 0x1018
2ffebeec:	6623      	str	r3, [r4, #96]	@ 0x60
2ffebeee:	e7f2      	b.n	2ffebed6 <stm32mp_syscfg_init+0x66>
2ffebef0:	2d00      	cmp	r5, #0
2ffebef2:	d0cf      	beq.n	2ffebe94 <stm32mp_syscfg_init+0x24>
2ffebef4:	480c      	ldr	r0, [pc, #48]	@ (2ffebf28 <stm32mp_syscfg_init+0xb8>)
2ffebef6:	f7fb fd3d 	bl	2ffe7974 <tf_log>
2ffebefa:	480c      	ldr	r0, [pc, #48]	@ (2ffebf2c <stm32mp_syscfg_init+0xbc>)
2ffebefc:	f7fb fd3a 	bl	2ffe7974 <tf_log>
2ffebf00:	480b      	ldr	r0, [pc, #44]	@ (2ffebf30 <stm32mp_syscfg_init+0xc0>)
2ffebf02:	f7fb fd37 	bl	2ffe7974 <tf_log>
2ffebf06:	e7ba      	b.n	2ffebe7e <stm32mp_syscfg_init+0xe>
2ffebf08:	2fff33bb 	.word	0x2fff33bb
2ffebf0c:	2fff38a3 	.word	0x2fff38a3
2ffebf10:	002932e0 	.word	0x002932e0
2ffebf14:	50020050 	.word	0x50020050
2ffebf18:	58007000 	.word	0x58007000
2ffebf1c:	50020000 	.word	0x50020000
2ffebf20:	2fff38b1 	.word	0x2fff38b1
2ffebf24:	58005000 	.word	0x58005000
2ffebf28:	2fff38df 	.word	0x2fff38df
2ffebf2c:	2fff38f6 	.word	0x2fff38f6
2ffebf30:	2fff3917 	.word	0x2fff3917

2ffebf34 <stm32mp_syscfg_get_chip_version>:
2ffebf34:	4b02      	ldr	r3, [pc, #8]	@ (2ffebf40 <stm32mp_syscfg_get_chip_version+0xc>)
2ffebf36:	f8d3 0380 	ldr.w	r0, [r3, #896]	@ 0x380
2ffebf3a:	0c00      	lsrs	r0, r0, #16
2ffebf3c:	4770      	bx	lr
2ffebf3e:	bf00      	nop
2ffebf40:	50020000 	.word	0x50020000

2ffebf44 <stm32mp_syscfg_get_chip_dev_id>:
2ffebf44:	4b02      	ldr	r3, [pc, #8]	@ (2ffebf50 <stm32mp_syscfg_get_chip_dev_id+0xc>)
2ffebf46:	f8d3 0380 	ldr.w	r0, [r3, #896]	@ 0x380
2ffebf4a:	f3c0 000b 	ubfx	r0, r0, #0, #12
2ffebf4e:	4770      	bx	lr
2ffebf50:	50020000 	.word	0x50020000

2ffebf54 <stm32mp_syscfg_boot_mode_enable>:
2ffebf54:	4a02      	ldr	r2, [pc, #8]	@ (2ffebf60 <stm32mp_syscfg_boot_mode_enable+0xc>)
2ffebf56:	68d3      	ldr	r3, [r2, #12]
2ffebf58:	f043 0301 	orr.w	r3, r3, #1
2ffebf5c:	60d3      	str	r3, [r2, #12]
2ffebf5e:	4770      	bx	lr
2ffebf60:	50020000 	.word	0x50020000

2ffebf64 <stm32mp_syscfg_boot_mode_disable>:
2ffebf64:	4a02      	ldr	r2, [pc, #8]	@ (2ffebf70 <stm32mp_syscfg_boot_mode_disable+0xc>)
2ffebf66:	68d3      	ldr	r3, [r2, #12]
2ffebf68:	f023 0301 	bic.w	r3, r3, #1
2ffebf6c:	60d3      	str	r3, [r2, #12]
2ffebf6e:	4770      	bx	lr
2ffebf70:	50020000 	.word	0x50020000

2ffebf74 <stm32_tamp_nvram_get_cdata>:
2ffebf74:	4800      	ldr	r0, [pc, #0]	@ (2ffebf78 <stm32_tamp_nvram_get_cdata+0x4>)
2ffebf76:	4770      	bx	lr
2ffebf78:	2fff0318 	.word	0x2fff0318

2ffebf7c <stm32_tamp_nvram_get_access_rights>:
2ffebf7c:	4800      	ldr	r0, [pc, #0]	@ (2ffebf80 <stm32_tamp_nvram_get_access_rights+0x4>)
2ffebf7e:	4770      	bx	lr
2ffebf80:	2fff44e4 	.word	0x2fff44e4

2ffebf84 <clk_stm32_get_priv>:
2ffebf84:	4b01      	ldr	r3, [pc, #4]	@ (2ffebf8c <clk_stm32_get_priv+0x8>)
2ffebf86:	6818      	ldr	r0, [r3, #0]
2ffebf88:	4770      	bx	lr
2ffebf8a:	bf00      	nop
2ffebf8c:	2fff5958 	.word	0x2fff5958

2ffebf90 <clk_stm32_rcc_regs_lock>:
2ffebf90:	4801      	ldr	r0, [pc, #4]	@ (2ffebf98 <clk_stm32_rcc_regs_lock+0x8>)
2ffebf92:	f002 be94 	b.w	2ffeecbe <_clk_lock>
2ffebf96:	bf00      	nop
2ffebf98:	2fff5960 	.word	0x2fff5960

2ffebf9c <clk_stm32_rcc_regs_unlock>:
2ffebf9c:	4801      	ldr	r0, [pc, #4]	@ (2ffebfa4 <clk_stm32_rcc_regs_unlock+0x8>)
2ffebf9e:	f002 be99 	b.w	2ffeecd4 <_clk_unlock>
2ffebfa2:	bf00      	nop
2ffebfa4:	2fff5960 	.word	0x2fff5960

2ffebfa8 <clk_stm32_osc_init>:
2ffebfa8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffebfaa:	f002 fecd 	bl	2ffeed48 <clk_oscillator_get_data>
2ffebfae:	6807      	ldr	r7, [r0, #0]
2ffebfb0:	4605      	mov	r5, r0
2ffebfb2:	2600      	movs	r6, #0
2ffebfb4:	4668      	mov	r0, sp
2ffebfb6:	9600      	str	r6, [sp, #0]
2ffebfb8:	f7fd fd20 	bl	2ffe99fc <fdt_get_address>
2ffebfbc:	b918      	cbnz	r0, 2ffebfc6 <clk_stm32_osc_init+0x1e>
2ffebfbe:	f7fb fd75 	bl	2ffe7aac <console_flush>
2ffebfc2:	f7f8 ea38 	blx	2ffe4434 <do_panic>
2ffebfc6:	4918      	ldr	r1, [pc, #96]	@ (2ffec028 <clk_stm32_osc_init+0x80>)
2ffebfc8:	9800      	ldr	r0, [sp, #0]
2ffebfca:	f003 fcd8 	bl	2ffef97e <fdt_path_offset>
2ffebfce:	1e01      	subs	r1, r0, #0
2ffebfd0:	da03      	bge.n	2ffebfda <clk_stm32_osc_init+0x32>
2ffebfd2:	2300      	movs	r3, #0
2ffebfd4:	612b      	str	r3, [r5, #16]
2ffebfd6:	b003      	add	sp, #12
2ffebfd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffebfda:	9800      	ldr	r0, [sp, #0]
2ffebfdc:	f003 fb03 	bl	2ffef5e6 <fdt_first_subnode>
2ffebfe0:	2800      	cmp	r0, #0
2ffebfe2:	4604      	mov	r4, r0
2ffebfe4:	dbf5      	blt.n	2ffebfd2 <clk_stm32_osc_init+0x2a>
2ffebfe6:	9800      	ldr	r0, [sp, #0]
2ffebfe8:	aa01      	add	r2, sp, #4
2ffebfea:	9601      	str	r6, [sp, #4]
2ffebfec:	4621      	mov	r1, r4
2ffebfee:	f003 fb78 	bl	2ffef6e2 <fdt_get_name>
2ffebff2:	b1a0      	cbz	r0, 2ffec01e <clk_stm32_osc_init+0x76>
2ffebff4:	9a01      	ldr	r2, [sp, #4]
2ffebff6:	4639      	mov	r1, r7
2ffebff8:	f003 ff06 	bl	2ffefe08 <strncmp>
2ffebffc:	b978      	cbnz	r0, 2ffec01e <clk_stm32_osc_init+0x76>
2ffebffe:	4620      	mov	r0, r4
2ffec000:	f7fd fd16 	bl	2ffe9a30 <fdt_get_status>
2ffec004:	b158      	cbz	r0, 2ffec01e <clk_stm32_osc_init+0x76>
2ffec006:	4a09      	ldr	r2, [pc, #36]	@ (2ffec02c <clk_stm32_osc_init+0x84>)
2ffec008:	ab01      	add	r3, sp, #4
2ffec00a:	9800      	ldr	r0, [sp, #0]
2ffec00c:	4621      	mov	r1, r4
2ffec00e:	f003 fc5b 	bl	2ffef8c8 <fdt_getprop>
2ffec012:	4603      	mov	r3, r0
2ffec014:	2800      	cmp	r0, #0
2ffec016:	d0dd      	beq.n	2ffebfd4 <clk_stm32_osc_init+0x2c>
2ffec018:	6803      	ldr	r3, [r0, #0]
2ffec01a:	ba1b      	rev	r3, r3
2ffec01c:	e7da      	b.n	2ffebfd4 <clk_stm32_osc_init+0x2c>
2ffec01e:	9800      	ldr	r0, [sp, #0]
2ffec020:	4621      	mov	r1, r4
2ffec022:	f003 faf3 	bl	2ffef60c <fdt_next_subnode>
2ffec026:	e7db      	b.n	2ffebfe0 <clk_stm32_osc_init+0x38>
2ffec028:	2fff3932 	.word	0x2fff3932
2ffec02c:	2fff3565 	.word	0x2fff3565

2ffec030 <_clk_get_ops>:
2ffec030:	b508      	push	{r3, lr}
2ffec032:	4602      	mov	r2, r0
2ffec034:	f002 fe7f 	bl	2ffeed36 <_clk_get>
2ffec038:	7903      	ldrb	r3, [r0, #4]
2ffec03a:	b91b      	cbnz	r3, 2ffec044 <_clk_get_ops+0x14>
2ffec03c:	4803      	ldr	r0, [pc, #12]	@ (2ffec04c <_clk_get_ops+0x1c>)
2ffec03e:	21ed      	movs	r1, #237	@ 0xed
2ffec040:	f001 fc58 	bl	2ffed8f4 <__assert>
2ffec044:	6b52      	ldr	r2, [r2, #52]	@ 0x34
2ffec046:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2ffec04a:	bd08      	pop	{r3, pc}
2ffec04c:	2fff393a 	.word	0x2fff393a

2ffec050 <fixed_factor_recalc_rate>:
2ffec050:	b508      	push	{r3, lr}
2ffec052:	f002 fe70 	bl	2ffeed36 <_clk_get>
2ffec056:	6883      	ldr	r3, [r0, #8]
2ffec058:	7818      	ldrb	r0, [r3, #0]
2ffec05a:	fba0 0102 	umull	r0, r1, r0, r2
2ffec05e:	785a      	ldrb	r2, [r3, #1]
2ffec060:	b932      	cbnz	r2, 2ffec070 <fixed_factor_recalc_rate+0x20>
2ffec062:	4805      	ldr	r0, [pc, #20]	@ (2ffec078 <fixed_factor_recalc_rate+0x28>)
2ffec064:	f7fb fc86 	bl	2ffe7974 <tf_log>
2ffec068:	f7fb fd20 	bl	2ffe7aac <console_flush>
2ffec06c:	f7f8 e9e2 	blx	2ffe4434 <do_panic>
2ffec070:	2300      	movs	r3, #0
2ffec072:	f001 eadc 	blx	2ffed62c <__aeabi_uldivmod>
2ffec076:	bd08      	pop	{r3, pc}
2ffec078:	2fff395a 	.word	0x2fff395a

2ffec07c <clk_mux_set_parent>:
2ffec07c:	68c3      	ldr	r3, [r0, #12]
2ffec07e:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
2ffec082:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffec086:	240c      	movs	r4, #12
2ffec088:	f3c1 010e 	ubfx	r1, r1, #0, #15
2ffec08c:	fb04 3301 	mla	r3, r4, r1, r3
2ffec090:	6800      	ldr	r0, [r0, #0]
2ffec092:	6859      	ldr	r1, [r3, #4]
2ffec094:	788f      	ldrb	r7, [r1, #2]
2ffec096:	78cb      	ldrb	r3, [r1, #3]
2ffec098:	880d      	ldrh	r5, [r1, #0]
2ffec09a:	443b      	add	r3, r7
2ffec09c:	582e      	ldr	r6, [r5, r0]
2ffec09e:	f1c3 0320 	rsb	r3, r3, #32
2ffec0a2:	40ba      	lsls	r2, r7
2ffec0a4:	fa2c f303 	lsr.w	r3, ip, r3
2ffec0a8:	4072      	eors	r2, r6
2ffec0aa:	182c      	adds	r4, r5, r0
2ffec0ac:	4013      	ands	r3, r2
2ffec0ae:	fa0c fc07 	lsl.w	ip, ip, r7
2ffec0b2:	ea03 030c 	and.w	r3, r3, ip
2ffec0b6:	4073      	eors	r3, r6
2ffec0b8:	502b      	str	r3, [r5, r0]
2ffec0ba:	790d      	ldrb	r5, [r1, #4]
2ffec0bc:	2dff      	cmp	r5, #255	@ 0xff
2ffec0be:	d013      	beq.n	2ffec0e8 <clk_mux_set_parent+0x6c>
2ffec0c0:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffec0c4:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2ffec0c8:	480d      	ldr	r0, [pc, #52]	@ (2ffec100 <clk_mux_set_parent+0x84>)
2ffec0ca:	2300      	movs	r3, #0
2ffec0cc:	4a0d      	ldr	r2, [pc, #52]	@ (2ffec104 <clk_mux_set_parent+0x88>)
2ffec0ce:	fba1 0100 	umull	r0, r1, r1, r0
2ffec0d2:	f001 eaac 	blx	2ffed62c <__aeabi_uldivmod>
2ffec0d6:	19c0      	adds	r0, r0, r7
2ffec0d8:	f04f 0301 	mov.w	r3, #1
2ffec0dc:	eb41 0108 	adc.w	r1, r1, r8
2ffec0e0:	40ab      	lsls	r3, r5
2ffec0e2:	6822      	ldr	r2, [r4, #0]
2ffec0e4:	4213      	tst	r3, r2
2ffec0e6:	d002      	beq.n	2ffec0ee <clk_mux_set_parent+0x72>
2ffec0e8:	2000      	movs	r0, #0
2ffec0ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffec0ee:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffec0f2:	42b0      	cmp	r0, r6
2ffec0f4:	eb71 0207 	sbcs.w	r2, r1, r7
2ffec0f8:	d2f3      	bcs.n	2ffec0e2 <clk_mux_set_parent+0x66>
2ffec0fa:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffec0fe:	e7f4      	b.n	2ffec0ea <clk_mux_set_parent+0x6e>
2ffec100:	00030d40 	.word	0x00030d40
2ffec104:	000f4240 	.word	0x000f4240

2ffec108 <clk_stm32_get_parent>:
2ffec108:	4b08      	ldr	r3, [pc, #32]	@ (2ffec12c <clk_stm32_get_parent+0x24>)
2ffec10a:	4601      	mov	r1, r0
2ffec10c:	b510      	push	{r4, lr}
2ffec10e:	681c      	ldr	r4, [r3, #0]
2ffec110:	4620      	mov	r0, r4
2ffec112:	f002 ff58 	bl	2ffeefc6 <clk_get_index>
2ffec116:	f110 0f16 	cmn.w	r0, #22
2ffec11a:	4601      	mov	r1, r0
2ffec11c:	d004      	beq.n	2ffec128 <clk_stm32_get_parent+0x20>
2ffec11e:	4620      	mov	r0, r4
2ffec120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec124:	f002 bf22 	b.w	2ffeef6c <_clk_stm32_get_parent>
2ffec128:	bd10      	pop	{r4, pc}
2ffec12a:	bf00      	nop
2ffec12c:	2fff5958 	.word	0x2fff5958

2ffec130 <clk_stm32_get_rate>:
2ffec130:	4b08      	ldr	r3, [pc, #32]	@ (2ffec154 <clk_stm32_get_rate+0x24>)
2ffec132:	4601      	mov	r1, r0
2ffec134:	b510      	push	{r4, lr}
2ffec136:	681c      	ldr	r4, [r3, #0]
2ffec138:	4620      	mov	r0, r4
2ffec13a:	f002 ff44 	bl	2ffeefc6 <clk_get_index>
2ffec13e:	f110 0f16 	cmn.w	r0, #22
2ffec142:	4601      	mov	r1, r0
2ffec144:	d004      	beq.n	2ffec150 <clk_stm32_get_rate+0x20>
2ffec146:	4620      	mov	r0, r4
2ffec148:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec14c:	f002 bf4e 	b.w	2ffeefec <_clk_stm32_get_rate>
2ffec150:	2000      	movs	r0, #0
2ffec152:	bd10      	pop	{r4, pc}
2ffec154:	2fff5958 	.word	0x2fff5958

2ffec158 <_clk_stm32_enable>:
2ffec158:	b570      	push	{r4, r5, r6, lr}
2ffec15a:	4604      	mov	r4, r0
2ffec15c:	4e07      	ldr	r6, [pc, #28]	@ (2ffec17c <_clk_stm32_enable+0x24>)
2ffec15e:	460d      	mov	r5, r1
2ffec160:	4630      	mov	r0, r6
2ffec162:	f002 fdac 	bl	2ffeecbe <_clk_lock>
2ffec166:	4629      	mov	r1, r5
2ffec168:	4620      	mov	r0, r4
2ffec16a:	f002 ff91 	bl	2ffef090 <_clk_stm32_enable_core>
2ffec16e:	4604      	mov	r4, r0
2ffec170:	4630      	mov	r0, r6
2ffec172:	f002 fdaf 	bl	2ffeecd4 <_clk_unlock>
2ffec176:	4620      	mov	r0, r4
2ffec178:	bd70      	pop	{r4, r5, r6, pc}
2ffec17a:	bf00      	nop
2ffec17c:	2fff595c 	.word	0x2fff595c

2ffec180 <clk_stm32_enable>:
2ffec180:	4b08      	ldr	r3, [pc, #32]	@ (2ffec1a4 <clk_stm32_enable+0x24>)
2ffec182:	4601      	mov	r1, r0
2ffec184:	b510      	push	{r4, lr}
2ffec186:	681c      	ldr	r4, [r3, #0]
2ffec188:	4620      	mov	r0, r4
2ffec18a:	f002 ff1c 	bl	2ffeefc6 <clk_get_index>
2ffec18e:	f110 0f16 	cmn.w	r0, #22
2ffec192:	4601      	mov	r1, r0
2ffec194:	d004      	beq.n	2ffec1a0 <clk_stm32_enable+0x20>
2ffec196:	4620      	mov	r0, r4
2ffec198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec19c:	f7ff bfdc 	b.w	2ffec158 <_clk_stm32_enable>
2ffec1a0:	bd10      	pop	{r4, pc}
2ffec1a2:	bf00      	nop
2ffec1a4:	2fff5958 	.word	0x2fff5958

2ffec1a8 <_clk_stm32_disable>:
2ffec1a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffec1aa:	4605      	mov	r5, r0
2ffec1ac:	4818      	ldr	r0, [pc, #96]	@ (2ffec210 <_clk_stm32_disable+0x68>)
2ffec1ae:	f64f 77ff 	movw	r7, #65535	@ 0xffff
2ffec1b2:	460c      	mov	r4, r1
2ffec1b4:	f002 fd83 	bl	2ffeecbe <_clk_lock>
2ffec1b8:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
2ffec1ba:	5d1a      	ldrb	r2, [r3, r4]
2ffec1bc:	191e      	adds	r6, r3, r4
2ffec1be:	2a01      	cmp	r2, #1
2ffec1c0:	d109      	bne.n	2ffec1d6 <_clk_stm32_disable+0x2e>
2ffec1c2:	4621      	mov	r1, r4
2ffec1c4:	4628      	mov	r0, r5
2ffec1c6:	f002 ff4d 	bl	2ffef064 <_stm32_clk_is_flags>
2ffec1ca:	b198      	cbz	r0, 2ffec1f4 <_clk_stm32_disable+0x4c>
2ffec1cc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffec1d0:	480f      	ldr	r0, [pc, #60]	@ (2ffec210 <_clk_stm32_disable+0x68>)
2ffec1d2:	f002 bd7f 	b.w	2ffeecd4 <_clk_unlock>
2ffec1d6:	b112      	cbz	r2, 2ffec1de <_clk_stm32_disable+0x36>
2ffec1d8:	3a01      	subs	r2, #1
2ffec1da:	7032      	strb	r2, [r6, #0]
2ffec1dc:	e7f6      	b.n	2ffec1cc <_clk_stm32_disable+0x24>
2ffec1de:	4621      	mov	r1, r4
2ffec1e0:	4628      	mov	r0, r5
2ffec1e2:	f002 ff81 	bl	2ffef0e8 <_clk_stm32_is_enabled>
2ffec1e6:	2800      	cmp	r0, #0
2ffec1e8:	d0f0      	beq.n	2ffec1cc <_clk_stm32_disable+0x24>
2ffec1ea:	b2a1      	uxth	r1, r4
2ffec1ec:	4628      	mov	r0, r5
2ffec1ee:	f002 ff6e 	bl	2ffef0ce <clk_stm32_disable_call_ops>
2ffec1f2:	e7eb      	b.n	2ffec1cc <_clk_stm32_disable+0x24>
2ffec1f4:	7030      	strb	r0, [r6, #0]
2ffec1f6:	b2a1      	uxth	r1, r4
2ffec1f8:	4628      	mov	r0, r5
2ffec1fa:	f002 ff68 	bl	2ffef0ce <clk_stm32_disable_call_ops>
2ffec1fe:	4621      	mov	r1, r4
2ffec200:	4628      	mov	r0, r5
2ffec202:	f002 feb3 	bl	2ffeef6c <_clk_stm32_get_parent>
2ffec206:	1e04      	subs	r4, r0, #0
2ffec208:	dbe0      	blt.n	2ffec1cc <_clk_stm32_disable+0x24>
2ffec20a:	42bc      	cmp	r4, r7
2ffec20c:	d1d4      	bne.n	2ffec1b8 <_clk_stm32_disable+0x10>
2ffec20e:	e7dd      	b.n	2ffec1cc <_clk_stm32_disable+0x24>
2ffec210:	2fff595c 	.word	0x2fff595c

2ffec214 <clk_stm32_disable>:
2ffec214:	4b08      	ldr	r3, [pc, #32]	@ (2ffec238 <clk_stm32_disable+0x24>)
2ffec216:	4601      	mov	r1, r0
2ffec218:	b510      	push	{r4, lr}
2ffec21a:	681c      	ldr	r4, [r3, #0]
2ffec21c:	4620      	mov	r0, r4
2ffec21e:	f002 fed2 	bl	2ffeefc6 <clk_get_index>
2ffec222:	f110 0f16 	cmn.w	r0, #22
2ffec226:	4601      	mov	r1, r0
2ffec228:	d004      	beq.n	2ffec234 <clk_stm32_disable+0x20>
2ffec22a:	4620      	mov	r0, r4
2ffec22c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec230:	f7ff bfba 	b.w	2ffec1a8 <_clk_stm32_disable>
2ffec234:	bd10      	pop	{r4, pc}
2ffec236:	bf00      	nop
2ffec238:	2fff5958 	.word	0x2fff5958

2ffec23c <clk_stm32_is_enabled>:
2ffec23c:	4b08      	ldr	r3, [pc, #32]	@ (2ffec260 <clk_stm32_is_enabled+0x24>)
2ffec23e:	4601      	mov	r1, r0
2ffec240:	b510      	push	{r4, lr}
2ffec242:	681c      	ldr	r4, [r3, #0]
2ffec244:	4620      	mov	r0, r4
2ffec246:	f002 febe 	bl	2ffeefc6 <clk_get_index>
2ffec24a:	f110 0f16 	cmn.w	r0, #22
2ffec24e:	4601      	mov	r1, r0
2ffec250:	d004      	beq.n	2ffec25c <clk_stm32_is_enabled+0x20>
2ffec252:	4620      	mov	r0, r4
2ffec254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec258:	f002 bf46 	b.w	2ffef0e8 <_clk_stm32_is_enabled>
2ffec25c:	2000      	movs	r0, #0
2ffec25e:	bd10      	pop	{r4, pc}
2ffec260:	2fff5958 	.word	0x2fff5958

2ffec264 <clk_stm32_enable_critical_clocks>:
2ffec264:	b538      	push	{r3, r4, r5, lr}
2ffec266:	2400      	movs	r4, #0
2ffec268:	4b08      	ldr	r3, [pc, #32]	@ (2ffec28c <clk_stm32_enable_critical_clocks+0x28>)
2ffec26a:	681d      	ldr	r5, [r3, #0]
2ffec26c:	686b      	ldr	r3, [r5, #4]
2ffec26e:	42a3      	cmp	r3, r4
2ffec270:	d800      	bhi.n	2ffec274 <clk_stm32_enable_critical_clocks+0x10>
2ffec272:	bd38      	pop	{r3, r4, r5, pc}
2ffec274:	2201      	movs	r2, #1
2ffec276:	4621      	mov	r1, r4
2ffec278:	4628      	mov	r0, r5
2ffec27a:	f002 fef3 	bl	2ffef064 <_stm32_clk_is_flags>
2ffec27e:	b110      	cbz	r0, 2ffec286 <clk_stm32_enable_critical_clocks+0x22>
2ffec280:	4628      	mov	r0, r5
2ffec282:	f7ff ff69 	bl	2ffec158 <_clk_stm32_enable>
2ffec286:	3401      	adds	r4, #1
2ffec288:	e7f0      	b.n	2ffec26c <clk_stm32_enable_critical_clocks+0x8>
2ffec28a:	bf00      	nop
2ffec28c:	2fff5958 	.word	0x2fff5958

2ffec290 <clk_stm32_set_div>:
2ffec290:	6a03      	ldr	r3, [r0, #32]
2ffec292:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffec296:	428b      	cmp	r3, r1
2ffec298:	d803      	bhi.n	2ffec2a2 <clk_stm32_set_div+0x12>
2ffec29a:	f7fb fc07 	bl	2ffe7aac <console_flush>
2ffec29e:	f7f8 e8ca 	blx	2ffe4434 <do_panic>
2ffec2a2:	69c3      	ldr	r3, [r0, #28]
2ffec2a4:	240c      	movs	r4, #12
2ffec2a6:	6800      	ldr	r0, [r0, #0]
2ffec2a8:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
2ffec2ac:	fb04 3101 	mla	r1, r4, r1, r3
2ffec2b0:	798f      	ldrb	r7, [r1, #6]
2ffec2b2:	79cb      	ldrb	r3, [r1, #7]
2ffec2b4:	888d      	ldrh	r5, [r1, #4]
2ffec2b6:	443b      	add	r3, r7
2ffec2b8:	582e      	ldr	r6, [r5, r0]
2ffec2ba:	f1c3 0320 	rsb	r3, r3, #32
2ffec2be:	40ba      	lsls	r2, r7
2ffec2c0:	fa2c f303 	lsr.w	r3, ip, r3
2ffec2c4:	4072      	eors	r2, r6
2ffec2c6:	182c      	adds	r4, r5, r0
2ffec2c8:	4013      	ands	r3, r2
2ffec2ca:	fa0c fc07 	lsl.w	ip, ip, r7
2ffec2ce:	ea03 030c 	and.w	r3, r3, ip
2ffec2d2:	4073      	eors	r3, r6
2ffec2d4:	502b      	str	r3, [r5, r0]
2ffec2d6:	7a4d      	ldrb	r5, [r1, #9]
2ffec2d8:	2dff      	cmp	r5, #255	@ 0xff
2ffec2da:	d013      	beq.n	2ffec304 <clk_stm32_set_div+0x74>
2ffec2dc:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffec2e0:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2ffec2e4:	480d      	ldr	r0, [pc, #52]	@ (2ffec31c <clk_stm32_set_div+0x8c>)
2ffec2e6:	2300      	movs	r3, #0
2ffec2e8:	4a0d      	ldr	r2, [pc, #52]	@ (2ffec320 <clk_stm32_set_div+0x90>)
2ffec2ea:	fba1 0100 	umull	r0, r1, r1, r0
2ffec2ee:	f001 e99e 	blx	2ffed62c <__aeabi_uldivmod>
2ffec2f2:	19c0      	adds	r0, r0, r7
2ffec2f4:	f04f 0301 	mov.w	r3, #1
2ffec2f8:	eb41 0108 	adc.w	r1, r1, r8
2ffec2fc:	40ab      	lsls	r3, r5
2ffec2fe:	6822      	ldr	r2, [r4, #0]
2ffec300:	4213      	tst	r3, r2
2ffec302:	d002      	beq.n	2ffec30a <clk_stm32_set_div+0x7a>
2ffec304:	2000      	movs	r0, #0
2ffec306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffec30a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffec30e:	42b0      	cmp	r0, r6
2ffec310:	eb71 0207 	sbcs.w	r2, r1, r7
2ffec314:	d2f3      	bcs.n	2ffec2fe <clk_stm32_set_div+0x6e>
2ffec316:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffec31a:	e7f4      	b.n	2ffec306 <clk_stm32_set_div+0x76>
2ffec31c:	00030d40 	.word	0x00030d40
2ffec320:	000f4240 	.word	0x000f4240

2ffec324 <clk_stm32_osc_gate_enable>:
2ffec324:	b538      	push	{r3, r4, r5, lr}
2ffec326:	4605      	mov	r5, r0
2ffec328:	f002 fd0e 	bl	2ffeed48 <clk_oscillator_get_data>
2ffec32c:	6903      	ldr	r3, [r0, #16]
2ffec32e:	4604      	mov	r4, r0
2ffec330:	b1a3      	cbz	r3, 2ffec35c <clk_stm32_osc_gate_enable+0x38>
2ffec332:	8ac1      	ldrh	r1, [r0, #22]
2ffec334:	4628      	mov	r0, r5
2ffec336:	f002 fcec 	bl	2ffeed12 <_clk_stm32_gate_enable>
2ffec33a:	8b21      	ldrh	r1, [r4, #24]
2ffec33c:	2201      	movs	r2, #1
2ffec33e:	4628      	mov	r0, r5
2ffec340:	f002 ff8e 	bl	2ffef260 <_clk_stm32_gate_wait_ready>
2ffec344:	b150      	cbz	r0, 2ffec35c <clk_stm32_osc_gate_enable+0x38>
2ffec346:	6822      	ldr	r2, [r4, #0]
2ffec348:	f240 33d6 	movw	r3, #982	@ 0x3d6
2ffec34c:	4904      	ldr	r1, [pc, #16]	@ (2ffec360 <clk_stm32_osc_gate_enable+0x3c>)
2ffec34e:	4805      	ldr	r0, [pc, #20]	@ (2ffec364 <clk_stm32_osc_gate_enable+0x40>)
2ffec350:	f7fb fb10 	bl	2ffe7974 <tf_log>
2ffec354:	f7fb fbaa 	bl	2ffe7aac <console_flush>
2ffec358:	f7f8 e86c 	blx	2ffe4434 <do_panic>
2ffec35c:	2000      	movs	r0, #0
2ffec35e:	bd38      	pop	{r3, r4, r5, pc}
2ffec360:	2fff3996 	.word	0x2fff3996
2ffec364:	2fff396d 	.word	0x2fff396d

2ffec368 <clk_stm32_osc_gate_disable>:
2ffec368:	b538      	push	{r3, r4, r5, lr}
2ffec36a:	4605      	mov	r5, r0
2ffec36c:	f002 fcec 	bl	2ffeed48 <clk_oscillator_get_data>
2ffec370:	6903      	ldr	r3, [r0, #16]
2ffec372:	4604      	mov	r4, r0
2ffec374:	b1a3      	cbz	r3, 2ffec3a0 <clk_stm32_osc_gate_disable+0x38>
2ffec376:	8ac1      	ldrh	r1, [r0, #22]
2ffec378:	4628      	mov	r0, r5
2ffec37a:	f002 fcb6 	bl	2ffeecea <_clk_stm32_gate_disable>
2ffec37e:	8b21      	ldrh	r1, [r4, #24]
2ffec380:	2200      	movs	r2, #0
2ffec382:	4628      	mov	r0, r5
2ffec384:	f002 ff6c 	bl	2ffef260 <_clk_stm32_gate_wait_ready>
2ffec388:	b150      	cbz	r0, 2ffec3a0 <clk_stm32_osc_gate_disable+0x38>
2ffec38a:	6822      	ldr	r2, [r4, #0]
2ffec38c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffec390:	4904      	ldr	r1, [pc, #16]	@ (2ffec3a4 <clk_stm32_osc_gate_disable+0x3c>)
2ffec392:	4805      	ldr	r0, [pc, #20]	@ (2ffec3a8 <clk_stm32_osc_gate_disable+0x40>)
2ffec394:	f7fb faee 	bl	2ffe7974 <tf_log>
2ffec398:	f7fb fb88 	bl	2ffe7aac <console_flush>
2ffec39c:	f7f8 e84a 	blx	2ffe4434 <do_panic>
2ffec3a0:	bd38      	pop	{r3, r4, r5, pc}
2ffec3a2:	bf00      	nop
2ffec3a4:	2fff397b 	.word	0x2fff397b
2ffec3a8:	2fff396d 	.word	0x2fff396d

2ffec3ac <clk_stm32_init>:
2ffec3ac:	b538      	push	{r3, r4, r5, lr}
2ffec3ae:	4604      	mov	r4, r0
2ffec3b0:	4b0b      	ldr	r3, [pc, #44]	@ (2ffec3e0 <clk_stm32_init+0x34>)
2ffec3b2:	2500      	movs	r5, #0
2ffec3b4:	6001      	str	r1, [r0, #0]
2ffec3b6:	6018      	str	r0, [r3, #0]
2ffec3b8:	6863      	ldr	r3, [r4, #4]
2ffec3ba:	42ab      	cmp	r3, r5
2ffec3bc:	d804      	bhi.n	2ffec3c8 <clk_stm32_init+0x1c>
2ffec3be:	4809      	ldr	r0, [pc, #36]	@ (2ffec3e4 <clk_stm32_init+0x38>)
2ffec3c0:	f7fc fb16 	bl	2ffe89f0 <clk_register>
2ffec3c4:	2000      	movs	r0, #0
2ffec3c6:	bd38      	pop	{r3, r4, r5, pc}
2ffec3c8:	4629      	mov	r1, r5
2ffec3ca:	4620      	mov	r0, r4
2ffec3cc:	f7ff fe30 	bl	2ffec030 <_clk_get_ops>
2ffec3d0:	6983      	ldr	r3, [r0, #24]
2ffec3d2:	b113      	cbz	r3, 2ffec3da <clk_stm32_init+0x2e>
2ffec3d4:	4629      	mov	r1, r5
2ffec3d6:	4620      	mov	r0, r4
2ffec3d8:	4798      	blx	r3
2ffec3da:	3501      	adds	r5, #1
2ffec3dc:	e7ec      	b.n	2ffec3b8 <clk_stm32_init+0xc>
2ffec3de:	bf00      	nop
2ffec3e0:	2fff5958 	.word	0x2fff5958
2ffec3e4:	2fff03fc 	.word	0x2fff03fc

2ffec3e8 <clk_stm32_pll_is_enabled>:
2ffec3e8:	b510      	push	{r4, lr}
2ffec3ea:	4604      	mov	r4, r0
2ffec3ec:	f002 fca3 	bl	2ffeed36 <_clk_get>
2ffec3f0:	6883      	ldr	r3, [r0, #8]
2ffec3f2:	781a      	ldrb	r2, [r3, #0]
2ffec3f4:	4b04      	ldr	r3, [pc, #16]	@ (2ffec408 <clk_stm32_pll_is_enabled+0x20>)
2ffec3f6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
2ffec3fa:	88da      	ldrh	r2, [r3, #6]
2ffec3fc:	6823      	ldr	r3, [r4, #0]
2ffec3fe:	58d0      	ldr	r0, [r2, r3]
2ffec400:	f000 0001 	and.w	r0, r0, #1
2ffec404:	bd10      	pop	{r4, pc}
2ffec406:	bf00      	nop
2ffec408:	2fff090c 	.word	0x2fff090c

2ffec40c <clk_stm32_pll_recalc_rate>:
2ffec40c:	b538      	push	{r3, r4, r5, lr}
2ffec40e:	4604      	mov	r4, r0
2ffec410:	4615      	mov	r5, r2
2ffec412:	f002 fc90 	bl	2ffeed36 <_clk_get>
2ffec416:	6883      	ldr	r3, [r0, #8]
2ffec418:	781a      	ldrb	r2, [r3, #0]
2ffec41a:	4b14      	ldr	r3, [pc, #80]	@ (2ffec46c <clk_stm32_pll_recalc_rate+0x60>)
2ffec41c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
2ffec420:	6822      	ldr	r2, [r4, #0]
2ffec422:	88db      	ldrh	r3, [r3, #6]
2ffec424:	4413      	add	r3, r2
2ffec426:	685c      	ldr	r4, [r3, #4]
2ffec428:	68da      	ldr	r2, [r3, #12]
2ffec42a:	f3c4 4305 	ubfx	r3, r4, #16, #6
2ffec42e:	f3c4 0408 	ubfx	r4, r4, #0, #9
2ffec432:	f412 3f80 	tst.w	r2, #65536	@ 0x10000
2ffec436:	f104 0401 	add.w	r4, r4, #1
2ffec43a:	f103 0301 	add.w	r3, r3, #1
2ffec43e:	d00f      	beq.n	2ffec460 <clk_stm32_pll_recalc_rate+0x54>
2ffec440:	0ce1      	lsrs	r1, r4, #19
2ffec442:	f3c2 02cc 	ubfx	r2, r2, #3, #13
2ffec446:	0364      	lsls	r4, r4, #13
2ffec448:	18a4      	adds	r4, r4, r2
2ffec44a:	fba5 0404 	umull	r0, r4, r5, r4
2ffec44e:	f141 0100 	adc.w	r1, r1, #0
2ffec452:	035a      	lsls	r2, r3, #13
2ffec454:	fb05 4101 	mla	r1, r5, r1, r4
2ffec458:	0cdb      	lsrs	r3, r3, #19
2ffec45a:	f001 e8e8 	blx	2ffed62c <__aeabi_uldivmod>
2ffec45e:	bd38      	pop	{r3, r4, r5, pc}
2ffec460:	fb05 f004 	mul.w	r0, r5, r4
2ffec464:	fbb0 f0f3 	udiv	r0, r0, r3
2ffec468:	e7f9      	b.n	2ffec45e <clk_stm32_pll_recalc_rate+0x52>
2ffec46a:	bf00      	nop
2ffec46c:	2fff090c 	.word	0x2fff090c

2ffec470 <_clk_stm32_pll_enable>:
2ffec470:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec474:	88cc      	ldrh	r4, [r1, #6]
2ffec476:	6805      	ldr	r5, [r0, #0]
2ffec478:	5963      	ldr	r3, [r4, r5]
2ffec47a:	eb04 0805 	add.w	r8, r4, r5
2ffec47e:	07da      	lsls	r2, r3, #31
2ffec480:	d502      	bpl.n	2ffec488 <_clk_stm32_pll_enable+0x18>
2ffec482:	2000      	movs	r0, #0
2ffec484:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffec488:	5963      	ldr	r3, [r4, r5]
2ffec48a:	f8b1 9004 	ldrh.w	r9, [r1, #4]
2ffec48e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
2ffec492:	f043 0301 	orr.w	r3, r3, #1
2ffec496:	5163      	str	r3, [r4, r5]
2ffec498:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffec49c:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffec4a0:	480e      	ldr	r0, [pc, #56]	@ (2ffec4dc <_clk_stm32_pll_enable+0x6c>)
2ffec4a2:	2300      	movs	r3, #0
2ffec4a4:	4a0e      	ldr	r2, [pc, #56]	@ (2ffec4e0 <_clk_stm32_pll_enable+0x70>)
2ffec4a6:	4656      	mov	r6, sl
2ffec4a8:	fba1 0100 	umull	r0, r1, r1, r0
2ffec4ac:	f001 e8be 	blx	2ffed62c <__aeabi_uldivmod>
2ffec4b0:	1980      	adds	r0, r0, r6
2ffec4b2:	eb41 010b 	adc.w	r1, r1, fp
2ffec4b6:	f8d8 3000 	ldr.w	r3, [r8]
2ffec4ba:	079b      	lsls	r3, r3, #30
2ffec4bc:	d4e1      	bmi.n	2ffec482 <_clk_stm32_pll_enable+0x12>
2ffec4be:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffec4c2:	4290      	cmp	r0, r2
2ffec4c4:	eb71 0303 	sbcs.w	r3, r1, r3
2ffec4c8:	d2f5      	bcs.n	2ffec4b6 <_clk_stm32_pll_enable+0x46>
2ffec4ca:	4806      	ldr	r0, [pc, #24]	@ (2ffec4e4 <_clk_stm32_pll_enable+0x74>)
2ffec4cc:	4622      	mov	r2, r4
2ffec4ce:	5963      	ldr	r3, [r4, r5]
2ffec4d0:	4649      	mov	r1, r9
2ffec4d2:	f7fb fa4f 	bl	2ffe7974 <tf_log>
2ffec4d6:	f06f 0015 	mvn.w	r0, #21
2ffec4da:	e7d3      	b.n	2ffec484 <_clk_stm32_pll_enable+0x14>
2ffec4dc:	00030d40 	.word	0x00030d40
2ffec4e0:	000f4240 	.word	0x000f4240
2ffec4e4:	2fff39b0 	.word	0x2fff39b0

2ffec4e8 <clk_stm32_pll_enable>:
2ffec4e8:	b510      	push	{r4, lr}
2ffec4ea:	4604      	mov	r4, r0
2ffec4ec:	f002 fc23 	bl	2ffeed36 <_clk_get>
2ffec4f0:	6883      	ldr	r3, [r0, #8]
2ffec4f2:	4620      	mov	r0, r4
2ffec4f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec4f8:	7819      	ldrb	r1, [r3, #0]
2ffec4fa:	4b02      	ldr	r3, [pc, #8]	@ (2ffec504 <clk_stm32_pll_enable+0x1c>)
2ffec4fc:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
2ffec500:	f7ff bfb6 	b.w	2ffec470 <_clk_stm32_pll_enable>
2ffec504:	2fff090c 	.word	0x2fff090c

2ffec508 <_clk_stm32_pll_disable>:
2ffec508:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec50c:	88cc      	ldrh	r4, [r1, #6]
2ffec50e:	6805      	ldr	r5, [r0, #0]
2ffec510:	5963      	ldr	r3, [r4, r5]
2ffec512:	eb04 0805 	add.w	r8, r4, r5
2ffec516:	07da      	lsls	r2, r3, #31
2ffec518:	d51c      	bpl.n	2ffec554 <_clk_stm32_pll_disable+0x4c>
2ffec51a:	5963      	ldr	r3, [r4, r5]
2ffec51c:	f8b1 9004 	ldrh.w	r9, [r1, #4]
2ffec520:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
2ffec524:	5163      	str	r3, [r4, r5]
2ffec526:	5963      	ldr	r3, [r4, r5]
2ffec528:	f023 0301 	bic.w	r3, r3, #1
2ffec52c:	5163      	str	r3, [r4, r5]
2ffec52e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffec532:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffec536:	4810      	ldr	r0, [pc, #64]	@ (2ffec578 <_clk_stm32_pll_disable+0x70>)
2ffec538:	2300      	movs	r3, #0
2ffec53a:	4a10      	ldr	r2, [pc, #64]	@ (2ffec57c <_clk_stm32_pll_disable+0x74>)
2ffec53c:	4656      	mov	r6, sl
2ffec53e:	fba1 0100 	umull	r0, r1, r1, r0
2ffec542:	f001 e874 	blx	2ffed62c <__aeabi_uldivmod>
2ffec546:	1980      	adds	r0, r0, r6
2ffec548:	eb41 010b 	adc.w	r1, r1, fp
2ffec54c:	f8d8 3000 	ldr.w	r3, [r8]
2ffec550:	079b      	lsls	r3, r3, #30
2ffec552:	d402      	bmi.n	2ffec55a <_clk_stm32_pll_disable+0x52>
2ffec554:	b001      	add	sp, #4
2ffec556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffec55a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffec55e:	4290      	cmp	r0, r2
2ffec560:	eb71 0303 	sbcs.w	r3, r1, r3
2ffec564:	d2f2      	bcs.n	2ffec54c <_clk_stm32_pll_disable+0x44>
2ffec566:	5963      	ldr	r3, [r4, r5]
2ffec568:	4622      	mov	r2, r4
2ffec56a:	4805      	ldr	r0, [pc, #20]	@ (2ffec580 <_clk_stm32_pll_disable+0x78>)
2ffec56c:	4649      	mov	r1, r9
2ffec56e:	b001      	add	sp, #4
2ffec570:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec574:	f7fb b9fe 	b.w	2ffe7974 <tf_log>
2ffec578:	00030d40 	.word	0x00030d40
2ffec57c:	000f4240 	.word	0x000f4240
2ffec580:	2fff39d5 	.word	0x2fff39d5

2ffec584 <clk_stm32_pll_disable>:
2ffec584:	b510      	push	{r4, lr}
2ffec586:	4604      	mov	r4, r0
2ffec588:	f002 fbd5 	bl	2ffeed36 <_clk_get>
2ffec58c:	6883      	ldr	r3, [r0, #8]
2ffec58e:	4620      	mov	r0, r4
2ffec590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec594:	7819      	ldrb	r1, [r3, #0]
2ffec596:	4b02      	ldr	r3, [pc, #8]	@ (2ffec5a0 <clk_stm32_pll_disable+0x1c>)
2ffec598:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
2ffec59c:	f7ff bfb4 	b.w	2ffec508 <_clk_stm32_pll_disable>
2ffec5a0:	2fff090c 	.word	0x2fff090c

2ffec5a4 <clk_stm32_pll_init>:
2ffec5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec5a8:	b085      	sub	sp, #20
2ffec5aa:	4688      	mov	r8, r1
2ffec5ac:	4682      	mov	sl, r0
2ffec5ae:	f7ff fce9 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec5b2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
2ffec5b4:	2230      	movs	r2, #48	@ 0x30
2ffec5b6:	fb02 f208 	mul.w	r2, r2, r8
2ffec5ba:	68c9      	ldr	r1, [r1, #12]
2ffec5bc:	188c      	adds	r4, r1, r2
2ffec5be:	588a      	ldr	r2, [r1, r2]
2ffec5c0:	b922      	cbnz	r2, 2ffec5cc <clk_stm32_pll_init+0x28>
2ffec5c2:	2500      	movs	r5, #0
2ffec5c4:	4628      	mov	r0, r5
2ffec5c6:	b005      	add	sp, #20
2ffec5c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffec5cc:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 2ffec6ec <clk_stm32_pll_init+0x148>
2ffec5d0:	4650      	mov	r0, sl
2ffec5d2:	6861      	ldr	r1, [r4, #4]
2ffec5d4:	f8da 3000 	ldr.w	r3, [sl]
2ffec5d8:	eb0b 07c8 	add.w	r7, fp, r8, lsl #3
2ffec5dc:	f001 020f 	and.w	r2, r1, #15
2ffec5e0:	f3c1 1107 	ubfx	r1, r1, #4, #8
2ffec5e4:	f8b7 9006 	ldrh.w	r9, [r7, #6]
2ffec5e8:	9301      	str	r3, [sp, #4]
2ffec5ea:	f7ff fd47 	bl	2ffec07c <clk_mux_set_parent>
2ffec5ee:	4605      	mov	r5, r0
2ffec5f0:	2800      	cmp	r0, #0
2ffec5f2:	d1e7      	bne.n	2ffec5c4 <clk_stm32_pll_init+0x20>
2ffec5f4:	4639      	mov	r1, r7
2ffec5f6:	4650      	mov	r0, sl
2ffec5f8:	f7ff ff86 	bl	2ffec508 <_clk_stm32_pll_disable>
2ffec5fc:	f8da 2000 	ldr.w	r2, [sl]
2ffec600:	4650      	mov	r0, sl
2ffec602:	68e3      	ldr	r3, [r4, #12]
2ffec604:	68a6      	ldr	r6, [r4, #8]
2ffec606:	444a      	add	r2, r9
2ffec608:	88b9      	ldrh	r1, [r7, #4]
2ffec60a:	9302      	str	r3, [sp, #8]
2ffec60c:	9203      	str	r2, [sp, #12]
2ffec60e:	f002 fd1c 	bl	2ffef04a <_clk_stm32_get_parent_rate>
2ffec612:	f85b 3038 	ldr.w	r3, [fp, r8, lsl #3]
2ffec616:	1c71      	adds	r1, r6, #1
2ffec618:	f8df e0d4 	ldr.w	lr, [pc, #212]	@ 2ffec6f0 <clk_stm32_pll_init+0x14c>
2ffec61c:	fbb0 f0f1 	udiv	r0, r0, r1
2ffec620:	4934      	ldr	r1, [pc, #208]	@ (2ffec6f4 <clk_stm32_pll_init+0x150>)
2ffec622:	f811 8013 	ldrb.w	r8, [r1, r3, lsl #1]
2ffec626:	fb0e f808 	mul.w	r8, lr, r8
2ffec62a:	4540      	cmp	r0, r8
2ffec62c:	d347      	bcc.n	2ffec6be <clk_stm32_pll_init+0x11a>
2ffec62e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
2ffec632:	7849      	ldrb	r1, [r1, #1]
2ffec634:	fb0e f101 	mul.w	r1, lr, r1
2ffec638:	4288      	cmp	r0, r1
2ffec63a:	d840      	bhi.n	2ffec6be <clk_stm32_pll_init+0x11a>
2ffec63c:	9a03      	ldr	r2, [sp, #12]
2ffec63e:	2b00      	cmp	r3, #0
2ffec640:	d13b      	bne.n	2ffec6ba <clk_stm32_pll_init+0x116>
2ffec642:	492d      	ldr	r1, [pc, #180]	@ (2ffec6f8 <clk_stm32_pll_init+0x154>)
2ffec644:	4288      	cmp	r0, r1
2ffec646:	bf34      	ite	cc
2ffec648:	2000      	movcc	r0, #0
2ffec64a:	2001      	movcs	r0, #1
2ffec64c:	0600      	lsls	r0, r0, #24
2ffec64e:	9b02      	ldr	r3, [sp, #8]
2ffec650:	0436      	lsls	r6, r6, #16
2ffec652:	f3c3 0108 	ubfx	r1, r3, #0, #9
2ffec656:	f406 167c 	and.w	r6, r6, #4128768	@ 0x3f0000
2ffec65a:	430e      	orrs	r6, r1
2ffec65c:	2100      	movs	r1, #0
2ffec65e:	4306      	orrs	r6, r0
2ffec660:	6056      	str	r6, [r2, #4]
2ffec662:	60d1      	str	r1, [r2, #12]
2ffec664:	6921      	ldr	r1, [r4, #16]
2ffec666:	88fd      	ldrh	r5, [r7, #6]
2ffec668:	00c9      	lsls	r1, r1, #3
2ffec66a:	60d1      	str	r1, [r2, #12]
2ffec66c:	68d1      	ldr	r1, [r2, #12]
2ffec66e:	f8da 0000 	ldr.w	r0, [sl]
2ffec672:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
2ffec676:	60d1      	str	r1, [r2, #12]
2ffec678:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
2ffec67a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
2ffec67c:	0212      	lsls	r2, r2, #8
2ffec67e:	0409      	lsls	r1, r1, #16
2ffec680:	f402 42fe 	and.w	r2, r2, #32512	@ 0x7f00
2ffec684:	182e      	adds	r6, r5, r0
2ffec686:	f401 01fe 	and.w	r1, r1, #8323072	@ 0x7f0000
2ffec68a:	430a      	orrs	r2, r1
2ffec68c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
2ffec68e:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
2ffec692:	430a      	orrs	r2, r1
2ffec694:	60b2      	str	r2, [r6, #8]
2ffec696:	7d22      	ldrb	r2, [r4, #20]
2ffec698:	b9aa      	cbnz	r2, 2ffec6c6 <clk_stm32_pll_init+0x122>
2ffec69a:	4639      	mov	r1, r7
2ffec69c:	4650      	mov	r0, sl
2ffec69e:	f7ff fee7 	bl	2ffec470 <_clk_stm32_pll_enable>
2ffec6a2:	4605      	mov	r5, r0
2ffec6a4:	2800      	cmp	r0, #0
2ffec6a6:	d18d      	bne.n	2ffec5c4 <clk_stm32_pll_init+0x20>
2ffec6a8:	9b01      	ldr	r3, [sp, #4]
2ffec6aa:	9a01      	ldr	r2, [sp, #4]
2ffec6ac:	f853 3009 	ldr.w	r3, [r3, r9]
2ffec6b0:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
2ffec6b4:	f842 3009 	str.w	r3, [r2, r9]
2ffec6b8:	e783      	b.n	2ffec5c2 <clk_stm32_pll_init+0x1e>
2ffec6ba:	4628      	mov	r0, r5
2ffec6bc:	e7c7      	b.n	2ffec64e <clk_stm32_pll_init+0xaa>
2ffec6be:	f7fb f9f5 	bl	2ffe7aac <console_flush>
2ffec6c2:	f7f7 eeb8 	blx	2ffe4434 <do_panic>
2ffec6c6:	69e2      	ldr	r2, [r4, #28]
2ffec6c8:	490c      	ldr	r1, [pc, #48]	@ (2ffec6fc <clk_stm32_pll_init+0x158>)
2ffec6ca:	ea01 4102 	and.w	r1, r1, r2, lsl #16
2ffec6ce:	6a22      	ldr	r2, [r4, #32]
2ffec6d0:	03d2      	lsls	r2, r2, #15
2ffec6d2:	b292      	uxth	r2, r2
2ffec6d4:	430a      	orrs	r2, r1
2ffec6d6:	69a1      	ldr	r1, [r4, #24]
2ffec6d8:	f3c1 010c 	ubfx	r1, r1, #0, #13
2ffec6dc:	430a      	orrs	r2, r1
2ffec6de:	6132      	str	r2, [r6, #16]
2ffec6e0:	582a      	ldr	r2, [r5, r0]
2ffec6e2:	f042 0204 	orr.w	r2, r2, #4
2ffec6e6:	502a      	str	r2, [r5, r0]
2ffec6e8:	e7d7      	b.n	2ffec69a <clk_stm32_pll_init+0xf6>
2ffec6ea:	bf00      	nop
2ffec6ec:	2fff090c 	.word	0x2fff090c
2ffec6f0:	000f4240 	.word	0x000f4240
2ffec6f4:	2fff3ab0 	.word	0x2fff3ab0
2ffec6f8:	007a1200 	.word	0x007a1200
2ffec6fc:	7fff0000 	.word	0x7fff0000

2ffec700 <stm32mp1_clk_init>:
2ffec700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec704:	b093      	sub	sp, #76	@ 0x4c
2ffec706:	4604      	mov	r4, r0
2ffec708:	f7ff fc3c 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec70c:	4605      	mov	r5, r0
2ffec70e:	f7ff fc39 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec712:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffec714:	68df      	ldr	r7, [r3, #12]
2ffec716:	f7ff fc35 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec71a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffec71c:	68db      	ldr	r3, [r3, #12]
2ffec71e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
2ffec720:	930a      	str	r3, [sp, #40]	@ 0x28
2ffec722:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
2ffec724:	4bad      	ldr	r3, [pc, #692]	@ (2ffec9dc <stm32mp1_clk_init+0x2dc>)
2ffec726:	429a      	cmp	r2, r3
2ffec728:	d007      	beq.n	2ffec73a <stm32mp1_clk_init+0x3a>
2ffec72a:	3301      	adds	r3, #1
2ffec72c:	429a      	cmp	r2, r3
2ffec72e:	f000 8140 	beq.w	2ffec9b2 <stm32mp1_clk_init+0x2b2>
2ffec732:	f7fb f9bb 	bl	2ffe7aac <console_flush>
2ffec736:	f7f7 ee7e 	blx	2ffe4434 <do_panic>
2ffec73a:	2101      	movs	r1, #1
2ffec73c:	4628      	mov	r0, r5
2ffec73e:	f002 fc55 	bl	2ffeefec <_clk_stm32_get_rate>
2ffec742:	9000      	str	r0, [sp, #0]
2ffec744:	9b00      	ldr	r3, [sp, #0]
2ffec746:	2b00      	cmp	r3, #0
2ffec748:	d0f3      	beq.n	2ffec732 <stm32mp1_clk_init+0x32>
2ffec74a:	2300      	movs	r3, #0
2ffec74c:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
2ffec750:	62bb      	str	r3, [r7, #40]	@ 0x28
2ffec752:	62fb      	str	r3, [r7, #44]	@ 0x2c
2ffec754:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffec758:	fba4 3203 	umull	r3, r2, r4, r3
2ffec75c:	f8cd a018 	str.w	sl, [sp, #24]
2ffec760:	9304      	str	r3, [sp, #16]
2ffec762:	f44f 437a 	mov.w	r3, #64000	@ 0xfa00
2ffec766:	9205      	str	r2, [sp, #20]
2ffec768:	fba4 3203 	umull	r3, r2, r4, r3
2ffec76c:	9307      	str	r3, [sp, #28]
2ffec76e:	2340      	movs	r3, #64	@ 0x40
2ffec770:	9208      	str	r2, [sp, #32]
2ffec772:	9303      	str	r3, [sp, #12]
2ffec774:	9b00      	ldr	r3, [sp, #0]
2ffec776:	9a03      	ldr	r2, [sp, #12]
2ffec778:	fbb3 f5f2 	udiv	r5, r3, r2
2ffec77c:	4a98      	ldr	r2, [pc, #608]	@ (2ffec9e0 <stm32mp1_clk_init+0x2e0>)
2ffec77e:	f5a5 03f4 	sub.w	r3, r5, #7995392	@ 0x7a0000
2ffec782:	f5a3 5390 	sub.w	r3, r3, #4608	@ 0x1200
2ffec786:	4293      	cmp	r3, r2
2ffec788:	f200 8153 	bhi.w	2ffeca32 <stm32mp1_clk_init+0x332>
2ffec78c:	9b07      	ldr	r3, [sp, #28]
2ffec78e:	f04f 0b00 	mov.w	fp, #0
2ffec792:	9302      	str	r3, [sp, #8]
2ffec794:	9b08      	ldr	r3, [sp, #32]
2ffec796:	9309      	str	r3, [sp, #36]	@ 0x24
2ffec798:	2301      	movs	r3, #1
2ffec79a:	9301      	str	r3, [sp, #4]
2ffec79c:	9b03      	ldr	r3, [sp, #12]
2ffec79e:	3b01      	subs	r3, #1
2ffec7a0:	9311      	str	r3, [sp, #68]	@ 0x44
2ffec7a2:	9a00      	ldr	r2, [sp, #0]
2ffec7a4:	2300      	movs	r3, #0
2ffec7a6:	9802      	ldr	r0, [sp, #8]
2ffec7a8:	9909      	ldr	r1, [sp, #36]	@ 0x24
2ffec7aa:	f000 ef40 	blx	2ffed62c <__aeabi_uldivmod>
2ffec7ae:	f1b0 0219 	subs.w	r2, r0, #25
2ffec7b2:	4680      	mov	r8, r0
2ffec7b4:	f161 0300 	sbc.w	r3, r1, #0
2ffec7b8:	2a4c      	cmp	r2, #76	@ 0x4c
2ffec7ba:	f173 0300 	sbcs.w	r3, r3, #0
2ffec7be:	460e      	mov	r6, r1
2ffec7c0:	4604      	mov	r4, r0
2ffec7c2:	f080 8123 	bcs.w	2ffeca0c <stm32mp1_clk_init+0x30c>
2ffec7c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffec7c8:	f8dd c008 	ldr.w	ip, [sp, #8]
2ffec7cc:	9802      	ldr	r0, [sp, #8]
2ffec7ce:	0359      	lsls	r1, r3, #13
2ffec7d0:	2300      	movs	r3, #0
2ffec7d2:	9a00      	ldr	r2, [sp, #0]
2ffec7d4:	0340      	lsls	r0, r0, #13
2ffec7d6:	ea41 41dc 	orr.w	r1, r1, ip, lsr #19
2ffec7da:	f000 ef28 	blx	2ffed62c <__aeabi_uldivmod>
2ffec7de:	0373      	lsls	r3, r6, #13
2ffec7e0:	ea43 43d8 	orr.w	r3, r3, r8, lsr #19
2ffec7e4:	ea4f 3848 	mov.w	r8, r8, lsl #13
2ffec7e8:	ebb0 0008 	subs.w	r0, r0, r8
2ffec7ec:	eb61 0103 	sbc.w	r1, r1, r3
2ffec7f0:	f242 0301 	movw	r3, #8193	@ 0x2001
2ffec7f4:	4298      	cmp	r0, r3
2ffec7f6:	f171 0300 	sbcs.w	r3, r1, #0
2ffec7fa:	f080 8107 	bcs.w	2ffeca0c <stm32mp1_clk_init+0x30c>
2ffec7fe:	9b01      	ldr	r3, [sp, #4]
2ffec800:	fba0 8905 	umull	r8, r9, r0, r5
2ffec804:	3b01      	subs	r3, #1
2ffec806:	930c      	str	r3, [sp, #48]	@ 0x30
2ffec808:	1e63      	subs	r3, r4, #1
2ffec80a:	930d      	str	r3, [sp, #52]	@ 0x34
2ffec80c:	fba4 3205 	umull	r3, r2, r4, r5
2ffec810:	fb05 9901 	mla	r9, r5, r1, r9
2ffec814:	930e      	str	r3, [sp, #56]	@ 0x38
2ffec816:	fb05 2306 	mla	r3, r5, r6, r2
2ffec81a:	1c46      	adds	r6, r0, #1
2ffec81c:	f141 0400 	adc.w	r4, r1, #0
2ffec820:	930b      	str	r3, [sp, #44]	@ 0x2c
2ffec822:	1c83      	adds	r3, r0, #2
2ffec824:	930f      	str	r3, [sp, #60]	@ 0x3c
2ffec826:	f141 0300 	adc.w	r3, r1, #0
2ffec82a:	9310      	str	r3, [sp, #64]	@ 0x40
2ffec82c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffec82e:	ea4f 3058 	mov.w	r0, r8, lsr #13
2ffec832:	ea40 40c9 	orr.w	r0, r0, r9, lsl #19
2ffec836:	18c0      	adds	r0, r0, r3
2ffec838:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
2ffec83a:	f8df c1a8 	ldr.w	ip, [pc, #424]	@ 2ffec9e4 <stm32mp1_clk_init+0x2e4>
2ffec83e:	eb43 3159 	adc.w	r1, r3, r9, lsr #13
2ffec842:	4b69      	ldr	r3, [pc, #420]	@ (2ffec9e8 <stm32mp1_clk_init+0x2e8>)
2ffec844:	18c2      	adds	r2, r0, r3
2ffec846:	f161 0300 	sbc.w	r3, r1, #0
2ffec84a:	4594      	cmp	ip, r2
2ffec84c:	f04f 0200 	mov.w	r2, #0
2ffec850:	eb72 0303 	sbcs.w	r3, r2, r3
2ffec854:	f0c0 80d4 	bcc.w	2ffeca00 <stm32mp1_clk_init+0x300>
2ffec858:	9a01      	ldr	r2, [sp, #4]
2ffec85a:	465b      	mov	r3, fp
2ffec85c:	f000 eee6 	blx	2ffed62c <__aeabi_uldivmod>
2ffec860:	f8dd c010 	ldr.w	ip, [sp, #16]
2ffec864:	4603      	mov	r3, r0
2ffec866:	460a      	mov	r2, r1
2ffec868:	4584      	cmp	ip, r0
2ffec86a:	9805      	ldr	r0, [sp, #20]
2ffec86c:	4188      	sbcs	r0, r1
2ffec86e:	f080 80b1 	bcs.w	2ffec9d4 <stm32mp1_clk_init+0x2d4>
2ffec872:	ebb3 030c 	subs.w	r3, r3, ip
2ffec876:	9a05      	ldr	r2, [sp, #20]
2ffec878:	eb61 0102 	sbc.w	r1, r1, r2
2ffec87c:	9a06      	ldr	r2, [sp, #24]
2ffec87e:	4553      	cmp	r3, sl
2ffec880:	eb71 0202 	sbcs.w	r2, r1, r2
2ffec884:	f080 80b8 	bcs.w	2ffec9f8 <stm32mp1_clk_init+0x2f8>
2ffec888:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
2ffec88a:	607a      	str	r2, [r7, #4]
2ffec88c:	2211      	movs	r2, #17
2ffec88e:	603a      	str	r2, [r7, #0]
2ffec890:	9a11      	ldr	r2, [sp, #68]	@ 0x44
2ffec892:	60ba      	str	r2, [r7, #8]
2ffec894:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
2ffec896:	60fa      	str	r2, [r7, #12]
2ffec898:	1e72      	subs	r2, r6, #1
2ffec89a:	613a      	str	r2, [r7, #16]
2ffec89c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
2ffec89e:	627a      	str	r2, [r7, #36]	@ 0x24
2ffec8a0:	ea53 0201 	orrs.w	r2, r3, r1
2ffec8a4:	f040 80aa 	bne.w	2ffec9fc <stm32mp1_clk_init+0x2fc>
2ffec8a8:	f7ff fb6c 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec8ac:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffec8ae:	2102      	movs	r1, #2
2ffec8b0:	4604      	mov	r4, r0
2ffec8b2:	685b      	ldr	r3, [r3, #4]
2ffec8b4:	7c5e      	ldrb	r6, [r3, #17]
2ffec8b6:	7c1d      	ldrb	r5, [r3, #16]
2ffec8b8:	7c9f      	ldrb	r7, [r3, #18]
2ffec8ba:	f002 fb97 	bl	2ffeefec <_clk_stm32_get_rate>
2ffec8be:	b1e8      	cbz	r0, 2ffec8fc <stm32mp1_clk_init+0x1fc>
2ffec8c0:	462b      	mov	r3, r5
2ffec8c2:	4632      	mov	r2, r6
2ffec8c4:	2102      	movs	r1, #2
2ffec8c6:	4620      	mov	r0, r4
2ffec8c8:	f002 fa4a 	bl	2ffeed60 <clk_oscillator_set_bypass>
2ffec8cc:	2102      	movs	r1, #2
2ffec8ce:	4620      	mov	r0, r4
2ffec8d0:	f7ff fc42 	bl	2ffec158 <_clk_stm32_enable>
2ffec8d4:	2102      	movs	r1, #2
2ffec8d6:	4620      	mov	r0, r4
2ffec8d8:	f002 fa36 	bl	2ffeed48 <clk_oscillator_get_data>
2ffec8dc:	6843      	ldr	r3, [r0, #4]
2ffec8de:	b143      	cbz	r3, 2ffec8f2 <stm32mp1_clk_init+0x1f2>
2ffec8e0:	881a      	ldrh	r2, [r3, #0]
2ffec8e2:	6823      	ldr	r3, [r4, #0]
2ffec8e4:	58d3      	ldr	r3, [r2, r3]
2ffec8e6:	055a      	lsls	r2, r3, #21
2ffec8e8:	d503      	bpl.n	2ffec8f2 <stm32mp1_clk_init+0x1f2>
2ffec8ea:	b916      	cbnz	r6, 2ffec8f2 <stm32mp1_clk_init+0x1f2>
2ffec8ec:	2d00      	cmp	r5, #0
2ffec8ee:	f43f af20 	beq.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffec8f2:	463a      	mov	r2, r7
2ffec8f4:	2102      	movs	r1, #2
2ffec8f6:	4620      	mov	r0, r4
2ffec8f8:	f002 fa50 	bl	2ffeed9c <clk_oscillator_set_css>
2ffec8fc:	2105      	movs	r1, #5
2ffec8fe:	4620      	mov	r0, r4
2ffec900:	f002 fa22 	bl	2ffeed48 <clk_oscillator_get_data>
2ffec904:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffec906:	4605      	mov	r5, r0
2ffec908:	2105      	movs	r1, #5
2ffec90a:	4620      	mov	r0, r4
2ffec90c:	685b      	ldr	r3, [r3, #4]
2ffec90e:	f893 7035 	ldrb.w	r7, [r3, #53]	@ 0x35
2ffec912:	f893 8034 	ldrb.w	r8, [r3, #52]	@ 0x34
2ffec916:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
2ffec918:	f002 fb68 	bl	2ffeefec <_clk_stm32_get_rate>
2ffec91c:	b198      	cbz	r0, 2ffec946 <stm32mp1_clk_init+0x246>
2ffec91e:	8ae9      	ldrh	r1, [r5, #22]
2ffec920:	4620      	mov	r0, r4
2ffec922:	f002 fcd8 	bl	2ffef2d6 <_clk_stm32_gate_is_enabled>
2ffec926:	b970      	cbnz	r0, 2ffec946 <stm32mp1_clk_init+0x246>
2ffec928:	4643      	mov	r3, r8
2ffec92a:	463a      	mov	r2, r7
2ffec92c:	2105      	movs	r1, #5
2ffec92e:	4620      	mov	r0, r4
2ffec930:	f002 fa16 	bl	2ffeed60 <clk_oscillator_set_bypass>
2ffec934:	2105      	movs	r1, #5
2ffec936:	4620      	mov	r0, r4
2ffec938:	b2f2      	uxtb	r2, r6
2ffec93a:	f002 fa40 	bl	2ffeedbe <clk_oscillator_set_drive>
2ffec93e:	8ae9      	ldrh	r1, [r5, #22]
2ffec940:	4620      	mov	r0, r4
2ffec942:	f002 f9e6 	bl	2ffeed12 <_clk_stm32_gate_enable>
2ffec946:	2104      	movs	r1, #4
2ffec948:	4620      	mov	r0, r4
2ffec94a:	f7ff fc05 	bl	2ffec158 <_clk_stm32_enable>
2ffec94e:	2103      	movs	r1, #3
2ffec950:	4620      	mov	r0, r4
2ffec952:	f7ff fc01 	bl	2ffec158 <_clk_stm32_enable>
2ffec956:	f7ff fb15 	bl	2ffebf84 <clk_stm32_get_priv>
2ffec95a:	2201      	movs	r2, #1
2ffec95c:	211f      	movs	r1, #31
2ffec95e:	4606      	mov	r6, r0
2ffec960:	f002 fbd4 	bl	2ffef10c <_clk_stm32_set_parent>
2ffec964:	4605      	mov	r5, r0
2ffec966:	2800      	cmp	r0, #0
2ffec968:	d17b      	bne.n	2ffeca62 <stm32mp1_clk_init+0x362>
2ffec96a:	2201      	movs	r2, #1
2ffec96c:	2120      	movs	r1, #32
2ffec96e:	4630      	mov	r0, r6
2ffec970:	f002 fbcc 	bl	2ffef10c <_clk_stm32_set_parent>
2ffec974:	4605      	mov	r5, r0
2ffec976:	2800      	cmp	r0, #0
2ffec978:	d173      	bne.n	2ffeca62 <stm32mp1_clk_init+0x362>
2ffec97a:	2201      	movs	r2, #1
2ffec97c:	2121      	movs	r1, #33	@ 0x21
2ffec97e:	4630      	mov	r0, r6
2ffec980:	f002 fbc4 	bl	2ffef10c <_clk_stm32_set_parent>
2ffec984:	4605      	mov	r5, r0
2ffec986:	2800      	cmp	r0, #0
2ffec988:	d16b      	bne.n	2ffeca62 <stm32mp1_clk_init+0x362>
2ffec98a:	2101      	movs	r1, #1
2ffec98c:	4620      	mov	r0, r4
2ffec98e:	f002 fb2d 	bl	2ffeefec <_clk_stm32_get_rate>
2ffec992:	4b16      	ldr	r3, [pc, #88]	@ (2ffec9ec <stm32mp1_clk_init+0x2ec>)
2ffec994:	4298      	cmp	r0, r3
2ffec996:	f000 8085 	beq.w	2ffecaa4 <stm32mp1_clk_init+0x3a4>
2ffec99a:	4b15      	ldr	r3, [pc, #84]	@ (2ffec9f0 <stm32mp1_clk_init+0x2f0>)
2ffec99c:	4298      	cmp	r0, r3
2ffec99e:	d064      	beq.n	2ffeca6a <stm32mp1_clk_init+0x36a>
2ffec9a0:	4b14      	ldr	r3, [pc, #80]	@ (2ffec9f4 <stm32mp1_clk_init+0x2f4>)
2ffec9a2:	4298      	cmp	r0, r3
2ffec9a4:	f000 80df 	beq.w	2ffecb66 <stm32mp1_clk_init+0x466>
2ffec9a8:	4b0d      	ldr	r3, [pc, #52]	@ (2ffec9e0 <stm32mp1_clk_init+0x2e0>)
2ffec9aa:	4298      	cmp	r0, r3
2ffec9ac:	d157      	bne.n	2ffeca5e <stm32mp1_clk_init+0x35e>
2ffec9ae:	2603      	movs	r6, #3
2ffec9b0:	e05c      	b.n	2ffeca6c <stm32mp1_clk_init+0x36c>
2ffec9b2:	2102      	movs	r1, #2
2ffec9b4:	e6c2      	b.n	2ffec73c <stm32mp1_clk_init+0x3c>
2ffec9b6:	eb15 0808 	adds.w	r8, r5, r8
2ffec9ba:	f149 0900 	adc.w	r9, r9, #0
2ffec9be:	1c72      	adds	r2, r6, #1
2ffec9c0:	f144 0300 	adc.w	r3, r4, #0
2ffec9c4:	f5a6 5600 	sub.w	r6, r6, #8192	@ 0x2000
2ffec9c8:	3e01      	subs	r6, #1
2ffec9ca:	4326      	orrs	r6, r4
2ffec9cc:	d01e      	beq.n	2ffeca0c <stm32mp1_clk_init+0x30c>
2ffec9ce:	4616      	mov	r6, r2
2ffec9d0:	461c      	mov	r4, r3
2ffec9d2:	e72b      	b.n	2ffec82c <stm32mp1_clk_init+0x12c>
2ffec9d4:	9904      	ldr	r1, [sp, #16]
2ffec9d6:	1acb      	subs	r3, r1, r3
2ffec9d8:	9905      	ldr	r1, [sp, #20]
2ffec9da:	e74d      	b.n	2ffec878 <stm32mp1_clk_init+0x178>
2ffec9dc:	04000030 	.word	0x04000030
2ffec9e0:	007a1200 	.word	0x007a1200
2ffec9e4:	1e0a6e00 	.word	0x1e0a6e00
2ffec9e8:	e26fa400 	.word	0xe26fa400
2ffec9ec:	03d09000 	.word	0x03d09000
2ffec9f0:	01e84800 	.word	0x01e84800
2ffec9f4:	00f42400 	.word	0x00f42400
2ffec9f8:	9906      	ldr	r1, [sp, #24]
2ffec9fa:	4653      	mov	r3, sl
2ffec9fc:	9106      	str	r1, [sp, #24]
2ffec9fe:	469a      	mov	sl, r3
2ffeca00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
2ffeca02:	9a10      	ldr	r2, [sp, #64]	@ 0x40
2ffeca04:	42a2      	cmp	r2, r4
2ffeca06:	bf08      	it	eq
2ffeca08:	42b3      	cmpeq	r3, r6
2ffeca0a:	d1d4      	bne.n	2ffec9b6 <stm32mp1_clk_init+0x2b6>
2ffeca0c:	9a02      	ldr	r2, [sp, #8]
2ffeca0e:	9b07      	ldr	r3, [sp, #28]
2ffeca10:	189b      	adds	r3, r3, r2
2ffeca12:	9302      	str	r3, [sp, #8]
2ffeca14:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2ffeca16:	9b08      	ldr	r3, [sp, #32]
2ffeca18:	eb43 0302 	adc.w	r3, r3, r2
2ffeca1c:	9309      	str	r3, [sp, #36]	@ 0x24
2ffeca1e:	9b01      	ldr	r3, [sp, #4]
2ffeca20:	3301      	adds	r3, #1
2ffeca22:	f14b 0b00 	adc.w	fp, fp, #0
2ffeca26:	9301      	str	r3, [sp, #4]
2ffeca28:	3b81      	subs	r3, #129	@ 0x81
2ffeca2a:	ea53 030b 	orrs.w	r3, r3, fp
2ffeca2e:	f47f aeb8 	bne.w	2ffec7a2 <stm32mp1_clk_init+0xa2>
2ffeca32:	9b07      	ldr	r3, [sp, #28]
2ffeca34:	9a04      	ldr	r2, [sp, #16]
2ffeca36:	1a9b      	subs	r3, r3, r2
2ffeca38:	9307      	str	r3, [sp, #28]
2ffeca3a:	9a05      	ldr	r2, [sp, #20]
2ffeca3c:	9b08      	ldr	r3, [sp, #32]
2ffeca3e:	eb63 0302 	sbc.w	r3, r3, r2
2ffeca42:	9308      	str	r3, [sp, #32]
2ffeca44:	9b03      	ldr	r3, [sp, #12]
2ffeca46:	3b01      	subs	r3, #1
2ffeca48:	9303      	str	r3, [sp, #12]
2ffeca4a:	f47f ae93 	bne.w	2ffec774 <stm32mp1_clk_init+0x74>
2ffeca4e:	9b06      	ldr	r3, [sp, #24]
2ffeca50:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
2ffeca54:	bf08      	it	eq
2ffeca56:	f1ba 3fff 	cmpeq.w	sl, #4294967295	@ 0xffffffff
2ffeca5a:	f47f af25 	bne.w	2ffec8a8 <stm32mp1_clk_init+0x1a8>
2ffeca5e:	f06f 0515 	mvn.w	r5, #21
2ffeca62:	4628      	mov	r0, r5
2ffeca64:	b013      	add	sp, #76	@ 0x4c
2ffeca66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeca6a:	2601      	movs	r6, #1
2ffeca6c:	f001 fc3c 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffeca70:	f8d0 3440 	ldr.w	r3, [r0, #1088]	@ 0x440
2ffeca74:	f500 6585 	add.w	r5, r0, #1064	@ 0x428
2ffeca78:	f023 0303 	bic.w	r3, r3, #3
2ffeca7c:	4333      	orrs	r3, r6
2ffeca7e:	f8c0 3440 	str.w	r3, [r0, #1088]	@ 0x440
2ffeca82:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeca86:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2ffeca8a:	4869      	ldr	r0, [pc, #420]	@ (2ffecc30 <stm32mp1_clk_init+0x530>)
2ffeca8c:	2300      	movs	r3, #0
2ffeca8e:	4a69      	ldr	r2, [pc, #420]	@ (2ffecc34 <stm32mp1_clk_init+0x534>)
2ffeca90:	fba1 0100 	umull	r0, r1, r1, r0
2ffeca94:	f000 edca 	blx	2ffed62c <__aeabi_uldivmod>
2ffeca98:	19c0      	adds	r0, r0, r7
2ffeca9a:	eb41 0108 	adc.w	r1, r1, r8
2ffeca9e:	682b      	ldr	r3, [r5, #0]
2ffecaa0:	075b      	lsls	r3, r3, #29
2ffecaa2:	d562      	bpl.n	2ffecb6a <stm32mp1_clk_init+0x46a>
2ffecaa4:	213d      	movs	r1, #61	@ 0x3d
2ffecaa6:	4620      	mov	r0, r4
2ffecaa8:	2500      	movs	r5, #0
2ffecaaa:	f002 fa9f 	bl	2ffeefec <_clk_stm32_get_rate>
2ffecaae:	f7fc f86b 	bl	2ffe8b88 <stm32mp_stgen_config>
2ffecab2:	6b26      	ldr	r6, [r4, #48]	@ 0x30
2ffecab4:	69b3      	ldr	r3, [r6, #24]
2ffecab6:	429d      	cmp	r5, r3
2ffecab8:	d360      	bcc.n	2ffecb7c <stm32mp1_clk_init+0x47c>
2ffecaba:	2100      	movs	r1, #0
2ffecabc:	4620      	mov	r0, r4
2ffecabe:	f7ff fd71 	bl	2ffec5a4 <clk_stm32_pll_init>
2ffecac2:	2800      	cmp	r0, #0
2ffecac4:	f47f ae35 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecac8:	2101      	movs	r1, #1
2ffecaca:	4620      	mov	r0, r4
2ffecacc:	f7ff fd6a 	bl	2ffec5a4 <clk_stm32_pll_init>
2ffecad0:	2800      	cmp	r0, #0
2ffecad2:	f47f ae2e 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecad6:	2102      	movs	r1, #2
2ffecad8:	4620      	mov	r0, r4
2ffecada:	f7ff fd63 	bl	2ffec5a4 <clk_stm32_pll_init>
2ffecade:	2800      	cmp	r0, #0
2ffecae0:	f47f ae27 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecae4:	2103      	movs	r1, #3
2ffecae6:	4620      	mov	r0, r4
2ffecae8:	f7ff fd5c 	bl	2ffec5a4 <clk_stm32_pll_init>
2ffecaec:	4605      	mov	r5, r0
2ffecaee:	2800      	cmp	r0, #0
2ffecaf0:	f47f ae1f 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecaf4:	2105      	movs	r1, #5
2ffecaf6:	4620      	mov	r0, r4
2ffecaf8:	f002 fa78 	bl	2ffeefec <_clk_stm32_get_rate>
2ffecafc:	b130      	cbz	r0, 2ffecb0c <stm32mp1_clk_init+0x40c>
2ffecafe:	2105      	movs	r1, #5
2ffecb00:	4620      	mov	r0, r4
2ffecb02:	f002 fbe5 	bl	2ffef2d0 <clk_oscillator_wait_ready_on>
2ffecb06:	2800      	cmp	r0, #0
2ffecb08:	f47f ae13 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecb0c:	f8d4 9030 	ldr.w	r9, [r4, #48]	@ 0x30
2ffecb10:	2600      	movs	r6, #0
2ffecb12:	f8df b124 	ldr.w	fp, [pc, #292]	@ 2ffecc38 <stm32mp1_clk_init+0x538>
2ffecb16:	46b0      	mov	r8, r6
2ffecb18:	f8d9 3010 	ldr.w	r3, [r9, #16]
2ffecb1c:	429e      	cmp	r6, r3
2ffecb1e:	d33b      	bcc.n	2ffecb98 <stm32mp1_clk_init+0x498>
2ffecb20:	f1b8 0f00 	cmp.w	r8, #0
2ffecb24:	d007      	beq.n	2ffecb36 <stm32mp1_clk_init+0x436>
2ffecb26:	2203      	movs	r2, #3
2ffecb28:	2109      	movs	r1, #9
2ffecb2a:	4620      	mov	r0, r4
2ffecb2c:	f7ff faa6 	bl	2ffec07c <clk_mux_set_parent>
2ffecb30:	2800      	cmp	r0, #0
2ffecb32:	f47f adfe 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecb36:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffecb38:	4620      	mov	r0, r4
2ffecb3a:	2105      	movs	r1, #5
2ffecb3c:	685b      	ldr	r3, [r3, #4]
2ffecb3e:	f893 2036 	ldrb.w	r2, [r3, #54]	@ 0x36
2ffecb42:	f002 f92b 	bl	2ffeed9c <clk_oscillator_set_css>
2ffecb46:	213d      	movs	r1, #61	@ 0x3d
2ffecb48:	4620      	mov	r0, r4
2ffecb4a:	f002 fa4f 	bl	2ffeefec <_clk_stm32_get_rate>
2ffecb4e:	f7fc f81b 	bl	2ffe8b88 <stm32mp_stgen_config>
2ffecb52:	6822      	ldr	r2, [r4, #0]
2ffecb54:	f8d2 35c0 	ldr.w	r3, [r2, #1472]	@ 0x5c0
2ffecb58:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffecb5c:	f8c2 35c0 	str.w	r3, [r2, #1472]	@ 0x5c0
2ffecb60:	f7ff fb80 	bl	2ffec264 <clk_stm32_enable_critical_clocks>
2ffecb64:	e77d      	b.n	2ffeca62 <stm32mp1_clk_init+0x362>
2ffecb66:	2602      	movs	r6, #2
2ffecb68:	e780      	b.n	2ffeca6c <stm32mp1_clk_init+0x36c>
2ffecb6a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffecb6e:	4290      	cmp	r0, r2
2ffecb70:	eb71 0303 	sbcs.w	r3, r1, r3
2ffecb74:	d293      	bcs.n	2ffeca9e <stm32mp1_clk_init+0x39e>
2ffecb76:	f06f 053b 	mvn.w	r5, #59	@ 0x3b
2ffecb7a:	e772      	b.n	2ffeca62 <stm32mp1_clk_init+0x362>
2ffecb7c:	69f3      	ldr	r3, [r6, #28]
2ffecb7e:	4620      	mov	r0, r4
2ffecb80:	f853 1025 	ldr.w	r1, [r3, r5, lsl #2]
2ffecb84:	b2ca      	uxtb	r2, r1
2ffecb86:	f3c1 2107 	ubfx	r1, r1, #8, #8
2ffecb8a:	f7ff fb81 	bl	2ffec290 <clk_stm32_set_div>
2ffecb8e:	2800      	cmp	r0, #0
2ffecb90:	f47f adcf 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecb94:	3501      	adds	r5, #1
2ffecb96:	e78d      	b.n	2ffecab4 <stm32mp1_clk_init+0x3b4>
2ffecb98:	f8d9 3014 	ldr.w	r3, [r9, #20]
2ffecb9c:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
2ffecba0:	4b26      	ldr	r3, [pc, #152]	@ (2ffecc3c <stm32mp1_clk_init+0x53c>)
2ffecba2:	459a      	cmp	sl, r3
2ffecba4:	d040      	beq.n	2ffecc28 <stm32mp1_clk_init+0x528>
2ffecba6:	45da      	cmp	sl, fp
2ffecba8:	d033      	beq.n	2ffecc12 <stm32mp1_clk_init+0x512>
2ffecbaa:	ea4f 629a 	mov.w	r2, sl, lsr #26
2ffecbae:	f02a 417c 	bic.w	r1, sl, #4227858432	@ 0xfc000000
2ffecbb2:	2a01      	cmp	r2, #1
2ffecbb4:	d023      	beq.n	2ffecbfe <stm32mp1_clk_init+0x4fe>
2ffecbb6:	2a02      	cmp	r2, #2
2ffecbb8:	f47f adbb 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecbbc:	f3c1 27c8 	ubfx	r7, r1, #11, #9
2ffecbc0:	4620      	mov	r0, r4
2ffecbc2:	4639      	mov	r1, r7
2ffecbc4:	f002 f9ff 	bl	2ffeefc6 <clk_get_index>
2ffecbc8:	2845      	cmp	r0, #69	@ 0x45
2ffecbca:	4601      	mov	r1, r0
2ffecbcc:	d023      	beq.n	2ffecc16 <stm32mp1_clk_init+0x516>
2ffecbce:	4639      	mov	r1, r7
2ffecbd0:	4620      	mov	r0, r4
2ffecbd2:	f002 f9f8 	bl	2ffeefc6 <clk_get_index>
2ffecbd6:	1e07      	subs	r7, r0, #0
2ffecbd8:	f6ff adab 	blt.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecbdc:	f00a 020f 	and.w	r2, sl, #15
2ffecbe0:	4639      	mov	r1, r7
2ffecbe2:	4620      	mov	r0, r4
2ffecbe4:	f002 f9ae 	bl	2ffeef44 <_clk_stm32_set_parent_by_index>
2ffecbe8:	2800      	cmp	r0, #0
2ffecbea:	f47f ada2 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecbee:	f41a 6f80 	tst.w	sl, #1024	@ 0x400
2ffecbf2:	b2b9      	uxth	r1, r7
2ffecbf4:	4620      	mov	r0, r4
2ffecbf6:	d014      	beq.n	2ffecc22 <stm32mp1_clk_init+0x522>
2ffecbf8:	f002 fa3e 	bl	2ffef078 <clk_stm32_enable_call_ops>
2ffecbfc:	e009      	b.n	2ffecc12 <stm32mp1_clk_init+0x512>
2ffecbfe:	f3c1 1107 	ubfx	r1, r1, #4, #8
2ffecc02:	f00a 020f 	and.w	r2, sl, #15
2ffecc06:	4620      	mov	r0, r4
2ffecc08:	f7ff fa38 	bl	2ffec07c <clk_mux_set_parent>
2ffecc0c:	2800      	cmp	r0, #0
2ffecc0e:	f47f ad90 	bne.w	2ffec732 <stm32mp1_clk_init+0x32>
2ffecc12:	3601      	adds	r6, #1
2ffecc14:	e780      	b.n	2ffecb18 <stm32mp1_clk_init+0x418>
2ffecc16:	4620      	mov	r0, r4
2ffecc18:	f002 fa66 	bl	2ffef0e8 <_clk_stm32_is_enabled>
2ffecc1c:	2800      	cmp	r0, #0
2ffecc1e:	d0d6      	beq.n	2ffecbce <stm32mp1_clk_init+0x4ce>
2ffecc20:	e7f7      	b.n	2ffecc12 <stm32mp1_clk_init+0x512>
2ffecc22:	f002 fa54 	bl	2ffef0ce <clk_stm32_disable_call_ops>
2ffecc26:	e7f4      	b.n	2ffecc12 <stm32mp1_clk_init+0x512>
2ffecc28:	f04f 0801 	mov.w	r8, #1
2ffecc2c:	e7f1      	b.n	2ffecc12 <stm32mp1_clk_init+0x512>
2ffecc2e:	bf00      	nop
2ffecc30:	00030d40 	.word	0x00030d40
2ffecc34:	000f4240 	.word	0x000f4240
2ffecc38:	08011800 	.word	0x08011800
2ffecc3c:	04000093 	.word	0x04000093

2ffecc40 <stm32mp1_clk_probe>:
2ffecc40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffecc44:	b08b      	sub	sp, #44	@ 0x2c
2ffecc46:	2500      	movs	r5, #0
2ffecc48:	a806      	add	r0, sp, #24
2ffecc4a:	9506      	str	r5, [sp, #24]
2ffecc4c:	f7fc fed6 	bl	2ffe99fc <fdt_get_address>
2ffecc50:	b920      	cbnz	r0, 2ffecc5c <stm32mp1_clk_probe+0x1c>
2ffecc52:	f06f 0001 	mvn.w	r0, #1
2ffecc56:	b00b      	add	sp, #44	@ 0x2c
2ffecc58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffecc5c:	4a92      	ldr	r2, [pc, #584]	@ (2ffecea8 <stm32mp1_clk_probe+0x268>)
2ffecc5e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffecc62:	9806      	ldr	r0, [sp, #24]
2ffecc64:	f002 ff64 	bl	2ffefb30 <fdt_node_offset_by_compatible>
2ffecc68:	1e03      	subs	r3, r0, #0
2ffecc6a:	9303      	str	r3, [sp, #12]
2ffecc6c:	da03      	bge.n	2ffecc76 <stm32mp1_clk_probe+0x36>
2ffecc6e:	f7fa ff1d 	bl	2ffe7aac <console_flush>
2ffecc72:	f7f7 ebe0 	blx	2ffe4434 <do_panic>
2ffecc76:	9e06      	ldr	r6, [sp, #24]
2ffecc78:	498c      	ldr	r1, [pc, #560]	@ (2ffeceac <stm32mp1_clk_probe+0x26c>)
2ffecc7a:	4630      	mov	r0, r6
2ffecc7c:	f002 fe7f 	bl	2ffef97e <fdt_path_offset>
2ffecc80:	1e03      	subs	r3, r0, #0
2ffecc82:	9305      	str	r3, [sp, #20]
2ffecc84:	f280 8092 	bge.w	2ffecdac <stm32mp1_clk_probe+0x16c>
2ffecc88:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffecc8c:	e7e3      	b.n	2ffecc56 <stm32mp1_clk_probe+0x16>
2ffecc8e:	2d05      	cmp	r5, #5
2ffecc90:	d817      	bhi.n	2ffeccc2 <stm32mp1_clk_probe+0x82>
2ffecc92:	4a87      	ldr	r2, [pc, #540]	@ (2ffeceb0 <stm32mp1_clk_probe+0x270>)
2ffecc94:	231c      	movs	r3, #28
2ffecc96:	436b      	muls	r3, r5
2ffecc98:	58d3      	ldr	r3, [r2, r3]
2ffecc9a:	9304      	str	r3, [sp, #16]
2ffecc9c:	b18b      	cbz	r3, 2ffeccc2 <stm32mp1_clk_probe+0x82>
2ffecc9e:	f8d7 b004 	ldr.w	fp, [r7, #4]
2ffecca2:	f04f 080c 	mov.w	r8, #12
2ffecca6:	fb08 f805 	mul.w	r8, r8, r5
2ffeccaa:	9905      	ldr	r1, [sp, #20]
2ffeccac:	2300      	movs	r3, #0
2ffeccae:	f84b 3008 	str.w	r3, [fp, r8]
2ffeccb2:	4630      	mov	r0, r6
2ffeccb4:	eb0b 0908 	add.w	r9, fp, r8
2ffeccb8:	f002 fc95 	bl	2ffef5e6 <fdt_first_subnode>
2ffeccbc:	2800      	cmp	r0, #0
2ffeccbe:	4604      	mov	r4, r0
2ffeccc0:	da25      	bge.n	2ffecd0e <stm32mp1_clk_probe+0xce>
2ffeccc2:	3501      	adds	r5, #1
2ffeccc4:	683b      	ldr	r3, [r7, #0]
2ffeccc6:	429d      	cmp	r5, r3
2ffeccc8:	d3e1      	bcc.n	2ffecc8e <stm32mp1_clk_probe+0x4e>
2ffeccca:	9c06      	ldr	r4, [sp, #24]
2ffecccc:	f04f 0801 	mov.w	r8, #1
2ffeccd0:	68bb      	ldr	r3, [r7, #8]
2ffeccd2:	4598      	cmp	r8, r3
2ffeccd4:	d36c      	bcc.n	2ffecdb0 <stm32mp1_clk_probe+0x170>
2ffeccd6:	4c77      	ldr	r4, [pc, #476]	@ (2ffeceb4 <stm32mp1_clk_probe+0x274>)
2ffeccd8:	4a77      	ldr	r2, [pc, #476]	@ (2ffeceb8 <stm32mp1_clk_probe+0x278>)
2ffeccda:	9400      	str	r4, [sp, #0]
2ffeccdc:	69fb      	ldr	r3, [r7, #28]
2ffeccde:	9903      	ldr	r1, [sp, #12]
2ffecce0:	9806      	ldr	r0, [sp, #24]
2ffecce2:	f002 fb1d 	bl	2ffef320 <stm32_clk_parse_fdt_by_name>
2ffecce6:	2800      	cmp	r0, #0
2ffecce8:	d1b5      	bne.n	2ffecc56 <stm32mp1_clk_probe+0x16>
2ffeccea:	4a74      	ldr	r2, [pc, #464]	@ (2ffecebc <stm32mp1_clk_probe+0x27c>)
2ffeccec:	3c08      	subs	r4, #8
2ffeccee:	9400      	str	r4, [sp, #0]
2ffeccf0:	697b      	ldr	r3, [r7, #20]
2ffeccf2:	9903      	ldr	r1, [sp, #12]
2ffeccf4:	9806      	ldr	r0, [sp, #24]
2ffeccf6:	f002 fb13 	bl	2ffef320 <stm32_clk_parse_fdt_by_name>
2ffeccfa:	2800      	cmp	r0, #0
2ffeccfc:	d1ab      	bne.n	2ffecc56 <stm32mp1_clk_probe+0x16>
2ffeccfe:	4870      	ldr	r0, [pc, #448]	@ (2ffecec0 <stm32mp1_clk_probe+0x280>)
2ffecd00:	f04f 41a0 	mov.w	r1, #1342177280	@ 0x50000000
2ffecd04:	b00b      	add	sp, #44	@ 0x2c
2ffecd06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffecd0a:	f7ff bb4f 	b.w	2ffec3ac <clk_stm32_init>
2ffecd0e:	2300      	movs	r3, #0
2ffecd10:	aa07      	add	r2, sp, #28
2ffecd12:	9307      	str	r3, [sp, #28]
2ffecd14:	4621      	mov	r1, r4
2ffecd16:	4630      	mov	r0, r6
2ffecd18:	f002 fce3 	bl	2ffef6e2 <fdt_get_name>
2ffecd1c:	b918      	cbnz	r0, 2ffecd26 <stm32mp1_clk_probe+0xe6>
2ffecd1e:	9b07      	ldr	r3, [sp, #28]
2ffecd20:	2b00      	cmp	r3, #0
2ffecd22:	dace      	bge.n	2ffeccc2 <stm32mp1_clk_probe+0x82>
2ffecd24:	e7a3      	b.n	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffecd26:	9a07      	ldr	r2, [sp, #28]
2ffecd28:	9904      	ldr	r1, [sp, #16]
2ffecd2a:	f003 f86d 	bl	2ffefe08 <strncmp>
2ffecd2e:	4682      	mov	sl, r0
2ffecd30:	b120      	cbz	r0, 2ffecd3c <stm32mp1_clk_probe+0xfc>
2ffecd32:	4621      	mov	r1, r4
2ffecd34:	4630      	mov	r0, r6
2ffecd36:	f002 fc69 	bl	2ffef60c <fdt_next_subnode>
2ffecd3a:	e7bf      	b.n	2ffeccbc <stm32mp1_clk_probe+0x7c>
2ffecd3c:	4620      	mov	r0, r4
2ffecd3e:	f7fc fe77 	bl	2ffe9a30 <fdt_get_status>
2ffecd42:	2800      	cmp	r0, #0
2ffecd44:	d0f5      	beq.n	2ffecd32 <stm32mp1_clk_probe+0xf2>
2ffecd46:	4a5f      	ldr	r2, [pc, #380]	@ (2ffecec4 <stm32mp1_clk_probe+0x284>)
2ffecd48:	ab07      	add	r3, sp, #28
2ffecd4a:	4621      	mov	r1, r4
2ffecd4c:	4630      	mov	r0, r6
2ffecd4e:	f002 fdbb 	bl	2ffef8c8 <fdt_getprop>
2ffecd52:	2800      	cmp	r0, #0
2ffecd54:	d0e3      	beq.n	2ffecd1e <stm32mp1_clk_probe+0xde>
2ffecd56:	6803      	ldr	r3, [r0, #0]
2ffecd58:	4621      	mov	r1, r4
2ffecd5a:	4a5b      	ldr	r2, [pc, #364]	@ (2ffecec8 <stm32mp1_clk_probe+0x288>)
2ffecd5c:	4630      	mov	r0, r6
2ffecd5e:	ba1b      	rev	r3, r3
2ffecd60:	f84b 3008 	str.w	r3, [fp, r8]
2ffecd64:	4653      	mov	r3, sl
2ffecd66:	f002 fdaf 	bl	2ffef8c8 <fdt_getprop>
2ffecd6a:	b110      	cbz	r0, 2ffecd72 <stm32mp1_clk_probe+0x132>
2ffecd6c:	2301      	movs	r3, #1
2ffecd6e:	f889 3004 	strb.w	r3, [r9, #4]
2ffecd72:	4a56      	ldr	r2, [pc, #344]	@ (2ffececc <stm32mp1_clk_probe+0x28c>)
2ffecd74:	2300      	movs	r3, #0
2ffecd76:	4621      	mov	r1, r4
2ffecd78:	4630      	mov	r0, r6
2ffecd7a:	f002 fda5 	bl	2ffef8c8 <fdt_getprop>
2ffecd7e:	b110      	cbz	r0, 2ffecd86 <stm32mp1_clk_probe+0x146>
2ffecd80:	2301      	movs	r3, #1
2ffecd82:	f889 3005 	strb.w	r3, [r9, #5]
2ffecd86:	4a52      	ldr	r2, [pc, #328]	@ (2ffeced0 <stm32mp1_clk_probe+0x290>)
2ffecd88:	2300      	movs	r3, #0
2ffecd8a:	4621      	mov	r1, r4
2ffecd8c:	4630      	mov	r0, r6
2ffecd8e:	f002 fd9b 	bl	2ffef8c8 <fdt_getprop>
2ffecd92:	b110      	cbz	r0, 2ffecd9a <stm32mp1_clk_probe+0x15a>
2ffecd94:	2301      	movs	r3, #1
2ffecd96:	f889 3006 	strb.w	r3, [r9, #6]
2ffecd9a:	4a4e      	ldr	r2, [pc, #312]	@ (2ffeced4 <stm32mp1_clk_probe+0x294>)
2ffecd9c:	2302      	movs	r3, #2
2ffecd9e:	4621      	mov	r1, r4
2ffecda0:	4630      	mov	r0, r6
2ffecda2:	f001 f803 	bl	2ffeddac <fdt_read_uint32_default>
2ffecda6:	f8c9 0008 	str.w	r0, [r9, #8]
2ffecdaa:	e78a      	b.n	2ffeccc2 <stm32mp1_clk_probe+0x82>
2ffecdac:	4f4a      	ldr	r7, [pc, #296]	@ (2ffeced8 <stm32mp1_clk_probe+0x298>)
2ffecdae:	e789      	b.n	2ffeccc4 <stm32mp1_clk_probe+0x84>
2ffecdb0:	4a4a      	ldr	r2, [pc, #296]	@ (2ffecedc <stm32mp1_clk_probe+0x29c>)
2ffecdb2:	4643      	mov	r3, r8
2ffecdb4:	f8d7 b00c 	ldr.w	fp, [r7, #12]
2ffecdb8:	210c      	movs	r1, #12
2ffecdba:	a807      	add	r0, sp, #28
2ffecdbc:	f002 ffe4 	bl	2ffefd88 <snprintf>
2ffecdc0:	9903      	ldr	r1, [sp, #12]
2ffecdc2:	aa07      	add	r2, sp, #28
2ffecdc4:	4620      	mov	r0, r4
2ffecdc6:	f002 fcfa 	bl	2ffef7be <fdt_subnode_offset>
2ffecdca:	4605      	mov	r5, r0
2ffecdcc:	f7fc fe20 	bl	2ffe9a10 <fdt_check_node>
2ffecdd0:	b910      	cbnz	r0, 2ffecdd8 <stm32mp1_clk_probe+0x198>
2ffecdd2:	f108 0801 	add.w	r8, r8, #1
2ffecdd6:	e77b      	b.n	2ffeccd0 <stm32mp1_clk_probe+0x90>
2ffecdd8:	4a41      	ldr	r2, [pc, #260]	@ (2ffecee0 <stm32mp1_clk_probe+0x2a0>)
2ffecdda:	2300      	movs	r3, #0
2ffecddc:	4629      	mov	r1, r5
2ffecdde:	4620      	mov	r0, r4
2ffecde0:	f002 fd72 	bl	2ffef8c8 <fdt_getprop>
2ffecde4:	2800      	cmp	r0, #0
2ffecde6:	f43f af42 	beq.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffecdea:	6801      	ldr	r1, [r0, #0]
2ffecdec:	4620      	mov	r0, r4
2ffecdee:	ba09      	rev	r1, r1
2ffecdf0:	f002 fe27 	bl	2ffefa42 <fdt_node_offset_by_phandle>
2ffecdf4:	1e03      	subs	r3, r0, #0
2ffecdf6:	9304      	str	r3, [sp, #16]
2ffecdf8:	f6ff af39 	blt.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffecdfc:	4a39      	ldr	r2, [pc, #228]	@ (2ffecee4 <stm32mp1_clk_probe+0x2a4>)
2ffecdfe:	4601      	mov	r1, r0
2ffece00:	2300      	movs	r3, #0
2ffece02:	4620      	mov	r0, r4
2ffece04:	f002 fd60 	bl	2ffef8c8 <fdt_getprop>
2ffece08:	2800      	cmp	r0, #0
2ffece0a:	f43f af30 	beq.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffece0e:	6801      	ldr	r1, [r0, #0]
2ffece10:	4620      	mov	r0, r4
2ffece12:	ba09      	rev	r1, r1
2ffece14:	f002 fe15 	bl	2ffefa42 <fdt_node_offset_by_phandle>
2ffece18:	1e06      	subs	r6, r0, #0
2ffece1a:	f6ff af28 	blt.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffece1e:	4a32      	ldr	r2, [pc, #200]	@ (2ffecee8 <stm32mp1_clk_probe+0x2a8>)
2ffece20:	f04f 0a30 	mov.w	sl, #48	@ 0x30
2ffece24:	fb0a fa08 	mul.w	sl, sl, r8
2ffece28:	4631      	mov	r1, r6
2ffece2a:	4620      	mov	r0, r4
2ffece2c:	eb0b 050a 	add.w	r5, fp, sl
2ffece30:	f105 0308 	add.w	r3, r5, #8
2ffece34:	9300      	str	r3, [sp, #0]
2ffece36:	2302      	movs	r3, #2
2ffece38:	f7f8 f862 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffece3c:	4681      	mov	r9, r0
2ffece3e:	2800      	cmp	r0, #0
2ffece40:	f47f af15 	bne.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffece44:	4a29      	ldr	r2, [pc, #164]	@ (2ffeceec <stm32mp1_clk_probe+0x2ac>)
2ffece46:	f105 0318 	add.w	r3, r5, #24
2ffece4a:	9300      	str	r3, [sp, #0]
2ffece4c:	4631      	mov	r1, r6
2ffece4e:	2303      	movs	r3, #3
2ffece50:	4620      	mov	r0, r4
2ffece52:	f7f8 f855 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffece56:	fab0 f380 	clz	r3, r0
2ffece5a:	3001      	adds	r0, #1
2ffece5c:	2801      	cmp	r0, #1
2ffece5e:	ea4f 1353 	mov.w	r3, r3, lsr #5
2ffece62:	752b      	strb	r3, [r5, #20]
2ffece64:	f63f af03 	bhi.w	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffece68:	4a21      	ldr	r2, [pc, #132]	@ (2ffecef0 <stm32mp1_clk_probe+0x2b0>)
2ffece6a:	2371      	movs	r3, #113	@ 0x71
2ffece6c:	f84b 300a 	str.w	r3, [fp, sl]
2ffece70:	4631      	mov	r1, r6
2ffece72:	464b      	mov	r3, r9
2ffece74:	4620      	mov	r0, r4
2ffece76:	3524      	adds	r5, #36	@ 0x24
2ffece78:	f000 ff98 	bl	2ffeddac <fdt_read_uint32_default>
2ffece7c:	f845 0c14 	str.w	r0, [r5, #-20]
2ffece80:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffece84:	4a1b      	ldr	r2, [pc, #108]	@ (2ffecef4 <stm32mp1_clk_probe+0x2b4>)
2ffece86:	4631      	mov	r1, r6
2ffece88:	4620      	mov	r0, r4
2ffece8a:	f000 ff8f 	bl	2ffeddac <fdt_read_uint32_default>
2ffece8e:	f845 0c20 	str.w	r0, [r5, #-32]
2ffece92:	2303      	movs	r3, #3
2ffece94:	4a18      	ldr	r2, [pc, #96]	@ (2ffecef8 <stm32mp1_clk_probe+0x2b8>)
2ffece96:	4620      	mov	r0, r4
2ffece98:	9904      	ldr	r1, [sp, #16]
2ffece9a:	9500      	str	r5, [sp, #0]
2ffece9c:	f7f8 f830 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffecea0:	2800      	cmp	r0, #0
2ffecea2:	d096      	beq.n	2ffecdd2 <stm32mp1_clk_probe+0x192>
2ffecea4:	e6e3      	b.n	2ffecc6e <stm32mp1_clk_probe+0x2e>
2ffecea6:	bf00      	nop
2ffecea8:	2fff39f9 	.word	0x2fff39f9
2ffeceac:	2fff3932 	.word	0x2fff3932
2ffeceb0:	2fff4594 	.word	0x2fff4594
2ffeceb4:	2fff4540 	.word	0x2fff4540
2ffeceb8:	2fff3a6b 	.word	0x2fff3a6b
2ffecebc:	2fff3a75 	.word	0x2fff3a75
2ffecec0:	2fff44f0 	.word	0x2fff44f0
2ffecec4:	2fff3565 	.word	0x2fff3565
2ffecec8:	2fff3a0a 	.word	0x2fff3a0a
2ffececc:	2fff3a14 	.word	0x2fff3a14
2ffeced0:	2fff3a21 	.word	0x2fff3a21
2ffeced4:	2fff3a28 	.word	0x2fff3a28
2ffeced8:	2fff4528 	.word	0x2fff4528
2ffecedc:	2fff3a31 	.word	0x2fff3a31
2ffecee0:	2fff3a3b 	.word	0x2fff3a3b
2ffecee4:	2fff3a42 	.word	0x2fff3a42
2ffecee8:	2fff3a4d 	.word	0x2fff3a4d
2ffeceec:	2fff3a53 	.word	0x2fff3a53
2ffecef0:	2fff3a57 	.word	0x2fff3a57
2ffecef4:	2fff3a7b 	.word	0x2fff3a7b
2ffecef8:	2fff3a5c 	.word	0x2fff3a5c

2ffecefc <seed_error_recovery>:
2ffecefc:	4a0a      	ldr	r2, [pc, #40]	@ (2ffecf28 <seed_error_recovery+0x2c>)
2ffecefe:	b508      	push	{r3, lr}
2ffecf00:	6811      	ldr	r1, [r2, #0]
2ffecf02:	684b      	ldr	r3, [r1, #4]
2ffecf04:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
2ffecf08:	604b      	str	r3, [r1, #4]
2ffecf0a:	f3bf 8f5f 	dmb	sy
2ffecf0e:	6813      	ldr	r3, [r2, #0]
2ffecf10:	685b      	ldr	r3, [r3, #4]
2ffecf12:	065b      	lsls	r3, r3, #25
2ffecf14:	d506      	bpl.n	2ffecf24 <seed_error_recovery+0x28>
2ffecf16:	4805      	ldr	r0, [pc, #20]	@ (2ffecf2c <seed_error_recovery+0x30>)
2ffecf18:	f7fa fd2c 	bl	2ffe7974 <tf_log>
2ffecf1c:	f7fa fdc6 	bl	2ffe7aac <console_flush>
2ffecf20:	f7f7 ea88 	blx	2ffe4434 <do_panic>
2ffecf24:	bd08      	pop	{r3, pc}
2ffecf26:	bf00      	nop
2ffecf28:	2fff5b90 	.word	0x2fff5b90
2ffecf2c:	2fff3ab6 	.word	0x2fff3ab6

2ffecf30 <stm32_rng_read>:
2ffecf30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffecf34:	4605      	mov	r5, r0
2ffecf36:	4f22      	ldr	r7, [pc, #136]	@ (2ffecfc0 <stm32_rng_read+0x90>)
2ffecf38:	460c      	mov	r4, r1
2ffecf3a:	683b      	ldr	r3, [r7, #0]
2ffecf3c:	2b00      	cmp	r3, #0
2ffecf3e:	d03b      	beq.n	2ffecfb8 <stm32_rng_read+0x88>
2ffecf40:	4606      	mov	r6, r0
2ffecf42:	2c00      	cmp	r4, #0
2ffecf44:	d036      	beq.n	2ffecfb4 <stm32_rng_read+0x84>
2ffecf46:	f242 7810 	movw	r8, #10000	@ 0x2710
2ffecf4a:	683b      	ldr	r3, [r7, #0]
2ffecf4c:	685b      	ldr	r3, [r3, #4]
2ffecf4e:	f013 0f44 	tst.w	r3, #68	@ 0x44
2ffecf52:	d001      	beq.n	2ffecf58 <stm32_rng_read+0x28>
2ffecf54:	f7ff ffd2 	bl	2ffecefc <seed_error_recovery>
2ffecf58:	200a      	movs	r0, #10
2ffecf5a:	f7fb fd61 	bl	2ffe8a20 <udelay>
2ffecf5e:	f1b8 0801 	subs.w	r8, r8, #1
2ffecf62:	d109      	bne.n	2ffecf78 <stm32_rng_read+0x48>
2ffecf64:	1b72      	subs	r2, r6, r5
2ffecf66:	4641      	mov	r1, r8
2ffecf68:	4628      	mov	r0, r5
2ffecf6a:	f002 fe39 	bl	2ffefbe0 <memset>
2ffecf6e:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffecf72:	b003      	add	sp, #12
2ffecf74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffecf78:	683b      	ldr	r3, [r7, #0]
2ffecf7a:	685b      	ldr	r3, [r3, #4]
2ffecf7c:	07d9      	lsls	r1, r3, #31
2ffecf7e:	d5e4      	bpl.n	2ffecf4a <stm32_rng_read+0x1a>
2ffecf80:	f04f 0804 	mov.w	r8, #4
2ffecf84:	683b      	ldr	r3, [r7, #0]
2ffecf86:	685a      	ldr	r2, [r3, #4]
2ffecf88:	07d2      	lsls	r2, r2, #31
2ffecf8a:	d5da      	bpl.n	2ffecf42 <stm32_rng_read+0x12>
2ffecf8c:	689b      	ldr	r3, [r3, #8]
2ffecf8e:	2c04      	cmp	r4, #4
2ffecf90:	46a1      	mov	r9, r4
2ffecf92:	bf28      	it	cs
2ffecf94:	f04f 0904 	movcs.w	r9, #4
2ffecf98:	9301      	str	r3, [sp, #4]
2ffecf9a:	4630      	mov	r0, r6
2ffecf9c:	eba4 0409 	sub.w	r4, r4, r9
2ffecfa0:	464a      	mov	r2, r9
2ffecfa2:	444e      	add	r6, r9
2ffecfa4:	a901      	add	r1, sp, #4
2ffecfa6:	f002 fdfa 	bl	2ffefb9e <memcpy>
2ffecfaa:	f1b8 0801 	subs.w	r8, r8, #1
2ffecfae:	d0c8      	beq.n	2ffecf42 <stm32_rng_read+0x12>
2ffecfb0:	2c00      	cmp	r4, #0
2ffecfb2:	d1e7      	bne.n	2ffecf84 <stm32_rng_read+0x54>
2ffecfb4:	2000      	movs	r0, #0
2ffecfb6:	e7dc      	b.n	2ffecf72 <stm32_rng_read+0x42>
2ffecfb8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffecfbc:	e7d9      	b.n	2ffecf72 <stm32_rng_read+0x42>
2ffecfbe:	bf00      	nop
2ffecfc0:	2fff5b90 	.word	0x2fff5b90

2ffecfc4 <stm32_rng_init>:
2ffecfc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffecfc8:	b087      	sub	sp, #28
2ffecfca:	4e4a      	ldr	r6, [pc, #296]	@ (2ffed0f4 <stm32_rng_init+0x130>)
2ffecfcc:	6834      	ldr	r4, [r6, #0]
2ffecfce:	b11c      	cbz	r4, 2ffecfd8 <stm32_rng_init+0x14>
2ffecfd0:	2000      	movs	r0, #0
2ffecfd2:	b007      	add	sp, #28
2ffecfd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffecfd8:	a801      	add	r0, sp, #4
2ffecfda:	f7fc fd0f 	bl	2ffe99fc <fdt_get_address>
2ffecfde:	b918      	cbnz	r0, 2ffecfe8 <stm32_rng_init+0x24>
2ffecfe0:	f7fa fd64 	bl	2ffe7aac <console_flush>
2ffecfe4:	f7f7 ea26 	blx	2ffe4434 <do_panic>
2ffecfe8:	4a43      	ldr	r2, [pc, #268]	@ (2ffed0f8 <stm32_rng_init+0x134>)
2ffecfea:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffecfee:	a802      	add	r0, sp, #8
2ffecff0:	f7fc fdac 	bl	2ffe9b4c <dt_get_node>
2ffecff4:	2800      	cmp	r0, #0
2ffecff6:	dbeb      	blt.n	2ffecfd0 <stm32_rng_init+0xc>
2ffecff8:	9b05      	ldr	r3, [sp, #20]
2ffecffa:	2b00      	cmp	r3, #0
2ffecffc:	d0e8      	beq.n	2ffecfd0 <stm32_rng_init+0xc>
2ffecffe:	9b02      	ldr	r3, [sp, #8]
2ffed000:	b91b      	cbnz	r3, 2ffed00a <stm32_rng_init+0x46>
2ffed002:	483e      	ldr	r0, [pc, #248]	@ (2ffed0fc <stm32_rng_init+0x138>)
2ffed004:	21f3      	movs	r1, #243	@ 0xf3
2ffed006:	f000 fc75 	bl	2ffed8f4 <__assert>
2ffed00a:	9803      	ldr	r0, [sp, #12]
2ffed00c:	6033      	str	r3, [r6, #0]
2ffed00e:	2800      	cmp	r0, #0
2ffed010:	dbe6      	blt.n	2ffecfe0 <stm32_rng_init+0x1c>
2ffed012:	6070      	str	r0, [r6, #4]
2ffed014:	f7fb fca4 	bl	2ffe8960 <clk_enable>
2ffed018:	9804      	ldr	r0, [sp, #16]
2ffed01a:	2800      	cmp	r0, #0
2ffed01c:	db0f      	blt.n	2ffed03e <stm32_rng_init+0x7a>
2ffed01e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffed022:	f7fe fdd1 	bl	2ffebbc8 <stm32mp_reset_assert>
2ffed026:	2800      	cmp	r0, #0
2ffed028:	d1da      	bne.n	2ffecfe0 <stm32_rng_init+0x1c>
2ffed02a:	2014      	movs	r0, #20
2ffed02c:	f7fb fcf8 	bl	2ffe8a20 <udelay>
2ffed030:	9804      	ldr	r0, [sp, #16]
2ffed032:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffed036:	f7fe fdf7 	bl	2ffebc28 <stm32mp_reset_deassert>
2ffed03a:	2800      	cmp	r0, #0
2ffed03c:	d1d0      	bne.n	2ffecfe0 <stm32_rng_init+0x1c>
2ffed03e:	6870      	ldr	r0, [r6, #4]
2ffed040:	f7fb fcb2 	bl	2ffe89a8 <clk_get_rate>
2ffed044:	4b2e      	ldr	r3, [pc, #184]	@ (2ffed100 <stm32_rng_init+0x13c>)
2ffed046:	fa20 f204 	lsr.w	r2, r0, r4
2ffed04a:	429a      	cmp	r2, r3
2ffed04c:	d836      	bhi.n	2ffed0bc <stm32_rng_init+0xf8>
2ffed04e:	6835      	ldr	r5, [r6, #0]
2ffed050:	4a2c      	ldr	r2, [pc, #176]	@ (2ffed104 <stm32_rng_init+0x140>)
2ffed052:	682b      	ldr	r3, [r5, #0]
2ffed054:	401a      	ands	r2, r3
2ffed056:	4b2c      	ldr	r3, [pc, #176]	@ (2ffed108 <stm32_rng_init+0x144>)
2ffed058:	4313      	orrs	r3, r2
2ffed05a:	602b      	str	r3, [r5, #0]
2ffed05c:	682b      	ldr	r3, [r5, #0]
2ffed05e:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
2ffed062:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
2ffed066:	602b      	str	r3, [r5, #0]
2ffed068:	682b      	ldr	r3, [r5, #0]
2ffed06a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
2ffed06e:	f043 0304 	orr.w	r3, r3, #4
2ffed072:	602b      	str	r3, [r5, #0]
2ffed074:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffed078:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2ffed07c:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 2ffed10c <stm32_rng_init+0x148>
2ffed080:	2300      	movs	r3, #0
2ffed082:	4a23      	ldr	r2, [pc, #140]	@ (2ffed110 <stm32_rng_init+0x14c>)
2ffed084:	464c      	mov	r4, r9
2ffed086:	fba0 0108 	umull	r0, r1, r0, r8
2ffed08a:	f04f 0900 	mov.w	r9, #0
2ffed08e:	f000 eace 	blx	2ffed62c <__aeabi_uldivmod>
2ffed092:	1904      	adds	r4, r0, r4
2ffed094:	eb41 070a 	adc.w	r7, r1, sl
2ffed098:	6869      	ldr	r1, [r5, #4]
2ffed09a:	4645      	mov	r5, r8
2ffed09c:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 2ffed110 <stm32_rng_init+0x14c>
2ffed0a0:	07cb      	lsls	r3, r1, #31
2ffed0a2:	d495      	bmi.n	2ffecfd0 <stm32_rng_init+0xc>
2ffed0a4:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffed0a8:	4294      	cmp	r4, r2
2ffed0aa:	eb77 0303 	sbcs.w	r3, r7, r3
2ffed0ae:	d207      	bcs.n	2ffed0c0 <stm32_rng_init+0xfc>
2ffed0b0:	4818      	ldr	r0, [pc, #96]	@ (2ffed114 <stm32_rng_init+0x150>)
2ffed0b2:	f7fa fc5f 	bl	2ffe7974 <tf_log>
2ffed0b6:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffed0ba:	e78a      	b.n	2ffecfd2 <stm32_rng_init+0xe>
2ffed0bc:	3401      	adds	r4, #1
2ffed0be:	e7c2      	b.n	2ffed046 <stm32_rng_init+0x82>
2ffed0c0:	f011 0f44 	tst.w	r1, #68	@ 0x44
2ffed0c4:	d00f      	beq.n	2ffed0e6 <stm32_rng_init+0x122>
2ffed0c6:	f7ff ff19 	bl	2ffecefc <seed_error_recovery>
2ffed0ca:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffed0ce:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffed0d2:	4642      	mov	r2, r8
2ffed0d4:	464b      	mov	r3, r9
2ffed0d6:	fba0 0105 	umull	r0, r1, r0, r5
2ffed0da:	4654      	mov	r4, sl
2ffed0dc:	f000 eaa6 	blx	2ffed62c <__aeabi_uldivmod>
2ffed0e0:	1904      	adds	r4, r0, r4
2ffed0e2:	eb41 070b 	adc.w	r7, r1, fp
2ffed0e6:	200a      	movs	r0, #10
2ffed0e8:	f7fb fc9a 	bl	2ffe8a20 <udelay>
2ffed0ec:	6833      	ldr	r3, [r6, #0]
2ffed0ee:	6859      	ldr	r1, [r3, #4]
2ffed0f0:	e7d6      	b.n	2ffed0a0 <stm32_rng_init+0xdc>
2ffed0f2:	bf00      	nop
2ffed0f4:	2fff5b90 	.word	0x2fff5b90
2ffed0f8:	2fff3ac2 	.word	0x2fff3ac2
2ffed0fc:	2fff3ad3 	.word	0x2fff3ad3
2ffed100:	02dc6c00 	.word	0x02dc6c00
2ffed104:	fc0000ff 	.word	0xfc0000ff
2ffed108:	40f40f20 	.word	0x40f40f20
2ffed10c:	000186a0 	.word	0x000186a0
2ffed110:	000f4240 	.word	0x000f4240
2ffed114:	2fff3af1 	.word	0x2fff3af1

2ffed118 <wait_computation_completed>:
2ffed118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffed11c:	4606      	mov	r6, r0
2ffed11e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffed122:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2ffed126:	480e      	ldr	r0, [pc, #56]	@ (2ffed160 <wait_computation_completed+0x48>)
2ffed128:	2300      	movs	r3, #0
2ffed12a:	4a0e      	ldr	r2, [pc, #56]	@ (2ffed164 <wait_computation_completed+0x4c>)
2ffed12c:	fba1 0100 	umull	r0, r1, r1, r0
2ffed130:	f000 ea7c 	blx	2ffed62c <__aeabi_uldivmod>
2ffed134:	19c3      	adds	r3, r0, r7
2ffed136:	eb41 0108 	adc.w	r1, r1, r8
2ffed13a:	6872      	ldr	r2, [r6, #4]
2ffed13c:	07d2      	lsls	r2, r2, #31
2ffed13e:	d501      	bpl.n	2ffed144 <wait_computation_completed+0x2c>
2ffed140:	2000      	movs	r0, #0
2ffed142:	e00b      	b.n	2ffed15c <wait_computation_completed+0x44>
2ffed144:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffed148:	42a3      	cmp	r3, r4
2ffed14a:	eb71 0205 	sbcs.w	r2, r1, r5
2ffed14e:	d2f4      	bcs.n	2ffed13a <wait_computation_completed+0x22>
2ffed150:	4805      	ldr	r0, [pc, #20]	@ (2ffed168 <wait_computation_completed+0x50>)
2ffed152:	4906      	ldr	r1, [pc, #24]	@ (2ffed16c <wait_computation_completed+0x54>)
2ffed154:	f7fa fc0e 	bl	2ffe7974 <tf_log>
2ffed158:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffed15c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed160:	000186a0 	.word	0x000186a0
2ffed164:	000f4240 	.word	0x000f4240
2ffed168:	2fff3b03 	.word	0x2fff3b03
2ffed16c:	2fff3bd7 	.word	0x2fff3bd7

2ffed170 <restore_context>:
2ffed170:	b538      	push	{r3, r4, r5, lr}
2ffed172:	4604      	mov	r4, r0
2ffed174:	6800      	ldr	r0, [r0, #0]
2ffed176:	6803      	ldr	r3, [r0, #0]
2ffed178:	07da      	lsls	r2, r3, #31
2ffed17a:	d462      	bmi.n	2ffed242 <restore_context+0xd2>
2ffed17c:	6803      	ldr	r3, [r0, #0]
2ffed17e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffed182:	6003      	str	r3, [r0, #0]
2ffed184:	6863      	ldr	r3, [r4, #4]
2ffed186:	6003      	str	r3, [r0, #0]
2ffed188:	6803      	ldr	r3, [r0, #0]
2ffed18a:	f023 0301 	bic.w	r3, r3, #1
2ffed18e:	6003      	str	r3, [r0, #0]
2ffed190:	6863      	ldr	r3, [r4, #4]
2ffed192:	f413 2f80 	tst.w	r3, #262144	@ 0x40000
2ffed196:	6803      	ldr	r3, [r0, #0]
2ffed198:	bf0c      	ite	eq
2ffed19a:	f423 2380 	biceq.w	r3, r3, #262144	@ 0x40000
2ffed19e:	f443 2380 	orrne.w	r3, r3, #262144	@ 0x40000
2ffed1a2:	6003      	str	r3, [r0, #0]
2ffed1a4:	6863      	ldr	r3, [r4, #4]
2ffed1a6:	f013 4fe0 	tst.w	r3, #1879048192	@ 0x70000000
2ffed1aa:	d115      	bne.n	2ffed1d8 <restore_context+0x68>
2ffed1ac:	f104 030c 	add.w	r3, r4, #12
2ffed1b0:	f104 011c 	add.w	r1, r4, #28
2ffed1b4:	f853 5f04 	ldr.w	r5, [r3, #4]!
2ffed1b8:	18c2      	adds	r2, r0, r3
2ffed1ba:	1b12      	subs	r2, r2, r4
2ffed1bc:	4299      	cmp	r1, r3
2ffed1be:	6015      	str	r5, [r2, #0]
2ffed1c0:	d1f8      	bne.n	2ffed1b4 <restore_context+0x44>
2ffed1c2:	6863      	ldr	r3, [r4, #4]
2ffed1c4:	035b      	lsls	r3, r3, #13
2ffed1c6:	d507      	bpl.n	2ffed1d8 <restore_context+0x68>
2ffed1c8:	6a23      	ldr	r3, [r4, #32]
2ffed1ca:	6303      	str	r3, [r0, #48]	@ 0x30
2ffed1cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed1ce:	6343      	str	r3, [r0, #52]	@ 0x34
2ffed1d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffed1d2:	6383      	str	r3, [r0, #56]	@ 0x38
2ffed1d4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffed1d6:	63c3      	str	r3, [r0, #60]	@ 0x3c
2ffed1d8:	6863      	ldr	r3, [r4, #4]
2ffed1da:	4a1b      	ldr	r2, [pc, #108]	@ (2ffed248 <restore_context+0xd8>)
2ffed1dc:	401a      	ands	r2, r3
2ffed1de:	b17a      	cbz	r2, 2ffed200 <restore_context+0x90>
2ffed1e0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
2ffed1e2:	6823      	ldr	r3, [r4, #0]
2ffed1e4:	621a      	str	r2, [r3, #32]
2ffed1e6:	6b62      	ldr	r2, [r4, #52]	@ 0x34
2ffed1e8:	625a      	str	r2, [r3, #36]	@ 0x24
2ffed1ea:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
2ffed1ec:	629a      	str	r2, [r3, #40]	@ 0x28
2ffed1ee:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
2ffed1f0:	62da      	str	r2, [r3, #44]	@ 0x2c
2ffed1f2:	6822      	ldr	r2, [r4, #0]
2ffed1f4:	2000      	movs	r0, #0
2ffed1f6:	6813      	ldr	r3, [r2, #0]
2ffed1f8:	f043 0301 	orr.w	r3, r3, #1
2ffed1fc:	6013      	str	r3, [r2, #0]
2ffed1fe:	bd38      	pop	{r3, r4, r5, pc}
2ffed200:	f003 0318 	and.w	r3, r3, #24
2ffed204:	2b10      	cmp	r3, #16
2ffed206:	d116      	bne.n	2ffed236 <restore_context+0xc6>
2ffed208:	6803      	ldr	r3, [r0, #0]
2ffed20a:	f023 0318 	bic.w	r3, r3, #24
2ffed20e:	f043 0308 	orr.w	r3, r3, #8
2ffed212:	6003      	str	r3, [r0, #0]
2ffed214:	6803      	ldr	r3, [r0, #0]
2ffed216:	f043 0301 	orr.w	r3, r3, #1
2ffed21a:	6003      	str	r3, [r0, #0]
2ffed21c:	f7ff ff7c 	bl	2ffed118 <wait_computation_completed>
2ffed220:	2800      	cmp	r0, #0
2ffed222:	d1ec      	bne.n	2ffed1fe <restore_context+0x8e>
2ffed224:	6820      	ldr	r0, [r4, #0]
2ffed226:	f002 f8c8 	bl	2ffef3ba <clear_computation_completed>
2ffed22a:	6803      	ldr	r3, [r0, #0]
2ffed22c:	f023 0318 	bic.w	r3, r3, #24
2ffed230:	f043 0310 	orr.w	r3, r3, #16
2ffed234:	6003      	str	r3, [r0, #0]
2ffed236:	6862      	ldr	r2, [r4, #4]
2ffed238:	4b04      	ldr	r3, [pc, #16]	@ (2ffed24c <restore_context+0xdc>)
2ffed23a:	4013      	ands	r3, r2
2ffed23c:	2b00      	cmp	r3, #0
2ffed23e:	d0d8      	beq.n	2ffed1f2 <restore_context+0x82>
2ffed240:	e7ce      	b.n	2ffed1e0 <restore_context+0x70>
2ffed242:	f06f 0015 	mvn.w	r0, #21
2ffed246:	e7da      	b.n	2ffed1fe <restore_context+0x8e>
2ffed248:	00010040 	.word	0x00010040
2ffed24c:	00010060 	.word	0x00010060

2ffed250 <stm32_saes_driver_init>:
2ffed250:	b510      	push	{r4, lr}
2ffed252:	b086      	sub	sp, #24
2ffed254:	4c20      	ldr	r4, [pc, #128]	@ (2ffed2d8 <stm32_saes_driver_init+0x88>)
2ffed256:	6823      	ldr	r3, [r4, #0]
2ffed258:	2b00      	cmp	r3, #0
2ffed25a:	d13a      	bne.n	2ffed2d2 <stm32_saes_driver_init+0x82>
2ffed25c:	a801      	add	r0, sp, #4
2ffed25e:	f7fc fbcd 	bl	2ffe99fc <fdt_get_address>
2ffed262:	b918      	cbnz	r0, 2ffed26c <stm32_saes_driver_init+0x1c>
2ffed264:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffed268:	b006      	add	sp, #24
2ffed26a:	bd10      	pop	{r4, pc}
2ffed26c:	4a1b      	ldr	r2, [pc, #108]	@ (2ffed2dc <stm32_saes_driver_init+0x8c>)
2ffed26e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffed272:	a802      	add	r0, sp, #8
2ffed274:	f7fc fc6a 	bl	2ffe9b4c <dt_get_node>
2ffed278:	2800      	cmp	r0, #0
2ffed27a:	da03      	bge.n	2ffed284 <stm32_saes_driver_init+0x34>
2ffed27c:	4818      	ldr	r0, [pc, #96]	@ (2ffed2e0 <stm32_saes_driver_init+0x90>)
2ffed27e:	f7fa fb79 	bl	2ffe7974 <tf_log>
2ffed282:	e7ef      	b.n	2ffed264 <stm32_saes_driver_init+0x14>
2ffed284:	9b05      	ldr	r3, [sp, #20]
2ffed286:	2b00      	cmp	r3, #0
2ffed288:	d0ec      	beq.n	2ffed264 <stm32_saes_driver_init+0x14>
2ffed28a:	9a02      	ldr	r2, [sp, #8]
2ffed28c:	b1a2      	cbz	r2, 2ffed2b8 <stm32_saes_driver_init+0x68>
2ffed28e:	9803      	ldr	r0, [sp, #12]
2ffed290:	2800      	cmp	r0, #0
2ffed292:	db11      	blt.n	2ffed2b8 <stm32_saes_driver_init+0x68>
2ffed294:	9b04      	ldr	r3, [sp, #16]
2ffed296:	2b00      	cmp	r3, #0
2ffed298:	db0e      	blt.n	2ffed2b8 <stm32_saes_driver_init+0x68>
2ffed29a:	6022      	str	r2, [r4, #0]
2ffed29c:	6060      	str	r0, [r4, #4]
2ffed29e:	60a3      	str	r3, [r4, #8]
2ffed2a0:	f7fb fb5e 	bl	2ffe8960 <clk_enable>
2ffed2a4:	68a0      	ldr	r0, [r4, #8]
2ffed2a6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffed2aa:	f7fe fc8d 	bl	2ffebbc8 <stm32mp_reset_assert>
2ffed2ae:	b130      	cbz	r0, 2ffed2be <stm32_saes_driver_init+0x6e>
2ffed2b0:	f7fa fbfc 	bl	2ffe7aac <console_flush>
2ffed2b4:	f7f7 e8be 	blx	2ffe4434 <do_panic>
2ffed2b8:	f06f 000e 	mvn.w	r0, #14
2ffed2bc:	e7d4      	b.n	2ffed268 <stm32_saes_driver_init+0x18>
2ffed2be:	2014      	movs	r0, #20
2ffed2c0:	f7fb fbae 	bl	2ffe8a20 <udelay>
2ffed2c4:	68a0      	ldr	r0, [r4, #8]
2ffed2c6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffed2ca:	f7fe fcad 	bl	2ffebc28 <stm32mp_reset_deassert>
2ffed2ce:	2800      	cmp	r0, #0
2ffed2d0:	d1ee      	bne.n	2ffed2b0 <stm32_saes_driver_init+0x60>
2ffed2d2:	2000      	movs	r0, #0
2ffed2d4:	e7c8      	b.n	2ffed268 <stm32_saes_driver_init+0x18>
2ffed2d6:	bf00      	nop
2ffed2d8:	2fff5b98 	.word	0x2fff5b98
2ffed2dc:	2fff3b11 	.word	0x2fff3b11
2ffed2e0:	2fff3b1f 	.word	0x2fff3b1f

2ffed2e4 <stm32_saes_init>:
2ffed2e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffed2e6:	4604      	mov	r4, r0
2ffed2e8:	4f7b      	ldr	r7, [pc, #492]	@ (2ffed4d8 <stm32_saes_init+0x1f4>)
2ffed2ea:	f04f 0c00 	mov.w	ip, #0
2ffed2ee:	e9dd 0606 	ldrd	r0, r6, [sp, #24]
2ffed2f2:	683f      	ldr	r7, [r7, #0]
2ffed2f4:	9d08      	ldr	r5, [sp, #32]
2ffed2f6:	f010 0f03 	tst.w	r0, #3
2ffed2fa:	f8c4 c008 	str.w	ip, [r4, #8]
2ffed2fe:	f8c4 c00c 	str.w	ip, [r4, #12]
2ffed302:	e9c4 7c00 	strd	r7, ip, [r4]
2ffed306:	d004      	beq.n	2ffed312 <stm32_saes_init+0x2e>
2ffed308:	f240 11b3 	movw	r1, #435	@ 0x1b3
2ffed30c:	4873      	ldr	r0, [pc, #460]	@ (2ffed4dc <stm32_saes_init+0x1f8>)
2ffed30e:	f000 faf1 	bl	2ffed8f4 <__assert>
2ffed312:	f015 0f03 	tst.w	r5, #3
2ffed316:	d002      	beq.n	2ffed31e <stm32_saes_init+0x3a>
2ffed318:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
2ffed31c:	e7f6      	b.n	2ffed30c <stm32_saes_init+0x28>
2ffed31e:	b161      	cbz	r1, 2ffed33a <stm32_saes_init+0x56>
2ffed320:	6861      	ldr	r1, [r4, #4]
2ffed322:	f021 0118 	bic.w	r1, r1, #24
2ffed326:	f041 0110 	orr.w	r1, r1, #16
2ffed32a:	6061      	str	r1, [r4, #4]
2ffed32c:	2a04      	cmp	r2, #4
2ffed32e:	d818      	bhi.n	2ffed362 <stm32_saes_init+0x7e>
2ffed330:	e8df f002 	tbb	[pc, r2]
2ffed334:	2a221a07 	.word	0x2a221a07
2ffed338:	32          	.byte	0x32
2ffed339:	00          	.byte	0x00
2ffed33a:	6861      	ldr	r1, [r4, #4]
2ffed33c:	f021 0118 	bic.w	r1, r1, #24
2ffed340:	e7f3      	b.n	2ffed32a <stm32_saes_init+0x46>
2ffed342:	6861      	ldr	r1, [r4, #4]
2ffed344:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
2ffed348:	f021 0160 	bic.w	r1, r1, #96	@ 0x60
2ffed34c:	6061      	str	r1, [r4, #4]
2ffed34e:	2e10      	cmp	r6, #16
2ffed350:	6861      	ldr	r1, [r4, #4]
2ffed352:	f021 0106 	bic.w	r1, r1, #6
2ffed356:	f041 0104 	orr.w	r1, r1, #4
2ffed35a:	6061      	str	r1, [r4, #4]
2ffed35c:	d024      	beq.n	2ffed3a8 <stm32_saes_init+0xc4>
2ffed35e:	2e20      	cmp	r6, #32
2ffed360:	d02d      	beq.n	2ffed3be <stm32_saes_init+0xda>
2ffed362:	f06f 0015 	mvn.w	r0, #21
2ffed366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffed368:	6861      	ldr	r1, [r4, #4]
2ffed36a:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
2ffed36e:	f021 0160 	bic.w	r1, r1, #96	@ 0x60
2ffed372:	f041 0120 	orr.w	r1, r1, #32
2ffed376:	e7e9      	b.n	2ffed34c <stm32_saes_init+0x68>
2ffed378:	6861      	ldr	r1, [r4, #4]
2ffed37a:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
2ffed37e:	f021 0160 	bic.w	r1, r1, #96	@ 0x60
2ffed382:	f041 0140 	orr.w	r1, r1, #64	@ 0x40
2ffed386:	e7e1      	b.n	2ffed34c <stm32_saes_init+0x68>
2ffed388:	6861      	ldr	r1, [r4, #4]
2ffed38a:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
2ffed38e:	f021 0160 	bic.w	r1, r1, #96	@ 0x60
2ffed392:	f041 0160 	orr.w	r1, r1, #96	@ 0x60
2ffed396:	e7d9      	b.n	2ffed34c <stm32_saes_init+0x68>
2ffed398:	6861      	ldr	r1, [r4, #4]
2ffed39a:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
2ffed39e:	f021 0160 	bic.w	r1, r1, #96	@ 0x60
2ffed3a2:	f441 3180 	orr.w	r1, r1, #65536	@ 0x10000
2ffed3a6:	e7d1      	b.n	2ffed34c <stm32_saes_init+0x68>
2ffed3a8:	6861      	ldr	r1, [r4, #4]
2ffed3aa:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
2ffed3ae:	6061      	str	r1, [r4, #4]
2ffed3b0:	2b04      	cmp	r3, #4
2ffed3b2:	d8d6      	bhi.n	2ffed362 <stm32_saes_init+0x7e>
2ffed3b4:	e8df f003 	tbb	[pc, r3]
2ffed3b8:	857f7807 	.word	0x857f7807
2ffed3bc:	8b          	.byte	0x8b
2ffed3bd:	00          	.byte	0x00
2ffed3be:	6861      	ldr	r1, [r4, #4]
2ffed3c0:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
2ffed3c4:	e7f3      	b.n	2ffed3ae <stm32_saes_init+0xca>
2ffed3c6:	6863      	ldr	r3, [r4, #4]
2ffed3c8:	2e10      	cmp	r6, #16
2ffed3ca:	f023 43e0 	bic.w	r3, r3, #1879048192	@ 0x70000000
2ffed3ce:	6063      	str	r3, [r4, #4]
2ffed3d0:	d014      	beq.n	2ffed3fc <stm32_saes_init+0x118>
2ffed3d2:	2e20      	cmp	r6, #32
2ffed3d4:	d1c5      	bne.n	2ffed362 <stm32_saes_init+0x7e>
2ffed3d6:	f100 0120 	add.w	r1, r0, #32
2ffed3da:	f104 0610 	add.w	r6, r4, #16
2ffed3de:	f851 3d04 	ldr.w	r3, [r1, #-4]!
2ffed3e2:	ea83 4c33 	eor.w	ip, r3, r3, ror #16
2ffed3e6:	f42c 0c7f 	bic.w	ip, ip, #16711680	@ 0xff0000
2ffed3ea:	ea4f 2333 	mov.w	r3, r3, ror #8
2ffed3ee:	ea83 231c 	eor.w	r3, r3, ip, lsr #8
2ffed3f2:	4288      	cmp	r0, r1
2ffed3f4:	f846 3b04 	str.w	r3, [r6], #4
2ffed3f8:	d1f1      	bne.n	2ffed3de <stm32_saes_init+0xfa>
2ffed3fa:	e011      	b.n	2ffed420 <stm32_saes_init+0x13c>
2ffed3fc:	f100 0110 	add.w	r1, r0, #16
2ffed400:	f104 0610 	add.w	r6, r4, #16
2ffed404:	f851 3d04 	ldr.w	r3, [r1, #-4]!
2ffed408:	ea83 4c33 	eor.w	ip, r3, r3, ror #16
2ffed40c:	f42c 0c7f 	bic.w	ip, ip, #16711680	@ 0xff0000
2ffed410:	ea4f 2333 	mov.w	r3, r3, ror #8
2ffed414:	ea83 231c 	eor.w	r3, r3, ip, lsr #8
2ffed418:	4288      	cmp	r0, r1
2ffed41a:	f846 3b04 	str.w	r3, [r6], #4
2ffed41e:	d1f1      	bne.n	2ffed404 <stm32_saes_init+0x120>
2ffed420:	b1b2      	cbz	r2, 2ffed450 <stm32_saes_init+0x16c>
2ffed422:	2d00      	cmp	r5, #0
2ffed424:	d09d      	beq.n	2ffed362 <stm32_saes_init+0x7e>
2ffed426:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffed428:	2b10      	cmp	r3, #16
2ffed42a:	d19a      	bne.n	2ffed362 <stm32_saes_init+0x7e>
2ffed42c:	f105 0210 	add.w	r2, r5, #16
2ffed430:	f104 0130 	add.w	r1, r4, #48	@ 0x30
2ffed434:	f852 3d04 	ldr.w	r3, [r2, #-4]!
2ffed438:	ea83 4033 	eor.w	r0, r3, r3, ror #16
2ffed43c:	f420 007f 	bic.w	r0, r0, #16711680	@ 0xff0000
2ffed440:	ea4f 2333 	mov.w	r3, r3, ror #8
2ffed444:	ea83 2310 	eor.w	r3, r3, r0, lsr #8
2ffed448:	4295      	cmp	r5, r2
2ffed44a:	f841 3b04 	str.w	r3, [r1], #4
2ffed44e:	d1f1      	bne.n	2ffed434 <stm32_saes_init+0x150>
2ffed450:	683b      	ldr	r3, [r7, #0]
2ffed452:	2014      	movs	r0, #20
2ffed454:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffed458:	603b      	str	r3, [r7, #0]
2ffed45a:	f7fb fae1 	bl	2ffe8a20 <udelay>
2ffed45e:	6824      	ldr	r4, [r4, #0]
2ffed460:	6823      	ldr	r3, [r4, #0]
2ffed462:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffed466:	6023      	str	r3, [r4, #0]
2ffed468:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffed46c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffed470:	481b      	ldr	r0, [pc, #108]	@ (2ffed4e0 <stm32_saes_init+0x1fc>)
2ffed472:	2300      	movs	r3, #0
2ffed474:	4a1b      	ldr	r2, [pc, #108]	@ (2ffed4e4 <stm32_saes_init+0x200>)
2ffed476:	fba1 0100 	umull	r0, r1, r1, r0
2ffed47a:	f000 e8d8 	blx	2ffed62c <__aeabi_uldivmod>
2ffed47e:	1983      	adds	r3, r0, r6
2ffed480:	eb41 0107 	adc.w	r1, r1, r7
2ffed484:	6860      	ldr	r0, [r4, #4]
2ffed486:	f010 0008 	ands.w	r0, r0, #8
2ffed48a:	f43f af6c 	beq.w	2ffed366 <stm32_saes_init+0x82>
2ffed48e:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffed492:	42b3      	cmp	r3, r6
2ffed494:	eb71 0207 	sbcs.w	r2, r1, r7
2ffed498:	d2f4      	bcs.n	2ffed484 <stm32_saes_init+0x1a0>
2ffed49a:	4813      	ldr	r0, [pc, #76]	@ (2ffed4e8 <stm32_saes_init+0x204>)
2ffed49c:	4913      	ldr	r1, [pc, #76]	@ (2ffed4ec <stm32_saes_init+0x208>)
2ffed49e:	f7fa fa69 	bl	2ffe7974 <tf_log>
2ffed4a2:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffed4a6:	e75e      	b.n	2ffed366 <stm32_saes_init+0x82>
2ffed4a8:	6863      	ldr	r3, [r4, #4]
2ffed4aa:	f023 43e0 	bic.w	r3, r3, #1879048192	@ 0x70000000
2ffed4ae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
2ffed4b2:	6063      	str	r3, [r4, #4]
2ffed4b4:	e7b4      	b.n	2ffed420 <stm32_saes_init+0x13c>
2ffed4b6:	6863      	ldr	r3, [r4, #4]
2ffed4b8:	f023 43e0 	bic.w	r3, r3, #1879048192	@ 0x70000000
2ffed4bc:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
2ffed4c0:	e7f7      	b.n	2ffed4b2 <stm32_saes_init+0x1ce>
2ffed4c2:	6863      	ldr	r3, [r4, #4]
2ffed4c4:	f023 43e0 	bic.w	r3, r3, #1879048192	@ 0x70000000
2ffed4c8:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffed4cc:	e7f1      	b.n	2ffed4b2 <stm32_saes_init+0x1ce>
2ffed4ce:	6863      	ldr	r3, [r4, #4]
2ffed4d0:	f023 43e0 	bic.w	r3, r3, #1879048192	@ 0x70000000
2ffed4d4:	e7ed      	b.n	2ffed4b2 <stm32_saes_init+0x1ce>
2ffed4d6:	bf00      	nop
2ffed4d8:	2fff5b98 	.word	0x2fff5b98
2ffed4dc:	2fff3b35 	.word	0x2fff3b35
2ffed4e0:	000186a0 	.word	0x000186a0
2ffed4e4:	000f4240 	.word	0x000f4240
2ffed4e8:	2fff3b03 	.word	0x2fff3b03
2ffed4ec:	2fff3bf2 	.word	0x2fff3bf2

2ffed4f0 <stm32_saes_update>:
2ffed4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed4f4:	f012 0f03 	tst.w	r2, #3
2ffed4f8:	b085      	sub	sp, #20
2ffed4fa:	4604      	mov	r4, r0
2ffed4fc:	468a      	mov	sl, r1
2ffed4fe:	4690      	mov	r8, r2
2ffed500:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
2ffed504:	461e      	mov	r6, r3
2ffed506:	d004      	beq.n	2ffed512 <stm32_saes_update+0x22>
2ffed508:	f240 313b 	movw	r1, #827	@ 0x33b
2ffed50c:	4842      	ldr	r0, [pc, #264]	@ (2ffed618 <stm32_saes_update+0x128>)
2ffed50e:	f000 f9f1 	bl	2ffed8f4 <__assert>
2ffed512:	f013 0703 	ands.w	r7, r3, #3
2ffed516:	d002      	beq.n	2ffed51e <stm32_saes_update+0x2e>
2ffed518:	f44f 714f 	mov.w	r1, #828	@ 0x33c
2ffed51c:	e7f6      	b.n	2ffed50c <stm32_saes_update+0x1c>
2ffed51e:	b949      	cbnz	r1, 2ffed534 <stm32_saes_update+0x44>
2ffed520:	f019 0f0f 	tst.w	r9, #15
2ffed524:	d018      	beq.n	2ffed558 <stm32_saes_update+0x68>
2ffed526:	493d      	ldr	r1, [pc, #244]	@ (2ffed61c <stm32_saes_update+0x12c>)
2ffed528:	483d      	ldr	r0, [pc, #244]	@ (2ffed620 <stm32_saes_update+0x130>)
2ffed52a:	f7fa fa23 	bl	2ffe7974 <tf_log>
2ffed52e:	f06f 0515 	mvn.w	r5, #21
2ffed532:	e021      	b.n	2ffed578 <stm32_saes_update+0x88>
2ffed534:	6842      	ldr	r2, [r0, #4]
2ffed536:	4b3b      	ldr	r3, [pc, #236]	@ (2ffed624 <stm32_saes_update+0x134>)
2ffed538:	4013      	ands	r3, r2
2ffed53a:	2b20      	cmp	r3, #32
2ffed53c:	d10c      	bne.n	2ffed558 <stm32_saes_update+0x68>
2ffed53e:	f012 0f18 	tst.w	r2, #24
2ffed542:	d109      	bne.n	2ffed558 <stm32_saes_update+0x68>
2ffed544:	f019 0f0f 	tst.w	r9, #15
2ffed548:	d006      	beq.n	2ffed558 <stm32_saes_update+0x68>
2ffed54a:	f1b9 0f1f 	cmp.w	r9, #31
2ffed54e:	d811      	bhi.n	2ffed574 <stm32_saes_update+0x84>
2ffed550:	4835      	ldr	r0, [pc, #212]	@ (2ffed628 <stm32_saes_update+0x138>)
2ffed552:	f7fa fa0f 	bl	2ffe7974 <tf_log>
2ffed556:	e7ea      	b.n	2ffed52e <stm32_saes_update+0x3e>
2ffed558:	4620      	mov	r0, r4
2ffed55a:	f7ff fe09 	bl	2ffed170 <restore_context>
2ffed55e:	4605      	mov	r5, r0
2ffed560:	b950      	cbnz	r0, 2ffed578 <stm32_saes_update+0x88>
2ffed562:	f029 0b0f 	bic.w	fp, r9, #15
2ffed566:	45bb      	cmp	fp, r7
2ffed568:	d80b      	bhi.n	2ffed582 <stm32_saes_update+0x92>
2ffed56a:	f1ba 0f00 	cmp.w	sl, #0
2ffed56e:	d035      	beq.n	2ffed5dc <stm32_saes_update+0xec>
2ffed570:	454f      	cmp	r7, r9
2ffed572:	d201      	bcs.n	2ffed578 <stm32_saes_update+0x88>
2ffed574:	f06f 0512 	mvn.w	r5, #18
2ffed578:	4629      	mov	r1, r5
2ffed57a:	4620      	mov	r0, r4
2ffed57c:	f001 ff24 	bl	2ffef3c8 <saes_end>
2ffed580:	e044      	b.n	2ffed60c <stm32_saes_update+0x11c>
2ffed582:	08ba      	lsrs	r2, r7, #2
2ffed584:	f858 3007 	ldr.w	r3, [r8, r7]
2ffed588:	3201      	adds	r2, #1
2ffed58a:	6820      	ldr	r0, [r4, #0]
2ffed58c:	9203      	str	r2, [sp, #12]
2ffed58e:	6083      	str	r3, [r0, #8]
2ffed590:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
2ffed594:	0093      	lsls	r3, r2, #2
2ffed596:	6081      	str	r1, [r0, #8]
2ffed598:	1d19      	adds	r1, r3, #4
2ffed59a:	9102      	str	r1, [sp, #8]
2ffed59c:	3308      	adds	r3, #8
2ffed59e:	f858 2001 	ldr.w	r2, [r8, r1]
2ffed5a2:	9301      	str	r3, [sp, #4]
2ffed5a4:	6082      	str	r2, [r0, #8]
2ffed5a6:	f858 2003 	ldr.w	r2, [r8, r3]
2ffed5aa:	6082      	str	r2, [r0, #8]
2ffed5ac:	f7ff fdb4 	bl	2ffed118 <wait_computation_completed>
2ffed5b0:	2800      	cmp	r0, #0
2ffed5b2:	d12f      	bne.n	2ffed614 <stm32_saes_update+0x124>
2ffed5b4:	6820      	ldr	r0, [r4, #0]
2ffed5b6:	9a03      	ldr	r2, [sp, #12]
2ffed5b8:	f8d0 c00c 	ldr.w	ip, [r0, #12]
2ffed5bc:	9902      	ldr	r1, [sp, #8]
2ffed5be:	f846 c007 	str.w	ip, [r6, r7]
2ffed5c2:	3710      	adds	r7, #16
2ffed5c4:	f8d0 c00c 	ldr.w	ip, [r0, #12]
2ffed5c8:	9b01      	ldr	r3, [sp, #4]
2ffed5ca:	f846 c022 	str.w	ip, [r6, r2, lsl #2]
2ffed5ce:	68c2      	ldr	r2, [r0, #12]
2ffed5d0:	5072      	str	r2, [r6, r1]
2ffed5d2:	68c2      	ldr	r2, [r0, #12]
2ffed5d4:	50f2      	str	r2, [r6, r3]
2ffed5d6:	f001 fef0 	bl	2ffef3ba <clear_computation_completed>
2ffed5da:	e7c4      	b.n	2ffed566 <stm32_saes_update+0x76>
2ffed5dc:	6823      	ldr	r3, [r4, #0]
2ffed5de:	685a      	ldr	r2, [r3, #4]
2ffed5e0:	07d2      	lsls	r2, r2, #31
2ffed5e2:	d4a4      	bmi.n	2ffed52e <stm32_saes_update+0x3e>
2ffed5e4:	6819      	ldr	r1, [r3, #0]
2ffed5e6:	4a0f      	ldr	r2, [pc, #60]	@ (2ffed624 <stm32_saes_update+0x134>)
2ffed5e8:	6061      	str	r1, [r4, #4]
2ffed5ea:	400a      	ands	r2, r1
2ffed5ec:	b152      	cbz	r2, 2ffed604 <stm32_saes_update+0x114>
2ffed5ee:	f103 0220 	add.w	r2, r3, #32
2ffed5f2:	342c      	adds	r4, #44	@ 0x2c
2ffed5f4:	f103 0130 	add.w	r1, r3, #48	@ 0x30
2ffed5f8:	f852 0b04 	ldr.w	r0, [r2], #4
2ffed5fc:	428a      	cmp	r2, r1
2ffed5fe:	f844 0f04 	str.w	r0, [r4, #4]!
2ffed602:	d1f9      	bne.n	2ffed5f8 <stm32_saes_update+0x108>
2ffed604:	681a      	ldr	r2, [r3, #0]
2ffed606:	f022 0201 	bic.w	r2, r2, #1
2ffed60a:	601a      	str	r2, [r3, #0]
2ffed60c:	4628      	mov	r0, r5
2ffed60e:	b005      	add	sp, #20
2ffed610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed614:	4605      	mov	r5, r0
2ffed616:	e7af      	b.n	2ffed578 <stm32_saes_update+0x88>
2ffed618:	2fff3b35 	.word	0x2fff3b35
2ffed61c:	2fff3bc5 	.word	0x2fff3bc5
2ffed620:	2fff3b54 	.word	0x2fff3b54
2ffed624:	00010060 	.word	0x00010060
2ffed628:	2fff3b86 	.word	0x2fff3b86

2ffed62c <__aeabi_uldivmod>:
2ffed62c:	e92d4040 	push	{r6, lr}
2ffed630:	e24dd010 	sub	sp, sp, #16
2ffed634:	e28d6008 	add	r6, sp, #8
2ffed638:	e58d6000 	str	r6, [sp]
2ffed63c:	fb0002ad 	blx	2ffee0fa <__udivmoddi4>
2ffed640:	e59d2008 	ldr	r2, [sp, #8]
2ffed644:	e59d300c 	ldr	r3, [sp, #12]
2ffed648:	e28dd010 	add	sp, sp, #16
2ffed64c:	e8bd8040 	pop	{r6, pc}

2ffed650 <fdt_ro_probe_>:
2ffed650:	b510      	push	{r4, lr}
2ffed652:	4604      	mov	r4, r0
2ffed654:	3004      	adds	r0, #4
2ffed656:	f001 fecd 	bl	2ffef3f4 <fdt32_ld>
2ffed65a:	0763      	lsls	r3, r4, #29
2ffed65c:	4601      	mov	r1, r0
2ffed65e:	d124      	bne.n	2ffed6aa <fdt_ro_probe_+0x5a>
2ffed660:	4620      	mov	r0, r4
2ffed662:	f001 fec7 	bl	2ffef3f4 <fdt32_ld>
2ffed666:	4b15      	ldr	r3, [pc, #84]	@ (2ffed6bc <fdt_ro_probe_+0x6c>)
2ffed668:	4298      	cmp	r0, r3
2ffed66a:	d10e      	bne.n	2ffed68a <fdt_ro_probe_+0x3a>
2ffed66c:	f104 0014 	add.w	r0, r4, #20
2ffed670:	f001 fec0 	bl	2ffef3f4 <fdt32_ld>
2ffed674:	2801      	cmp	r0, #1
2ffed676:	d905      	bls.n	2ffed684 <fdt_ro_probe_+0x34>
2ffed678:	f104 0018 	add.w	r0, r4, #24
2ffed67c:	f001 feba 	bl	2ffef3f4 <fdt32_ld>
2ffed680:	2811      	cmp	r0, #17
2ffed682:	d90a      	bls.n	2ffed69a <fdt_ro_probe_+0x4a>
2ffed684:	f06f 0009 	mvn.w	r0, #9
2ffed688:	e00e      	b.n	2ffed6a8 <fdt_ro_probe_+0x58>
2ffed68a:	4b0d      	ldr	r3, [pc, #52]	@ (2ffed6c0 <fdt_ro_probe_+0x70>)
2ffed68c:	4298      	cmp	r0, r3
2ffed68e:	d10f      	bne.n	2ffed6b0 <fdt_ro_probe_+0x60>
2ffed690:	f104 0024 	add.w	r0, r4, #36	@ 0x24
2ffed694:	f001 feae 	bl	2ffef3f4 <fdt32_ld>
2ffed698:	b168      	cbz	r0, 2ffed6b6 <fdt_ro_probe_+0x66>
2ffed69a:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
2ffed69e:	4299      	cmp	r1, r3
2ffed6a0:	bf34      	ite	cc
2ffed6a2:	4608      	movcc	r0, r1
2ffed6a4:	f06f 0007 	mvncs.w	r0, #7
2ffed6a8:	bd10      	pop	{r4, pc}
2ffed6aa:	f06f 0012 	mvn.w	r0, #18
2ffed6ae:	e7fb      	b.n	2ffed6a8 <fdt_ro_probe_+0x58>
2ffed6b0:	f06f 0008 	mvn.w	r0, #8
2ffed6b4:	e7f8      	b.n	2ffed6a8 <fdt_ro_probe_+0x58>
2ffed6b6:	f06f 0006 	mvn.w	r0, #6
2ffed6ba:	e7f5      	b.n	2ffed6a8 <fdt_ro_probe_+0x58>
2ffed6bc:	d00dfeed 	.word	0xd00dfeed
2ffed6c0:	2ff20112 	.word	0x2ff20112

2ffed6c4 <fdt_check_header>:
2ffed6c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffed6c6:	4601      	mov	r1, r0
2ffed6c8:	0743      	lsls	r3, r0, #29
2ffed6ca:	d153      	bne.n	2ffed774 <fdt_check_header+0xb0>
2ffed6cc:	f001 fe92 	bl	2ffef3f4 <fdt32_ld>
2ffed6d0:	4b2e      	ldr	r3, [pc, #184]	@ (2ffed78c <fdt_check_header+0xc8>)
2ffed6d2:	4298      	cmp	r0, r3
2ffed6d4:	d151      	bne.n	2ffed77a <fdt_check_header+0xb6>
2ffed6d6:	f101 0014 	add.w	r0, r1, #20
2ffed6da:	f001 fe8b 	bl	2ffef3f4 <fdt32_ld>
2ffed6de:	2801      	cmp	r0, #1
2ffed6e0:	4607      	mov	r7, r0
2ffed6e2:	d94d      	bls.n	2ffed780 <fdt_check_header+0xbc>
2ffed6e4:	f101 0018 	add.w	r0, r1, #24
2ffed6e8:	f001 fe84 	bl	2ffef3f4 <fdt32_ld>
2ffed6ec:	2811      	cmp	r0, #17
2ffed6ee:	d847      	bhi.n	2ffed780 <fdt_check_header+0xbc>
2ffed6f0:	4287      	cmp	r7, r0
2ffed6f2:	d345      	bcc.n	2ffed780 <fdt_check_header+0xbc>
2ffed6f4:	4608      	mov	r0, r1
2ffed6f6:	f001 fe96 	bl	2ffef426 <fdt_header_size>
2ffed6fa:	4606      	mov	r6, r0
2ffed6fc:	1d08      	adds	r0, r1, #4
2ffed6fe:	f001 fe79 	bl	2ffef3f4 <fdt32_ld>
2ffed702:	42b0      	cmp	r0, r6
2ffed704:	4604      	mov	r4, r0
2ffed706:	d33e      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed708:	2800      	cmp	r0, #0
2ffed70a:	db3c      	blt.n	2ffed786 <fdt_check_header+0xc2>
2ffed70c:	f101 0010 	add.w	r0, r1, #16
2ffed710:	f001 fe70 	bl	2ffef3f4 <fdt32_ld>
2ffed714:	42b0      	cmp	r0, r6
2ffed716:	d336      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed718:	4284      	cmp	r4, r0
2ffed71a:	d334      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed71c:	f101 0008 	add.w	r0, r1, #8
2ffed720:	f001 fe68 	bl	2ffef3f4 <fdt32_ld>
2ffed724:	2f10      	cmp	r7, #16
2ffed726:	4605      	mov	r5, r0
2ffed728:	d818      	bhi.n	2ffed75c <fdt_check_header+0x98>
2ffed72a:	4286      	cmp	r6, r0
2ffed72c:	d82b      	bhi.n	2ffed786 <fdt_check_header+0xc2>
2ffed72e:	4284      	cmp	r4, r0
2ffed730:	d329      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed732:	f101 000c 	add.w	r0, r1, #12
2ffed736:	f001 fe5d 	bl	2ffef3f4 <fdt32_ld>
2ffed73a:	42b0      	cmp	r0, r6
2ffed73c:	4605      	mov	r5, r0
2ffed73e:	d322      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed740:	4284      	cmp	r4, r0
2ffed742:	d320      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed744:	f101 0020 	add.w	r0, r1, #32
2ffed748:	f001 fe54 	bl	2ffef3f4 <fdt32_ld>
2ffed74c:	182d      	adds	r5, r5, r0
2ffed74e:	d21a      	bcs.n	2ffed786 <fdt_check_header+0xc2>
2ffed750:	42ac      	cmp	r4, r5
2ffed752:	bf34      	ite	cc
2ffed754:	f06f 0007 	mvncc.w	r0, #7
2ffed758:	2000      	movcs	r0, #0
2ffed75a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffed75c:	4286      	cmp	r6, r0
2ffed75e:	d812      	bhi.n	2ffed786 <fdt_check_header+0xc2>
2ffed760:	4284      	cmp	r4, r0
2ffed762:	d310      	bcc.n	2ffed786 <fdt_check_header+0xc2>
2ffed764:	f101 0024 	add.w	r0, r1, #36	@ 0x24
2ffed768:	f001 fe44 	bl	2ffef3f4 <fdt32_ld>
2ffed76c:	1940      	adds	r0, r0, r5
2ffed76e:	d20a      	bcs.n	2ffed786 <fdt_check_header+0xc2>
2ffed770:	4284      	cmp	r4, r0
2ffed772:	e7dd      	b.n	2ffed730 <fdt_check_header+0x6c>
2ffed774:	f06f 0012 	mvn.w	r0, #18
2ffed778:	e7ef      	b.n	2ffed75a <fdt_check_header+0x96>
2ffed77a:	f06f 0008 	mvn.w	r0, #8
2ffed77e:	e7ec      	b.n	2ffed75a <fdt_check_header+0x96>
2ffed780:	f06f 0009 	mvn.w	r0, #9
2ffed784:	e7e9      	b.n	2ffed75a <fdt_check_header+0x96>
2ffed786:	f06f 0007 	mvn.w	r0, #7
2ffed78a:	e7e6      	b.n	2ffed75a <fdt_check_header+0x96>
2ffed78c:	d00dfeed 	.word	0xd00dfeed

2ffed790 <fdt_address_cells>:
2ffed790:	b508      	push	{r3, lr}
2ffed792:	4a05      	ldr	r2, [pc, #20]	@ (2ffed7a8 <fdt_address_cells+0x18>)
2ffed794:	f001 ff4f 	bl	2ffef636 <fdt_cells>
2ffed798:	b118      	cbz	r0, 2ffed7a2 <fdt_address_cells+0x12>
2ffed79a:	1c43      	adds	r3, r0, #1
2ffed79c:	bf08      	it	eq
2ffed79e:	2002      	moveq	r0, #2
2ffed7a0:	bd08      	pop	{r3, pc}
2ffed7a2:	f06f 000d 	mvn.w	r0, #13
2ffed7a6:	e7fb      	b.n	2ffed7a0 <fdt_address_cells+0x10>
2ffed7a8:	2fff3d50 	.word	0x2fff3d50

2ffed7ac <fdt_get_string>:
2ffed7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffed7b0:	4605      	mov	r5, r0
2ffed7b2:	460e      	mov	r6, r1
2ffed7b4:	4617      	mov	r7, r2
2ffed7b6:	f7ff ff4b 	bl	2ffed650 <fdt_ro_probe_>
2ffed7ba:	1e04      	subs	r4, r0, #0
2ffed7bc:	db3f      	blt.n	2ffed83e <fdt_get_string+0x92>
2ffed7be:	f105 000c 	add.w	r0, r5, #12
2ffed7c2:	f001 ff4d 	bl	2ffef660 <fdt32_ld>
2ffed7c6:	1981      	adds	r1, r0, r6
2ffed7c8:	428c      	cmp	r4, r1
2ffed7ca:	d93b      	bls.n	2ffed844 <fdt_get_string+0x98>
2ffed7cc:	1a64      	subs	r4, r4, r1
2ffed7ce:	4628      	mov	r0, r5
2ffed7d0:	f001 ff46 	bl	2ffef660 <fdt32_ld>
2ffed7d4:	4b1f      	ldr	r3, [pc, #124]	@ (2ffed854 <fdt_get_string+0xa8>)
2ffed7d6:	4298      	cmp	r0, r3
2ffed7d8:	d11e      	bne.n	2ffed818 <fdt_get_string+0x6c>
2ffed7da:	2e00      	cmp	r6, #0
2ffed7dc:	db32      	blt.n	2ffed844 <fdt_get_string+0x98>
2ffed7de:	f105 0014 	add.w	r0, r5, #20
2ffed7e2:	f001 ff3d 	bl	2ffef660 <fdt32_ld>
2ffed7e6:	2810      	cmp	r0, #16
2ffed7e8:	d909      	bls.n	2ffed7fe <fdt_get_string+0x52>
2ffed7ea:	f105 0020 	add.w	r0, r5, #32
2ffed7ee:	f001 ff37 	bl	2ffef660 <fdt32_ld>
2ffed7f2:	4286      	cmp	r6, r0
2ffed7f4:	d226      	bcs.n	2ffed844 <fdt_get_string+0x98>
2ffed7f6:	1b80      	subs	r0, r0, r6
2ffed7f8:	4284      	cmp	r4, r0
2ffed7fa:	bf28      	it	cs
2ffed7fc:	4604      	movcs	r4, r0
2ffed7fe:	440d      	add	r5, r1
2ffed800:	4622      	mov	r2, r4
2ffed802:	2100      	movs	r1, #0
2ffed804:	4628      	mov	r0, r5
2ffed806:	f002 f9ae 	bl	2ffefb66 <memchr>
2ffed80a:	b1f0      	cbz	r0, 2ffed84a <fdt_get_string+0x9e>
2ffed80c:	b10f      	cbz	r7, 2ffed812 <fdt_get_string+0x66>
2ffed80e:	1b40      	subs	r0, r0, r5
2ffed810:	6038      	str	r0, [r7, #0]
2ffed812:	4628      	mov	r0, r5
2ffed814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed818:	4b0f      	ldr	r3, [pc, #60]	@ (2ffed858 <fdt_get_string+0xac>)
2ffed81a:	4298      	cmp	r0, r3
2ffed81c:	d10d      	bne.n	2ffed83a <fdt_get_string+0x8e>
2ffed81e:	2e00      	cmp	r6, #0
2ffed820:	f1c6 0800 	rsb	r8, r6, #0
2ffed824:	da0e      	bge.n	2ffed844 <fdt_get_string+0x98>
2ffed826:	f105 0020 	add.w	r0, r5, #32
2ffed82a:	f001 ff19 	bl	2ffef660 <fdt32_ld>
2ffed82e:	4540      	cmp	r0, r8
2ffed830:	d308      	bcc.n	2ffed844 <fdt_get_string+0x98>
2ffed832:	4544      	cmp	r4, r8
2ffed834:	bf28      	it	cs
2ffed836:	4644      	movcs	r4, r8
2ffed838:	e7e1      	b.n	2ffed7fe <fdt_get_string+0x52>
2ffed83a:	f06f 040c 	mvn.w	r4, #12
2ffed83e:	b93f      	cbnz	r7, 2ffed850 <fdt_get_string+0xa4>
2ffed840:	2500      	movs	r5, #0
2ffed842:	e7e6      	b.n	2ffed812 <fdt_get_string+0x66>
2ffed844:	f06f 0403 	mvn.w	r4, #3
2ffed848:	e7f9      	b.n	2ffed83e <fdt_get_string+0x92>
2ffed84a:	f06f 0407 	mvn.w	r4, #7
2ffed84e:	e7f6      	b.n	2ffed83e <fdt_get_string+0x92>
2ffed850:	603c      	str	r4, [r7, #0]
2ffed852:	e7f5      	b.n	2ffed840 <fdt_get_string+0x94>
2ffed854:	d00dfeed 	.word	0xd00dfeed
2ffed858:	2ff20112 	.word	0x2ff20112

2ffed85c <fdt_get_phandle>:
2ffed85c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffed85e:	ab01      	add	r3, sp, #4
2ffed860:	4a0d      	ldr	r2, [pc, #52]	@ (2ffed898 <fdt_get_phandle+0x3c>)
2ffed862:	4604      	mov	r4, r0
2ffed864:	460d      	mov	r5, r1
2ffed866:	f002 f82f 	bl	2ffef8c8 <fdt_getprop>
2ffed86a:	b110      	cbz	r0, 2ffed872 <fdt_get_phandle+0x16>
2ffed86c:	9b01      	ldr	r3, [sp, #4]
2ffed86e:	2b04      	cmp	r3, #4
2ffed870:	d009      	beq.n	2ffed886 <fdt_get_phandle+0x2a>
2ffed872:	4a0a      	ldr	r2, [pc, #40]	@ (2ffed89c <fdt_get_phandle+0x40>)
2ffed874:	ab01      	add	r3, sp, #4
2ffed876:	4629      	mov	r1, r5
2ffed878:	4620      	mov	r0, r4
2ffed87a:	f002 f825 	bl	2ffef8c8 <fdt_getprop>
2ffed87e:	b140      	cbz	r0, 2ffed892 <fdt_get_phandle+0x36>
2ffed880:	9b01      	ldr	r3, [sp, #4]
2ffed882:	2b04      	cmp	r3, #4
2ffed884:	d105      	bne.n	2ffed892 <fdt_get_phandle+0x36>
2ffed886:	6800      	ldr	r0, [r0, #0]
2ffed888:	b003      	add	sp, #12
2ffed88a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffed88e:	f001 bf0c 	b.w	2ffef6aa <fdt32_ld_.isra.0>
2ffed892:	2000      	movs	r0, #0
2ffed894:	b003      	add	sp, #12
2ffed896:	bd30      	pop	{r4, r5, pc}
2ffed898:	2fff3d65 	.word	0x2fff3d65
2ffed89c:	2fff3d5f 	.word	0x2fff3d5f

2ffed8a0 <fdt_get_alias_namelen>:
2ffed8a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffed8a2:	460d      	mov	r5, r1
2ffed8a4:	4908      	ldr	r1, [pc, #32]	@ (2ffed8c8 <fdt_get_alias_namelen+0x28>)
2ffed8a6:	4604      	mov	r4, r0
2ffed8a8:	4616      	mov	r6, r2
2ffed8aa:	f002 f868 	bl	2ffef97e <fdt_path_offset>
2ffed8ae:	1e01      	subs	r1, r0, #0
2ffed8b0:	f04f 0000 	mov.w	r0, #0
2ffed8b4:	db05      	blt.n	2ffed8c2 <fdt_get_alias_namelen+0x22>
2ffed8b6:	9000      	str	r0, [sp, #0]
2ffed8b8:	4633      	mov	r3, r6
2ffed8ba:	462a      	mov	r2, r5
2ffed8bc:	4620      	mov	r0, r4
2ffed8be:	f001 ffe3 	bl	2ffef888 <fdt_getprop_namelen>
2ffed8c2:	b002      	add	sp, #8
2ffed8c4:	bd70      	pop	{r4, r5, r6, pc}
2ffed8c6:	bf00      	nop
2ffed8c8:	2fff3d6d 	.word	0x2fff3d6d

2ffed8cc <fdt_node_check_compatible>:
2ffed8cc:	b513      	push	{r0, r1, r4, lr}
2ffed8ce:	4614      	mov	r4, r2
2ffed8d0:	4a07      	ldr	r2, [pc, #28]	@ (2ffed8f0 <fdt_node_check_compatible+0x24>)
2ffed8d2:	ab01      	add	r3, sp, #4
2ffed8d4:	f001 fff8 	bl	2ffef8c8 <fdt_getprop>
2ffed8d8:	b910      	cbnz	r0, 2ffed8e0 <fdt_node_check_compatible+0x14>
2ffed8da:	9801      	ldr	r0, [sp, #4]
2ffed8dc:	b002      	add	sp, #8
2ffed8de:	bd10      	pop	{r4, pc}
2ffed8e0:	9901      	ldr	r1, [sp, #4]
2ffed8e2:	4622      	mov	r2, r4
2ffed8e4:	f002 f8ce 	bl	2ffefa84 <fdt_stringlist_contains>
2ffed8e8:	fab0 f080 	clz	r0, r0
2ffed8ec:	0940      	lsrs	r0, r0, #5
2ffed8ee:	e7f5      	b.n	2ffed8dc <fdt_node_check_compatible+0x10>
2ffed8f0:	2fff3d76 	.word	0x2fff3d76

2ffed8f4 <__assert>:
2ffed8f4:	460a      	mov	r2, r1
2ffed8f6:	4601      	mov	r1, r0
2ffed8f8:	b508      	push	{r3, lr}
2ffed8fa:	4803      	ldr	r0, [pc, #12]	@ (2ffed908 <__assert+0x14>)
2ffed8fc:	f002 f9d2 	bl	2ffefca4 <printf>
2ffed900:	f7fa f8d4 	bl	2ffe7aac <console_flush>
2ffed904:	f7f7 e920 	blx	2ffe4b48 <plat_panic_handler>
2ffed908:	2fff3d81 	.word	0x2fff3d81

2ffed90c <vprintf>:
2ffed90c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed910:	2500      	movs	r5, #0
2ffed912:	4606      	mov	r6, r0
2ffed914:	460c      	mov	r4, r1
2ffed916:	46a8      	mov	r8, r5
2ffed918:	7830      	ldrb	r0, [r6, #0]
2ffed91a:	b918      	cbnz	r0, 2ffed924 <vprintf+0x18>
2ffed91c:	4628      	mov	r0, r5
2ffed91e:	b003      	add	sp, #12
2ffed920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed924:	2825      	cmp	r0, #37	@ 0x25
2ffed926:	f106 0601 	add.w	r6, r6, #1
2ffed92a:	f040 80bd 	bne.w	2ffedaa8 <vprintf+0x19c>
2ffed92e:	f04f 0a00 	mov.w	sl, #0
2ffed932:	4653      	mov	r3, sl
2ffed934:	e087      	b.n	2ffeda46 <vprintf+0x13a>
2ffed936:	3863      	subs	r0, #99	@ 0x63
2ffed938:	2817      	cmp	r0, #23
2ffed93a:	f200 808e 	bhi.w	2ffeda5a <vprintf+0x14e>
2ffed93e:	e8df f000 	tbb	[pc, r0]
2ffed942:	1034      	.short	0x1034
2ffed944:	8c8c8c8c 	.word	0x8c8c8c8c
2ffed948:	7e8c8c10 	.word	0x7e8c8c10
2ffed94c:	4e8c8c8c 	.word	0x4e8c8c8c
2ffed950:	8c3a8c8c 	.word	0x8c3a8c8c
2ffed954:	6a8c8c8f 	.word	0x6a8c8c8f
2ffed958:	7f8c      	.short	0x7f8c
2ffed95a:	f000 fbaf 	bl	2ffee0bc <putchar>
2ffed95e:	3601      	adds	r6, #1
2ffed960:	e7da      	b.n	2ffed918 <vprintf+0xc>
2ffed962:	2b01      	cmp	r3, #1
2ffed964:	bfcb      	itete	gt
2ffed966:	3407      	addgt	r4, #7
2ffed968:	f104 0904 	addle.w	r9, r4, #4
2ffed96c:	f024 0407 	bicgt.w	r4, r4, #7
2ffed970:	6827      	ldrle	r7, [r4, #0]
2ffed972:	bfc5      	ittet	gt
2ffed974:	46a1      	movgt	r9, r4
2ffed976:	6864      	ldrgt	r4, [r4, #4]
2ffed978:	17fc      	asrle	r4, r7, #31
2ffed97a:	f859 7b08 	ldrgt.w	r7, [r9], #8
2ffed97e:	2c00      	cmp	r4, #0
2ffed980:	da10      	bge.n	2ffed9a4 <vprintf+0x98>
2ffed982:	202d      	movs	r0, #45	@ 0x2d
2ffed984:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
2ffed988:	f000 fb98 	bl	2ffee0bc <putchar>
2ffed98c:	4278      	negs	r0, r7
2ffed98e:	eb64 0144 	sbc.w	r1, r4, r4, lsl #1
2ffed992:	f8cd a000 	str.w	sl, [sp]
2ffed996:	4643      	mov	r3, r8
2ffed998:	220a      	movs	r2, #10
2ffed99a:	464c      	mov	r4, r9
2ffed99c:	f002 f941 	bl	2ffefc22 <unsigned_num_print.part.0>
2ffed9a0:	4405      	add	r5, r0
2ffed9a2:	e7dc      	b.n	2ffed95e <vprintf+0x52>
2ffed9a4:	4638      	mov	r0, r7
2ffed9a6:	4621      	mov	r1, r4
2ffed9a8:	e7f3      	b.n	2ffed992 <vprintf+0x86>
2ffed9aa:	f854 0b04 	ldr.w	r0, [r4], #4
2ffed9ae:	3501      	adds	r5, #1
2ffed9b0:	f000 fb84 	bl	2ffee0bc <putchar>
2ffed9b4:	e7d3      	b.n	2ffed95e <vprintf+0x52>
2ffed9b6:	f854 9b04 	ldr.w	r9, [r4], #4
2ffed9ba:	f1b9 0f00 	cmp.w	r9, #0
2ffed9be:	d10c      	bne.n	2ffed9da <vprintf+0xce>
2ffed9c0:	483b      	ldr	r0, [pc, #236]	@ (2ffedab0 <vprintf+0x1a4>)
2ffed9c2:	211c      	movs	r1, #28
2ffed9c4:	f7ff ff96 	bl	2ffed8f4 <__assert>
2ffed9c8:	3701      	adds	r7, #1
2ffed9ca:	f000 fb77 	bl	2ffee0bc <putchar>
2ffed9ce:	f819 0007 	ldrb.w	r0, [r9, r7]
2ffed9d2:	2800      	cmp	r0, #0
2ffed9d4:	d1f8      	bne.n	2ffed9c8 <vprintf+0xbc>
2ffed9d6:	443d      	add	r5, r7
2ffed9d8:	e7c1      	b.n	2ffed95e <vprintf+0x52>
2ffed9da:	2700      	movs	r7, #0
2ffed9dc:	e7f7      	b.n	2ffed9ce <vprintf+0xc2>
2ffed9de:	f854 9b04 	ldr.w	r9, [r4], #4
2ffed9e2:	f1b9 0f00 	cmp.w	r9, #0
2ffed9e6:	d008      	beq.n	2ffed9fa <vprintf+0xee>
2ffed9e8:	f8df b0c8 	ldr.w	fp, [pc, #200]	@ 2ffedab4 <vprintf+0x1a8>
2ffed9ec:	2700      	movs	r7, #0
2ffed9ee:	f81b 0b01 	ldrb.w	r0, [fp], #1
2ffed9f2:	b960      	cbnz	r0, 2ffeda0e <vprintf+0x102>
2ffed9f4:	443d      	add	r5, r7
2ffed9f6:	f1aa 0a02 	sub.w	sl, sl, #2
2ffed9fa:	f8cd a000 	str.w	sl, [sp]
2ffed9fe:	4643      	mov	r3, r8
2ffeda00:	2210      	movs	r2, #16
2ffeda02:	4648      	mov	r0, r9
2ffeda04:	2100      	movs	r1, #0
2ffeda06:	f002 f90c 	bl	2ffefc22 <unsigned_num_print.part.0>
2ffeda0a:	4405      	add	r5, r0
2ffeda0c:	e7a7      	b.n	2ffed95e <vprintf+0x52>
2ffeda0e:	3701      	adds	r7, #1
2ffeda10:	f000 fb54 	bl	2ffee0bc <putchar>
2ffeda14:	e7eb      	b.n	2ffed9ee <vprintf+0xe2>
2ffeda16:	2b01      	cmp	r3, #1
2ffeda18:	f04f 0210 	mov.w	r2, #16
2ffeda1c:	bfcb      	itete	gt
2ffeda1e:	1de3      	addgt	r3, r4, #7
2ffeda20:	2100      	movle	r1, #0
2ffeda22:	f023 0307 	bicgt.w	r3, r3, #7
2ffeda26:	f854 0b04 	ldrle.w	r0, [r4], #4
2ffeda2a:	bfc4      	itt	gt
2ffeda2c:	461c      	movgt	r4, r3
2ffeda2e:	6859      	ldrgt	r1, [r3, #4]
2ffeda30:	4643      	mov	r3, r8
2ffeda32:	bfc8      	it	gt
2ffeda34:	f854 0b08 	ldrgt.w	r0, [r4], #8
2ffeda38:	f8cd a000 	str.w	sl, [sp]
2ffeda3c:	e7e3      	b.n	2ffeda06 <vprintf+0xfa>
2ffeda3e:	3301      	adds	r3, #1
2ffeda40:	3601      	adds	r6, #1
2ffeda42:	4640      	mov	r0, r8
2ffeda44:	4680      	mov	r8, r0
2ffeda46:	7830      	ldrb	r0, [r6, #0]
2ffeda48:	287a      	cmp	r0, #122	@ 0x7a
2ffeda4a:	d806      	bhi.n	2ffeda5a <vprintf+0x14e>
2ffeda4c:	2862      	cmp	r0, #98	@ 0x62
2ffeda4e:	f63f af72 	bhi.w	2ffed936 <vprintf+0x2a>
2ffeda52:	2825      	cmp	r0, #37	@ 0x25
2ffeda54:	d081      	beq.n	2ffed95a <vprintf+0x4e>
2ffeda56:	2830      	cmp	r0, #48	@ 0x30
2ffeda58:	d016      	beq.n	2ffeda88 <vprintf+0x17c>
2ffeda5a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffeda5e:	e75d      	b.n	2ffed91c <vprintf+0x10>
2ffeda60:	2b01      	cmp	r3, #1
2ffeda62:	f04f 020a 	mov.w	r2, #10
2ffeda66:	bfcb      	itete	gt
2ffeda68:	1de3      	addgt	r3, r4, #7
2ffeda6a:	2100      	movle	r1, #0
2ffeda6c:	f023 0307 	bicgt.w	r3, r3, #7
2ffeda70:	f854 0b04 	ldrle.w	r0, [r4], #4
2ffeda74:	bfc4      	itt	gt
2ffeda76:	461c      	movgt	r4, r3
2ffeda78:	6859      	ldrgt	r1, [r3, #4]
2ffeda7a:	4643      	mov	r3, r8
2ffeda7c:	bfc8      	it	gt
2ffeda7e:	f854 0b08 	ldrgt.w	r0, [r4], #8
2ffeda82:	f8cd a000 	str.w	sl, [sp]
2ffeda86:	e7be      	b.n	2ffeda06 <vprintf+0xfa>
2ffeda88:	1c71      	adds	r1, r6, #1
2ffeda8a:	f04f 0a00 	mov.w	sl, #0
2ffeda8e:	270a      	movs	r7, #10
2ffeda90:	460e      	mov	r6, r1
2ffeda92:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffeda96:	3a30      	subs	r2, #48	@ 0x30
2ffeda98:	fa5f fc82 	uxtb.w	ip, r2
2ffeda9c:	f1bc 0f09 	cmp.w	ip, #9
2ffedaa0:	d8d0      	bhi.n	2ffeda44 <vprintf+0x138>
2ffedaa2:	fb07 2a0a 	mla	sl, r7, sl, r2
2ffedaa6:	e7f3      	b.n	2ffeda90 <vprintf+0x184>
2ffedaa8:	3501      	adds	r5, #1
2ffedaaa:	f000 fb07 	bl	2ffee0bc <putchar>
2ffedaae:	e733      	b.n	2ffed918 <vprintf+0xc>
2ffedab0:	2fff3d90 	.word	0x2fff3d90
2ffedab4:	2fff3da2 	.word	0x2fff3da2

2ffedab8 <vsnprintf>:
2ffedab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedabc:	b08a      	sub	sp, #40	@ 0x28
2ffedabe:	461c      	mov	r4, r3
2ffedac0:	2300      	movs	r3, #0
2ffedac2:	9007      	str	r0, [sp, #28]
2ffedac4:	9309      	str	r3, [sp, #36]	@ 0x24
2ffedac6:	b111      	cbz	r1, 2ffedace <vsnprintf+0x16>
2ffedac8:	2901      	cmp	r1, #1
2ffedaca:	d102      	bne.n	2ffedad2 <vsnprintf+0x1a>
2ffedacc:	7003      	strb	r3, [r0, #0]
2ffedace:	2500      	movs	r5, #0
2ffedad0:	e000      	b.n	2ffedad4 <vsnprintf+0x1c>
2ffedad2:	1e4d      	subs	r5, r1, #1
2ffedad4:	7813      	ldrb	r3, [r2, #0]
2ffedad6:	b933      	cbnz	r3, 2ffedae6 <vsnprintf+0x2e>
2ffedad8:	b10d      	cbz	r5, 2ffedade <vsnprintf+0x26>
2ffedada:	9a07      	ldr	r2, [sp, #28]
2ffedadc:	7013      	strb	r3, [r2, #0]
2ffedade:	9809      	ldr	r0, [sp, #36]	@ 0x24
2ffedae0:	b00a      	add	sp, #40	@ 0x28
2ffedae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffedae6:	2b25      	cmp	r3, #37	@ 0x25
2ffedae8:	f102 0201 	add.w	r2, r2, #1
2ffedaec:	f040 813f 	bne.w	2ffedd6e <vsnprintf+0x2b6>
2ffedaf0:	2000      	movs	r0, #0
2ffedaf2:	4607      	mov	r7, r0
2ffedaf4:	4601      	mov	r1, r0
2ffedaf6:	4684      	mov	ip, r0
2ffedaf8:	e001      	b.n	2ffedafe <vsnprintf+0x46>
2ffedafa:	2701      	movs	r7, #1
2ffedafc:	4632      	mov	r2, r6
2ffedafe:	4616      	mov	r6, r2
2ffedb00:	f816 3b01 	ldrb.w	r3, [r6], #1
2ffedb04:	2b7a      	cmp	r3, #122	@ 0x7a
2ffedb06:	d809      	bhi.n	2ffedb1c <vsnprintf+0x64>
2ffedb08:	2b62      	cmp	r3, #98	@ 0x62
2ffedb0a:	d81d      	bhi.n	2ffedb48 <vsnprintf+0x90>
2ffedb0c:	2b39      	cmp	r3, #57	@ 0x39
2ffedb0e:	d853      	bhi.n	2ffedbb8 <vsnprintf+0x100>
2ffedb10:	2b2f      	cmp	r3, #47	@ 0x2f
2ffedb12:	d861      	bhi.n	2ffedbd8 <vsnprintf+0x120>
2ffedb14:	2b25      	cmp	r3, #37	@ 0x25
2ffedb16:	d053      	beq.n	2ffedbc0 <vsnprintf+0x108>
2ffedb18:	2b2d      	cmp	r3, #45	@ 0x2d
2ffedb1a:	d0ee      	beq.n	2ffedafa <vsnprintf+0x42>
2ffedb1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffedb1e:	42ab      	cmp	r3, r5
2ffedb20:	bf3f      	itttt	cc
2ffedb22:	2025      	movcc	r0, #37	@ 0x25
2ffedb24:	9907      	ldrcc	r1, [sp, #28]
2ffedb26:	f801 0b01 	strbcc.w	r0, [r1], #1
2ffedb2a:	9107      	strcc	r1, [sp, #28]
2ffedb2c:	1c59      	adds	r1, r3, #1
2ffedb2e:	42a9      	cmp	r1, r5
2ffedb30:	f103 0302 	add.w	r3, r3, #2
2ffedb34:	9109      	str	r1, [sp, #36]	@ 0x24
2ffedb36:	bf3f      	itttt	cc
2ffedb38:	7811      	ldrbcc	r1, [r2, #0]
2ffedb3a:	9a07      	ldrcc	r2, [sp, #28]
2ffedb3c:	f802 1b01 	strbcc.w	r1, [r2], #1
2ffedb40:	9207      	strcc	r2, [sp, #28]
2ffedb42:	e047      	b.n	2ffedbd4 <vsnprintf+0x11c>
2ffedb44:	2001      	movs	r0, #1
2ffedb46:	e7d9      	b.n	2ffedafc <vsnprintf+0x44>
2ffedb48:	3b63      	subs	r3, #99	@ 0x63
2ffedb4a:	2b17      	cmp	r3, #23
2ffedb4c:	d8e6      	bhi.n	2ffedb1c <vsnprintf+0x64>
2ffedb4e:	f20f 0e08 	addw	lr, pc, #8
2ffedb52:	f85e f023 	ldr.w	pc, [lr, r3, lsl #2]
2ffedb56:	bf00      	nop
2ffedb58:	2ffedc65 	.word	0x2ffedc65
2ffedb5c:	2ffedc11 	.word	0x2ffedc11
2ffedb60:	2ffedb1d 	.word	0x2ffedb1d
2ffedb64:	2ffedb1d 	.word	0x2ffedb1d
2ffedb68:	2ffedb1d 	.word	0x2ffedb1d
2ffedb6c:	2ffedb1d 	.word	0x2ffedb1d
2ffedb70:	2ffedc11 	.word	0x2ffedc11
2ffedb74:	2ffedb1d 	.word	0x2ffedb1d
2ffedb78:	2ffedb1d 	.word	0x2ffedb1d
2ffedb7c:	2ffedce1 	.word	0x2ffedce1
2ffedb80:	2ffedb1d 	.word	0x2ffedb1d
2ffedb84:	2ffedb1d 	.word	0x2ffedb1d
2ffedb88:	2ffedb1d 	.word	0x2ffedb1d
2ffedb8c:	2ffedce5 	.word	0x2ffedce5
2ffedb90:	2ffedb1d 	.word	0x2ffedb1d
2ffedb94:	2ffedb1d 	.word	0x2ffedb1d
2ffedb98:	2ffedc7d 	.word	0x2ffedc7d
2ffedb9c:	2ffedb1d 	.word	0x2ffedb1d
2ffedba0:	2ffedcb1 	.word	0x2ffedcb1
2ffedba4:	2ffedb1d 	.word	0x2ffedb1d
2ffedba8:	2ffedb1d 	.word	0x2ffedb1d
2ffedbac:	2ffedd47 	.word	0x2ffedd47
2ffedbb0:	2ffedb1d 	.word	0x2ffedb1d
2ffedbb4:	2ffedb45 	.word	0x2ffedb45
2ffedbb8:	2b58      	cmp	r3, #88	@ 0x58
2ffedbba:	d1af      	bne.n	2ffedb1c <vsnprintf+0x64>
2ffedbbc:	2701      	movs	r7, #1
2ffedbbe:	e0c3      	b.n	2ffedd48 <vsnprintf+0x290>
2ffedbc0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2ffedbc2:	42aa      	cmp	r2, r5
2ffedbc4:	bf3c      	itt	cc
2ffedbc6:	9907      	ldrcc	r1, [sp, #28]
2ffedbc8:	f801 3b01 	strbcc.w	r3, [r1], #1
2ffedbcc:	f102 0301 	add.w	r3, r2, #1
2ffedbd0:	bf38      	it	cc
2ffedbd2:	9107      	strcc	r1, [sp, #28]
2ffedbd4:	9309      	str	r3, [sp, #36]	@ 0x24
2ffedbd6:	e043      	b.n	2ffedc60 <vsnprintf+0x1a8>
2ffedbd8:	2b30      	cmp	r3, #48	@ 0x30
2ffedbda:	4616      	mov	r6, r2
2ffedbdc:	bf14      	ite	ne
2ffedbde:	f04f 0c20 	movne.w	ip, #32
2ffedbe2:	f04f 0c30 	moveq.w	ip, #48	@ 0x30
2ffedbe6:	2100      	movs	r1, #0
2ffedbe8:	f04f 080a 	mov.w	r8, #10
2ffedbec:	4632      	mov	r2, r6
2ffedbee:	f812 3b01 	ldrb.w	r3, [r2], #1
2ffedbf2:	3b30      	subs	r3, #48	@ 0x30
2ffedbf4:	fa5f fe83 	uxtb.w	lr, r3
2ffedbf8:	f1be 0f09 	cmp.w	lr, #9
2ffedbfc:	d904      	bls.n	2ffedc08 <vsnprintf+0x150>
2ffedbfe:	2f00      	cmp	r7, #0
2ffedc00:	f43f af7c 	beq.w	2ffedafc <vsnprintf+0x44>
2ffedc04:	4249      	negs	r1, r1
2ffedc06:	e779      	b.n	2ffedafc <vsnprintf+0x44>
2ffedc08:	fb08 3101 	mla	r1, r8, r1, r3
2ffedc0c:	4616      	mov	r6, r2
2ffedc0e:	e7ed      	b.n	2ffedbec <vsnprintf+0x134>
2ffedc10:	2801      	cmp	r0, #1
2ffedc12:	bf8b      	itete	hi
2ffedc14:	1de7      	addhi	r7, r4, #7
2ffedc16:	1d27      	addls	r7, r4, #4
2ffedc18:	f027 0707 	bichi.w	r7, r7, #7
2ffedc1c:	6823      	ldrls	r3, [r4, #0]
2ffedc1e:	bf88      	it	hi
2ffedc20:	f857 3b08 	ldrhi.w	r3, [r7], #8
2ffedc24:	2b00      	cmp	r3, #0
2ffedc26:	da0b      	bge.n	2ffedc40 <vsnprintf+0x188>
2ffedc28:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2ffedc2a:	425b      	negs	r3, r3
2ffedc2c:	42aa      	cmp	r2, r5
2ffedc2e:	f102 0201 	add.w	r2, r2, #1
2ffedc32:	9209      	str	r2, [sp, #36]	@ 0x24
2ffedc34:	bf3f      	itttt	cc
2ffedc36:	242d      	movcc	r4, #45	@ 0x2d
2ffedc38:	9807      	ldrcc	r0, [sp, #28]
2ffedc3a:	f800 4b01 	strbcc.w	r4, [r0], #1
2ffedc3e:	9007      	strcc	r0, [sp, #28]
2ffedc40:	17da      	asrs	r2, r3, #31
2ffedc42:	2000      	movs	r0, #0
2ffedc44:	9104      	str	r1, [sp, #16]
2ffedc46:	210a      	movs	r1, #10
2ffedc48:	9005      	str	r0, [sp, #20]
2ffedc4a:	463c      	mov	r4, r7
2ffedc4c:	9102      	str	r1, [sp, #8]
2ffedc4e:	a807      	add	r0, sp, #28
2ffedc50:	e9cd 3200 	strd	r3, r2, [sp]
2ffedc54:	f8cd c00c 	str.w	ip, [sp, #12]
2ffedc58:	aa09      	add	r2, sp, #36	@ 0x24
2ffedc5a:	4629      	mov	r1, r5
2ffedc5c:	f002 f82f 	bl	2ffefcbe <unsigned_num_print>
2ffedc60:	4632      	mov	r2, r6
2ffedc62:	e737      	b.n	2ffedad4 <vsnprintf+0x1c>
2ffedc64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffedc66:	42ab      	cmp	r3, r5
2ffedc68:	f103 0301 	add.w	r3, r3, #1
2ffedc6c:	bf3f      	itttt	cc
2ffedc6e:	9a07      	ldrcc	r2, [sp, #28]
2ffedc70:	f854 1b04 	ldrcc.w	r1, [r4], #4
2ffedc74:	f802 1b01 	strbcc.w	r1, [r2], #1
2ffedc78:	9207      	strcc	r2, [sp, #28]
2ffedc7a:	e7ab      	b.n	2ffedbd4 <vsnprintf+0x11c>
2ffedc7c:	f854 2b04 	ldr.w	r2, [r4], #4
2ffedc80:	2000      	movs	r0, #0
2ffedc82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffedc84:	4607      	mov	r7, r0
2ffedc86:	9907      	ldr	r1, [sp, #28]
2ffedc88:	3a01      	subs	r2, #1
2ffedc8a:	f812 cf01 	ldrb.w	ip, [r2, #1]!
2ffedc8e:	f1bc 0f00 	cmp.w	ip, #0
2ffedc92:	d104      	bne.n	2ffedc9e <vsnprintf+0x1e6>
2ffedc94:	b100      	cbz	r0, 2ffedc98 <vsnprintf+0x1e0>
2ffedc96:	9107      	str	r1, [sp, #28]
2ffedc98:	2f00      	cmp	r7, #0
2ffedc9a:	d19b      	bne.n	2ffedbd4 <vsnprintf+0x11c>
2ffedc9c:	e7e0      	b.n	2ffedc60 <vsnprintf+0x1a8>
2ffedc9e:	429d      	cmp	r5, r3
2ffedca0:	f04f 0701 	mov.w	r7, #1
2ffedca4:	bf84      	itt	hi
2ffedca6:	f801 cb01 	strbhi.w	ip, [r1], #1
2ffedcaa:	2001      	movhi	r0, #1
2ffedcac:	3301      	adds	r3, #1
2ffedcae:	e7ec      	b.n	2ffedc8a <vsnprintf+0x1d2>
2ffedcb0:	2801      	cmp	r0, #1
2ffedcb2:	f04f 0000 	mov.w	r0, #0
2ffedcb6:	bf8b      	itete	hi
2ffedcb8:	1de3      	addhi	r3, r4, #7
2ffedcba:	2300      	movls	r3, #0
2ffedcbc:	f023 0307 	bichi.w	r3, r3, #7
2ffedcc0:	f854 2b04 	ldrls.w	r2, [r4], #4
2ffedcc4:	bf82      	ittt	hi
2ffedcc6:	461c      	movhi	r4, r3
2ffedcc8:	685b      	ldrhi	r3, [r3, #4]
2ffedcca:	f854 2b08 	ldrhi.w	r2, [r4], #8
2ffedcce:	9104      	str	r1, [sp, #16]
2ffedcd0:	210a      	movs	r1, #10
2ffedcd2:	9005      	str	r0, [sp, #20]
2ffedcd4:	f8cd c00c 	str.w	ip, [sp, #12]
2ffedcd8:	9102      	str	r1, [sp, #8]
2ffedcda:	e9cd 2300 	strd	r2, r3, [sp]
2ffedcde:	e022      	b.n	2ffedd26 <vsnprintf+0x26e>
2ffedce0:	3001      	adds	r0, #1
2ffedce2:	e70b      	b.n	2ffedafc <vsnprintf+0x44>
2ffedce4:	f854 7b04 	ldr.w	r7, [r4], #4
2ffedce8:	2200      	movs	r2, #0
2ffedcea:	b19f      	cbz	r7, 2ffedd14 <vsnprintf+0x25c>
2ffedcec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffedcee:	4690      	mov	r8, r2
2ffedcf0:	9807      	ldr	r0, [sp, #28]
2ffedcf2:	4696      	mov	lr, r2
2ffedcf4:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 2ffedd84 <vsnprintf+0x2cc>
2ffedcf8:	f81a 9b01 	ldrb.w	r9, [sl], #1
2ffedcfc:	f1b9 0f00 	cmp.w	r9, #0
2ffedd00:	d117      	bne.n	2ffedd32 <vsnprintf+0x27a>
2ffedd02:	f1b8 0f00 	cmp.w	r8, #0
2ffedd06:	d000      	beq.n	2ffedd0a <vsnprintf+0x252>
2ffedd08:	9007      	str	r0, [sp, #28]
2ffedd0a:	f1be 0f00 	cmp.w	lr, #0
2ffedd0e:	d000      	beq.n	2ffedd12 <vsnprintf+0x25a>
2ffedd10:	9309      	str	r3, [sp, #36]	@ 0x24
2ffedd12:	3902      	subs	r1, #2
2ffedd14:	9104      	str	r1, [sp, #16]
2ffedd16:	2300      	movs	r3, #0
2ffedd18:	9305      	str	r3, [sp, #20]
2ffedd1a:	2310      	movs	r3, #16
2ffedd1c:	f8cd c00c 	str.w	ip, [sp, #12]
2ffedd20:	9302      	str	r3, [sp, #8]
2ffedd22:	e9cd 7200 	strd	r7, r2, [sp]
2ffedd26:	aa09      	add	r2, sp, #36	@ 0x24
2ffedd28:	4629      	mov	r1, r5
2ffedd2a:	a807      	add	r0, sp, #28
2ffedd2c:	f001 ffc7 	bl	2ffefcbe <unsigned_num_print>
2ffedd30:	e796      	b.n	2ffedc60 <vsnprintf+0x1a8>
2ffedd32:	429d      	cmp	r5, r3
2ffedd34:	f04f 0e01 	mov.w	lr, #1
2ffedd38:	bf84      	itt	hi
2ffedd3a:	f800 9b01 	strbhi.w	r9, [r0], #1
2ffedd3e:	f04f 0801 	movhi.w	r8, #1
2ffedd42:	3301      	adds	r3, #1
2ffedd44:	e7d8      	b.n	2ffedcf8 <vsnprintf+0x240>
2ffedd46:	2700      	movs	r7, #0
2ffedd48:	2801      	cmp	r0, #1
2ffedd4a:	bf8b      	itete	hi
2ffedd4c:	1de3      	addhi	r3, r4, #7
2ffedd4e:	2300      	movls	r3, #0
2ffedd50:	f023 0307 	bichi.w	r3, r3, #7
2ffedd54:	f854 2b04 	ldrls.w	r2, [r4], #4
2ffedd58:	bf82      	ittt	hi
2ffedd5a:	461c      	movhi	r4, r3
2ffedd5c:	685b      	ldrhi	r3, [r3, #4]
2ffedd5e:	f854 2b08 	ldrhi.w	r2, [r4], #8
2ffedd62:	9104      	str	r1, [sp, #16]
2ffedd64:	2110      	movs	r1, #16
2ffedd66:	9705      	str	r7, [sp, #20]
2ffedd68:	f8cd c00c 	str.w	ip, [sp, #12]
2ffedd6c:	e7b4      	b.n	2ffedcd8 <vsnprintf+0x220>
2ffedd6e:	9909      	ldr	r1, [sp, #36]	@ 0x24
2ffedd70:	42a9      	cmp	r1, r5
2ffedd72:	f101 0101 	add.w	r1, r1, #1
2ffedd76:	9109      	str	r1, [sp, #36]	@ 0x24
2ffedd78:	bf3e      	ittt	cc
2ffedd7a:	9807      	ldrcc	r0, [sp, #28]
2ffedd7c:	f800 3b01 	strbcc.w	r3, [r0], #1
2ffedd80:	9007      	strcc	r0, [sp, #28]
2ffedd82:	e6a7      	b.n	2ffedad4 <vsnprintf+0x1c>
2ffedd84:	2fff3da2 	.word	0x2fff3da2

2ffedd88 <bl2_arch_setup>:
2ffedd88:	4770      	bx	lr

2ffedd8a <bl2_el3_setup>:
2ffedd8a:	b508      	push	{r3, lr}
2ffedd8c:	f000 f96e 	bl	2ffee06c <bl2_el3_early_platform_setup>
2ffedd90:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffedd94:	f7f9 b8f4 	b.w	2ffe6f80 <bl2_el3_plat_arch_setup>

2ffedd98 <cpu_to_fdt32>:
2ffedd98:	ba00      	rev	r0, r0
2ffedd9a:	4770      	bx	lr

2ffedd9c <fdt_read_uint32>:
2ffedd9c:	b507      	push	{r0, r1, r2, lr}
2ffedd9e:	9300      	str	r3, [sp, #0]
2ffedda0:	2301      	movs	r3, #1
2ffedda2:	f7f7 f8ad 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffedda6:	b003      	add	sp, #12
2ffedda8:	f85d fb04 	ldr.w	pc, [sp], #4

2ffeddac <fdt_read_uint32_default>:
2ffeddac:	b513      	push	{r0, r1, r4, lr}
2ffeddae:	461c      	mov	r4, r3
2ffeddb0:	9301      	str	r3, [sp, #4]
2ffeddb2:	ab01      	add	r3, sp, #4
2ffeddb4:	f7ff fff2 	bl	2ffedd9c <fdt_read_uint32>
2ffeddb8:	2800      	cmp	r0, #0
2ffeddba:	bfa8      	it	ge
2ffeddbc:	9c01      	ldrge	r4, [sp, #4]
2ffeddbe:	4620      	mov	r0, r4
2ffeddc0:	b002      	add	sp, #8
2ffeddc2:	bd10      	pop	{r4, pc}

2ffeddc4 <fdt_read_uint64>:
2ffeddc4:	b530      	push	{r4, r5, lr}
2ffeddc6:	b085      	sub	sp, #20
2ffeddc8:	461c      	mov	r4, r3
2ffeddca:	ab02      	add	r3, sp, #8
2ffeddcc:	9300      	str	r3, [sp, #0]
2ffeddce:	2500      	movs	r5, #0
2ffeddd0:	2302      	movs	r3, #2
2ffeddd2:	e9cd 5502 	strd	r5, r5, [sp, #8]
2ffeddd6:	f7f7 f893 	bl	2ffe4f00 <fdt_read_uint32_array>
2ffeddda:	2800      	cmp	r0, #0
2ffedddc:	db04      	blt.n	2ffedde8 <fdt_read_uint64+0x24>
2ffeddde:	9b03      	ldr	r3, [sp, #12]
2ffedde0:	4628      	mov	r0, r5
2ffedde2:	6023      	str	r3, [r4, #0]
2ffedde4:	9b02      	ldr	r3, [sp, #8]
2ffedde6:	6063      	str	r3, [r4, #4]
2ffedde8:	b005      	add	sp, #20
2ffeddea:	bd30      	pop	{r4, r5, pc}

2ffeddec <device_type_fip>:
2ffeddec:	2004      	movs	r0, #4
2ffeddee:	4770      	bx	lr

2ffeddf0 <device_type_memmap>:
2ffeddf0:	2002      	movs	r0, #2
2ffeddf2:	4770      	bx	lr

2ffeddf4 <memmap_dev_close>:
2ffeddf4:	2000      	movs	r0, #0
2ffeddf6:	4770      	bx	lr

2ffeddf8 <is_valid_dev>:
2ffeddf8:	b508      	push	{r3, lr}
2ffeddfa:	b140      	cbz	r0, 2ffede0e <is_valid_dev+0x16>
2ffeddfc:	6800      	ldr	r0, [r0, #0]
2ffeddfe:	b130      	cbz	r0, 2ffede0e <is_valid_dev+0x16>
2ffede00:	6800      	ldr	r0, [r0, #0]
2ffede02:	b120      	cbz	r0, 2ffede0e <is_valid_dev+0x16>
2ffede04:	4780      	blx	r0
2ffede06:	2808      	cmp	r0, #8
2ffede08:	bf8c      	ite	hi
2ffede0a:	2000      	movhi	r0, #0
2ffede0c:	2001      	movls	r0, #1
2ffede0e:	bd08      	pop	{r3, pc}

2ffede10 <is_valid_entity>:
2ffede10:	b508      	push	{r3, lr}
2ffede12:	b110      	cbz	r0, 2ffede1a <is_valid_entity+0xa>
2ffede14:	6800      	ldr	r0, [r0, #0]
2ffede16:	f7ff ffef 	bl	2ffeddf8 <is_valid_dev>
2ffede1a:	f000 0001 	and.w	r0, r0, #1
2ffede1e:	bd08      	pop	{r3, pc}

2ffede20 <stm32mp1_mode_register_write.isra.0>:
2ffede20:	6983      	ldr	r3, [r0, #24]
2ffede22:	07db      	lsls	r3, r3, #31
2ffede24:	d4fc      	bmi.n	2ffede20 <stm32mp1_mode_register_write.isra.0>
2ffede26:	0309      	lsls	r1, r1, #12
2ffede28:	f041 0310 	orr.w	r3, r1, #16
2ffede2c:	f041 4100 	orr.w	r1, r1, #2147483648	@ 0x80000000
2ffede30:	6103      	str	r3, [r0, #16]
2ffede32:	f041 0110 	orr.w	r1, r1, #16
2ffede36:	6142      	str	r2, [r0, #20]
2ffede38:	6101      	str	r1, [r0, #16]
2ffede3a:	6983      	ldr	r3, [r0, #24]
2ffede3c:	07db      	lsls	r3, r3, #31
2ffede3e:	d4fc      	bmi.n	2ffede3a <stm32mp1_mode_register_write.isra.0+0x1a>
2ffede40:	4770      	bx	lr

2ffede42 <stm32mp1_ddrphy_idone_wait>:
2ffede42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffede44:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffede48:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffede4c:	191a      	adds	r2, r3, r4
2ffede4e:	f240 3681 	movw	r6, #897	@ 0x381
2ffede52:	f145 0700 	adc.w	r7, r5, #0
2ffede56:	68c3      	ldr	r3, [r0, #12]
2ffede58:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffede5c:	42a2      	cmp	r2, r4
2ffede5e:	eb77 0105 	sbcs.w	r1, r7, r5
2ffede62:	d203      	bcs.n	2ffede6c <stm32mp1_ddrphy_idone_wait+0x2a>
2ffede64:	f7f9 fe22 	bl	2ffe7aac <console_flush>
2ffede68:	f7f6 eae4 	blx	2ffe4434 <do_panic>
2ffede6c:	0659      	lsls	r1, r3, #25
2ffede6e:	d404      	bmi.n	2ffede7a <stm32mp1_ddrphy_idone_wait+0x38>
2ffede70:	f3c3 1140 	ubfx	r1, r3, #5, #1
2ffede74:	4033      	ands	r3, r6
2ffede76:	4319      	orrs	r1, r3
2ffede78:	d0ed      	beq.n	2ffede56 <stm32mp1_ddrphy_idone_wait+0x14>
2ffede7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2ffede7c <stm32mp1_wait_operating_mode>:
2ffede7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffede7e:	460d      	mov	r5, r1
2ffede80:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffede84:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffede88:	1992      	adds	r2, r2, r6
2ffede8a:	f147 0400 	adc.w	r4, r7, #0
2ffede8e:	6900      	ldr	r0, [r0, #16]
2ffede90:	6843      	ldr	r3, [r0, #4]
2ffede92:	f003 0107 	and.w	r1, r3, #7
2ffede96:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2ffede9a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffede9e:	42b2      	cmp	r2, r6
2ffedea0:	eb74 0607 	sbcs.w	r6, r4, r7
2ffedea4:	d311      	bcc.n	2ffedeca <stm32mp1_wait_operating_mode+0x4e>
2ffedea6:	2d03      	cmp	r5, #3
2ffedea8:	d11e      	bne.n	2ffedee8 <stm32mp1_wait_operating_mode+0x6c>
2ffedeaa:	2903      	cmp	r1, #3
2ffedeac:	d1f0      	bne.n	2ffede90 <stm32mp1_wait_operating_mode+0x14>
2ffedeae:	2b20      	cmp	r3, #32
2ffedeb0:	d100      	bne.n	2ffedeb4 <stm32mp1_wait_operating_mode+0x38>
2ffedeb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffedeb4:	6843      	ldr	r3, [r0, #4]
2ffedeb6:	f003 0107 	and.w	r1, r3, #7
2ffedeba:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2ffedebe:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffedec2:	42b2      	cmp	r2, r6
2ffedec4:	eb74 0607 	sbcs.w	r6, r4, r7
2ffedec8:	d2ef      	bcs.n	2ffedeaa <stm32mp1_wait_operating_mode+0x2e>
2ffedeca:	f7f9 fdef 	bl	2ffe7aac <console_flush>
2ffedece:	f7f6 eab2 	blx	2ffe4434 <do_panic>
2ffeded2:	6843      	ldr	r3, [r0, #4]
2ffeded4:	f003 0107 	and.w	r1, r3, #7
2ffeded8:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2ffededc:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffedee0:	42b2      	cmp	r2, r6
2ffedee2:	eb74 0607 	sbcs.w	r6, r4, r7
2ffedee6:	d3f0      	bcc.n	2ffedeca <stm32mp1_wait_operating_mode+0x4e>
2ffedee8:	428d      	cmp	r5, r1
2ffedeea:	d0e2      	beq.n	2ffedeb2 <stm32mp1_wait_operating_mode+0x36>
2ffedeec:	2d01      	cmp	r5, #1
2ffedeee:	d1f0      	bne.n	2ffeded2 <stm32mp1_wait_operating_mode+0x56>
2ffedef0:	2903      	cmp	r1, #3
2ffedef2:	d1ee      	bne.n	2ffeded2 <stm32mp1_wait_operating_mode+0x56>
2ffedef4:	2b30      	cmp	r3, #48	@ 0x30
2ffedef6:	d1ec      	bne.n	2ffeded2 <stm32mp1_wait_operating_mode+0x56>
2ffedef8:	e7db      	b.n	2ffedeb2 <stm32mp1_wait_operating_mode+0x36>

2ffedefa <stm32mp_ddr_test_rw_access>:
2ffedefa:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffedefe:	f04f 32aa 	mov.w	r2, #2863311530	@ 0xaaaaaaaa
2ffedf02:	6803      	ldr	r3, [r0, #0]
2ffedf04:	6002      	str	r2, [r0, #0]
2ffedf06:	6802      	ldr	r2, [r0, #0]
2ffedf08:	f1b2 3faa 	cmp.w	r2, #2863311530	@ 0xaaaaaaaa
2ffedf0c:	bf04      	itt	eq
2ffedf0e:	6003      	streq	r3, [r0, #0]
2ffedf10:	2000      	moveq	r0, #0
2ffedf12:	4770      	bx	lr

2ffedf14 <stm32mp_ddr_test_data_bus>:
2ffedf14:	2020      	movs	r0, #32
2ffedf16:	2301      	movs	r3, #1
2ffedf18:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffedf1c:	6013      	str	r3, [r2, #0]
2ffedf1e:	6811      	ldr	r1, [r2, #0]
2ffedf20:	4299      	cmp	r1, r3
2ffedf22:	d103      	bne.n	2ffedf2c <stm32mp_ddr_test_data_bus+0x18>
2ffedf24:	005b      	lsls	r3, r3, #1
2ffedf26:	3801      	subs	r0, #1
2ffedf28:	d1f8      	bne.n	2ffedf1c <stm32mp_ddr_test_data_bus+0x8>
2ffedf2a:	4770      	bx	lr
2ffedf2c:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffedf30:	4770      	bx	lr

2ffedf32 <stm32mp_ddr_test_addr_bus>:
2ffedf32:	1e43      	subs	r3, r0, #1
2ffedf34:	2204      	movs	r2, #4
2ffedf36:	f04f 31aa 	mov.w	r1, #2863311530	@ 0xaaaaaaaa
2ffedf3a:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffedf3c:	421a      	tst	r2, r3
2ffedf3e:	d113      	bne.n	2ffedf68 <stm32mp_ddr_test_addr_bus+0x36>
2ffedf40:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffedf44:	f04f 3155 	mov.w	r1, #1431655765	@ 0x55555555
2ffedf48:	6011      	str	r1, [r2, #0]
2ffedf4a:	2204      	movs	r2, #4
2ffedf4c:	421a      	tst	r2, r3
2ffedf4e:	d110      	bne.n	2ffedf72 <stm32mp_ddr_test_addr_bus+0x40>
2ffedf50:	f04f 4440 	mov.w	r4, #3221225472	@ 0xc0000000
2ffedf54:	2204      	movs	r2, #4
2ffedf56:	f04f 3755 	mov.w	r7, #1431655765	@ 0x55555555
2ffedf5a:	f04f 35aa 	mov.w	r5, #2863311530	@ 0xaaaaaaaa
2ffedf5e:	6025      	str	r5, [r4, #0]
2ffedf60:	ea12 0003 	ands.w	r0, r2, r3
2ffedf64:	d10d      	bne.n	2ffedf82 <stm32mp_ddr_test_addr_bus+0x50>
2ffedf66:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffedf68:	f102 4040 	add.w	r0, r2, #3221225472	@ 0xc0000000
2ffedf6c:	0052      	lsls	r2, r2, #1
2ffedf6e:	6001      	str	r1, [r0, #0]
2ffedf70:	e7e4      	b.n	2ffedf3c <stm32mp_ddr_test_addr_bus+0xa>
2ffedf72:	f102 4040 	add.w	r0, r2, #3221225472	@ 0xc0000000
2ffedf76:	6801      	ldr	r1, [r0, #0]
2ffedf78:	f1b1 3faa 	cmp.w	r1, #2863311530	@ 0xaaaaaaaa
2ffedf7c:	d1f3      	bne.n	2ffedf66 <stm32mp_ddr_test_addr_bus+0x34>
2ffedf7e:	0052      	lsls	r2, r2, #1
2ffedf80:	e7e4      	b.n	2ffedf4c <stm32mp_ddr_test_addr_bus+0x1a>
2ffedf82:	f102 4640 	add.w	r6, r2, #3221225472	@ 0xc0000000
2ffedf86:	6037      	str	r7, [r6, #0]
2ffedf88:	6821      	ldr	r1, [r4, #0]
2ffedf8a:	f1b1 3faa 	cmp.w	r1, #2863311530	@ 0xaaaaaaaa
2ffedf8e:	d110      	bne.n	2ffedfb2 <stm32mp_ddr_test_addr_bus+0x80>
2ffedf90:	2104      	movs	r1, #4
2ffedf92:	4219      	tst	r1, r3
2ffedf94:	d102      	bne.n	2ffedf9c <stm32mp_ddr_test_addr_bus+0x6a>
2ffedf96:	0052      	lsls	r2, r2, #1
2ffedf98:	6035      	str	r5, [r6, #0]
2ffedf9a:	e7e1      	b.n	2ffedf60 <stm32mp_ddr_test_addr_bus+0x2e>
2ffedf9c:	f101 4040 	add.w	r0, r1, #3221225472	@ 0xc0000000
2ffedfa0:	f8d0 c000 	ldr.w	ip, [r0]
2ffedfa4:	f1bc 3faa 	cmp.w	ip, #2863311530	@ 0xaaaaaaaa
2ffedfa8:	d001      	beq.n	2ffedfae <stm32mp_ddr_test_addr_bus+0x7c>
2ffedfaa:	4291      	cmp	r1, r2
2ffedfac:	d1db      	bne.n	2ffedf66 <stm32mp_ddr_test_addr_bus+0x34>
2ffedfae:	0049      	lsls	r1, r1, #1
2ffedfb0:	e7ef      	b.n	2ffedf92 <stm32mp_ddr_test_addr_bus+0x60>
2ffedfb2:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffedfb6:	e7d6      	b.n	2ffedf66 <stm32mp_ddr_test_addr_bus+0x34>

2ffedfb8 <stm32mp_ddr_check_size>:
2ffedfb8:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffedfbc:	f04f 33aa 	mov.w	r3, #2863311530	@ 0xaaaaaaaa
2ffedfc0:	b510      	push	{r4, lr}
2ffedfc2:	2004      	movs	r0, #4
2ffedfc4:	6013      	str	r3, [r2, #0]
2ffedfc6:	f04f 3155 	mov.w	r1, #1431655765	@ 0x55555555
2ffedfca:	231c      	movs	r3, #28
2ffedfcc:	f100 4440 	add.w	r4, r0, #3221225472	@ 0xc0000000
2ffedfd0:	6021      	str	r1, [r4, #0]
2ffedfd2:	f3bf 8f4f 	dsb	sy
2ffedfd6:	6814      	ldr	r4, [r2, #0]
2ffedfd8:	f1b4 3faa 	cmp.w	r4, #2863311530	@ 0xaaaaaaaa
2ffedfdc:	d102      	bne.n	2ffedfe4 <stm32mp_ddr_check_size+0x2c>
2ffedfde:	0040      	lsls	r0, r0, #1
2ffedfe0:	3b01      	subs	r3, #1
2ffedfe2:	d1f3      	bne.n	2ffedfcc <stm32mp_ddr_check_size+0x14>
2ffedfe4:	bd10      	pop	{r4, pc}

2ffedfe6 <stm32_uart_stop>:
2ffedfe6:	6803      	ldr	r3, [r0, #0]
2ffedfe8:	f023 0301 	bic.w	r3, r3, #1
2ffedfec:	6003      	str	r3, [r0, #0]
2ffedfee:	4770      	bx	lr

2ffedff0 <stm32_uart_putc>:
2ffedff0:	b538      	push	{r3, r4, r5, lr}
2ffedff2:	460d      	mov	r5, r1
2ffedff4:	4604      	mov	r4, r0
2ffedff6:	b170      	cbz	r0, 2ffee016 <stm32_uart_putc+0x26>
2ffedff8:	2180      	movs	r1, #128	@ 0x80
2ffedffa:	f7f8 f91d 	bl	2ffe6238 <stm32_uart_wait_flag>
2ffedffe:	b948      	cbnz	r0, 2ffee014 <stm32_uart_putc+0x24>
2ffee000:	6823      	ldr	r3, [r4, #0]
2ffee002:	629d      	str	r5, [r3, #40]	@ 0x28
2ffee004:	6823      	ldr	r3, [r4, #0]
2ffee006:	69da      	ldr	r2, [r3, #28]
2ffee008:	0712      	lsls	r2, r2, #28
2ffee00a:	d003      	beq.n	2ffee014 <stm32_uart_putc+0x24>
2ffee00c:	f06f 000d 	mvn.w	r0, #13
2ffee010:	220f      	movs	r2, #15
2ffee012:	621a      	str	r2, [r3, #32]
2ffee014:	bd38      	pop	{r3, r4, r5, pc}
2ffee016:	f06f 0015 	mvn.w	r0, #21
2ffee01a:	e7fb      	b.n	2ffee014 <stm32_uart_putc+0x24>

2ffee01c <stm32_uart_flush>:
2ffee01c:	b510      	push	{r4, lr}
2ffee01e:	4604      	mov	r4, r0
2ffee020:	b148      	cbz	r0, 2ffee036 <stm32_uart_flush+0x1a>
2ffee022:	2180      	movs	r1, #128	@ 0x80
2ffee024:	f7f8 f908 	bl	2ffe6238 <stm32_uart_wait_flag>
2ffee028:	b938      	cbnz	r0, 2ffee03a <stm32_uart_flush+0x1e>
2ffee02a:	4620      	mov	r0, r4
2ffee02c:	2140      	movs	r1, #64	@ 0x40
2ffee02e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffee032:	f7f8 b901 	b.w	2ffe6238 <stm32_uart_wait_flag>
2ffee036:	f06f 0015 	mvn.w	r0, #21
2ffee03a:	bd10      	pop	{r4, pc}

2ffee03c <stm32_uart_getc>:
2ffee03c:	b170      	cbz	r0, 2ffee05c <stm32_uart_getc+0x20>
2ffee03e:	6802      	ldr	r2, [r0, #0]
2ffee040:	69d3      	ldr	r3, [r2, #28]
2ffee042:	0699      	lsls	r1, r3, #26
2ffee044:	d50d      	bpl.n	2ffee062 <stm32_uart_getc+0x26>
2ffee046:	6a53      	ldr	r3, [r2, #36]	@ 0x24
2ffee048:	6840      	ldr	r0, [r0, #4]
2ffee04a:	4018      	ands	r0, r3
2ffee04c:	69d3      	ldr	r3, [r2, #28]
2ffee04e:	071b      	lsls	r3, r3, #28
2ffee050:	d009      	beq.n	2ffee066 <stm32_uart_getc+0x2a>
2ffee052:	230f      	movs	r3, #15
2ffee054:	f06f 000d 	mvn.w	r0, #13
2ffee058:	6213      	str	r3, [r2, #32]
2ffee05a:	4770      	bx	lr
2ffee05c:	f06f 0015 	mvn.w	r0, #21
2ffee060:	4770      	bx	lr
2ffee062:	f06f 0022 	mvn.w	r0, #34	@ 0x22
2ffee066:	4770      	bx	lr

2ffee068 <plat_try_backup_partitions>:
2ffee068:	2000      	movs	r0, #0
2ffee06a:	4770      	bx	lr

2ffee06c <bl2_el3_early_platform_setup>:
2ffee06c:	f7f9 bdc2 	b.w	2ffe7bf4 <stm32mp_save_boot_ctx_address>

2ffee070 <plat_flush_next_bl_params>:
2ffee070:	f7f6 be40 	b.w	2ffe4cf4 <flush_bl_params_desc>

2ffee074 <plat_get_bl_image_load_info>:
2ffee074:	f7f6 be86 	b.w	2ffe4d84 <get_bl_load_info_from_mem_params_desc>

2ffee078 <plat_get_next_bl_params>:
2ffee078:	b510      	push	{r4, lr}
2ffee07a:	f7f6 fead 	bl	2ffe4dd8 <get_next_bl_params_from_mem_params_desc>
2ffee07e:	4604      	mov	r4, r0
2ffee080:	f7f6 ff0a 	bl	2ffe4e98 <populate_next_bl_params_config>
2ffee084:	4620      	mov	r0, r4
2ffee086:	bd10      	pop	{r4, pc}

2ffee088 <stm32_pwr_cstop_critic_exit>:
2ffee088:	b508      	push	{r3, lr}
2ffee08a:	2000      	movs	r0, #0
2ffee08c:	f7fc faca 	bl	2ffea624 <bsec_write_scratch>
2ffee090:	f7fa fda0 	bl	2ffe8bd4 <stm32mp_stgen_restore_rate>
2ffee094:	f7fa fd1c 	bl	2ffe8ad0 <generic_delay_timer_init>
2ffee098:	f7fc fb80 	bl	2ffea79c <ddr_sw_self_refresh_exit>
2ffee09c:	b118      	cbz	r0, 2ffee0a6 <stm32_pwr_cstop_critic_exit+0x1e>
2ffee09e:	f7f9 fd05 	bl	2ffe7aac <console_flush>
2ffee0a2:	f7f6 e9c8 	blx	2ffe4434 <do_panic>
2ffee0a6:	bd08      	pop	{r3, pc}

2ffee0a8 <stm32_pwr_call_optee_ep>:
2ffee0a8:	b508      	push	{r3, lr}
2ffee0aa:	f7fd fded 	bl	2ffebc88 <stm32_pm_get_optee_ep>
2ffee0ae:	4780      	blx	r0
2ffee0b0:	f7f9 fcfc 	bl	2ffe7aac <console_flush>
2ffee0b4:	f7f6 e9be 	blx	2ffe4434 <do_panic>

2ffee0b8 <fdt32_to_cpu>:
2ffee0b8:	ba00      	rev	r0, r0
2ffee0ba:	4770      	bx	lr

2ffee0bc <putchar>:
2ffee0bc:	b510      	push	{r4, lr}
2ffee0be:	4604      	mov	r4, r0
2ffee0c0:	f7f9 fcc8 	bl	2ffe7a54 <console_putc>
2ffee0c4:	2800      	cmp	r0, #0
2ffee0c6:	bf0c      	ite	eq
2ffee0c8:	4620      	moveq	r0, r4
2ffee0ca:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
2ffee0ce:	bd10      	pop	{r4, pc}

2ffee0d0 <plat_error_handler>:
2ffee0d0:	bf30      	wfi
2ffee0d2:	e7fd      	b.n	2ffee0d0 <plat_error_handler>

2ffee0d4 <bl2_plat_preload_setup>:
2ffee0d4:	4770      	bx	lr

2ffee0d6 <plat_try_next_boot_source>:
2ffee0d6:	2000      	movs	r0, #0
2ffee0d8:	4770      	bx	lr

2ffee0da <__ctzdi2>:
2ffee0da:	fab0 f380 	clz	r3, r0
2ffee0de:	095b      	lsrs	r3, r3, #5
2ffee0e0:	425a      	negs	r2, r3
2ffee0e2:	3b01      	subs	r3, #1
2ffee0e4:	4003      	ands	r3, r0
2ffee0e6:	4011      	ands	r1, r2
2ffee0e8:	430b      	orrs	r3, r1
2ffee0ea:	f002 0020 	and.w	r0, r2, #32
2ffee0ee:	fa93 f3a3 	rbit	r3, r3
2ffee0f2:	fab3 f383 	clz	r3, r3
2ffee0f6:	4418      	add	r0, r3
2ffee0f8:	4770      	bx	lr

2ffee0fa <__udivmoddi4>:
2ffee0fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee0fe:	469e      	mov	lr, r3
2ffee100:	9e06      	ldr	r6, [sp, #24]
2ffee102:	b959      	cbnz	r1, 2ffee11c <__udivmoddi4+0x22>
2ffee104:	bb63      	cbnz	r3, 2ffee160 <__udivmoddi4+0x66>
2ffee106:	fbb0 f1f2 	udiv	r1, r0, r2
2ffee10a:	b11e      	cbz	r6, 2ffee114 <__udivmoddi4+0x1a>
2ffee10c:	fb02 0011 	mls	r0, r2, r1, r0
2ffee110:	e9c6 0300 	strd	r0, r3, [r6]
2ffee114:	4608      	mov	r0, r1
2ffee116:	2100      	movs	r1, #0
2ffee118:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee11c:	bb82      	cbnz	r2, 2ffee180 <__udivmoddi4+0x86>
2ffee11e:	b903      	cbnz	r3, 2ffee122 <__udivmoddi4+0x28>
2ffee120:	deff      	udf	#255	@ 0xff
2ffee122:	b940      	cbnz	r0, 2ffee136 <__udivmoddi4+0x3c>
2ffee124:	fbb1 f2f3 	udiv	r2, r1, r3
2ffee128:	b11e      	cbz	r6, 2ffee132 <__udivmoddi4+0x38>
2ffee12a:	fb03 1112 	mls	r1, r3, r2, r1
2ffee12e:	e9c6 0100 	strd	r0, r1, [r6]
2ffee132:	4610      	mov	r0, r2
2ffee134:	e7ef      	b.n	2ffee116 <__udivmoddi4+0x1c>
2ffee136:	1e5c      	subs	r4, r3, #1
2ffee138:	421c      	tst	r4, r3
2ffee13a:	d10a      	bne.n	2ffee152 <__udivmoddi4+0x58>
2ffee13c:	b116      	cbz	r6, 2ffee144 <__udivmoddi4+0x4a>
2ffee13e:	400c      	ands	r4, r1
2ffee140:	e9c6 0400 	strd	r0, r4, [r6]
2ffee144:	fa93 f3a3 	rbit	r3, r3
2ffee148:	fab3 f383 	clz	r3, r3
2ffee14c:	fa21 f003 	lsr.w	r0, r1, r3
2ffee150:	e7e1      	b.n	2ffee116 <__udivmoddi4+0x1c>
2ffee152:	fab3 f483 	clz	r4, r3
2ffee156:	fab1 f581 	clz	r5, r1
2ffee15a:	1b64      	subs	r4, r4, r5
2ffee15c:	2c1e      	cmp	r4, #30
2ffee15e:	d904      	bls.n	2ffee16a <__udivmoddi4+0x70>
2ffee160:	b10e      	cbz	r6, 2ffee166 <__udivmoddi4+0x6c>
2ffee162:	e9c6 0100 	strd	r0, r1, [r6]
2ffee166:	2000      	movs	r0, #0
2ffee168:	e7d5      	b.n	2ffee116 <__udivmoddi4+0x1c>
2ffee16a:	f104 0c01 	add.w	ip, r4, #1
2ffee16e:	4617      	mov	r7, r2
2ffee170:	f1c4 041f 	rsb	r4, r4, #31
2ffee174:	fa21 fe0c 	lsr.w	lr, r1, ip
2ffee178:	fa00 f804 	lsl.w	r8, r0, r4
2ffee17c:	40a1      	lsls	r1, r4
2ffee17e:	e031      	b.n	2ffee1e4 <__udivmoddi4+0xea>
2ffee180:	2b00      	cmp	r3, #0
2ffee182:	d167      	bne.n	2ffee254 <__udivmoddi4+0x15a>
2ffee184:	1e54      	subs	r4, r2, #1
2ffee186:	ea14 0502 	ands.w	r5, r4, r2
2ffee18a:	d111      	bne.n	2ffee1b0 <__udivmoddi4+0xb6>
2ffee18c:	b116      	cbz	r6, 2ffee194 <__udivmoddi4+0x9a>
2ffee18e:	4004      	ands	r4, r0
2ffee190:	e9c6 4500 	strd	r4, r5, [r6]
2ffee194:	2a01      	cmp	r2, #1
2ffee196:	d0bf      	beq.n	2ffee118 <__udivmoddi4+0x1e>
2ffee198:	fa92 f2a2 	rbit	r2, r2
2ffee19c:	fab2 f282 	clz	r2, r2
2ffee1a0:	f1c2 0320 	rsb	r3, r2, #32
2ffee1a4:	40d0      	lsrs	r0, r2
2ffee1a6:	fa01 f303 	lsl.w	r3, r1, r3
2ffee1aa:	4318      	orrs	r0, r3
2ffee1ac:	40d1      	lsrs	r1, r2
2ffee1ae:	e7b3      	b.n	2ffee118 <__udivmoddi4+0x1e>
2ffee1b0:	fab1 f581 	clz	r5, r1
2ffee1b4:	fab2 f482 	clz	r4, r2
2ffee1b8:	1b64      	subs	r4, r4, r5
2ffee1ba:	1c65      	adds	r5, r4, #1
2ffee1bc:	f104 0c21 	add.w	ip, r4, #33	@ 0x21
2ffee1c0:	d105      	bne.n	2ffee1ce <__udivmoddi4+0xd4>
2ffee1c2:	461f      	mov	r7, r3
2ffee1c4:	4680      	mov	r8, r0
2ffee1c6:	2500      	movs	r5, #0
2ffee1c8:	f04f 0c20 	mov.w	ip, #32
2ffee1cc:	e00e      	b.n	2ffee1ec <__udivmoddi4+0xf2>
2ffee1ce:	f1bc 0f1f 	cmp.w	ip, #31
2ffee1d2:	d833      	bhi.n	2ffee23c <__udivmoddi4+0x142>
2ffee1d4:	f1cc 0520 	rsb	r5, ip, #32
2ffee1d8:	461f      	mov	r7, r3
2ffee1da:	fa21 fe0c 	lsr.w	lr, r1, ip
2ffee1de:	fa00 f805 	lsl.w	r8, r0, r5
2ffee1e2:	40a9      	lsls	r1, r5
2ffee1e4:	fa20 f00c 	lsr.w	r0, r0, ip
2ffee1e8:	4301      	orrs	r1, r0
2ffee1ea:	4675      	mov	r5, lr
2ffee1ec:	2000      	movs	r0, #0
2ffee1ee:	0fcc      	lsrs	r4, r1, #31
2ffee1f0:	ea44 0545 	orr.w	r5, r4, r5, lsl #1
2ffee1f4:	ea4f 74d8 	mov.w	r4, r8, lsr #31
2ffee1f8:	ea44 0141 	orr.w	r1, r4, r1, lsl #1
2ffee1fc:	0ffc      	lsrs	r4, r7, #31
2ffee1fe:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2ffee202:	1a50      	subs	r0, r2, r1
2ffee204:	ea44 0848 	orr.w	r8, r4, r8, lsl #1
2ffee208:	eb63 0405 	sbc.w	r4, r3, r5
2ffee20c:	3801      	subs	r0, #1
2ffee20e:	f144 34ff 	adc.w	r4, r4, #4294967295	@ 0xffffffff
2ffee212:	ea02 7ee4 	and.w	lr, r2, r4, asr #31
2ffee216:	ebb1 010e 	subs.w	r1, r1, lr
2ffee21a:	ea4f 70d4 	mov.w	r0, r4, lsr #31
2ffee21e:	ea03 74e4 	and.w	r4, r3, r4, asr #31
2ffee222:	eb65 0e04 	sbc.w	lr, r5, r4
2ffee226:	f1bc 0c01 	subs.w	ip, ip, #1
2ffee22a:	4675      	mov	r5, lr
2ffee22c:	d1df      	bne.n	2ffee1ee <__udivmoddi4+0xf4>
2ffee22e:	bb0e      	cbnz	r6, 2ffee274 <__udivmoddi4+0x17a>
2ffee230:	19ff      	adds	r7, r7, r7
2ffee232:	eb48 0808 	adc.w	r8, r8, r8
2ffee236:	4338      	orrs	r0, r7
2ffee238:	4641      	mov	r1, r8
2ffee23a:	e76d      	b.n	2ffee118 <__udivmoddi4+0x1e>
2ffee23c:	f1cc 0840 	rsb	r8, ip, #64	@ 0x40
2ffee240:	3401      	adds	r4, #1
2ffee242:	fa00 f708 	lsl.w	r7, r0, r8
2ffee246:	fa01 f808 	lsl.w	r8, r1, r8
2ffee24a:	40e0      	lsrs	r0, r4
2ffee24c:	ea48 0800 	orr.w	r8, r8, r0
2ffee250:	40e1      	lsrs	r1, r4
2ffee252:	e7ca      	b.n	2ffee1ea <__udivmoddi4+0xf0>
2ffee254:	fab3 f483 	clz	r4, r3
2ffee258:	fab1 f581 	clz	r5, r1
2ffee25c:	1b64      	subs	r4, r4, r5
2ffee25e:	2c1f      	cmp	r4, #31
2ffee260:	f63f af7e 	bhi.w	2ffee160 <__udivmoddi4+0x66>
2ffee264:	f104 0c01 	add.w	ip, r4, #1
2ffee268:	f04f 0700 	mov.w	r7, #0
2ffee26c:	d0aa      	beq.n	2ffee1c4 <__udivmoddi4+0xca>
2ffee26e:	f1cc 0420 	rsb	r4, ip, #32
2ffee272:	e77f      	b.n	2ffee174 <__udivmoddi4+0x7a>
2ffee274:	e9c6 1e00 	strd	r1, lr, [r6]
2ffee278:	e7da      	b.n	2ffee230 <__udivmoddi4+0x136>

2ffee27a <hex_val>:
2ffee27a:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
2ffee27e:	b2db      	uxtb	r3, r3
2ffee280:	2b09      	cmp	r3, #9
2ffee282:	d801      	bhi.n	2ffee288 <hex_val+0xe>
2ffee284:	b258      	sxtb	r0, r3
2ffee286:	4770      	bx	lr
2ffee288:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
2ffee28c:	2b05      	cmp	r3, #5
2ffee28e:	d802      	bhi.n	2ffee296 <hex_val+0x1c>
2ffee290:	3857      	subs	r0, #87	@ 0x57
2ffee292:	b240      	sxtb	r0, r0
2ffee294:	4770      	bx	lr
2ffee296:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
2ffee29a:	2b05      	cmp	r3, #5
2ffee29c:	d801      	bhi.n	2ffee2a2 <hex_val+0x28>
2ffee29e:	3837      	subs	r0, #55	@ 0x37
2ffee2a0:	e7f7      	b.n	2ffee292 <hex_val+0x18>
2ffee2a2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee2a6:	4770      	bx	lr

2ffee2a8 <read_hex.part.0>:
2ffee2a8:	f022 0201 	bic.w	r2, r2, #1
2ffee2ac:	b538      	push	{r3, r4, r5, lr}
2ffee2ae:	4605      	mov	r5, r0
2ffee2b0:	440a      	add	r2, r1
2ffee2b2:	7808      	ldrb	r0, [r1, #0]
2ffee2b4:	f7ff ffe1 	bl	2ffee27a <hex_val>
2ffee2b8:	1e04      	subs	r4, r0, #0
2ffee2ba:	db0f      	blt.n	2ffee2dc <read_hex.part.0+0x34>
2ffee2bc:	7848      	ldrb	r0, [r1, #1]
2ffee2be:	0124      	lsls	r4, r4, #4
2ffee2c0:	f7ff ffdb 	bl	2ffee27a <hex_val>
2ffee2c4:	2800      	cmp	r0, #0
2ffee2c6:	f004 04f0 	and.w	r4, r4, #240	@ 0xf0
2ffee2ca:	db07      	blt.n	2ffee2dc <read_hex.part.0+0x34>
2ffee2cc:	4304      	orrs	r4, r0
2ffee2ce:	3102      	adds	r1, #2
2ffee2d0:	4291      	cmp	r1, r2
2ffee2d2:	f805 4b01 	strb.w	r4, [r5], #1
2ffee2d6:	d1ec      	bne.n	2ffee2b2 <read_hex.part.0+0xa>
2ffee2d8:	2000      	movs	r0, #0
2ffee2da:	bd38      	pop	{r3, r4, r5, pc}
2ffee2dc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee2e0:	e7fb      	b.n	2ffee2da <read_hex.part.0+0x32>

2ffee2e2 <plat_get_syscnt_freq2>:
2ffee2e2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffee2e6:	4770      	bx	lr

2ffee2e8 <stm32mp_rcc_base>:
2ffee2e8:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
2ffee2ec:	4770      	bx	lr

2ffee2ee <stm32mp_lock_available>:
2ffee2ee:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffee2f2:	f000 0005 	and.w	r0, r0, #5
2ffee2f6:	1f43      	subs	r3, r0, #5
2ffee2f8:	4258      	negs	r0, r3
2ffee2fa:	4158      	adcs	r0, r3
2ffee2fc:	4770      	bx	lr

2ffee2fe <stm32mp_map_ddr_non_cacheable>:
2ffee2fe:	2309      	movs	r3, #9
2ffee300:	b507      	push	{r0, r1, r2, lr}
2ffee302:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffee306:	9300      	str	r3, [sp, #0]
2ffee308:	2100      	movs	r1, #0
2ffee30a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffee30e:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffee312:	f7f9 fe8f 	bl	2ffe8034 <mmap_add_dynamic_region>
2ffee316:	b003      	add	sp, #12
2ffee318:	f85d fb04 	ldr.w	pc, [sp], #4

2ffee31c <stm32mp_unmap_ddr>:
2ffee31c:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
2ffee320:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffee324:	f7f9 be9a 	b.w	2ffe805c <mmap_remove_dynamic_region>

2ffee328 <stm32_save_boot_info>:
2ffee328:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffee32a:	b085      	sub	sp, #20
2ffee32c:	7806      	ldrb	r6, [r0, #0]
2ffee32e:	2700      	movs	r7, #0
2ffee330:	9701      	str	r7, [sp, #4]
2ffee332:	9702      	str	r7, [sp, #8]
2ffee334:	9703      	str	r7, [sp, #12]
2ffee336:	9700      	str	r7, [sp, #0]
2ffee338:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
2ffee33c:	f890 304c 	ldrb.w	r3, [r0, #76]	@ 0x4c
2ffee340:	0424      	lsls	r4, r4, #16
2ffee342:	051b      	lsls	r3, r3, #20
2ffee344:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
2ffee348:	7885      	ldrb	r5, [r0, #2]
2ffee34a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
2ffee34e:	431c      	orrs	r4, r3
2ffee350:	a801      	add	r0, sp, #4
2ffee352:	0336      	lsls	r6, r6, #12
2ffee354:	f7f9 fcfe 	bl	2ffe7d54 <stm32_get_boot_mode_cell>
2ffee358:	2204      	movs	r2, #4
2ffee35a:	463b      	mov	r3, r7
2ffee35c:	eb0d 0002 	add.w	r0, sp, r2
2ffee360:	4669      	mov	r1, sp
2ffee362:	f406 4670 	and.w	r6, r6, #61440	@ 0xf000
2ffee366:	f000 f990 	bl	2ffee68a <nvmem_cell_read>
2ffee36a:	9b00      	ldr	r3, [sp, #0]
2ffee36c:	2204      	movs	r2, #4
2ffee36e:	022d      	lsls	r5, r5, #8
2ffee370:	4669      	mov	r1, sp
2ffee372:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffee376:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
2ffee37a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
2ffee37e:	4323      	orrs	r3, r4
2ffee380:	4333      	orrs	r3, r6
2ffee382:	432b      	orrs	r3, r5
2ffee384:	eb0d 0002 	add.w	r0, sp, r2
2ffee388:	9300      	str	r3, [sp, #0]
2ffee38a:	f000 f98a 	bl	2ffee6a2 <nvmem_cell_write>
2ffee38e:	b005      	add	sp, #20
2ffee390:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffee392 <xlat_arch_get_pas>:
2ffee392:	f000 0030 	and.w	r0, r0, #48	@ 0x30
2ffee396:	f1a0 0310 	sub.w	r3, r0, #16
2ffee39a:	4258      	negs	r0, r3
2ffee39c:	4158      	adcs	r0, r3
2ffee39e:	0140      	lsls	r0, r0, #5
2ffee3a0:	4770      	bx	lr

2ffee3a2 <xlat_arch_get_max_supported_pa>:
2ffee3a2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee3a6:	21ff      	movs	r1, #255	@ 0xff
2ffee3a8:	4770      	bx	lr

2ffee3aa <xlat_get_min_virt_addr_space_size>:
2ffee3aa:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
2ffee3ae:	4770      	bx	lr

2ffee3b0 <is_dcache_enabled>:
2ffee3b0:	f3ef 8300 	mrs	r3, CPSR
2ffee3b4:	f003 031f 	and.w	r3, r3, #31
2ffee3b8:	2b1a      	cmp	r3, #26
2ffee3ba:	d104      	bne.n	2ffee3c6 <is_dcache_enabled+0x16>
2ffee3bc:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2ffee3c0:	f3c0 0080 	ubfx	r0, r0, #2, #1
2ffee3c4:	4770      	bx	lr
2ffee3c6:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffee3ca:	e7f9      	b.n	2ffee3c0 <is_dcache_enabled+0x10>

2ffee3cc <xlat_arch_tlbi_va_sync>:
2ffee3cc:	2300      	movs	r3, #0
2ffee3ce:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2ffee3d2:	f3bf 8f4b 	dsb	ish
2ffee3d6:	f3bf 8f6f 	isb	sy
2ffee3da:	4770      	bx	lr

2ffee3dc <mmap_add_region_check>:
2ffee3dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee3e0:	e9d1 3402 	ldrd	r3, r4, [r1, #8]
2ffee3e4:	e9d1 2e00 	ldrd	r2, lr, [r1]
2ffee3e8:	9401      	str	r4, [sp, #4]
2ffee3ea:	9d01      	ldr	r5, [sp, #4]
2ffee3ec:	1e54      	subs	r4, r2, #1
2ffee3ee:	f3c2 070b 	ubfx	r7, r2, #0, #12
2ffee3f2:	f14e 3cff 	adc.w	ip, lr, #4294967295	@ 0xffffffff
2ffee3f6:	eb14 0b05 	adds.w	fp, r4, r5
2ffee3fa:	eb03 0405 	add.w	r4, r3, r5
2ffee3fe:	694e      	ldr	r6, [r1, #20]
2ffee400:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
2ffee404:	f14c 0c00 	adc.w	ip, ip, #0
2ffee408:	2f00      	cmp	r7, #0
2ffee40a:	d170      	bne.n	2ffee4ee <mmap_add_region_check+0x112>
2ffee40c:	ea43 0705 	orr.w	r7, r3, r5
2ffee410:	f3c7 070b 	ubfx	r7, r7, #0, #12
2ffee414:	2f00      	cmp	r7, #0
2ffee416:	d16a      	bne.n	2ffee4ee <mmap_add_region_check+0x112>
2ffee418:	f1b6 4f80 	cmp.w	r6, #1073741824	@ 0x40000000
2ffee41c:	d005      	beq.n	2ffee42a <mmap_add_region_check+0x4e>
2ffee41e:	f5b6 1f00 	cmp.w	r6, #2097152	@ 0x200000
2ffee422:	d002      	beq.n	2ffee42a <mmap_add_region_check+0x4e>
2ffee424:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
2ffee428:	d161      	bne.n	2ffee4ee <mmap_add_region_check+0x112>
2ffee42a:	4593      	cmp	fp, r2
2ffee42c:	eb7c 060e 	sbcs.w	r6, ip, lr
2ffee430:	d360      	bcc.n	2ffee4f4 <mmap_add_region_check+0x118>
2ffee432:	42a3      	cmp	r3, r4
2ffee434:	d85e      	bhi.n	2ffee4f4 <mmap_add_region_check+0x118>
2ffee436:	6886      	ldr	r6, [r0, #8]
2ffee438:	42a6      	cmp	r6, r4
2ffee43a:	d35b      	bcc.n	2ffee4f4 <mmap_add_region_check+0x118>
2ffee43c:	e9d0 7600 	ldrd	r7, r6, [r0]
2ffee440:	455f      	cmp	r7, fp
2ffee442:	eb76 060c 	sbcs.w	r6, r6, ip
2ffee446:	d355      	bcc.n	2ffee4f4 <mmap_add_region_check+0x118>
2ffee448:	68c6      	ldr	r6, [r0, #12]
2ffee44a:	2718      	movs	r7, #24
2ffee44c:	6900      	ldr	r0, [r0, #16]
2ffee44e:	fb07 6000 	mla	r0, r7, r0, r6
2ffee452:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2ffee456:	2800      	cmp	r0, #0
2ffee458:	d14f      	bne.n	2ffee4fa <mmap_add_region_check+0x11e>
2ffee45a:	eb06 0807 	add.w	r8, r6, r7
2ffee45e:	f858 0c0c 	ldr.w	r0, [r8, #-12]
2ffee462:	b910      	cbnz	r0, 2ffee46a <mmap_add_region_check+0x8e>
2ffee464:	b003      	add	sp, #12
2ffee466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee46a:	f858 9c10 	ldr.w	r9, [r8, #-16]
2ffee46e:	4599      	cmp	r9, r3
2ffee470:	eb09 0a00 	add.w	sl, r9, r0
2ffee474:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
2ffee478:	d820      	bhi.n	2ffee4bc <mmap_add_region_check+0xe0>
2ffee47a:	4554      	cmp	r4, sl
2ffee47c:	d901      	bls.n	2ffee482 <mmap_add_region_check+0xa6>
2ffee47e:	4599      	cmp	r9, r3
2ffee480:	d11e      	bne.n	2ffee4c0 <mmap_add_region_check+0xe4>
2ffee482:	690e      	ldr	r6, [r1, #16]
2ffee484:	2e00      	cmp	r6, #0
2ffee486:	db16      	blt.n	2ffee4b6 <mmap_add_region_check+0xda>
2ffee488:	f858 6c08 	ldr.w	r6, [r8, #-8]
2ffee48c:	2e00      	cmp	r6, #0
2ffee48e:	db12      	blt.n	2ffee4b6 <mmap_add_region_check+0xda>
2ffee490:	e958 7606 	ldrd	r7, r6, [r8, #-24]
2ffee494:	ebb9 0707 	subs.w	r7, r9, r7
2ffee498:	eb66 0646 	sbc.w	r6, r6, r6, lsl #1
2ffee49c:	ebb3 0a02 	subs.w	sl, r3, r2
2ffee4a0:	eb6e 054e 	sbc.w	r5, lr, lr, lsl #1
2ffee4a4:	42ae      	cmp	r6, r5
2ffee4a6:	bf08      	it	eq
2ffee4a8:	4557      	cmpeq	r7, sl
2ffee4aa:	d104      	bne.n	2ffee4b6 <mmap_add_region_check+0xda>
2ffee4ac:	4599      	cmp	r9, r3
2ffee4ae:	d11b      	bne.n	2ffee4e8 <mmap_add_region_check+0x10c>
2ffee4b0:	9d01      	ldr	r5, [sp, #4]
2ffee4b2:	42a8      	cmp	r0, r5
2ffee4b4:	d118      	bne.n	2ffee4e8 <mmap_add_region_check+0x10c>
2ffee4b6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee4ba:	e7d3      	b.n	2ffee464 <mmap_add_region_check+0x88>
2ffee4bc:	4554      	cmp	r4, sl
2ffee4be:	d2e0      	bcs.n	2ffee482 <mmap_add_region_check+0xa6>
2ffee4c0:	e958 6706 	ldrd	r6, r7, [r8, #-24]
2ffee4c4:	45b3      	cmp	fp, r6
2ffee4c6:	eb7c 0507 	sbcs.w	r5, ip, r7
2ffee4ca:	d309      	bcc.n	2ffee4e0 <mmap_add_region_check+0x104>
2ffee4cc:	3e01      	subs	r6, #1
2ffee4ce:	f147 37ff 	adc.w	r7, r7, #4294967295	@ 0xffffffff
2ffee4d2:	1836      	adds	r6, r6, r0
2ffee4d4:	f147 0700 	adc.w	r7, r7, #0
2ffee4d8:	4296      	cmp	r6, r2
2ffee4da:	eb77 070e 	sbcs.w	r7, r7, lr
2ffee4de:	d2ea      	bcs.n	2ffee4b6 <mmap_add_region_check+0xda>
2ffee4e0:	45a1      	cmp	r9, r4
2ffee4e2:	d801      	bhi.n	2ffee4e8 <mmap_add_region_check+0x10c>
2ffee4e4:	4553      	cmp	r3, sl
2ffee4e6:	d9e6      	bls.n	2ffee4b6 <mmap_add_region_check+0xda>
2ffee4e8:	f108 0818 	add.w	r8, r8, #24
2ffee4ec:	e7b7      	b.n	2ffee45e <mmap_add_region_check+0x82>
2ffee4ee:	f06f 0015 	mvn.w	r0, #21
2ffee4f2:	e7b7      	b.n	2ffee464 <mmap_add_region_check+0x88>
2ffee4f4:	f06f 0021 	mvn.w	r0, #33	@ 0x21
2ffee4f8:	e7b4      	b.n	2ffee464 <mmap_add_region_check+0x88>
2ffee4fa:	f06f 000b 	mvn.w	r0, #11
2ffee4fe:	e7b1      	b.n	2ffee464 <mmap_add_region_check+0x88>

2ffee500 <xlat_clean_dcache_range>:
2ffee500:	b538      	push	{r3, r4, r5, lr}
2ffee502:	4604      	mov	r4, r0
2ffee504:	460d      	mov	r5, r1
2ffee506:	f7ff ff53 	bl	2ffee3b0 <is_dcache_enabled>
2ffee50a:	b128      	cbz	r0, 2ffee518 <xlat_clean_dcache_range+0x18>
2ffee50c:	4629      	mov	r1, r5
2ffee50e:	4620      	mov	r0, r4
2ffee510:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee514:	f005 bc94 	b.w	2fff3e40 <__clean_dcache_range_from_thumb>
2ffee518:	bd38      	pop	{r3, r4, r5, pc}

2ffee51a <mmap_add_ctx>:
2ffee51a:	b538      	push	{r3, r4, r5, lr}
2ffee51c:	4605      	mov	r5, r0
2ffee51e:	460c      	mov	r4, r1
2ffee520:	6963      	ldr	r3, [r4, #20]
2ffee522:	b903      	cbnz	r3, 2ffee526 <mmap_add_ctx+0xc>
2ffee524:	bd38      	pop	{r3, r4, r5, pc}
2ffee526:	4621      	mov	r1, r4
2ffee528:	4628      	mov	r0, r5
2ffee52a:	3418      	adds	r4, #24
2ffee52c:	f7f9 ffd6 	bl	2ffe84dc <mmap_add_region_ctx>
2ffee530:	e7f6      	b.n	2ffee520 <mmap_add_ctx+0x6>

2ffee532 <xlat_mmap_print>:
2ffee532:	4770      	bx	lr

2ffee534 <xlat_tables_print>:
2ffee534:	4770      	bx	lr

2ffee536 <mdelay>:
2ffee536:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffee53a:	4358      	muls	r0, r3
2ffee53c:	f7fa ba70 	b.w	2ffe8a20 <udelay>

2ffee540 <get_timer_value>:
2ffee540:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffee544:	43c0      	mvns	r0, r0
2ffee546:	4770      	bx	lr

2ffee548 <stm32mp_ddr_start_sw_done>:
2ffee548:	f8d0 3320 	ldr.w	r3, [r0, #800]	@ 0x320
2ffee54c:	f023 0301 	bic.w	r3, r3, #1
2ffee550:	f8c0 3320 	str.w	r3, [r0, #800]	@ 0x320
2ffee554:	4770      	bx	lr

2ffee556 <stm32mp_ddr_wait_sw_done_ack>:
2ffee556:	b538      	push	{r3, r4, r5, lr}
2ffee558:	f8d0 3320 	ldr.w	r3, [r0, #800]	@ 0x320
2ffee55c:	f043 0301 	orr.w	r3, r3, #1
2ffee560:	f8c0 3320 	str.w	r3, [r0, #800]	@ 0x320
2ffee564:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffee568:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee56c:	191b      	adds	r3, r3, r4
2ffee56e:	f145 0100 	adc.w	r1, r5, #0
2ffee572:	f8d0 2324 	ldr.w	r2, [r0, #804]	@ 0x324
2ffee576:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee57a:	42a3      	cmp	r3, r4
2ffee57c:	eb71 0405 	sbcs.w	r4, r1, r5
2ffee580:	d203      	bcs.n	2ffee58a <stm32mp_ddr_wait_sw_done_ack+0x34>
2ffee582:	f7f9 fa93 	bl	2ffe7aac <console_flush>
2ffee586:	f7f5 ef56 	blx	2ffe4434 <do_panic>
2ffee58a:	07d2      	lsls	r2, r2, #31
2ffee58c:	d5f1      	bpl.n	2ffee572 <stm32mp_ddr_wait_sw_done_ack+0x1c>
2ffee58e:	bd38      	pop	{r3, r4, r5, pc}

2ffee590 <stm32mp_ddr_enable_axi_port>:
2ffee590:	f8d0 3490 	ldr.w	r3, [r0, #1168]	@ 0x490
2ffee594:	f043 0301 	orr.w	r3, r3, #1
2ffee598:	f8c0 3490 	str.w	r3, [r0, #1168]	@ 0x490
2ffee59c:	4770      	bx	lr

2ffee59e <stm32mp_ddr_disable_axi_port>:
2ffee59e:	f8d0 2490 	ldr.w	r2, [r0, #1168]	@ 0x490
2ffee5a2:	4603      	mov	r3, r0
2ffee5a4:	b530      	push	{r4, r5, lr}
2ffee5a6:	f022 0201 	bic.w	r2, r2, #1
2ffee5aa:	f8c0 2490 	str.w	r2, [r0, #1168]	@ 0x490
2ffee5ae:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffee5b2:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffee5b6:	1812      	adds	r2, r2, r0
2ffee5b8:	f141 0100 	adc.w	r1, r1, #0
2ffee5bc:	f8d3 03fc 	ldr.w	r0, [r3, #1020]	@ 0x3fc
2ffee5c0:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee5c4:	42a2      	cmp	r2, r4
2ffee5c6:	eb71 0405 	sbcs.w	r4, r1, r5
2ffee5ca:	d302      	bcc.n	2ffee5d2 <stm32mp_ddr_disable_axi_port+0x34>
2ffee5cc:	2800      	cmp	r0, #0
2ffee5ce:	d1f5      	bne.n	2ffee5bc <stm32mp_ddr_disable_axi_port+0x1e>
2ffee5d0:	bd30      	pop	{r4, r5, pc}
2ffee5d2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee5d6:	e7fb      	b.n	2ffee5d0 <stm32mp_ddr_disable_axi_port+0x32>

2ffee5d8 <stm32mp_ddr_enable_host_interface>:
2ffee5d8:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2ffee5dc:	f023 0302 	bic.w	r3, r3, #2
2ffee5e0:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2ffee5e4:	4770      	bx	lr

2ffee5e6 <stm32mp_ddr_disable_host_interface>:
2ffee5e6:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2ffee5ea:	b570      	push	{r4, r5, r6, lr}
2ffee5ec:	f043 0302 	orr.w	r3, r3, #2
2ffee5f0:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2ffee5f4:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffee5f8:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee5fc:	191b      	adds	r3, r3, r4
2ffee5fe:	f04f 0200 	mov.w	r2, #0
2ffee602:	f145 0600 	adc.w	r6, r5, #0
2ffee606:	f8d0 1308 	ldr.w	r1, [r0, #776]	@ 0x308
2ffee60a:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee60e:	42a3      	cmp	r3, r4
2ffee610:	eb76 0405 	sbcs.w	r4, r6, r5
2ffee614:	d203      	bcs.n	2ffee61e <stm32mp_ddr_disable_host_interface+0x38>
2ffee616:	f7f9 fa49 	bl	2ffe7aac <console_flush>
2ffee61a:	f7f5 ef0c 	blx	2ffe4434 <do_panic>
2ffee61e:	f001 5158 	and.w	r1, r1, #905969664	@ 0x36000000
2ffee622:	3201      	adds	r2, #1
2ffee624:	f1b1 5f58 	cmp.w	r1, #905969664	@ 0x36000000
2ffee628:	d1ed      	bne.n	2ffee606 <stm32mp_ddr_disable_host_interface+0x20>
2ffee62a:	2a01      	cmp	r2, #1
2ffee62c:	d0eb      	beq.n	2ffee606 <stm32mp_ddr_disable_host_interface+0x20>
2ffee62e:	bd70      	pop	{r4, r5, r6, pc}

2ffee630 <stm32mp_ddr_sw_selfref_exit>:
2ffee630:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffee632:	f023 0320 	bic.w	r3, r3, #32
2ffee636:	6303      	str	r3, [r0, #48]	@ 0x30
2ffee638:	4770      	bx	lr

2ffee63a <stm32mp_ddr_wait_refresh_update_done_ack>:
2ffee63a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
2ffee63c:	b570      	push	{r4, r5, r6, lr}
2ffee63e:	f013 0302 	ands.w	r3, r3, #2
2ffee642:	bf15      	itete	ne
2ffee644:	6e03      	ldrne	r3, [r0, #96]	@ 0x60
2ffee646:	6e02      	ldreq	r2, [r0, #96]	@ 0x60
2ffee648:	f043 0302 	orrne.w	r3, r3, #2
2ffee64c:	f022 0202 	biceq.w	r2, r2, #2
2ffee650:	bf1a      	itte	ne
2ffee652:	6603      	strne	r3, [r0, #96]	@ 0x60
2ffee654:	2302      	movne	r3, #2
2ffee656:	6602      	streq	r2, [r0, #96]	@ 0x60
2ffee658:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffee65c:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee660:	1912      	adds	r2, r2, r4
2ffee662:	f145 0600 	adc.w	r6, r5, #0
2ffee666:	6e01      	ldr	r1, [r0, #96]	@ 0x60
2ffee668:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee66c:	42a2      	cmp	r2, r4
2ffee66e:	eb76 0405 	sbcs.w	r4, r6, r5
2ffee672:	d203      	bcs.n	2ffee67c <stm32mp_ddr_wait_refresh_update_done_ack+0x42>
2ffee674:	f7f9 fa1a 	bl	2ffe7aac <console_flush>
2ffee678:	f7f5 eedc 	blx	2ffe4434 <do_panic>
2ffee67c:	f001 0102 	and.w	r1, r1, #2
2ffee680:	4299      	cmp	r1, r3
2ffee682:	d1f0      	bne.n	2ffee666 <stm32mp_ddr_wait_refresh_update_done_ack+0x2c>
2ffee684:	bd70      	pop	{r4, r5, r6, pc}

2ffee686 <fdt32_to_cpu>:
2ffee686:	ba00      	rev	r0, r0
2ffee688:	4770      	bx	lr

2ffee68a <nvmem_cell_read>:
2ffee68a:	b410      	push	{r4}
2ffee68c:	6884      	ldr	r4, [r0, #8]
2ffee68e:	6824      	ldr	r4, [r4, #0]
2ffee690:	6824      	ldr	r4, [r4, #0]
2ffee692:	b114      	cbz	r4, 2ffee69a <nvmem_cell_read+0x10>
2ffee694:	46a4      	mov	ip, r4
2ffee696:	bc10      	pop	{r4}
2ffee698:	4760      	bx	ip
2ffee69a:	bc10      	pop	{r4}
2ffee69c:	f06f 002c 	mvn.w	r0, #44	@ 0x2c
2ffee6a0:	4770      	bx	lr

2ffee6a2 <nvmem_cell_write>:
2ffee6a2:	6883      	ldr	r3, [r0, #8]
2ffee6a4:	681b      	ldr	r3, [r3, #0]
2ffee6a6:	685b      	ldr	r3, [r3, #4]
2ffee6a8:	b103      	cbz	r3, 2ffee6ac <nvmem_cell_write+0xa>
2ffee6aa:	4718      	bx	r3
2ffee6ac:	f06f 002c 	mvn.w	r0, #44	@ 0x2c
2ffee6b0:	4770      	bx	lr

2ffee6b2 <fdt32_to_cpu>:
2ffee6b2:	ba00      	rev	r0, r0
2ffee6b4:	4770      	bx	lr

2ffee6b6 <stm32_tamp_nvram_reg_get_zone>:
2ffee6b6:	6a43      	ldr	r3, [r0, #36]	@ 0x24
2ffee6b8:	69c2      	ldr	r2, [r0, #28]
2ffee6ba:	2000      	movs	r0, #0
2ffee6bc:	681b      	ldr	r3, [r3, #0]
2ffee6be:	b510      	push	{r4, lr}
2ffee6c0:	4298      	cmp	r0, r3
2ffee6c2:	d102      	bne.n	2ffee6ca <stm32_tamp_nvram_reg_get_zone+0x14>
2ffee6c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee6c8:	e007      	b.n	2ffee6da <stm32_tamp_nvram_reg_get_zone+0x24>
2ffee6ca:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
2ffee6ce:	428c      	cmp	r4, r1
2ffee6d0:	db04      	blt.n	2ffee6dc <stm32_tamp_nvram_reg_get_zone+0x26>
2ffee6d2:	4298      	cmp	r0, r3
2ffee6d4:	bf28      	it	cs
2ffee6d6:	f04f 30ff 	movcs.w	r0, #4294967295	@ 0xffffffff
2ffee6da:	bd10      	pop	{r4, pc}
2ffee6dc:	3001      	adds	r0, #1
2ffee6de:	e7ef      	b.n	2ffee6c0 <stm32_tamp_nvram_reg_get_zone+0xa>

2ffee6e0 <stm32_tamp_nvram_reg_field_read>:
2ffee6e0:	b084      	sub	sp, #16
2ffee6e2:	f10d 0c10 	add.w	ip, sp, #16
2ffee6e6:	e90c 000e 	stmdb	ip, {r1, r2, r3}
2ffee6ea:	9b01      	ldr	r3, [sp, #4]
2ffee6ec:	4611      	mov	r1, r2
2ffee6ee:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
2ffee6f2:	58c0      	ldr	r0, [r0, r3]
2ffee6f4:	9b03      	ldr	r3, [sp, #12]
2ffee6f6:	f1c3 031f 	rsb	r3, r3, #31
2ffee6fa:	fa22 f303 	lsr.w	r3, r2, r3
2ffee6fe:	408a      	lsls	r2, r1
2ffee700:	4013      	ands	r3, r2
2ffee702:	9a04      	ldr	r2, [sp, #16]
2ffee704:	4003      	ands	r3, r0
2ffee706:	2000      	movs	r0, #0
2ffee708:	40cb      	lsrs	r3, r1
2ffee70a:	6013      	str	r3, [r2, #0]
2ffee70c:	b004      	add	sp, #16
2ffee70e:	4770      	bx	lr

2ffee710 <fdt32_to_cpu>:
2ffee710:	ba00      	rev	r0, r0
2ffee712:	4770      	bx	lr

2ffee714 <unlock_driver.isra.0>:
2ffee714:	6843      	ldr	r3, [r0, #4]
2ffee716:	69db      	ldr	r3, [r3, #28]
2ffee718:	b103      	cbz	r3, 2ffee71c <unlock_driver.isra.0+0x8>
2ffee71a:	4718      	bx	r3
2ffee71c:	4770      	bx	lr

2ffee71e <lock_driver.isra.0>:
2ffee71e:	6843      	ldr	r3, [r0, #4]
2ffee720:	699b      	ldr	r3, [r3, #24]
2ffee722:	b103      	cbz	r3, 2ffee726 <lock_driver.isra.0+0x8>
2ffee724:	4718      	bx	r3
2ffee726:	4770      	bx	lr

2ffee728 <regulator_set_min_voltage>:
2ffee728:	8901      	ldrh	r1, [r0, #8]
2ffee72a:	f7fa bf71 	b.w	2ffe9610 <regulator_set_voltage>

2ffee72e <fixed_set_state>:
2ffee72e:	2000      	movs	r0, #0
2ffee730:	4770      	bx	lr

2ffee732 <fixed_get_state>:
2ffee732:	2001      	movs	r0, #1
2ffee734:	4770      	bx	lr

2ffee736 <fdt32_to_cpu>:
2ffee736:	ba00      	rev	r0, r0
2ffee738:	4770      	bx	lr

2ffee73a <dt_get_pwr_vdd_voltage>:
2ffee73a:	b507      	push	{r0, r1, r2, lr}
2ffee73c:	f7fb fa92 	bl	2ffe9c64 <dt_get_vdd_regulator>
2ffee740:	b148      	cbz	r0, 2ffee756 <dt_get_pwr_vdd_voltage+0x1c>
2ffee742:	2200      	movs	r2, #0
2ffee744:	f10d 0106 	add.w	r1, sp, #6
2ffee748:	f7fb f808 	bl	2ffe975c <regulator_get_range>
2ffee74c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
2ffee750:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffee754:	4358      	muls	r0, r3
2ffee756:	b003      	add	sp, #12
2ffee758:	f85d fb04 	ldr.w	pc, [sp], #4

2ffee75c <stm32mp_get_chip_dev_id>:
2ffee75c:	f7fd bbf2 	b.w	2ffebf44 <stm32mp_syscfg_get_chip_dev_id>

2ffee760 <stm32mp_is_wakeup_from_standby>:
2ffee760:	2000      	movs	r0, #0
2ffee762:	4770      	bx	lr

2ffee764 <stm32mp_skip_boot_device_after_standby>:
2ffee764:	2000      	movs	r0, #0
2ffee766:	4770      	bx	lr

2ffee768 <bsec_read_otp>:
2ffee768:	b538      	push	{r3, r4, r5, lr}
2ffee76a:	4605      	mov	r5, r0
2ffee76c:	460c      	mov	r4, r1
2ffee76e:	f7fb feb7 	bl	2ffea4e0 <is_otp_invalid_mode>
2ffee772:	b948      	cbnz	r0, 2ffee788 <bsec_read_otp+0x20>
2ffee774:	2c5f      	cmp	r4, #95	@ 0x5f
2ffee776:	d80a      	bhi.n	2ffee78e <bsec_read_otp+0x26>
2ffee778:	f104 51b8 	add.w	r1, r4, #385875968	@ 0x17000000
2ffee77c:	f501 51a4 	add.w	r1, r1, #5248	@ 0x1480
2ffee780:	0089      	lsls	r1, r1, #2
2ffee782:	680b      	ldr	r3, [r1, #0]
2ffee784:	602b      	str	r3, [r5, #0]
2ffee786:	bd38      	pop	{r3, r4, r5, pc}
2ffee788:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee78c:	e7fb      	b.n	2ffee786 <bsec_read_otp+0x1e>
2ffee78e:	f06f 0003 	mvn.w	r0, #3
2ffee792:	e7f8      	b.n	2ffee786 <bsec_read_otp+0x1e>

2ffee794 <ddr_enable_clock>:
2ffee794:	b508      	push	{r3, lr}
2ffee796:	f000 fe0c 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffee79a:	f7ff fda5 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffee79e:	f8d0 35c0 	ldr.w	r3, [r0, #1472]	@ 0x5c0
2ffee7a2:	f443 7314 	orr.w	r3, r3, #592	@ 0x250
2ffee7a6:	f043 0301 	orr.w	r3, r3, #1
2ffee7aa:	f8c0 35c0 	str.w	r3, [r0, #1472]	@ 0x5c0
2ffee7ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee7b2:	f000 be00 	b.w	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>

2ffee7b6 <ddr_get_io_calibration_val>:
2ffee7b6:	b508      	push	{r3, lr}
2ffee7b8:	f7f9 fa4c 	bl	2ffe7c54 <stm32mp_ddrphyc_base>
2ffee7bc:	f8d0 0180 	ldr.w	r0, [r0, #384]	@ 0x180
2ffee7c0:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
2ffee7c4:	bd08      	pop	{r3, pc}

2ffee7c6 <ddr_standby_sr_entry>:
2ffee7c6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffee7ca:	f7f9 fa47 	bl	2ffe7c5c <stm32mp_pwr_base>
2ffee7ce:	4680      	mov	r8, r0
2ffee7d0:	f7ff fd8a 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffee7d4:	4605      	mov	r5, r0
2ffee7d6:	f7f9 fa41 	bl	2ffe7c5c <stm32mp_pwr_base>
2ffee7da:	4681      	mov	r9, r0
2ffee7dc:	f7f9 fa36 	bl	2ffe7c4c <stm32mp_ddrctrl_base>
2ffee7e0:	4606      	mov	r6, r0
2ffee7e2:	f7f9 fa37 	bl	2ffe7c54 <stm32mp_ddrphyc_base>
2ffee7e6:	4604      	mov	r4, r0
2ffee7e8:	f000 fde3 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffee7ec:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffee7f0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2ffee7f4:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffee7f8:	f000 fddd 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffee7fc:	4630      	mov	r0, r6
2ffee7fe:	f7ff fece 	bl	2ffee59e <stm32mp_ddr_disable_axi_port>
2ffee802:	b938      	cbnz	r0, 2ffee814 <ddr_standby_sr_entry+0x4e>
2ffee804:	4630      	mov	r0, r6
2ffee806:	f7fa fa11 	bl	2ffe8c2c <stm32mp_ddr_sw_selfref_entry>
2ffee80a:	4607      	mov	r7, r0
2ffee80c:	b140      	cbz	r0, 2ffee820 <ddr_standby_sr_entry+0x5a>
2ffee80e:	4630      	mov	r0, r6
2ffee810:	f7ff ff0e 	bl	2ffee630 <stm32mp_ddr_sw_selfref_exit>
2ffee814:	4630      	mov	r0, r6
2ffee816:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
2ffee81a:	f7ff feb9 	bl	2ffee590 <stm32mp_ddr_enable_axi_port>
2ffee81e:	e082      	b.n	2ffee926 <ddr_standby_sr_entry+0x160>
2ffee820:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee822:	200a      	movs	r0, #10
2ffee824:	f043 0308 	orr.w	r3, r3, #8
2ffee828:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee82a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee82c:	f043 0310 	orr.w	r3, r3, #16
2ffee830:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee832:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee834:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
2ffee838:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffee83c:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee83e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee840:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
2ffee844:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
2ffee848:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee84a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee84c:	f423 1370 	bic.w	r3, r3, #3932160	@ 0x3c0000
2ffee850:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
2ffee854:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee856:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffee858:	f023 0302 	bic.w	r3, r3, #2
2ffee85c:	6263      	str	r3, [r4, #36]	@ 0x24
2ffee85e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffee860:	f043 0304 	orr.w	r3, r3, #4
2ffee864:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffee866:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffee868:	f043 0308 	orr.w	r3, r3, #8
2ffee86c:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffee86e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffee870:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
2ffee874:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
2ffee878:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffee87a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffee87c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2ffee880:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffee882:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffee884:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
2ffee888:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffee88c:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffee88e:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
2ffee892:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffee896:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
2ffee89a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffee89c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
2ffee8a0:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffee8a2:	f7fa f8bd 	bl	2ffe8a20 <udelay>
2ffee8a6:	f7f9 f9dd 	bl	2ffe7c64 <stm32mp_pwr_regs_lock>
2ffee8aa:	f8d9 300c 	ldr.w	r3, [r9, #12]
2ffee8ae:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
2ffee8b2:	f8c9 300c 	str.w	r3, [r9, #12]
2ffee8b6:	f7f9 f9e1 	bl	2ffe7c7c <stm32mp_pwr_regs_unlock>
2ffee8ba:	f000 fd7a 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffee8be:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffee8c2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2ffee8c6:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffee8ca:	f000 fd74 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffee8ce:	6963      	ldr	r3, [r4, #20]
2ffee8d0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffee8d4:	6163      	str	r3, [r4, #20]
2ffee8d6:	f8d4 31cc 	ldr.w	r3, [r4, #460]	@ 0x1cc
2ffee8da:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffee8de:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
2ffee8e2:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
2ffee8e6:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffee8ea:	f8c4 320c 	str.w	r3, [r4, #524]	@ 0x20c
2ffee8ee:	f000 fd60 	bl	2ffef3b2 <stm32mp1_clk_rcc_regs_lock>
2ffee8f2:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffee8f6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2ffee8fa:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffee8fe:	f8d5 35c0 	ldr.w	r3, [r5, #1472]	@ 0x5c0
2ffee902:	f423 7310 	bic.w	r3, r3, #576	@ 0x240
2ffee906:	f023 0301 	bic.w	r3, r3, #1
2ffee90a:	f8c5 35c0 	str.w	r3, [r5, #1472]	@ 0x5c0
2ffee90e:	f000 fd52 	bl	2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>
2ffee912:	f7f9 f9a7 	bl	2ffe7c64 <stm32mp_pwr_regs_lock>
2ffee916:	f8d8 300c 	ldr.w	r3, [r8, #12]
2ffee91a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
2ffee91e:	f8c8 300c 	str.w	r3, [r8, #12]
2ffee922:	f7f9 f9ab 	bl	2ffe7c7c <stm32mp_pwr_regs_unlock>
2ffee926:	4638      	mov	r0, r7
2ffee928:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

2ffee92c <i2c_wait_flag>:
2ffee92c:	6803      	ldr	r3, [r0, #0]
2ffee92e:	f002 0201 	and.w	r2, r2, #1
2ffee932:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffee934:	3318      	adds	r3, #24
2ffee936:	9f05      	ldr	r7, [sp, #20]
2ffee938:	9e06      	ldr	r6, [sp, #24]
2ffee93a:	681c      	ldr	r4, [r3, #0]
2ffee93c:	4221      	tst	r1, r4
2ffee93e:	bf14      	ite	ne
2ffee940:	2401      	movne	r4, #1
2ffee942:	2400      	moveq	r4, #0
2ffee944:	4294      	cmp	r4, r2
2ffee946:	d111      	bne.n	2ffee96c <i2c_wait_flag+0x40>
2ffee948:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffee94c:	42a7      	cmp	r7, r4
2ffee94e:	eb76 0405 	sbcs.w	r4, r6, r5
2ffee952:	d2f2      	bcs.n	2ffee93a <i2c_wait_flag+0xe>
2ffee954:	6983      	ldr	r3, [r0, #24]
2ffee956:	2220      	movs	r2, #32
2ffee958:	6102      	str	r2, [r0, #16]
2ffee95a:	f043 0320 	orr.w	r3, r3, #32
2ffee95e:	6183      	str	r3, [r0, #24]
2ffee960:	2300      	movs	r3, #0
2ffee962:	6143      	str	r3, [r0, #20]
2ffee964:	7303      	strb	r3, [r0, #12]
2ffee966:	f06f 0004 	mvn.w	r0, #4
2ffee96a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffee96c:	2000      	movs	r0, #0
2ffee96e:	e7fc      	b.n	2ffee96a <i2c_wait_flag+0x3e>

2ffee970 <i2c_ack_failed>:
2ffee970:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffee972:	4601      	mov	r1, r0
2ffee974:	6804      	ldr	r4, [r0, #0]
2ffee976:	69a0      	ldr	r0, [r4, #24]
2ffee978:	f104 0518 	add.w	r5, r4, #24
2ffee97c:	f010 0010 	ands.w	r0, r0, #16
2ffee980:	d03b      	beq.n	2ffee9fa <i2c_ack_failed+0x8a>
2ffee982:	6828      	ldr	r0, [r5, #0]
2ffee984:	f010 0020 	ands.w	r0, r0, #32
2ffee988:	d026      	beq.n	2ffee9d8 <i2c_ack_failed+0x68>
2ffee98a:	2310      	movs	r3, #16
2ffee98c:	2220      	movs	r2, #32
2ffee98e:	61e3      	str	r3, [r4, #28]
2ffee990:	680b      	ldr	r3, [r1, #0]
2ffee992:	61da      	str	r2, [r3, #28]
2ffee994:	680b      	ldr	r3, [r1, #0]
2ffee996:	699a      	ldr	r2, [r3, #24]
2ffee998:	0794      	lsls	r4, r2, #30
2ffee99a:	bf44      	itt	mi
2ffee99c:	2200      	movmi	r2, #0
2ffee99e:	629a      	strmi	r2, [r3, #40]	@ 0x28
2ffee9a0:	680b      	ldr	r3, [r1, #0]
2ffee9a2:	699a      	ldr	r2, [r3, #24]
2ffee9a4:	07d0      	lsls	r0, r2, #31
2ffee9a6:	bf5e      	ittt	pl
2ffee9a8:	699a      	ldrpl	r2, [r3, #24]
2ffee9aa:	f042 0201 	orrpl.w	r2, r2, #1
2ffee9ae:	619a      	strpl	r2, [r3, #24]
2ffee9b0:	680a      	ldr	r2, [r1, #0]
2ffee9b2:	6853      	ldr	r3, [r2, #4]
2ffee9b4:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2ffee9b8:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2ffee9bc:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2ffee9c0:	f023 0301 	bic.w	r3, r3, #1
2ffee9c4:	6053      	str	r3, [r2, #4]
2ffee9c6:	698b      	ldr	r3, [r1, #24]
2ffee9c8:	f043 0304 	orr.w	r3, r3, #4
2ffee9cc:	618b      	str	r3, [r1, #24]
2ffee9ce:	2320      	movs	r3, #32
2ffee9d0:	610b      	str	r3, [r1, #16]
2ffee9d2:	2300      	movs	r3, #0
2ffee9d4:	614b      	str	r3, [r1, #20]
2ffee9d6:	e00c      	b.n	2ffee9f2 <i2c_ack_failed+0x82>
2ffee9d8:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffee9dc:	42b2      	cmp	r2, r6
2ffee9de:	eb73 0607 	sbcs.w	r6, r3, r7
2ffee9e2:	d2ce      	bcs.n	2ffee982 <i2c_ack_failed+0x12>
2ffee9e4:	698b      	ldr	r3, [r1, #24]
2ffee9e6:	6148      	str	r0, [r1, #20]
2ffee9e8:	f043 0320 	orr.w	r3, r3, #32
2ffee9ec:	618b      	str	r3, [r1, #24]
2ffee9ee:	2320      	movs	r3, #32
2ffee9f0:	610b      	str	r3, [r1, #16]
2ffee9f2:	f06f 0004 	mvn.w	r0, #4
2ffee9f6:	2300      	movs	r3, #0
2ffee9f8:	730b      	strb	r3, [r1, #12]
2ffee9fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffee9fc <i2c_wait_txis>:
2ffee9fc:	b570      	push	{r4, r5, r6, lr}
2ffee9fe:	4604      	mov	r4, r0
2ffeea00:	4615      	mov	r5, r2
2ffeea02:	461e      	mov	r6, r3
2ffeea04:	6823      	ldr	r3, [r4, #0]
2ffeea06:	699b      	ldr	r3, [r3, #24]
2ffeea08:	079b      	lsls	r3, r3, #30
2ffeea0a:	d501      	bpl.n	2ffeea10 <i2c_wait_txis+0x14>
2ffeea0c:	2000      	movs	r0, #0
2ffeea0e:	e015      	b.n	2ffeea3c <i2c_wait_txis+0x40>
2ffeea10:	462a      	mov	r2, r5
2ffeea12:	4633      	mov	r3, r6
2ffeea14:	4620      	mov	r0, r4
2ffeea16:	f7ff ffab 	bl	2ffee970 <i2c_ack_failed>
2ffeea1a:	b968      	cbnz	r0, 2ffeea38 <i2c_wait_txis+0x3c>
2ffeea1c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeea20:	4295      	cmp	r5, r2
2ffeea22:	eb76 0303 	sbcs.w	r3, r6, r3
2ffeea26:	d2ed      	bcs.n	2ffeea04 <i2c_wait_txis+0x8>
2ffeea28:	69a3      	ldr	r3, [r4, #24]
2ffeea2a:	6160      	str	r0, [r4, #20]
2ffeea2c:	7320      	strb	r0, [r4, #12]
2ffeea2e:	f043 0320 	orr.w	r3, r3, #32
2ffeea32:	61a3      	str	r3, [r4, #24]
2ffeea34:	2320      	movs	r3, #32
2ffeea36:	6123      	str	r3, [r4, #16]
2ffeea38:	f06f 0004 	mvn.w	r0, #4
2ffeea3c:	bd70      	pop	{r4, r5, r6, pc}

2ffeea3e <i2c_wait_stop>:
2ffeea3e:	b570      	push	{r4, r5, r6, lr}
2ffeea40:	4604      	mov	r4, r0
2ffeea42:	4615      	mov	r5, r2
2ffeea44:	461e      	mov	r6, r3
2ffeea46:	6823      	ldr	r3, [r4, #0]
2ffeea48:	699b      	ldr	r3, [r3, #24]
2ffeea4a:	069b      	lsls	r3, r3, #26
2ffeea4c:	d501      	bpl.n	2ffeea52 <i2c_wait_stop+0x14>
2ffeea4e:	2000      	movs	r0, #0
2ffeea50:	e015      	b.n	2ffeea7e <i2c_wait_stop+0x40>
2ffeea52:	462a      	mov	r2, r5
2ffeea54:	4633      	mov	r3, r6
2ffeea56:	4620      	mov	r0, r4
2ffeea58:	f7ff ff8a 	bl	2ffee970 <i2c_ack_failed>
2ffeea5c:	b968      	cbnz	r0, 2ffeea7a <i2c_wait_stop+0x3c>
2ffeea5e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeea62:	4295      	cmp	r5, r2
2ffeea64:	eb76 0303 	sbcs.w	r3, r6, r3
2ffeea68:	d2ed      	bcs.n	2ffeea46 <i2c_wait_stop+0x8>
2ffeea6a:	69a3      	ldr	r3, [r4, #24]
2ffeea6c:	6160      	str	r0, [r4, #20]
2ffeea6e:	7320      	strb	r0, [r4, #12]
2ffeea70:	f043 0320 	orr.w	r3, r3, #32
2ffeea74:	61a3      	str	r3, [r4, #24]
2ffeea76:	2320      	movs	r3, #32
2ffeea78:	6123      	str	r3, [r4, #16]
2ffeea7a:	f06f 0004 	mvn.w	r0, #4
2ffeea7e:	bd70      	pop	{r4, r5, r6, pc}

2ffeea80 <stm32_i2c_mem_write>:
2ffeea80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffeea82:	2440      	movs	r4, #64	@ 0x40
2ffeea84:	9403      	str	r4, [sp, #12]
2ffeea86:	9c08      	ldr	r4, [sp, #32]
2ffeea88:	9402      	str	r4, [sp, #8]
2ffeea8a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2ffeea8e:	9401      	str	r4, [sp, #4]
2ffeea90:	9c06      	ldr	r4, [sp, #24]
2ffeea92:	9400      	str	r4, [sp, #0]
2ffeea94:	f7fc f95e 	bl	2ffead54 <i2c_write>
2ffeea98:	b004      	add	sp, #16
2ffeea9a:	bd10      	pop	{r4, pc}

2ffeea9c <stm32_i2c_mem_read>:
2ffeea9c:	b430      	push	{r4, r5}
2ffeea9e:	2540      	movs	r5, #64	@ 0x40
2ffeeaa0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2ffeeaa4:	9504      	str	r5, [sp, #16]
2ffeeaa6:	9403      	str	r4, [sp, #12]
2ffeeaa8:	bc30      	pop	{r4, r5}
2ffeeaaa:	f7fc b85b 	b.w	2ffeab64 <i2c_read.constprop.0>

2ffeeaae <pmic_list_voltages>:
2ffeeaae:	6800      	ldr	r0, [r0, #0]
2ffeeab0:	f7fc bf3a 	b.w	2ffeb928 <stpmic1_regulator_levels_mv>

2ffeeab4 <pmic_get_voltage>:
2ffeeab4:	6800      	ldr	r0, [r0, #0]
2ffeeab6:	f7fc bf6b 	b.w	2ffeb990 <stpmic1_regulator_voltage_get>

2ffeeaba <pmic_set_voltage>:
2ffeeaba:	6800      	ldr	r0, [r0, #0]
2ffeeabc:	f7fc bfe0 	b.w	2ffeba80 <stpmic1_regulator_voltage_set>

2ffeeac0 <pmic_get_state>:
2ffeeac0:	b508      	push	{r3, lr}
2ffeeac2:	6800      	ldr	r0, [r0, #0]
2ffeeac4:	f000 f834 	bl	2ffeeb30 <stpmic1_is_regulator_enabled>
2ffeeac8:	bd08      	pop	{r3, pc}

2ffeeaca <pmic_set_flag>:
2ffeeaca:	2920      	cmp	r1, #32
2ffeeacc:	d019      	beq.n	2ffeeb02 <pmic_set_flag+0x38>
2ffeeace:	d808      	bhi.n	2ffeeae2 <pmic_set_flag+0x18>
2ffeead0:	2908      	cmp	r1, #8
2ffeead2:	d010      	beq.n	2ffeeaf6 <pmic_set_flag+0x2c>
2ffeead4:	2910      	cmp	r1, #16
2ffeead6:	d011      	beq.n	2ffeeafc <pmic_set_flag+0x32>
2ffeead8:	2904      	cmp	r1, #4
2ffeeada:	d009      	beq.n	2ffeeaf0 <pmic_set_flag+0x26>
2ffeeadc:	f06f 0015 	mvn.w	r0, #21
2ffeeae0:	4770      	bx	lr
2ffeeae2:	2940      	cmp	r1, #64	@ 0x40
2ffeeae4:	d010      	beq.n	2ffeeb08 <pmic_set_flag+0x3e>
2ffeeae6:	2980      	cmp	r1, #128	@ 0x80
2ffeeae8:	d1f8      	bne.n	2ffeeadc <pmic_set_flag+0x12>
2ffeeaea:	6800      	ldr	r0, [r0, #0]
2ffeeaec:	f7fd b82c 	b.w	2ffebb48 <stpmic1_regulator_bypass_mode_set>
2ffeeaf0:	6800      	ldr	r0, [r0, #0]
2ffeeaf2:	f000 b88d 	b.w	2ffeec10 <stpmic1_regulator_icc_set>
2ffeeaf6:	6800      	ldr	r0, [r0, #0]
2ffeeaf8:	f7fd b83e 	b.w	2ffebb78 <stpmic1_active_discharge_mode_set>
2ffeeafc:	6800      	ldr	r0, [r0, #0]
2ffeeafe:	f000 b863 	b.w	2ffeebc8 <stpmic1_regulator_pull_down_set>
2ffeeb02:	6800      	ldr	r0, [r0, #0]
2ffeeb04:	f000 b872 	b.w	2ffeebec <stpmic1_regulator_mask_reset_set>
2ffeeb08:	6800      	ldr	r0, [r0, #0]
2ffeeb0a:	f7fd b805 	b.w	2ffebb18 <stpmic1_regulator_sink_mode_set>

2ffeeb0e <pmic_set_state>:
2ffeeb0e:	6800      	ldr	r0, [r0, #0]
2ffeeb10:	b109      	cbz	r1, 2ffeeb16 <pmic_set_state+0x8>
2ffeeb12:	f000 b845 	b.w	2ffeeba0 <stpmic1_regulator_enable>
2ffeeb16:	f000 b84d 	b.w	2ffeebb4 <stpmic1_regulator_disable>

2ffeeb1a <pmic_switch_off>:
2ffeeb1a:	b508      	push	{r3, lr}
2ffeeb1c:	f000 f83b 	bl	2ffeeb96 <stpmic1_switch_off>
2ffeeb20:	b910      	cbnz	r0, 2ffeeb28 <pmic_switch_off+0xe>
2ffeeb22:	2064      	movs	r0, #100	@ 0x64
2ffeeb24:	f7f9 ff7c 	bl	2ffe8a20 <udelay>
2ffeeb28:	f7f8 ffc0 	bl	2ffe7aac <console_flush>
2ffeeb2c:	f7f5 ec82 	blx	2ffe4434 <do_panic>

2ffeeb30 <stpmic1_is_regulator_enabled>:
2ffeeb30:	b513      	push	{r0, r1, r4, lr}
2ffeeb32:	f7fc fed7 	bl	2ffeb8e4 <get_regulator_data>
2ffeeb36:	4604      	mov	r4, r0
2ffeeb38:	f10d 0107 	add.w	r1, sp, #7
2ffeeb3c:	7a40      	ldrb	r0, [r0, #9]
2ffeeb3e:	f7fc ff13 	bl	2ffeb968 <stpmic1_register_read>
2ffeeb42:	b118      	cbz	r0, 2ffeeb4c <stpmic1_is_regulator_enabled+0x1c>
2ffeeb44:	f7f8 ffb2 	bl	2ffe7aac <console_flush>
2ffeeb48:	f7f5 ec74 	blx	2ffe4434 <do_panic>
2ffeeb4c:	7aa3      	ldrb	r3, [r4, #10]
2ffeeb4e:	f89d 2007 	ldrb.w	r2, [sp, #7]
2ffeeb52:	4393      	bics	r3, r2
2ffeeb54:	bf0c      	ite	eq
2ffeeb56:	2001      	moveq	r0, #1
2ffeeb58:	2000      	movne	r0, #0
2ffeeb5a:	b002      	add	sp, #8
2ffeeb5c:	bd10      	pop	{r4, pc}

2ffeeb5e <stpmic1_register_update>:
2ffeeb5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffeeb60:	460e      	mov	r6, r1
2ffeeb62:	f10d 0107 	add.w	r1, sp, #7
2ffeeb66:	4605      	mov	r5, r0
2ffeeb68:	4614      	mov	r4, r2
2ffeeb6a:	f7fc fefd 	bl	2ffeb968 <stpmic1_register_read>
2ffeeb6e:	b958      	cbnz	r0, 2ffeeb88 <stpmic1_register_update+0x2a>
2ffeeb70:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffeeb74:	4628      	mov	r0, r5
2ffeeb76:	ea23 0304 	bic.w	r3, r3, r4
2ffeeb7a:	4034      	ands	r4, r6
2ffeeb7c:	ea43 0104 	orr.w	r1, r3, r4
2ffeeb80:	f88d 1007 	strb.w	r1, [sp, #7]
2ffeeb84:	f7fc ff4c 	bl	2ffeba20 <stpmic1_register_write>
2ffeeb88:	b002      	add	sp, #8
2ffeeb8a:	bd70      	pop	{r4, r5, r6, pc}

2ffeeb8c <stpmic1_powerctrl_on>:
2ffeeb8c:	2204      	movs	r2, #4
2ffeeb8e:	2010      	movs	r0, #16
2ffeeb90:	4611      	mov	r1, r2
2ffeeb92:	f7ff bfe4 	b.w	2ffeeb5e <stpmic1_register_update>

2ffeeb96 <stpmic1_switch_off>:
2ffeeb96:	2201      	movs	r2, #1
2ffeeb98:	2010      	movs	r0, #16
2ffeeb9a:	4611      	mov	r1, r2
2ffeeb9c:	f7ff bfdf 	b.w	2ffeeb5e <stpmic1_register_update>

2ffeeba0 <stpmic1_regulator_enable>:
2ffeeba0:	b508      	push	{r3, lr}
2ffeeba2:	f7fc fe9f 	bl	2ffeb8e4 <get_regulator_data>
2ffeeba6:	7a82      	ldrb	r2, [r0, #10]
2ffeeba8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeebac:	7a40      	ldrb	r0, [r0, #9]
2ffeebae:	4611      	mov	r1, r2
2ffeebb0:	f7ff bfd5 	b.w	2ffeeb5e <stpmic1_register_update>

2ffeebb4 <stpmic1_regulator_disable>:
2ffeebb4:	b508      	push	{r3, lr}
2ffeebb6:	f7fc fe95 	bl	2ffeb8e4 <get_regulator_data>
2ffeebba:	7a82      	ldrb	r2, [r0, #10]
2ffeebbc:	2100      	movs	r1, #0
2ffeebbe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeebc2:	7a40      	ldrb	r0, [r0, #9]
2ffeebc4:	f7ff bfcb 	b.w	2ffeeb5e <stpmic1_register_update>

2ffeebc8 <stpmic1_regulator_pull_down_set>:
2ffeebc8:	b508      	push	{r3, lr}
2ffeebca:	f7fc fe8b 	bl	2ffeb8e4 <get_regulator_data>
2ffeebce:	4603      	mov	r3, r0
2ffeebd0:	7b00      	ldrb	r0, [r0, #12]
2ffeebd2:	b150      	cbz	r0, 2ffeebea <stpmic1_regulator_pull_down_set+0x22>
2ffeebd4:	7b5b      	ldrb	r3, [r3, #13]
2ffeebd6:	2203      	movs	r2, #3
2ffeebd8:	2101      	movs	r1, #1
2ffeebda:	409a      	lsls	r2, r3
2ffeebdc:	4099      	lsls	r1, r3
2ffeebde:	b2d2      	uxtb	r2, r2
2ffeebe0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeebe4:	b2c9      	uxtb	r1, r1
2ffeebe6:	f7ff bfba 	b.w	2ffeeb5e <stpmic1_register_update>
2ffeebea:	bd08      	pop	{r3, pc}

2ffeebec <stpmic1_regulator_mask_reset_set>:
2ffeebec:	b508      	push	{r3, lr}
2ffeebee:	f7fc fe79 	bl	2ffeb8e4 <get_regulator_data>
2ffeebf2:	4603      	mov	r3, r0
2ffeebf4:	7b80      	ldrb	r0, [r0, #14]
2ffeebf6:	b140      	cbz	r0, 2ffeec0a <stpmic1_regulator_mask_reset_set+0x1e>
2ffeebf8:	7bdb      	ldrb	r3, [r3, #15]
2ffeebfa:	2201      	movs	r2, #1
2ffeebfc:	409a      	lsls	r2, r3
2ffeebfe:	b2d2      	uxtb	r2, r2
2ffeec00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeec04:	4611      	mov	r1, r2
2ffeec06:	f7ff bfaa 	b.w	2ffeeb5e <stpmic1_register_update>
2ffeec0a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeec0e:	bd08      	pop	{r3, pc}

2ffeec10 <stpmic1_regulator_icc_set>:
2ffeec10:	b508      	push	{r3, lr}
2ffeec12:	f7fc fe67 	bl	2ffeb8e4 <get_regulator_data>
2ffeec16:	7b83      	ldrb	r3, [r0, #14]
2ffeec18:	b14b      	cbz	r3, 2ffeec2e <stpmic1_regulator_icc_set+0x1e>
2ffeec1a:	7c43      	ldrb	r3, [r0, #17]
2ffeec1c:	2201      	movs	r2, #1
2ffeec1e:	7c00      	ldrb	r0, [r0, #16]
2ffeec20:	409a      	lsls	r2, r3
2ffeec22:	b2d2      	uxtb	r2, r2
2ffeec24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeec28:	4611      	mov	r1, r2
2ffeec2a:	f7ff bf98 	b.w	2ffeeb5e <stpmic1_register_update>
2ffeec2e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeec32:	bd08      	pop	{r3, pc}

2ffeec34 <stpmic1_get_version>:
2ffeec34:	b513      	push	{r0, r1, r4, lr}
2ffeec36:	4604      	mov	r4, r0
2ffeec38:	f10d 0107 	add.w	r1, sp, #7
2ffeec3c:	2006      	movs	r0, #6
2ffeec3e:	f7fc fe93 	bl	2ffeb968 <stpmic1_register_read>
2ffeec42:	2800      	cmp	r0, #0
2ffeec44:	bfa2      	ittt	ge
2ffeec46:	2000      	movge	r0, #0
2ffeec48:	f89d 3007 	ldrbge.w	r3, [sp, #7]
2ffeec4c:	6023      	strge	r3, [r4, #0]
2ffeec4e:	b002      	add	sp, #8
2ffeec50:	bd10      	pop	{r4, pc}

2ffeec52 <stm32mp_system_reset>:
2ffeec52:	b508      	push	{r3, lr}
2ffeec54:	f7ff fb48 	bl	2ffee2e8 <stm32mp_rcc_base>
2ffeec58:	f8d0 3114 	ldr.w	r3, [r0, #276]	@ 0x114
2ffeec5c:	f043 0301 	orr.w	r3, r3, #1
2ffeec60:	f8c0 3114 	str.w	r3, [r0, #276]	@ 0x114
2ffeec64:	e7fe      	b.n	2ffeec64 <stm32mp_system_reset+0x12>

2ffeec66 <stm32_clean_context>:
2ffeec66:	b508      	push	{r3, lr}
2ffeec68:	f7fb fae0 	bl	2ffea22c <stm32mp_bkpram_get_access>
2ffeec6c:	b160      	cbz	r0, 2ffeec88 <stm32_clean_context+0x22>
2ffeec6e:	2044      	movs	r0, #68	@ 0x44
2ffeec70:	f7f9 fe76 	bl	2ffe8960 <clk_enable>
2ffeec74:	f04f 40a8 	mov.w	r0, #1409286144	@ 0x54000000
2ffeec78:	21b8      	movs	r1, #184	@ 0xb8
2ffeec7a:	f7f5 ecdc 	blx	2ffe4634 <zero_normalmem>
2ffeec7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeec82:	2044      	movs	r0, #68	@ 0x44
2ffeec84:	f7f9 be7e 	b.w	2ffe8984 <clk_disable>
2ffeec88:	bd08      	pop	{r3, pc}

2ffeec8a <stm32_get_zdata_from_context>:
2ffeec8a:	b510      	push	{r4, lr}
2ffeec8c:	2044      	movs	r0, #68	@ 0x44
2ffeec8e:	f7f9 fe67 	bl	2ffe8960 <clk_enable>
2ffeec92:	f04f 43a8 	mov.w	r3, #1409286144	@ 0x54000000
2ffeec96:	2044      	movs	r0, #68	@ 0x44
2ffeec98:	689c      	ldr	r4, [r3, #8]
2ffeec9a:	f7f9 fe73 	bl	2ffe8984 <clk_disable>
2ffeec9e:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
2ffeeca2:	4620      	mov	r0, r4
2ffeeca4:	bd10      	pop	{r4, pc}

2ffeeca6 <stm32mp_syscfg_enable_io_compensation_finish>:
2ffeeca6:	b508      	push	{r3, lr}
2ffeeca8:	2020      	movs	r0, #32
2ffeecaa:	f7fd f867 	bl	2ffebd7c <enable_io_comp_cell_finish>
2ffeecae:	2030      	movs	r0, #48	@ 0x30
2ffeecb0:	f7fd f864 	bl	2ffebd7c <enable_io_comp_cell_finish>
2ffeecb4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeecb8:	2040      	movs	r0, #64	@ 0x40
2ffeecba:	f7fd b85f 	b.w	2ffebd7c <enable_io_comp_cell_finish>

2ffeecbe <_clk_lock>:
2ffeecbe:	b510      	push	{r4, lr}
2ffeecc0:	4604      	mov	r4, r0
2ffeecc2:	f7ff fb14 	bl	2ffee2ee <stm32mp_lock_available>
2ffeecc6:	b120      	cbz	r0, 2ffeecd2 <_clk_lock+0x14>
2ffeecc8:	4620      	mov	r0, r4
2ffeecca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeecce:	f005 b8bf 	b.w	2fff3e50 <__spin_lock_from_thumb>
2ffeecd2:	bd10      	pop	{r4, pc}

2ffeecd4 <_clk_unlock>:
2ffeecd4:	b510      	push	{r4, lr}
2ffeecd6:	4604      	mov	r4, r0
2ffeecd8:	f7ff fb09 	bl	2ffee2ee <stm32mp_lock_available>
2ffeecdc:	b120      	cbz	r0, 2ffeece8 <_clk_unlock+0x14>
2ffeecde:	4620      	mov	r0, r4
2ffeece0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeece4:	f005 b8b0 	b.w	2fff3e48 <__spin_unlock_from_thumb>
2ffeece8:	bd10      	pop	{r4, pc}

2ffeecea <_clk_stm32_gate_disable>:
2ffeecea:	6943      	ldr	r3, [r0, #20]
2ffeecec:	b530      	push	{r4, r5, lr}
2ffeecee:	eb03 0481 	add.w	r4, r3, r1, lsl #2
2ffeecf2:	6802      	ldr	r2, [r0, #0]
2ffeecf4:	f833 1021 	ldrh.w	r1, [r3, r1, lsl #2]
2ffeecf8:	2301      	movs	r3, #1
2ffeecfa:	78a5      	ldrb	r5, [r4, #2]
2ffeecfc:	78e4      	ldrb	r4, [r4, #3]
2ffeecfe:	1888      	adds	r0, r1, r2
2ffeed00:	40ab      	lsls	r3, r5
2ffeed02:	b10c      	cbz	r4, 2ffeed08 <_clk_stm32_gate_disable+0x1e>
2ffeed04:	6043      	str	r3, [r0, #4]
2ffeed06:	bd30      	pop	{r4, r5, pc}
2ffeed08:	5888      	ldr	r0, [r1, r2]
2ffeed0a:	ea20 0303 	bic.w	r3, r0, r3
2ffeed0e:	508b      	str	r3, [r1, r2]
2ffeed10:	e7f9      	b.n	2ffeed06 <_clk_stm32_gate_disable+0x1c>

2ffeed12 <_clk_stm32_gate_enable>:
2ffeed12:	6942      	ldr	r2, [r0, #20]
2ffeed14:	2301      	movs	r3, #1
2ffeed16:	b530      	push	{r4, r5, lr}
2ffeed18:	eb02 0481 	add.w	r4, r2, r1, lsl #2
2ffeed1c:	f832 1021 	ldrh.w	r1, [r2, r1, lsl #2]
2ffeed20:	78a5      	ldrb	r5, [r4, #2]
2ffeed22:	6802      	ldr	r2, [r0, #0]
2ffeed24:	78e0      	ldrb	r0, [r4, #3]
2ffeed26:	40ab      	lsls	r3, r5
2ffeed28:	b110      	cbz	r0, 2ffeed30 <_clk_stm32_gate_enable+0x1e>
2ffeed2a:	508b      	str	r3, [r1, r2]
2ffeed2c:	2000      	movs	r0, #0
2ffeed2e:	bd30      	pop	{r4, r5, pc}
2ffeed30:	5888      	ldr	r0, [r1, r2]
2ffeed32:	4303      	orrs	r3, r0
2ffeed34:	e7f9      	b.n	2ffeed2a <_clk_stm32_gate_enable+0x18>

2ffeed36 <_clk_get>:
2ffeed36:	6843      	ldr	r3, [r0, #4]
2ffeed38:	428b      	cmp	r3, r1
2ffeed3a:	bf83      	ittte	hi
2ffeed3c:	230c      	movhi	r3, #12
2ffeed3e:	6880      	ldrhi	r0, [r0, #8]
2ffeed40:	fb03 0001 	mlahi	r0, r3, r1, r0
2ffeed44:	2000      	movls	r0, #0
2ffeed46:	4770      	bx	lr

2ffeed48 <clk_oscillator_get_data>:
2ffeed48:	b508      	push	{r3, lr}
2ffeed4a:	4602      	mov	r2, r0
2ffeed4c:	f7ff fff3 	bl	2ffeed36 <_clk_get>
2ffeed50:	6883      	ldr	r3, [r0, #8]
2ffeed52:	6a50      	ldr	r0, [r2, #36]	@ 0x24
2ffeed54:	781b      	ldrb	r3, [r3, #0]
2ffeed56:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
2ffeed5a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
2ffeed5e:	bd08      	pop	{r3, pc}

2ffeed60 <clk_oscillator_set_bypass>:
2ffeed60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeed64:	4680      	mov	r8, r0
2ffeed66:	4617      	mov	r7, r2
2ffeed68:	461e      	mov	r6, r3
2ffeed6a:	f7ff ffed 	bl	2ffeed48 <clk_oscillator_get_data>
2ffeed6e:	6845      	ldr	r5, [r0, #4]
2ffeed70:	b195      	cbz	r5, 2ffeed98 <clk_oscillator_set_bypass+0x38>
2ffeed72:	882c      	ldrh	r4, [r5, #0]
2ffeed74:	f8d8 1000 	ldr.w	r1, [r8]
2ffeed78:	b167      	cbz	r7, 2ffeed94 <clk_oscillator_set_bypass+0x34>
2ffeed7a:	78e8      	ldrb	r0, [r5, #3]
2ffeed7c:	2301      	movs	r3, #1
2ffeed7e:	5862      	ldr	r2, [r4, r1]
2ffeed80:	4083      	lsls	r3, r0
2ffeed82:	4313      	orrs	r3, r2
2ffeed84:	5063      	str	r3, [r4, r1]
2ffeed86:	78a8      	ldrb	r0, [r5, #2]
2ffeed88:	2301      	movs	r3, #1
2ffeed8a:	5862      	ldr	r2, [r4, r1]
2ffeed8c:	4083      	lsls	r3, r0
2ffeed8e:	4313      	orrs	r3, r2
2ffeed90:	5063      	str	r3, [r4, r1]
2ffeed92:	e001      	b.n	2ffeed98 <clk_oscillator_set_bypass+0x38>
2ffeed94:	2e00      	cmp	r6, #0
2ffeed96:	d1f6      	bne.n	2ffeed86 <clk_oscillator_set_bypass+0x26>
2ffeed98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

2ffeed9c <clk_oscillator_set_css>:
2ffeed9c:	b538      	push	{r3, r4, r5, lr}
2ffeed9e:	4604      	mov	r4, r0
2ffeeda0:	4615      	mov	r5, r2
2ffeeda2:	f7ff ffd1 	bl	2ffeed48 <clk_oscillator_get_data>
2ffeeda6:	6883      	ldr	r3, [r0, #8]
2ffeeda8:	b143      	cbz	r3, 2ffeedbc <clk_oscillator_set_css+0x20>
2ffeedaa:	b13d      	cbz	r5, 2ffeedbc <clk_oscillator_set_css+0x20>
2ffeedac:	8819      	ldrh	r1, [r3, #0]
2ffeedae:	6822      	ldr	r2, [r4, #0]
2ffeedb0:	789c      	ldrb	r4, [r3, #2]
2ffeedb2:	2301      	movs	r3, #1
2ffeedb4:	5888      	ldr	r0, [r1, r2]
2ffeedb6:	40a3      	lsls	r3, r4
2ffeedb8:	4303      	orrs	r3, r0
2ffeedba:	508b      	str	r3, [r1, r2]
2ffeedbc:	bd38      	pop	{r3, r4, r5, pc}

2ffeedbe <clk_oscillator_set_drive>:
2ffeedbe:	b570      	push	{r4, r5, r6, lr}
2ffeedc0:	4605      	mov	r5, r0
2ffeedc2:	4614      	mov	r4, r2
2ffeedc4:	f7ff ffc0 	bl	2ffeed48 <clk_oscillator_get_data>
2ffeedc8:	68c3      	ldr	r3, [r0, #12]
2ffeedca:	b173      	cbz	r3, 2ffeedea <clk_oscillator_set_drive+0x2c>
2ffeedcc:	78d8      	ldrb	r0, [r3, #3]
2ffeedce:	2101      	movs	r1, #1
2ffeedd0:	789a      	ldrb	r2, [r3, #2]
2ffeedd2:	4081      	lsls	r1, r0
2ffeedd4:	8818      	ldrh	r0, [r3, #0]
2ffeedd6:	3901      	subs	r1, #1
2ffeedd8:	682b      	ldr	r3, [r5, #0]
2ffeedda:	4091      	lsls	r1, r2
2ffeeddc:	18c5      	adds	r5, r0, r3
2ffeedde:	58c3      	ldr	r3, [r0, r3]
2ffeede0:	400b      	ands	r3, r1
2ffeede2:	43c9      	mvns	r1, r1
2ffeede4:	40d3      	lsrs	r3, r2
2ffeede6:	429c      	cmp	r4, r3
2ffeede8:	d100      	bne.n	2ffeedec <clk_oscillator_set_drive+0x2e>
2ffeedea:	bd70      	pop	{r4, r5, r6, pc}
2ffeedec:	6828      	ldr	r0, [r5, #0]
2ffeedee:	bf34      	ite	cc
2ffeedf0:	f103 33ff 	addcc.w	r3, r3, #4294967295	@ 0xffffffff
2ffeedf4:	3301      	addcs	r3, #1
2ffeedf6:	4008      	ands	r0, r1
2ffeedf8:	fa03 f602 	lsl.w	r6, r3, r2
2ffeedfc:	4330      	orrs	r0, r6
2ffeedfe:	6028      	str	r0, [r5, #0]
2ffeee00:	e7f1      	b.n	2ffeede6 <clk_oscillator_set_drive+0x28>

2ffeee02 <clk_stm32_osc_recalc_rate>:
2ffeee02:	b508      	push	{r3, lr}
2ffeee04:	f7ff ffa0 	bl	2ffeed48 <clk_oscillator_get_data>
2ffeee08:	6900      	ldr	r0, [r0, #16]
2ffeee0a:	bd08      	pop	{r3, pc}

2ffeee0c <clk_gate_is_enabled>:
2ffeee0c:	b508      	push	{r3, lr}
2ffeee0e:	4602      	mov	r2, r0
2ffeee10:	f7ff ff91 	bl	2ffeed36 <_clk_get>
2ffeee14:	6883      	ldr	r3, [r0, #8]
2ffeee16:	6811      	ldr	r1, [r2, #0]
2ffeee18:	681a      	ldr	r2, [r3, #0]
2ffeee1a:	588a      	ldr	r2, [r1, r2]
2ffeee1c:	7919      	ldrb	r1, [r3, #4]
2ffeee1e:	2301      	movs	r3, #1
2ffeee20:	408b      	lsls	r3, r1
2ffeee22:	4213      	tst	r3, r2
2ffeee24:	bf14      	ite	ne
2ffeee26:	2001      	movne	r0, #1
2ffeee28:	2000      	moveq	r0, #0
2ffeee2a:	bd08      	pop	{r3, pc}

2ffeee2c <clk_gate_disable>:
2ffeee2c:	b510      	push	{r4, lr}
2ffeee2e:	4602      	mov	r2, r0
2ffeee30:	f7ff ff81 	bl	2ffeed36 <_clk_get>
2ffeee34:	6884      	ldr	r4, [r0, #8]
2ffeee36:	f3bf 8f4f 	dsb	sy
2ffeee3a:	6810      	ldr	r0, [r2, #0]
2ffeee3c:	2201      	movs	r2, #1
2ffeee3e:	6821      	ldr	r1, [r4, #0]
2ffeee40:	7924      	ldrb	r4, [r4, #4]
2ffeee42:	5843      	ldr	r3, [r0, r1]
2ffeee44:	40a2      	lsls	r2, r4
2ffeee46:	ea23 0302 	bic.w	r3, r3, r2
2ffeee4a:	5043      	str	r3, [r0, r1]
2ffeee4c:	f3bf 8f4f 	dsb	sy
2ffeee50:	bd10      	pop	{r4, pc}

2ffeee52 <clk_gate_enable>:
2ffeee52:	b510      	push	{r4, lr}
2ffeee54:	4602      	mov	r2, r0
2ffeee56:	f7ff ff6e 	bl	2ffeed36 <_clk_get>
2ffeee5a:	6883      	ldr	r3, [r0, #8]
2ffeee5c:	6811      	ldr	r1, [r2, #0]
2ffeee5e:	681a      	ldr	r2, [r3, #0]
2ffeee60:	791c      	ldrb	r4, [r3, #4]
2ffeee62:	2301      	movs	r3, #1
2ffeee64:	5888      	ldr	r0, [r1, r2]
2ffeee66:	40a3      	lsls	r3, r4
2ffeee68:	4303      	orrs	r3, r0
2ffeee6a:	508b      	str	r3, [r1, r2]
2ffeee6c:	f3bf 8f4f 	dsb	sy
2ffeee70:	2000      	movs	r0, #0
2ffeee72:	bd10      	pop	{r4, pc}

2ffeee74 <clk_stm32_gate_enable>:
2ffeee74:	b538      	push	{r3, r4, r5, lr}
2ffeee76:	4602      	mov	r2, r0
2ffeee78:	f7ff ff5d 	bl	2ffeed36 <_clk_get>
2ffeee7c:	6883      	ldr	r3, [r0, #8]
2ffeee7e:	6951      	ldr	r1, [r2, #20]
2ffeee80:	781c      	ldrb	r4, [r3, #0]
2ffeee82:	2301      	movs	r3, #1
2ffeee84:	6812      	ldr	r2, [r2, #0]
2ffeee86:	eb01 0084 	add.w	r0, r1, r4, lsl #2
2ffeee8a:	f831 1024 	ldrh.w	r1, [r1, r4, lsl #2]
2ffeee8e:	7885      	ldrb	r5, [r0, #2]
2ffeee90:	78c0      	ldrb	r0, [r0, #3]
2ffeee92:	40ab      	lsls	r3, r5
2ffeee94:	b110      	cbz	r0, 2ffeee9c <clk_stm32_gate_enable+0x28>
2ffeee96:	508b      	str	r3, [r1, r2]
2ffeee98:	2000      	movs	r0, #0
2ffeee9a:	bd38      	pop	{r3, r4, r5, pc}
2ffeee9c:	5888      	ldr	r0, [r1, r2]
2ffeee9e:	4303      	orrs	r3, r0
2ffeeea0:	e7f9      	b.n	2ffeee96 <clk_stm32_gate_enable+0x22>

2ffeeea2 <clk_stm32_gate_disable>:
2ffeeea2:	b538      	push	{r3, r4, r5, lr}
2ffeeea4:	4602      	mov	r2, r0
2ffeeea6:	f7ff ff46 	bl	2ffeed36 <_clk_get>
2ffeeeaa:	6883      	ldr	r3, [r0, #8]
2ffeeeac:	7819      	ldrb	r1, [r3, #0]
2ffeeeae:	6953      	ldr	r3, [r2, #20]
2ffeeeb0:	6812      	ldr	r2, [r2, #0]
2ffeeeb2:	eb03 0081 	add.w	r0, r3, r1, lsl #2
2ffeeeb6:	f833 1021 	ldrh.w	r1, [r3, r1, lsl #2]
2ffeeeba:	2301      	movs	r3, #1
2ffeeebc:	7885      	ldrb	r5, [r0, #2]
2ffeeebe:	78c0      	ldrb	r0, [r0, #3]
2ffeeec0:	188c      	adds	r4, r1, r2
2ffeeec2:	40ab      	lsls	r3, r5
2ffeeec4:	b108      	cbz	r0, 2ffeeeca <clk_stm32_gate_disable+0x28>
2ffeeec6:	6063      	str	r3, [r4, #4]
2ffeeec8:	bd38      	pop	{r3, r4, r5, pc}
2ffeeeca:	5888      	ldr	r0, [r1, r2]
2ffeeecc:	ea20 0303 	bic.w	r3, r0, r3
2ffeeed0:	508b      	str	r3, [r1, r2]
2ffeeed2:	e7f9      	b.n	2ffeeec8 <clk_stm32_gate_disable+0x26>

2ffeeed4 <timer_recalc_rate>:
2ffeeed4:	b510      	push	{r4, lr}
2ffeeed6:	4604      	mov	r4, r0
2ffeeed8:	f7ff ff2d 	bl	2ffeed36 <_clk_get>
2ffeeedc:	6881      	ldr	r1, [r0, #8]
2ffeeede:	6823      	ldr	r3, [r4, #0]
2ffeeee0:	6808      	ldr	r0, [r1, #0]
2ffeeee2:	6849      	ldr	r1, [r1, #4]
2ffeeee4:	5818      	ldr	r0, [r3, r0]
2ffeeee6:	585b      	ldr	r3, [r3, r1]
2ffeeee8:	0741      	lsls	r1, r0, #29
2ffeeeea:	bf1e      	ittt	ne
2ffeeeec:	f003 0301 	andne.w	r3, r3, #1
2ffeeef0:	fb03 2202 	mlane	r2, r3, r2, r2
2ffeeef4:	0052      	lslne	r2, r2, #1
2ffeeef6:	4610      	mov	r0, r2
2ffeeef8:	bd10      	pop	{r4, pc}

2ffeeefa <clk_fixed_rate_recalc>:
2ffeeefa:	b508      	push	{r3, lr}
2ffeeefc:	f7ff ff1b 	bl	2ffeed36 <_clk_get>
2ffeef00:	6883      	ldr	r3, [r0, #8]
2ffeef02:	6818      	ldr	r0, [r3, #0]
2ffeef04:	bd08      	pop	{r3, pc}

2ffeef06 <clk_mux_get_parent>:
2ffeef06:	6903      	ldr	r3, [r0, #16]
2ffeef08:	b510      	push	{r4, lr}
2ffeef0a:	428b      	cmp	r3, r1
2ffeef0c:	d803      	bhi.n	2ffeef16 <clk_mux_get_parent+0x10>
2ffeef0e:	f7f8 fdcd 	bl	2ffe7aac <console_flush>
2ffeef12:	f7f5 ea90 	blx	2ffe4434 <do_panic>
2ffeef16:	68c3      	ldr	r3, [r0, #12]
2ffeef18:	220c      	movs	r2, #12
2ffeef1a:	fb02 3301 	mla	r3, r2, r1, r3
2ffeef1e:	6802      	ldr	r2, [r0, #0]
2ffeef20:	685b      	ldr	r3, [r3, #4]
2ffeef22:	7899      	ldrb	r1, [r3, #2]
2ffeef24:	881c      	ldrh	r4, [r3, #0]
2ffeef26:	78db      	ldrb	r3, [r3, #3]
2ffeef28:	58a0      	ldr	r0, [r4, r2]
2ffeef2a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
2ffeef2e:	440b      	add	r3, r1
2ffeef30:	f1c3 0320 	rsb	r3, r3, #32
2ffeef34:	fa22 f303 	lsr.w	r3, r2, r3
2ffeef38:	408a      	lsls	r2, r1
2ffeef3a:	4002      	ands	r2, r0
2ffeef3c:	4013      	ands	r3, r2
2ffeef3e:	fa23 f001 	lsr.w	r0, r3, r1
2ffeef42:	bd10      	pop	{r4, pc}

2ffeef44 <_clk_stm32_set_parent_by_index>:
2ffeef44:	6883      	ldr	r3, [r0, #8]
2ffeef46:	b410      	push	{r4}
2ffeef48:	240c      	movs	r4, #12
2ffeef4a:	fb04 3301 	mla	r3, r4, r1, r3
2ffeef4e:	8859      	ldrh	r1, [r3, #2]
2ffeef50:	f647 73fe 	movw	r3, #32766	@ 0x7ffe
2ffeef54:	f481 4400 	eor.w	r4, r1, #32768	@ 0x8000
2ffeef58:	429c      	cmp	r4, r3
2ffeef5a:	d803      	bhi.n	2ffeef64 <_clk_stm32_set_parent_by_index+0x20>
2ffeef5c:	bc10      	pop	{r4}
2ffeef5e:	b2d2      	uxtb	r2, r2
2ffeef60:	f7fd b88c 	b.w	2ffec07c <clk_mux_set_parent>
2ffeef64:	bc10      	pop	{r4}
2ffeef66:	f06f 0015 	mvn.w	r0, #21
2ffeef6a:	4770      	bx	lr

2ffeef6c <_clk_stm32_get_parent>:
2ffeef6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeef70:	4604      	mov	r4, r0
2ffeef72:	4688      	mov	r8, r1
2ffeef74:	f7fd f85c 	bl	2ffec030 <_clk_get_ops>
2ffeef78:	68a2      	ldr	r2, [r4, #8]
2ffeef7a:	250c      	movs	r5, #12
2ffeef7c:	4603      	mov	r3, r0
2ffeef7e:	fb05 2208 	mla	r2, r5, r8, r2
2ffeef82:	8850      	ldrh	r0, [r2, #2]
2ffeef84:	f64f 72ff 	movw	r2, #65535	@ 0xffff
2ffeef88:	4290      	cmp	r0, r2
2ffeef8a:	d013      	beq.n	2ffeefb4 <_clk_stm32_get_parent+0x48>
2ffeef8c:	0402      	lsls	r2, r0, #16
2ffeef8e:	d511      	bpl.n	2ffeefb4 <_clk_stm32_get_parent+0x48>
2ffeef90:	f3c0 010e 	ubfx	r1, r0, #0, #15
2ffeef94:	434d      	muls	r5, r1
2ffeef96:	68e6      	ldr	r6, [r4, #12]
2ffeef98:	685b      	ldr	r3, [r3, #4]
2ffeef9a:	1977      	adds	r7, r6, r5
2ffeef9c:	b163      	cbz	r3, 2ffeefb8 <_clk_stm32_get_parent+0x4c>
2ffeef9e:	4641      	mov	r1, r8
2ffeefa0:	4620      	mov	r0, r4
2ffeefa2:	4798      	blx	r3
2ffeefa4:	2800      	cmp	r0, #0
2ffeefa6:	db0b      	blt.n	2ffeefc0 <_clk_stm32_get_parent+0x54>
2ffeefa8:	7a3b      	ldrb	r3, [r7, #8]
2ffeefaa:	4283      	cmp	r3, r0
2ffeefac:	dd08      	ble.n	2ffeefc0 <_clk_stm32_get_parent+0x54>
2ffeefae:	5973      	ldr	r3, [r6, r5]
2ffeefb0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
2ffeefb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeefb8:	4620      	mov	r0, r4
2ffeefba:	f7ff ffa4 	bl	2ffeef06 <clk_mux_get_parent>
2ffeefbe:	e7f1      	b.n	2ffeefa4 <_clk_stm32_get_parent+0x38>
2ffeefc0:	f06f 0015 	mvn.w	r0, #21
2ffeefc4:	e7f6      	b.n	2ffeefb4 <_clk_stm32_get_parent+0x48>

2ffeefc6 <clk_get_index>:
2ffeefc6:	b570      	push	{r4, r5, r6, lr}
2ffeefc8:	2300      	movs	r3, #0
2ffeefca:	6842      	ldr	r2, [r0, #4]
2ffeefcc:	240c      	movs	r4, #12
2ffeefce:	429a      	cmp	r2, r3
2ffeefd0:	d102      	bne.n	2ffeefd8 <clk_get_index+0x12>
2ffeefd2:	f06f 0015 	mvn.w	r0, #21
2ffeefd6:	e006      	b.n	2ffeefe6 <clk_get_index+0x20>
2ffeefd8:	6886      	ldr	r6, [r0, #8]
2ffeefda:	fb04 f503 	mul.w	r5, r4, r3
2ffeefde:	5b75      	ldrh	r5, [r6, r5]
2ffeefe0:	428d      	cmp	r5, r1
2ffeefe2:	d101      	bne.n	2ffeefe8 <clk_get_index+0x22>
2ffeefe4:	4618      	mov	r0, r3
2ffeefe6:	bd70      	pop	{r4, r5, r6, pc}
2ffeefe8:	3301      	adds	r3, #1
2ffeefea:	e7f0      	b.n	2ffeefce <clk_get_index+0x8>

2ffeefec <_clk_stm32_get_rate>:
2ffeefec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeeff0:	4604      	mov	r4, r0
2ffeeff2:	460d      	mov	r5, r1
2ffeeff4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
2ffeeff8:	4629      	mov	r1, r5
2ffeeffa:	4620      	mov	r0, r4
2ffeeffc:	f7fd f818 	bl	2ffec030 <_clk_get_ops>
2ffef000:	6863      	ldr	r3, [r4, #4]
2ffef002:	4606      	mov	r6, r0
2ffef004:	42ab      	cmp	r3, r5
2ffef006:	d91d      	bls.n	2ffef044 <_clk_stm32_get_rate+0x58>
2ffef008:	4629      	mov	r1, r5
2ffef00a:	4620      	mov	r0, r4
2ffef00c:	f7ff ffae 	bl	2ffeef6c <_clk_stm32_get_parent>
2ffef010:	1e01      	subs	r1, r0, #0
2ffef012:	db17      	blt.n	2ffef044 <_clk_stm32_get_rate+0x58>
2ffef014:	6833      	ldr	r3, [r6, #0]
2ffef016:	b17b      	cbz	r3, 2ffef038 <_clk_stm32_get_rate+0x4c>
2ffef018:	42b9      	cmp	r1, r7
2ffef01a:	d00b      	beq.n	2ffef034 <_clk_stm32_get_rate+0x48>
2ffef01c:	4620      	mov	r0, r4
2ffef01e:	f7ff ffe5 	bl	2ffeefec <_clk_stm32_get_rate>
2ffef022:	4602      	mov	r2, r0
2ffef024:	6833      	ldr	r3, [r6, #0]
2ffef026:	4629      	mov	r1, r5
2ffef028:	4620      	mov	r0, r4
2ffef02a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffef02e:	4718      	bx	r3
2ffef030:	460d      	mov	r5, r1
2ffef032:	e7e1      	b.n	2ffeeff8 <_clk_stm32_get_rate+0xc>
2ffef034:	2200      	movs	r2, #0
2ffef036:	e7f5      	b.n	2ffef024 <_clk_stm32_get_rate+0x38>
2ffef038:	42b9      	cmp	r1, r7
2ffef03a:	d1f9      	bne.n	2ffef030 <_clk_stm32_get_rate+0x44>
2ffef03c:	f7f8 fd36 	bl	2ffe7aac <console_flush>
2ffef040:	f7f5 e9f8 	blx	2ffe4434 <do_panic>
2ffef044:	2000      	movs	r0, #0
2ffef046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

2ffef04a <_clk_stm32_get_parent_rate>:
2ffef04a:	b510      	push	{r4, lr}
2ffef04c:	4604      	mov	r4, r0
2ffef04e:	f7ff ff8d 	bl	2ffeef6c <_clk_stm32_get_parent>
2ffef052:	1e01      	subs	r1, r0, #0
2ffef054:	db04      	blt.n	2ffef060 <_clk_stm32_get_parent_rate+0x16>
2ffef056:	4620      	mov	r0, r4
2ffef058:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef05c:	f7ff bfc6 	b.w	2ffeefec <_clk_stm32_get_rate>
2ffef060:	2000      	movs	r0, #0
2ffef062:	bd10      	pop	{r4, pc}

2ffef064 <_stm32_clk_is_flags>:
2ffef064:	6883      	ldr	r3, [r0, #8]
2ffef066:	200c      	movs	r0, #12
2ffef068:	fb00 3301 	mla	r3, r0, r1, r3
2ffef06c:	795b      	ldrb	r3, [r3, #5]
2ffef06e:	421a      	tst	r2, r3
2ffef070:	bf14      	ite	ne
2ffef072:	2001      	movne	r0, #1
2ffef074:	2000      	moveq	r0, #0
2ffef076:	4770      	bx	lr

2ffef078 <clk_stm32_enable_call_ops>:
2ffef078:	b538      	push	{r3, r4, r5, lr}
2ffef07a:	4604      	mov	r4, r0
2ffef07c:	460d      	mov	r5, r1
2ffef07e:	f7fc ffd7 	bl	2ffec030 <_clk_get_ops>
2ffef082:	68c3      	ldr	r3, [r0, #12]
2ffef084:	b113      	cbz	r3, 2ffef08c <clk_stm32_enable_call_ops+0x14>
2ffef086:	4629      	mov	r1, r5
2ffef088:	4620      	mov	r0, r4
2ffef08a:	4798      	blx	r3
2ffef08c:	2000      	movs	r0, #0
2ffef08e:	bd38      	pop	{r3, r4, r5, pc}

2ffef090 <_clk_stm32_enable_core>:
2ffef090:	b538      	push	{r3, r4, r5, lr}
2ffef092:	4605      	mov	r5, r0
2ffef094:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
2ffef096:	460c      	mov	r4, r1
2ffef098:	5c5b      	ldrb	r3, [r3, r1]
2ffef09a:	b95b      	cbnz	r3, 2ffef0b4 <_clk_stm32_enable_core+0x24>
2ffef09c:	f7ff ff66 	bl	2ffeef6c <_clk_stm32_get_parent>
2ffef0a0:	2800      	cmp	r0, #0
2ffef0a2:	db13      	blt.n	2ffef0cc <_clk_stm32_enable_core+0x3c>
2ffef0a4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
2ffef0a8:	4298      	cmp	r0, r3
2ffef0aa:	d109      	bne.n	2ffef0c0 <_clk_stm32_enable_core+0x30>
2ffef0ac:	b2a1      	uxth	r1, r4
2ffef0ae:	4628      	mov	r0, r5
2ffef0b0:	f7ff ffe2 	bl	2ffef078 <clk_stm32_enable_call_ops>
2ffef0b4:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
2ffef0b6:	2000      	movs	r0, #0
2ffef0b8:	5d13      	ldrb	r3, [r2, r4]
2ffef0ba:	3301      	adds	r3, #1
2ffef0bc:	5513      	strb	r3, [r2, r4]
2ffef0be:	e005      	b.n	2ffef0cc <_clk_stm32_enable_core+0x3c>
2ffef0c0:	4601      	mov	r1, r0
2ffef0c2:	4628      	mov	r0, r5
2ffef0c4:	f7ff ffe4 	bl	2ffef090 <_clk_stm32_enable_core>
2ffef0c8:	2800      	cmp	r0, #0
2ffef0ca:	d0ef      	beq.n	2ffef0ac <_clk_stm32_enable_core+0x1c>
2ffef0cc:	bd38      	pop	{r3, r4, r5, pc}

2ffef0ce <clk_stm32_disable_call_ops>:
2ffef0ce:	b570      	push	{r4, r5, r6, lr}
2ffef0d0:	4604      	mov	r4, r0
2ffef0d2:	460d      	mov	r5, r1
2ffef0d4:	f7fc ffac 	bl	2ffec030 <_clk_get_ops>
2ffef0d8:	6903      	ldr	r3, [r0, #16]
2ffef0da:	b123      	cbz	r3, 2ffef0e6 <clk_stm32_disable_call_ops+0x18>
2ffef0dc:	4629      	mov	r1, r5
2ffef0de:	4620      	mov	r0, r4
2ffef0e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef0e4:	4718      	bx	r3
2ffef0e6:	bd70      	pop	{r4, r5, r6, pc}

2ffef0e8 <_clk_stm32_is_enabled>:
2ffef0e8:	b570      	push	{r4, r5, r6, lr}
2ffef0ea:	4605      	mov	r5, r0
2ffef0ec:	460c      	mov	r4, r1
2ffef0ee:	f7fc ff9f 	bl	2ffec030 <_clk_get_ops>
2ffef0f2:	6943      	ldr	r3, [r0, #20]
2ffef0f4:	b123      	cbz	r3, 2ffef100 <_clk_stm32_is_enabled+0x18>
2ffef0f6:	4621      	mov	r1, r4
2ffef0f8:	4628      	mov	r0, r5
2ffef0fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef0fe:	4718      	bx	r3
2ffef100:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
2ffef102:	5d18      	ldrb	r0, [r3, r4]
2ffef104:	3800      	subs	r0, #0
2ffef106:	bf18      	it	ne
2ffef108:	2001      	movne	r0, #1
2ffef10a:	bd70      	pop	{r4, r5, r6, pc}

2ffef10c <_clk_stm32_set_parent>:
2ffef10c:	6883      	ldr	r3, [r0, #8]
2ffef10e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef112:	f04f 090c 	mov.w	r9, #12
2ffef116:	fb09 3301 	mla	r3, r9, r1, r3
2ffef11a:	4616      	mov	r6, r2
2ffef11c:	4605      	mov	r5, r0
2ffef11e:	f8b3 8002 	ldrh.w	r8, [r3, #2]
2ffef122:	f647 73fe 	movw	r3, #32766	@ 0x7ffe
2ffef126:	460f      	mov	r7, r1
2ffef128:	f488 4200 	eor.w	r2, r8, #32768	@ 0x8000
2ffef12c:	429a      	cmp	r2, r3
2ffef12e:	d904      	bls.n	2ffef13a <_clk_stm32_set_parent+0x2e>
2ffef130:	f06f 0415 	mvn.w	r4, #21
2ffef134:	4620      	mov	r0, r4
2ffef136:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffef13a:	f7ff ff17 	bl	2ffeef6c <_clk_stm32_get_parent>
2ffef13e:	1e04      	subs	r4, r0, #0
2ffef140:	dbf8      	blt.n	2ffef134 <_clk_stm32_set_parent+0x28>
2ffef142:	42b4      	cmp	r4, r6
2ffef144:	d034      	beq.n	2ffef1b0 <_clk_stm32_set_parent+0xa4>
2ffef146:	68e8      	ldr	r0, [r5, #12]
2ffef148:	fa1f fc86 	uxth.w	ip, r6
2ffef14c:	f3c8 030e 	ubfx	r3, r8, #0, #15
2ffef150:	fb09 0003 	mla	r0, r9, r3, r0
2ffef154:	2300      	movs	r3, #0
2ffef156:	7a02      	ldrb	r2, [r0, #8]
2ffef158:	fa5f fa83 	uxtb.w	sl, r3
2ffef15c:	4552      	cmp	r2, sl
2ffef15e:	d9e7      	bls.n	2ffef130 <_clk_stm32_set_parent+0x24>
2ffef160:	6801      	ldr	r1, [r0, #0]
2ffef162:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
2ffef166:	3301      	adds	r3, #1
2ffef168:	4561      	cmp	r1, ip
2ffef16a:	d1f5      	bne.n	2ffef158 <_clk_stm32_set_parent+0x4c>
2ffef16c:	4639      	mov	r1, r7
2ffef16e:	4628      	mov	r0, r5
2ffef170:	f7ff ffba 	bl	2ffef0e8 <_clk_stm32_is_enabled>
2ffef174:	4681      	mov	r9, r0
2ffef176:	4631      	mov	r1, r6
2ffef178:	4628      	mov	r0, r5
2ffef17a:	f7fc ffed 	bl	2ffec158 <_clk_stm32_enable>
2ffef17e:	4621      	mov	r1, r4
2ffef180:	4628      	mov	r0, r5
2ffef182:	f7fc ffe9 	bl	2ffec158 <_clk_stm32_enable>
2ffef186:	4641      	mov	r1, r8
2ffef188:	4652      	mov	r2, sl
2ffef18a:	4628      	mov	r0, r5
2ffef18c:	f7fc ff76 	bl	2ffec07c <clk_mux_set_parent>
2ffef190:	4607      	mov	r7, r0
2ffef192:	4621      	mov	r1, r4
2ffef194:	4628      	mov	r0, r5
2ffef196:	f7fd f807 	bl	2ffec1a8 <_clk_stm32_disable>
2ffef19a:	f1b9 0f00 	cmp.w	r9, #0
2ffef19e:	d005      	beq.n	2ffef1ac <_clk_stm32_set_parent+0xa0>
2ffef1a0:	4621      	mov	r1, r4
2ffef1a2:	4628      	mov	r0, r5
2ffef1a4:	463c      	mov	r4, r7
2ffef1a6:	f7fc ffff 	bl	2ffec1a8 <_clk_stm32_disable>
2ffef1aa:	e7c3      	b.n	2ffef134 <_clk_stm32_set_parent+0x28>
2ffef1ac:	4631      	mov	r1, r6
2ffef1ae:	e7f8      	b.n	2ffef1a2 <_clk_stm32_set_parent+0x96>
2ffef1b0:	2400      	movs	r4, #0
2ffef1b2:	e7bf      	b.n	2ffef134 <_clk_stm32_set_parent+0x28>

2ffef1b4 <clk_stm32_div_get_value>:
2ffef1b4:	69c3      	ldr	r3, [r0, #28]
2ffef1b6:	220c      	movs	r2, #12
2ffef1b8:	fb02 3101 	mla	r1, r2, r1, r3
2ffef1bc:	6803      	ldr	r3, [r0, #0]
2ffef1be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef1c2:	888a      	ldrh	r2, [r1, #4]
2ffef1c4:	58d3      	ldr	r3, [r2, r3]
2ffef1c6:	798a      	ldrb	r2, [r1, #6]
2ffef1c8:	40d3      	lsrs	r3, r2
2ffef1ca:	79ca      	ldrb	r2, [r1, #7]
2ffef1cc:	f1c2 0220 	rsb	r2, r2, #32
2ffef1d0:	40d0      	lsrs	r0, r2
2ffef1d2:	4018      	ands	r0, r3
2ffef1d4:	4770      	bx	lr

2ffef1d6 <_clk_stm32_divider_recalc>:
2ffef1d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef1d8:	230c      	movs	r3, #12
2ffef1da:	fb03 f501 	mul.w	r5, r3, r1
2ffef1de:	69c6      	ldr	r6, [r0, #28]
2ffef1e0:	4614      	mov	r4, r2
2ffef1e2:	f7ff ffe7 	bl	2ffef1b4 <clk_stm32_div_get_value>
2ffef1e6:	1977      	adds	r7, r6, r5
2ffef1e8:	4602      	mov	r2, r0
2ffef1ea:	7a3b      	ldrb	r3, [r7, #8]
2ffef1ec:	07d8      	lsls	r0, r3, #31
2ffef1ee:	d429      	bmi.n	2ffef244 <_clk_stm32_divider_recalc+0x6e>
2ffef1f0:	0799      	lsls	r1, r3, #30
2ffef1f2:	d50e      	bpl.n	2ffef212 <_clk_stm32_divider_recalc+0x3c>
2ffef1f4:	2301      	movs	r3, #1
2ffef1f6:	fa03 f202 	lsl.w	r2, r3, r2
2ffef1fa:	3c01      	subs	r4, #1
2ffef1fc:	f04f 0300 	mov.w	r3, #0
2ffef200:	f143 31ff 	adc.w	r1, r3, #4294967295	@ 0xffffffff
2ffef204:	18a0      	adds	r0, r4, r2
2ffef206:	f141 0100 	adc.w	r1, r1, #0
2ffef20a:	f7fe ea10 	blx	2ffed62c <__aeabi_uldivmod>
2ffef20e:	4604      	mov	r4, r0
2ffef210:	e00e      	b.n	2ffef230 <_clk_stm32_divider_recalc+0x5a>
2ffef212:	065b      	lsls	r3, r3, #25
2ffef214:	d505      	bpl.n	2ffef222 <_clk_stm32_divider_recalc+0x4c>
2ffef216:	2a00      	cmp	r2, #0
2ffef218:	d1ef      	bne.n	2ffef1fa <_clk_stm32_divider_recalc+0x24>
2ffef21a:	79fb      	ldrb	r3, [r7, #7]
2ffef21c:	2201      	movs	r2, #1
2ffef21e:	409a      	lsls	r2, r3
2ffef220:	e7eb      	b.n	2ffef1fa <_clk_stm32_divider_recalc+0x24>
2ffef222:	5973      	ldr	r3, [r6, r5]
2ffef224:	b16b      	cbz	r3, 2ffef242 <_clk_stm32_divider_recalc+0x6c>
2ffef226:	3304      	adds	r3, #4
2ffef228:	f833 1c02 	ldrh.w	r1, [r3, #-2]
2ffef22c:	4618      	mov	r0, r3
2ffef22e:	b909      	cbnz	r1, 2ffef234 <_clk_stm32_divider_recalc+0x5e>
2ffef230:	4620      	mov	r0, r4
2ffef232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef234:	f830 0c04 	ldrh.w	r0, [r0, #-4]
2ffef238:	3304      	adds	r3, #4
2ffef23a:	4282      	cmp	r2, r0
2ffef23c:	d1f4      	bne.n	2ffef228 <_clk_stm32_divider_recalc+0x52>
2ffef23e:	460a      	mov	r2, r1
2ffef240:	e7db      	b.n	2ffef1fa <_clk_stm32_divider_recalc+0x24>
2ffef242:	3201      	adds	r2, #1
2ffef244:	2a00      	cmp	r2, #0
2ffef246:	d0f3      	beq.n	2ffef230 <_clk_stm32_divider_recalc+0x5a>
2ffef248:	e7d7      	b.n	2ffef1fa <_clk_stm32_divider_recalc+0x24>

2ffef24a <clk_stm32_divider_recalc>:
2ffef24a:	b510      	push	{r4, lr}
2ffef24c:	4604      	mov	r4, r0
2ffef24e:	f7ff fd72 	bl	2ffeed36 <_clk_get>
2ffef252:	6883      	ldr	r3, [r0, #8]
2ffef254:	4620      	mov	r0, r4
2ffef256:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef25a:	7819      	ldrb	r1, [r3, #0]
2ffef25c:	f7ff bfbb 	b.w	2ffef1d6 <_clk_stm32_divider_recalc>

2ffef260 <_clk_stm32_gate_wait_ready>:
2ffef260:	6943      	ldr	r3, [r0, #20]
2ffef262:	2a00      	cmp	r2, #0
2ffef264:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffef266:	eb03 0481 	add.w	r4, r3, r1, lsl #2
2ffef26a:	f833 5021 	ldrh.w	r5, [r3, r1, lsl #2]
2ffef26e:	f04f 0301 	mov.w	r3, #1
2ffef272:	78a1      	ldrb	r1, [r4, #2]
2ffef274:	bf08      	it	eq
2ffef276:	2400      	moveq	r4, #0
2ffef278:	6806      	ldr	r6, [r0, #0]
2ffef27a:	fa03 f301 	lsl.w	r3, r3, r1
2ffef27e:	eb05 0706 	add.w	r7, r5, r6
2ffef282:	bf18      	it	ne
2ffef284:	461c      	movne	r4, r3
2ffef286:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffef28a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffef28e:	1812      	adds	r2, r2, r0
2ffef290:	f141 0c00 	adc.w	ip, r1, #0
2ffef294:	6839      	ldr	r1, [r7, #0]
2ffef296:	4019      	ands	r1, r3
2ffef298:	42a1      	cmp	r1, r4
2ffef29a:	d005      	beq.n	2ffef2a8 <_clk_stm32_gate_wait_ready+0x48>
2ffef29c:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffef2a0:	4282      	cmp	r2, r0
2ffef2a2:	eb7c 0101 	sbcs.w	r1, ip, r1
2ffef2a6:	d2f5      	bcs.n	2ffef294 <_clk_stm32_gate_wait_ready+0x34>
2ffef2a8:	59aa      	ldr	r2, [r5, r6]
2ffef2aa:	4013      	ands	r3, r2
2ffef2ac:	42a3      	cmp	r3, r4
2ffef2ae:	bf14      	ite	ne
2ffef2b0:	f06f 003b 	mvnne.w	r0, #59	@ 0x3b
2ffef2b4:	2000      	moveq	r0, #0
2ffef2b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffef2b8 <clk_oscillator_wait_ready>:
2ffef2b8:	b538      	push	{r3, r4, r5, lr}
2ffef2ba:	4604      	mov	r4, r0
2ffef2bc:	4615      	mov	r5, r2
2ffef2be:	f7ff fd43 	bl	2ffeed48 <clk_oscillator_get_data>
2ffef2c2:	8b01      	ldrh	r1, [r0, #24]
2ffef2c4:	462a      	mov	r2, r5
2ffef2c6:	4620      	mov	r0, r4
2ffef2c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffef2cc:	f7ff bfc8 	b.w	2ffef260 <_clk_stm32_gate_wait_ready>

2ffef2d0 <clk_oscillator_wait_ready_on>:
2ffef2d0:	2201      	movs	r2, #1
2ffef2d2:	f7ff bff1 	b.w	2ffef2b8 <clk_oscillator_wait_ready>

2ffef2d6 <_clk_stm32_gate_is_enabled>:
2ffef2d6:	6943      	ldr	r3, [r0, #20]
2ffef2d8:	b510      	push	{r4, lr}
2ffef2da:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
2ffef2de:	eb03 0481 	add.w	r4, r3, r1, lsl #2
2ffef2e2:	6803      	ldr	r3, [r0, #0]
2ffef2e4:	78a1      	ldrb	r1, [r4, #2]
2ffef2e6:	58d2      	ldr	r2, [r2, r3]
2ffef2e8:	2301      	movs	r3, #1
2ffef2ea:	408b      	lsls	r3, r1
2ffef2ec:	4213      	tst	r3, r2
2ffef2ee:	bf14      	ite	ne
2ffef2f0:	2001      	movne	r0, #1
2ffef2f2:	2000      	moveq	r0, #0
2ffef2f4:	bd10      	pop	{r4, pc}

2ffef2f6 <clk_stm32_gate_is_enabled>:
2ffef2f6:	b508      	push	{r3, lr}
2ffef2f8:	4602      	mov	r2, r0
2ffef2fa:	f7ff fd1c 	bl	2ffeed36 <_clk_get>
2ffef2fe:	6883      	ldr	r3, [r0, #8]
2ffef300:	4610      	mov	r0, r2
2ffef302:	7819      	ldrb	r1, [r3, #0]
2ffef304:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef308:	f7ff bfe5 	b.w	2ffef2d6 <_clk_stm32_gate_is_enabled>

2ffef30c <clk_stm32_osc_gate_is_enabled>:
2ffef30c:	b510      	push	{r4, lr}
2ffef30e:	4604      	mov	r4, r0
2ffef310:	f7ff fd1a 	bl	2ffeed48 <clk_oscillator_get_data>
2ffef314:	8ac1      	ldrh	r1, [r0, #22]
2ffef316:	4620      	mov	r0, r4
2ffef318:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef31c:	f7ff bfdb 	b.w	2ffef2d6 <_clk_stm32_gate_is_enabled>

2ffef320 <stm32_clk_parse_fdt_by_name>:
2ffef320:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffef322:	461d      	mov	r5, r3
2ffef324:	2400      	movs	r4, #0
2ffef326:	ab01      	add	r3, sp, #4
2ffef328:	9401      	str	r4, [sp, #4]
2ffef32a:	f000 facd 	bl	2ffef8c8 <fdt_getprop>
2ffef32e:	b180      	cbz	r0, 2ffef352 <stm32_clk_parse_fdt_by_name+0x32>
2ffef330:	9901      	ldr	r1, [sp, #4]
2ffef332:	4622      	mov	r2, r4
2ffef334:	0889      	lsrs	r1, r1, #2
2ffef336:	4291      	cmp	r1, r2
2ffef338:	d104      	bne.n	2ffef344 <stm32_clk_parse_fdt_by_name+0x24>
2ffef33a:	9b06      	ldr	r3, [sp, #24]
2ffef33c:	2000      	movs	r0, #0
2ffef33e:	6019      	str	r1, [r3, #0]
2ffef340:	b003      	add	sp, #12
2ffef342:	bd30      	pop	{r4, r5, pc}
2ffef344:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
2ffef348:	ba1b      	rev	r3, r3
2ffef34a:	f845 3022 	str.w	r3, [r5, r2, lsl #2]
2ffef34e:	3201      	adds	r2, #1
2ffef350:	e7f1      	b.n	2ffef336 <stm32_clk_parse_fdt_by_name+0x16>
2ffef352:	4601      	mov	r1, r0
2ffef354:	e7f1      	b.n	2ffef33a <stm32_clk_parse_fdt_by_name+0x1a>

2ffef356 <clk_stm32_composite_gate_is_enabled>:
2ffef356:	b510      	push	{r4, lr}
2ffef358:	4604      	mov	r4, r0
2ffef35a:	f7ff fcec 	bl	2ffeed36 <_clk_get>
2ffef35e:	6883      	ldr	r3, [r0, #8]
2ffef360:	4620      	mov	r0, r4
2ffef362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef366:	7819      	ldrb	r1, [r3, #0]
2ffef368:	f7ff bfb5 	b.w	2ffef2d6 <_clk_stm32_gate_is_enabled>

2ffef36c <clk_stm32_composite_gate_enable>:
2ffef36c:	b510      	push	{r4, lr}
2ffef36e:	4604      	mov	r4, r0
2ffef370:	f7ff fce1 	bl	2ffeed36 <_clk_get>
2ffef374:	6883      	ldr	r3, [r0, #8]
2ffef376:	4620      	mov	r0, r4
2ffef378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef37c:	7819      	ldrb	r1, [r3, #0]
2ffef37e:	f7ff bcc8 	b.w	2ffeed12 <_clk_stm32_gate_enable>

2ffef382 <clk_stm32_composite_gate_disable>:
2ffef382:	b510      	push	{r4, lr}
2ffef384:	4604      	mov	r4, r0
2ffef386:	f7ff fcd6 	bl	2ffeed36 <_clk_get>
2ffef38a:	6883      	ldr	r3, [r0, #8]
2ffef38c:	4620      	mov	r0, r4
2ffef38e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef392:	7819      	ldrb	r1, [r3, #0]
2ffef394:	f7ff bca9 	b.w	2ffeecea <_clk_stm32_gate_disable>

2ffef398 <clk_stm32_composite_recalc_rate>:
2ffef398:	b538      	push	{r3, r4, r5, lr}
2ffef39a:	4604      	mov	r4, r0
2ffef39c:	4615      	mov	r5, r2
2ffef39e:	f7ff fcca 	bl	2ffeed36 <_clk_get>
2ffef3a2:	6883      	ldr	r3, [r0, #8]
2ffef3a4:	462a      	mov	r2, r5
2ffef3a6:	4620      	mov	r0, r4
2ffef3a8:	7859      	ldrb	r1, [r3, #1]
2ffef3aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffef3ae:	f7ff bf12 	b.w	2ffef1d6 <_clk_stm32_divider_recalc>

2ffef3b2 <stm32mp1_clk_rcc_regs_lock>:
2ffef3b2:	f7fc bded 	b.w	2ffebf90 <clk_stm32_rcc_regs_lock>

2ffef3b6 <stm32mp1_clk_rcc_regs_unlock>:
2ffef3b6:	f7fc bdf1 	b.w	2ffebf9c <clk_stm32_rcc_regs_unlock>

2ffef3ba <clear_computation_completed>:
2ffef3ba:	f8d0 3308 	ldr.w	r3, [r0, #776]	@ 0x308
2ffef3be:	f043 0301 	orr.w	r3, r3, #1
2ffef3c2:	f8c0 3308 	str.w	r3, [r0, #776]	@ 0x308
2ffef3c6:	4770      	bx	lr

2ffef3c8 <saes_end>:
2ffef3c8:	b510      	push	{r4, lr}
2ffef3ca:	4604      	mov	r4, r0
2ffef3cc:	b161      	cbz	r1, 2ffef3e8 <saes_end+0x20>
2ffef3ce:	6802      	ldr	r2, [r0, #0]
2ffef3d0:	2014      	movs	r0, #20
2ffef3d2:	6813      	ldr	r3, [r2, #0]
2ffef3d4:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffef3d8:	6013      	str	r3, [r2, #0]
2ffef3da:	f7f9 fb21 	bl	2ffe8a20 <udelay>
2ffef3de:	6822      	ldr	r2, [r4, #0]
2ffef3e0:	6813      	ldr	r3, [r2, #0]
2ffef3e2:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef3e6:	6013      	str	r3, [r2, #0]
2ffef3e8:	6822      	ldr	r2, [r4, #0]
2ffef3ea:	6813      	ldr	r3, [r2, #0]
2ffef3ec:	f023 0301 	bic.w	r3, r3, #1
2ffef3f0:	6013      	str	r3, [r2, #0]
2ffef3f2:	bd10      	pop	{r4, pc}

2ffef3f4 <fdt32_ld>:
2ffef3f4:	7842      	ldrb	r2, [r0, #1]
2ffef3f6:	7803      	ldrb	r3, [r0, #0]
2ffef3f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffef3fc:	7882      	ldrb	r2, [r0, #2]
2ffef3fe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffef402:	78c2      	ldrb	r2, [r0, #3]
2ffef404:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
2ffef408:	ba00      	rev	r0, r0
2ffef40a:	4770      	bx	lr

2ffef40c <fdt_header_size_>:
2ffef40c:	2801      	cmp	r0, #1
2ffef40e:	d906      	bls.n	2ffef41e <fdt_header_size_+0x12>
2ffef410:	2802      	cmp	r0, #2
2ffef412:	d006      	beq.n	2ffef422 <fdt_header_size_+0x16>
2ffef414:	2810      	cmp	r0, #16
2ffef416:	bf8c      	ite	hi
2ffef418:	2028      	movhi	r0, #40	@ 0x28
2ffef41a:	2024      	movls	r0, #36	@ 0x24
2ffef41c:	4770      	bx	lr
2ffef41e:	201c      	movs	r0, #28
2ffef420:	4770      	bx	lr
2ffef422:	2020      	movs	r0, #32
2ffef424:	4770      	bx	lr

2ffef426 <fdt_header_size>:
2ffef426:	b508      	push	{r3, lr}
2ffef428:	3014      	adds	r0, #20
2ffef42a:	f7ff ffe3 	bl	2ffef3f4 <fdt32_ld>
2ffef42e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef432:	f7ff bfeb 	b.w	2ffef40c <fdt_header_size_>

2ffef436 <fdt_offset_ptr>:
2ffef436:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffef43a:	4607      	mov	r7, r0
2ffef43c:	3008      	adds	r0, #8
2ffef43e:	4616      	mov	r6, r2
2ffef440:	f7ff ffd8 	bl	2ffef3f4 <fdt32_ld>
2ffef444:	1845      	adds	r5, r0, r1
2ffef446:	bf2c      	ite	cs
2ffef448:	2401      	movcs	r4, #1
2ffef44a:	2400      	movcc	r4, #0
2ffef44c:	2900      	cmp	r1, #0
2ffef44e:	db1a      	blt.n	2ffef486 <fdt_offset_ptr+0x50>
2ffef450:	b9cc      	cbnz	r4, 2ffef486 <fdt_offset_ptr+0x50>
2ffef452:	eb15 0806 	adds.w	r8, r5, r6
2ffef456:	d213      	bcs.n	2ffef480 <fdt_offset_ptr+0x4a>
2ffef458:	1d38      	adds	r0, r7, #4
2ffef45a:	f7ff ffcb 	bl	2ffef3f4 <fdt32_ld>
2ffef45e:	4580      	cmp	r8, r0
2ffef460:	d80e      	bhi.n	2ffef480 <fdt_offset_ptr+0x4a>
2ffef462:	f107 0014 	add.w	r0, r7, #20
2ffef466:	f7ff ffc5 	bl	2ffef3f4 <fdt32_ld>
2ffef46a:	2810      	cmp	r0, #16
2ffef46c:	d907      	bls.n	2ffef47e <fdt_offset_ptr+0x48>
2ffef46e:	1989      	adds	r1, r1, r6
2ffef470:	d206      	bcs.n	2ffef480 <fdt_offset_ptr+0x4a>
2ffef472:	f107 0024 	add.w	r0, r7, #36	@ 0x24
2ffef476:	f7ff ffbd 	bl	2ffef3f4 <fdt32_ld>
2ffef47a:	4281      	cmp	r1, r0
2ffef47c:	d800      	bhi.n	2ffef480 <fdt_offset_ptr+0x4a>
2ffef47e:	197c      	adds	r4, r7, r5
2ffef480:	4620      	mov	r0, r4
2ffef482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffef486:	2400      	movs	r4, #0
2ffef488:	e7fa      	b.n	2ffef480 <fdt_offset_ptr+0x4a>

2ffef48a <fdt_next_tag>:
2ffef48a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffef48e:	f06f 0307 	mvn.w	r3, #7
2ffef492:	6013      	str	r3, [r2, #0]
2ffef494:	4690      	mov	r8, r2
2ffef496:	2204      	movs	r2, #4
2ffef498:	4605      	mov	r5, r0
2ffef49a:	460e      	mov	r6, r1
2ffef49c:	f7ff ffcb 	bl	2ffef436 <fdt_offset_ptr>
2ffef4a0:	b180      	cbz	r0, 2ffef4c4 <fdt_next_tag+0x3a>
2ffef4a2:	6807      	ldr	r7, [r0, #0]
2ffef4a4:	f06f 030a 	mvn.w	r3, #10
2ffef4a8:	f8c8 3000 	str.w	r3, [r8]
2ffef4ac:	1d34      	adds	r4, r6, #4
2ffef4ae:	ba3f      	rev	r7, r7
2ffef4b0:	1e7b      	subs	r3, r7, #1
2ffef4b2:	2b08      	cmp	r3, #8
2ffef4b4:	d806      	bhi.n	2ffef4c4 <fdt_next_tag+0x3a>
2ffef4b6:	e8df f003 	tbb	[pc, r3]
2ffef4ba:	1409      	.short	0x1409
2ffef4bc:	05051421 	.word	0x05051421
2ffef4c0:	0505      	.short	0x0505
2ffef4c2:	14          	.byte	0x14
2ffef4c3:	00          	.byte	0x00
2ffef4c4:	2709      	movs	r7, #9
2ffef4c6:	4638      	mov	r0, r7
2ffef4c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffef4cc:	4621      	mov	r1, r4
2ffef4ce:	2201      	movs	r2, #1
2ffef4d0:	4414      	add	r4, r2
2ffef4d2:	4628      	mov	r0, r5
2ffef4d4:	f7ff ffaf 	bl	2ffef436 <fdt_offset_ptr>
2ffef4d8:	2800      	cmp	r0, #0
2ffef4da:	d0f3      	beq.n	2ffef4c4 <fdt_next_tag+0x3a>
2ffef4dc:	7803      	ldrb	r3, [r0, #0]
2ffef4de:	2b00      	cmp	r3, #0
2ffef4e0:	d1f4      	bne.n	2ffef4cc <fdt_next_tag+0x42>
2ffef4e2:	1ba2      	subs	r2, r4, r6
2ffef4e4:	4631      	mov	r1, r6
2ffef4e6:	4628      	mov	r0, r5
2ffef4e8:	f7ff ffa5 	bl	2ffef436 <fdt_offset_ptr>
2ffef4ec:	2800      	cmp	r0, #0
2ffef4ee:	d0e9      	beq.n	2ffef4c4 <fdt_next_tag+0x3a>
2ffef4f0:	3403      	adds	r4, #3
2ffef4f2:	f024 0403 	bic.w	r4, r4, #3
2ffef4f6:	f8c8 4000 	str.w	r4, [r8]
2ffef4fa:	e7e4      	b.n	2ffef4c6 <fdt_next_tag+0x3c>
2ffef4fc:	2204      	movs	r2, #4
2ffef4fe:	4621      	mov	r1, r4
2ffef500:	4628      	mov	r0, r5
2ffef502:	f7ff ff98 	bl	2ffef436 <fdt_offset_ptr>
2ffef506:	2800      	cmp	r0, #0
2ffef508:	d0dc      	beq.n	2ffef4c4 <fdt_next_tag+0x3a>
2ffef50a:	6801      	ldr	r1, [r0, #0]
2ffef50c:	f105 0014 	add.w	r0, r5, #20
2ffef510:	f106 090c 	add.w	r9, r6, #12
2ffef514:	f7ff ff6e 	bl	2ffef3f4 <fdt32_ld>
2ffef518:	ba09      	rev	r1, r1
2ffef51a:	280f      	cmp	r0, #15
2ffef51c:	eb09 0401 	add.w	r4, r9, r1
2ffef520:	d8df      	bhi.n	2ffef4e2 <fdt_next_tag+0x58>
2ffef522:	2907      	cmp	r1, #7
2ffef524:	d9dd      	bls.n	2ffef4e2 <fdt_next_tag+0x58>
2ffef526:	f019 0f07 	tst.w	r9, #7
2ffef52a:	bf18      	it	ne
2ffef52c:	3404      	addne	r4, #4
2ffef52e:	e7d8      	b.n	2ffef4e2 <fdt_next_tag+0x58>

2ffef530 <fdt_check_node_offset_>:
2ffef530:	1e0b      	subs	r3, r1, #0
2ffef532:	b507      	push	{r0, r1, r2, lr}
2ffef534:	9101      	str	r1, [sp, #4]
2ffef536:	da04      	bge.n	2ffef542 <fdt_check_node_offset_+0x12>
2ffef538:	f06f 0003 	mvn.w	r0, #3
2ffef53c:	b003      	add	sp, #12
2ffef53e:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef542:	079b      	lsls	r3, r3, #30
2ffef544:	d1f8      	bne.n	2ffef538 <fdt_check_node_offset_+0x8>
2ffef546:	aa01      	add	r2, sp, #4
2ffef548:	f7ff ff9f 	bl	2ffef48a <fdt_next_tag>
2ffef54c:	2801      	cmp	r0, #1
2ffef54e:	d1f3      	bne.n	2ffef538 <fdt_check_node_offset_+0x8>
2ffef550:	9801      	ldr	r0, [sp, #4]
2ffef552:	e7f3      	b.n	2ffef53c <fdt_check_node_offset_+0xc>

2ffef554 <fdt_check_prop_offset_>:
2ffef554:	1e0b      	subs	r3, r1, #0
2ffef556:	b507      	push	{r0, r1, r2, lr}
2ffef558:	9101      	str	r1, [sp, #4]
2ffef55a:	da04      	bge.n	2ffef566 <fdt_check_prop_offset_+0x12>
2ffef55c:	f06f 0003 	mvn.w	r0, #3
2ffef560:	b003      	add	sp, #12
2ffef562:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef566:	079b      	lsls	r3, r3, #30
2ffef568:	d1f8      	bne.n	2ffef55c <fdt_check_prop_offset_+0x8>
2ffef56a:	aa01      	add	r2, sp, #4
2ffef56c:	f7ff ff8d 	bl	2ffef48a <fdt_next_tag>
2ffef570:	2803      	cmp	r0, #3
2ffef572:	d1f3      	bne.n	2ffef55c <fdt_check_prop_offset_+0x8>
2ffef574:	9801      	ldr	r0, [sp, #4]
2ffef576:	e7f3      	b.n	2ffef560 <fdt_check_prop_offset_+0xc>

2ffef578 <fdt_next_node>:
2ffef578:	2300      	movs	r3, #0
2ffef57a:	4299      	cmp	r1, r3
2ffef57c:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffef57e:	4606      	mov	r6, r0
2ffef580:	9301      	str	r3, [sp, #4]
2ffef582:	4615      	mov	r5, r2
2ffef584:	db05      	blt.n	2ffef592 <fdt_next_node+0x1a>
2ffef586:	f7ff ffd3 	bl	2ffef530 <fdt_check_node_offset_>
2ffef58a:	9001      	str	r0, [sp, #4]
2ffef58c:	2800      	cmp	r0, #0
2ffef58e:	4604      	mov	r4, r0
2ffef590:	db0f      	blt.n	2ffef5b2 <fdt_next_node+0x3a>
2ffef592:	9c01      	ldr	r4, [sp, #4]
2ffef594:	aa01      	add	r2, sp, #4
2ffef596:	4630      	mov	r0, r6
2ffef598:	4621      	mov	r1, r4
2ffef59a:	f7ff ff76 	bl	2ffef48a <fdt_next_tag>
2ffef59e:	2802      	cmp	r0, #2
2ffef5a0:	d00a      	beq.n	2ffef5b8 <fdt_next_node+0x40>
2ffef5a2:	2809      	cmp	r0, #9
2ffef5a4:	d011      	beq.n	2ffef5ca <fdt_next_node+0x52>
2ffef5a6:	2801      	cmp	r0, #1
2ffef5a8:	d1f3      	bne.n	2ffef592 <fdt_next_node+0x1a>
2ffef5aa:	b115      	cbz	r5, 2ffef5b2 <fdt_next_node+0x3a>
2ffef5ac:	682b      	ldr	r3, [r5, #0]
2ffef5ae:	3301      	adds	r3, #1
2ffef5b0:	602b      	str	r3, [r5, #0]
2ffef5b2:	4620      	mov	r0, r4
2ffef5b4:	b002      	add	sp, #8
2ffef5b6:	bd70      	pop	{r4, r5, r6, pc}
2ffef5b8:	2d00      	cmp	r5, #0
2ffef5ba:	d0ea      	beq.n	2ffef592 <fdt_next_node+0x1a>
2ffef5bc:	682b      	ldr	r3, [r5, #0]
2ffef5be:	3b01      	subs	r3, #1
2ffef5c0:	602b      	str	r3, [r5, #0]
2ffef5c2:	2b00      	cmp	r3, #0
2ffef5c4:	dae5      	bge.n	2ffef592 <fdt_next_node+0x1a>
2ffef5c6:	9c01      	ldr	r4, [sp, #4]
2ffef5c8:	e7f3      	b.n	2ffef5b2 <fdt_next_node+0x3a>
2ffef5ca:	9c01      	ldr	r4, [sp, #4]
2ffef5cc:	2c00      	cmp	r4, #0
2ffef5ce:	da07      	bge.n	2ffef5e0 <fdt_next_node+0x68>
2ffef5d0:	f114 0f08 	cmn.w	r4, #8
2ffef5d4:	d1ed      	bne.n	2ffef5b2 <fdt_next_node+0x3a>
2ffef5d6:	2d00      	cmp	r5, #0
2ffef5d8:	bf08      	it	eq
2ffef5da:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
2ffef5de:	e7e8      	b.n	2ffef5b2 <fdt_next_node+0x3a>
2ffef5e0:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffef5e4:	e7e5      	b.n	2ffef5b2 <fdt_next_node+0x3a>

2ffef5e6 <fdt_first_subnode>:
2ffef5e6:	b507      	push	{r0, r1, r2, lr}
2ffef5e8:	2300      	movs	r3, #0
2ffef5ea:	9301      	str	r3, [sp, #4]
2ffef5ec:	aa01      	add	r2, sp, #4
2ffef5ee:	f7ff ffc3 	bl	2ffef578 <fdt_next_node>
2ffef5f2:	2800      	cmp	r0, #0
2ffef5f4:	db07      	blt.n	2ffef606 <fdt_first_subnode+0x20>
2ffef5f6:	9b01      	ldr	r3, [sp, #4]
2ffef5f8:	2b01      	cmp	r3, #1
2ffef5fa:	bf18      	it	ne
2ffef5fc:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
2ffef600:	b003      	add	sp, #12
2ffef602:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef606:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef60a:	e7f9      	b.n	2ffef600 <fdt_first_subnode+0x1a>

2ffef60c <fdt_next_subnode>:
2ffef60c:	b513      	push	{r0, r1, r4, lr}
2ffef60e:	4604      	mov	r4, r0
2ffef610:	2301      	movs	r3, #1
2ffef612:	9301      	str	r3, [sp, #4]
2ffef614:	aa01      	add	r2, sp, #4
2ffef616:	4620      	mov	r0, r4
2ffef618:	f7ff ffae 	bl	2ffef578 <fdt_next_node>
2ffef61c:	1e01      	subs	r1, r0, #0
2ffef61e:	db07      	blt.n	2ffef630 <fdt_next_subnode+0x24>
2ffef620:	9b01      	ldr	r3, [sp, #4]
2ffef622:	2b00      	cmp	r3, #0
2ffef624:	dd04      	ble.n	2ffef630 <fdt_next_subnode+0x24>
2ffef626:	2b01      	cmp	r3, #1
2ffef628:	d1f4      	bne.n	2ffef614 <fdt_next_subnode+0x8>
2ffef62a:	4608      	mov	r0, r1
2ffef62c:	b002      	add	sp, #8
2ffef62e:	bd10      	pop	{r4, pc}
2ffef630:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffef634:	e7f9      	b.n	2ffef62a <fdt_next_subnode+0x1e>

2ffef636 <fdt_cells>:
2ffef636:	b507      	push	{r0, r1, r2, lr}
2ffef638:	ab01      	add	r3, sp, #4
2ffef63a:	f000 f945 	bl	2ffef8c8 <fdt_getprop>
2ffef63e:	4603      	mov	r3, r0
2ffef640:	9801      	ldr	r0, [sp, #4]
2ffef642:	b13b      	cbz	r3, 2ffef654 <fdt_cells+0x1e>
2ffef644:	2804      	cmp	r0, #4
2ffef646:	d108      	bne.n	2ffef65a <fdt_cells+0x24>
2ffef648:	6818      	ldr	r0, [r3, #0]
2ffef64a:	ba00      	rev	r0, r0
2ffef64c:	2804      	cmp	r0, #4
2ffef64e:	bf88      	it	hi
2ffef650:	f06f 000d 	mvnhi.w	r0, #13
2ffef654:	b003      	add	sp, #12
2ffef656:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef65a:	f06f 000d 	mvn.w	r0, #13
2ffef65e:	e7f9      	b.n	2ffef654 <fdt_cells+0x1e>

2ffef660 <fdt32_ld>:
2ffef660:	7842      	ldrb	r2, [r0, #1]
2ffef662:	7803      	ldrb	r3, [r0, #0]
2ffef664:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffef668:	7882      	ldrb	r2, [r0, #2]
2ffef66a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffef66e:	78c2      	ldrb	r2, [r0, #3]
2ffef670:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
2ffef674:	ba00      	rev	r0, r0
2ffef676:	4770      	bx	lr

2ffef678 <nextprop_>:
2ffef678:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffef67a:	4605      	mov	r5, r0
2ffef67c:	460c      	mov	r4, r1
2ffef67e:	aa01      	add	r2, sp, #4
2ffef680:	4621      	mov	r1, r4
2ffef682:	4628      	mov	r0, r5
2ffef684:	f7ff ff01 	bl	2ffef48a <fdt_next_tag>
2ffef688:	2803      	cmp	r0, #3
2ffef68a:	d006      	beq.n	2ffef69a <nextprop_+0x22>
2ffef68c:	9c01      	ldr	r4, [sp, #4]
2ffef68e:	2809      	cmp	r0, #9
2ffef690:	d106      	bne.n	2ffef6a0 <nextprop_+0x28>
2ffef692:	2c00      	cmp	r4, #0
2ffef694:	bfa8      	it	ge
2ffef696:	f06f 040a 	mvnge.w	r4, #10
2ffef69a:	4620      	mov	r0, r4
2ffef69c:	b003      	add	sp, #12
2ffef69e:	bd30      	pop	{r4, r5, pc}
2ffef6a0:	2804      	cmp	r0, #4
2ffef6a2:	d0ec      	beq.n	2ffef67e <nextprop_+0x6>
2ffef6a4:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffef6a8:	e7f7      	b.n	2ffef69a <nextprop_+0x22>

2ffef6aa <fdt32_ld_.isra.0>:
2ffef6aa:	ba00      	rev	r0, r0
2ffef6ac:	4770      	bx	lr

2ffef6ae <fdt_get_property_by_offset_>:
2ffef6ae:	b570      	push	{r4, r5, r6, lr}
2ffef6b0:	4604      	mov	r4, r0
2ffef6b2:	460e      	mov	r6, r1
2ffef6b4:	4615      	mov	r5, r2
2ffef6b6:	f7ff ff4d 	bl	2ffef554 <fdt_check_prop_offset_>
2ffef6ba:	2800      	cmp	r0, #0
2ffef6bc:	da04      	bge.n	2ffef6c8 <fdt_get_property_by_offset_+0x1a>
2ffef6be:	b105      	cbz	r5, 2ffef6c2 <fdt_get_property_by_offset_+0x14>
2ffef6c0:	6028      	str	r0, [r5, #0]
2ffef6c2:	2400      	movs	r4, #0
2ffef6c4:	4620      	mov	r0, r4
2ffef6c6:	bd70      	pop	{r4, r5, r6, pc}
2ffef6c8:	f104 0008 	add.w	r0, r4, #8
2ffef6cc:	f7ff ffc8 	bl	2ffef660 <fdt32_ld>
2ffef6d0:	4406      	add	r6, r0
2ffef6d2:	4434      	add	r4, r6
2ffef6d4:	2d00      	cmp	r5, #0
2ffef6d6:	d0f5      	beq.n	2ffef6c4 <fdt_get_property_by_offset_+0x16>
2ffef6d8:	6860      	ldr	r0, [r4, #4]
2ffef6da:	f7ff ffe6 	bl	2ffef6aa <fdt32_ld_.isra.0>
2ffef6de:	6028      	str	r0, [r5, #0]
2ffef6e0:	e7f0      	b.n	2ffef6c4 <fdt_get_property_by_offset_+0x16>

2ffef6e2 <fdt_get_name>:
2ffef6e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef6e4:	4606      	mov	r6, r0
2ffef6e6:	3008      	adds	r0, #8
2ffef6e8:	4615      	mov	r5, r2
2ffef6ea:	460c      	mov	r4, r1
2ffef6ec:	f7ff ffb8 	bl	2ffef660 <fdt32_ld>
2ffef6f0:	4607      	mov	r7, r0
2ffef6f2:	4630      	mov	r0, r6
2ffef6f4:	f7fd ffac 	bl	2ffed650 <fdt_ro_probe_>
2ffef6f8:	2800      	cmp	r0, #0
2ffef6fa:	db1e      	blt.n	2ffef73a <fdt_get_name+0x58>
2ffef6fc:	4621      	mov	r1, r4
2ffef6fe:	4630      	mov	r0, r6
2ffef700:	f7ff ff16 	bl	2ffef530 <fdt_check_node_offset_>
2ffef704:	2800      	cmp	r0, #0
2ffef706:	db18      	blt.n	2ffef73a <fdt_get_name+0x58>
2ffef708:	443c      	add	r4, r7
2ffef70a:	f106 0014 	add.w	r0, r6, #20
2ffef70e:	4434      	add	r4, r6
2ffef710:	f7ff ffa6 	bl	2ffef660 <fdt32_ld>
2ffef714:	280f      	cmp	r0, #15
2ffef716:	f104 0404 	add.w	r4, r4, #4
2ffef71a:	d805      	bhi.n	2ffef728 <fdt_get_name+0x46>
2ffef71c:	212f      	movs	r1, #47	@ 0x2f
2ffef71e:	4620      	mov	r0, r4
2ffef720:	f000 fb90 	bl	2ffefe44 <strrchr>
2ffef724:	b138      	cbz	r0, 2ffef736 <fdt_get_name+0x54>
2ffef726:	1c44      	adds	r4, r0, #1
2ffef728:	b11d      	cbz	r5, 2ffef732 <fdt_get_name+0x50>
2ffef72a:	4620      	mov	r0, r4
2ffef72c:	f000 fb64 	bl	2ffefdf8 <strlen>
2ffef730:	6028      	str	r0, [r5, #0]
2ffef732:	4620      	mov	r0, r4
2ffef734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef736:	f06f 000a 	mvn.w	r0, #10
2ffef73a:	b90d      	cbnz	r5, 2ffef740 <fdt_get_name+0x5e>
2ffef73c:	2400      	movs	r4, #0
2ffef73e:	e7f8      	b.n	2ffef732 <fdt_get_name+0x50>
2ffef740:	6028      	str	r0, [r5, #0]
2ffef742:	e7fb      	b.n	2ffef73c <fdt_get_name+0x5a>

2ffef744 <fdt_subnode_offset_namelen>:
2ffef744:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffef748:	4607      	mov	r7, r0
2ffef74a:	460e      	mov	r6, r1
2ffef74c:	4690      	mov	r8, r2
2ffef74e:	461d      	mov	r5, r3
2ffef750:	f7fd ff7e 	bl	2ffed650 <fdt_ro_probe_>
2ffef754:	1e04      	subs	r4, r0, #0
2ffef756:	db0a      	blt.n	2ffef76e <fdt_subnode_offset_namelen+0x2a>
2ffef758:	4634      	mov	r4, r6
2ffef75a:	2300      	movs	r3, #0
2ffef75c:	9300      	str	r3, [sp, #0]
2ffef75e:	9b00      	ldr	r3, [sp, #0]
2ffef760:	ea54 0203 	orrs.w	r2, r4, r3
2ffef764:	d507      	bpl.n	2ffef776 <fdt_subnode_offset_namelen+0x32>
2ffef766:	2b00      	cmp	r3, #0
2ffef768:	bfb8      	it	lt
2ffef76a:	f04f 34ff 	movlt.w	r4, #4294967295	@ 0xffffffff
2ffef76e:	4620      	mov	r0, r4
2ffef770:	b002      	add	sp, #8
2ffef772:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffef776:	2b01      	cmp	r3, #1
2ffef778:	d11a      	bne.n	2ffef7b0 <fdt_subnode_offset_namelen+0x6c>
2ffef77a:	aa01      	add	r2, sp, #4
2ffef77c:	4621      	mov	r1, r4
2ffef77e:	4638      	mov	r0, r7
2ffef780:	f7ff ffaf 	bl	2ffef6e2 <fdt_get_name>
2ffef784:	4606      	mov	r6, r0
2ffef786:	b198      	cbz	r0, 2ffef7b0 <fdt_subnode_offset_namelen+0x6c>
2ffef788:	9b01      	ldr	r3, [sp, #4]
2ffef78a:	429d      	cmp	r5, r3
2ffef78c:	dc10      	bgt.n	2ffef7b0 <fdt_subnode_offset_namelen+0x6c>
2ffef78e:	462a      	mov	r2, r5
2ffef790:	4641      	mov	r1, r8
2ffef792:	f000 f9f6 	bl	2ffefb82 <memcmp>
2ffef796:	b958      	cbnz	r0, 2ffef7b0 <fdt_subnode_offset_namelen+0x6c>
2ffef798:	5d73      	ldrb	r3, [r6, r5]
2ffef79a:	2b00      	cmp	r3, #0
2ffef79c:	d0e7      	beq.n	2ffef76e <fdt_subnode_offset_namelen+0x2a>
2ffef79e:	462a      	mov	r2, r5
2ffef7a0:	2140      	movs	r1, #64	@ 0x40
2ffef7a2:	4640      	mov	r0, r8
2ffef7a4:	f000 f9df 	bl	2ffefb66 <memchr>
2ffef7a8:	b910      	cbnz	r0, 2ffef7b0 <fdt_subnode_offset_namelen+0x6c>
2ffef7aa:	5d73      	ldrb	r3, [r6, r5]
2ffef7ac:	2b40      	cmp	r3, #64	@ 0x40
2ffef7ae:	d0de      	beq.n	2ffef76e <fdt_subnode_offset_namelen+0x2a>
2ffef7b0:	4621      	mov	r1, r4
2ffef7b2:	466a      	mov	r2, sp
2ffef7b4:	4638      	mov	r0, r7
2ffef7b6:	f7ff fedf 	bl	2ffef578 <fdt_next_node>
2ffef7ba:	4604      	mov	r4, r0
2ffef7bc:	e7cf      	b.n	2ffef75e <fdt_subnode_offset_namelen+0x1a>

2ffef7be <fdt_subnode_offset>:
2ffef7be:	b570      	push	{r4, r5, r6, lr}
2ffef7c0:	4605      	mov	r5, r0
2ffef7c2:	4610      	mov	r0, r2
2ffef7c4:	460e      	mov	r6, r1
2ffef7c6:	4614      	mov	r4, r2
2ffef7c8:	f000 fb16 	bl	2ffefdf8 <strlen>
2ffef7cc:	4603      	mov	r3, r0
2ffef7ce:	4622      	mov	r2, r4
2ffef7d0:	4631      	mov	r1, r6
2ffef7d2:	4628      	mov	r0, r5
2ffef7d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef7d8:	f7ff bfb4 	b.w	2ffef744 <fdt_subnode_offset_namelen>

2ffef7dc <fdt_first_property_offset>:
2ffef7dc:	b510      	push	{r4, lr}
2ffef7de:	4604      	mov	r4, r0
2ffef7e0:	f7ff fea6 	bl	2ffef530 <fdt_check_node_offset_>
2ffef7e4:	1e01      	subs	r1, r0, #0
2ffef7e6:	db04      	blt.n	2ffef7f2 <fdt_first_property_offset+0x16>
2ffef7e8:	4620      	mov	r0, r4
2ffef7ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef7ee:	f7ff bf43 	b.w	2ffef678 <nextprop_>
2ffef7f2:	bd10      	pop	{r4, pc}

2ffef7f4 <fdt_next_property_offset>:
2ffef7f4:	b510      	push	{r4, lr}
2ffef7f6:	4604      	mov	r4, r0
2ffef7f8:	f7ff feac 	bl	2ffef554 <fdt_check_prop_offset_>
2ffef7fc:	1e01      	subs	r1, r0, #0
2ffef7fe:	db04      	blt.n	2ffef80a <fdt_next_property_offset+0x16>
2ffef800:	4620      	mov	r0, r4
2ffef802:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef806:	f7ff bf37 	b.w	2ffef678 <nextprop_>
2ffef80a:	bd10      	pop	{r4, pc}

2ffef80c <fdt_get_property_namelen_>:
2ffef80c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffef810:	4606      	mov	r6, r0
2ffef812:	4691      	mov	r9, r2
2ffef814:	461f      	mov	r7, r3
2ffef816:	e9dd 8a0a 	ldrd	r8, sl, [sp, #40]	@ 0x28
2ffef81a:	f7ff ffdf 	bl	2ffef7dc <fdt_first_property_offset>
2ffef81e:	2800      	cmp	r0, #0
2ffef820:	4604      	mov	r4, r0
2ffef822:	da04      	bge.n	2ffef82e <fdt_get_property_namelen_+0x22>
2ffef824:	f1b8 0f00 	cmp.w	r8, #0
2ffef828:	d12b      	bne.n	2ffef882 <fdt_get_property_namelen_+0x76>
2ffef82a:	2500      	movs	r5, #0
2ffef82c:	e022      	b.n	2ffef874 <fdt_get_property_namelen_+0x68>
2ffef82e:	4642      	mov	r2, r8
2ffef830:	4621      	mov	r1, r4
2ffef832:	4630      	mov	r0, r6
2ffef834:	f7ff ff3b 	bl	2ffef6ae <fdt_get_property_by_offset_>
2ffef838:	4605      	mov	r5, r0
2ffef83a:	b1f8      	cbz	r0, 2ffef87c <fdt_get_property_namelen_+0x70>
2ffef83c:	6880      	ldr	r0, [r0, #8]
2ffef83e:	aa01      	add	r2, sp, #4
2ffef840:	f7ff ff33 	bl	2ffef6aa <fdt32_ld_.isra.0>
2ffef844:	4601      	mov	r1, r0
2ffef846:	4630      	mov	r0, r6
2ffef848:	f7fd ffb0 	bl	2ffed7ac <fdt_get_string>
2ffef84c:	b110      	cbz	r0, 2ffef854 <fdt_get_property_namelen_+0x48>
2ffef84e:	9b01      	ldr	r3, [sp, #4]
2ffef850:	429f      	cmp	r7, r3
2ffef852:	d004      	beq.n	2ffef85e <fdt_get_property_namelen_+0x52>
2ffef854:	4621      	mov	r1, r4
2ffef856:	4630      	mov	r0, r6
2ffef858:	f7ff ffcc 	bl	2ffef7f4 <fdt_next_property_offset>
2ffef85c:	e7df      	b.n	2ffef81e <fdt_get_property_namelen_+0x12>
2ffef85e:	463a      	mov	r2, r7
2ffef860:	4649      	mov	r1, r9
2ffef862:	f000 f98e 	bl	2ffefb82 <memcmp>
2ffef866:	2800      	cmp	r0, #0
2ffef868:	d1f4      	bne.n	2ffef854 <fdt_get_property_namelen_+0x48>
2ffef86a:	f1ba 0f00 	cmp.w	sl, #0
2ffef86e:	d001      	beq.n	2ffef874 <fdt_get_property_namelen_+0x68>
2ffef870:	f8ca 4000 	str.w	r4, [sl]
2ffef874:	4628      	mov	r0, r5
2ffef876:	b002      	add	sp, #8
2ffef878:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffef87c:	f06f 040c 	mvn.w	r4, #12
2ffef880:	e7d0      	b.n	2ffef824 <fdt_get_property_namelen_+0x18>
2ffef882:	f8c8 4000 	str.w	r4, [r8]
2ffef886:	e7d0      	b.n	2ffef82a <fdt_get_property_namelen_+0x1e>

2ffef888 <fdt_getprop_namelen>:
2ffef888:	b530      	push	{r4, r5, lr}
2ffef88a:	b085      	sub	sp, #20
2ffef88c:	ad03      	add	r5, sp, #12
2ffef88e:	4604      	mov	r4, r0
2ffef890:	9501      	str	r5, [sp, #4]
2ffef892:	9d08      	ldr	r5, [sp, #32]
2ffef894:	9500      	str	r5, [sp, #0]
2ffef896:	f7ff ffb9 	bl	2ffef80c <fdt_get_property_namelen_>
2ffef89a:	4601      	mov	r1, r0
2ffef89c:	b178      	cbz	r0, 2ffef8be <fdt_getprop_namelen+0x36>
2ffef89e:	f104 0014 	add.w	r0, r4, #20
2ffef8a2:	f7ff fedd 	bl	2ffef660 <fdt32_ld>
2ffef8a6:	280f      	cmp	r0, #15
2ffef8a8:	d80c      	bhi.n	2ffef8c4 <fdt_getprop_namelen+0x3c>
2ffef8aa:	9b03      	ldr	r3, [sp, #12]
2ffef8ac:	330c      	adds	r3, #12
2ffef8ae:	075b      	lsls	r3, r3, #29
2ffef8b0:	d008      	beq.n	2ffef8c4 <fdt_getprop_namelen+0x3c>
2ffef8b2:	6848      	ldr	r0, [r1, #4]
2ffef8b4:	f7ff fef9 	bl	2ffef6aa <fdt32_ld_.isra.0>
2ffef8b8:	2807      	cmp	r0, #7
2ffef8ba:	d903      	bls.n	2ffef8c4 <fdt_getprop_namelen+0x3c>
2ffef8bc:	3110      	adds	r1, #16
2ffef8be:	4608      	mov	r0, r1
2ffef8c0:	b005      	add	sp, #20
2ffef8c2:	bd30      	pop	{r4, r5, pc}
2ffef8c4:	310c      	adds	r1, #12
2ffef8c6:	e7fa      	b.n	2ffef8be <fdt_getprop_namelen+0x36>

2ffef8c8 <fdt_getprop>:
2ffef8c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffef8ca:	4605      	mov	r5, r0
2ffef8cc:	4610      	mov	r0, r2
2ffef8ce:	461f      	mov	r7, r3
2ffef8d0:	460e      	mov	r6, r1
2ffef8d2:	4614      	mov	r4, r2
2ffef8d4:	f000 fa90 	bl	2ffefdf8 <strlen>
2ffef8d8:	9700      	str	r7, [sp, #0]
2ffef8da:	4603      	mov	r3, r0
2ffef8dc:	4622      	mov	r2, r4
2ffef8de:	4631      	mov	r1, r6
2ffef8e0:	4628      	mov	r0, r5
2ffef8e2:	f7ff ffd1 	bl	2ffef888 <fdt_getprop_namelen>
2ffef8e6:	b003      	add	sp, #12
2ffef8e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffef8ea <fdt_path_offset_namelen>:
2ffef8ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffef8ee:	4607      	mov	r7, r0
2ffef8f0:	460c      	mov	r4, r1
2ffef8f2:	4690      	mov	r8, r2
2ffef8f4:	f7fd feac 	bl	2ffed650 <fdt_ro_probe_>
2ffef8f8:	1e05      	subs	r5, r0, #0
2ffef8fa:	db38      	blt.n	2ffef96e <fdt_path_offset_namelen+0x84>
2ffef8fc:	7823      	ldrb	r3, [r4, #0]
2ffef8fe:	eb04 0608 	add.w	r6, r4, r8
2ffef902:	2b2f      	cmp	r3, #47	@ 0x2f
2ffef904:	d036      	beq.n	2ffef974 <fdt_path_offset_namelen+0x8a>
2ffef906:	4642      	mov	r2, r8
2ffef908:	212f      	movs	r1, #47	@ 0x2f
2ffef90a:	4620      	mov	r0, r4
2ffef90c:	f000 f92b 	bl	2ffefb66 <memchr>
2ffef910:	2800      	cmp	r0, #0
2ffef912:	bf14      	ite	ne
2ffef914:	4680      	movne	r8, r0
2ffef916:	46b0      	moveq	r8, r6
2ffef918:	4621      	mov	r1, r4
2ffef91a:	eba8 0204 	sub.w	r2, r8, r4
2ffef91e:	4638      	mov	r0, r7
2ffef920:	f7fd ffbe 	bl	2ffed8a0 <fdt_get_alias_namelen>
2ffef924:	4601      	mov	r1, r0
2ffef926:	b338      	cbz	r0, 2ffef978 <fdt_path_offset_namelen+0x8e>
2ffef928:	4638      	mov	r0, r7
2ffef92a:	4644      	mov	r4, r8
2ffef92c:	f000 f827 	bl	2ffef97e <fdt_path_offset>
2ffef930:	4605      	mov	r5, r0
2ffef932:	42b4      	cmp	r4, r6
2ffef934:	d302      	bcc.n	2ffef93c <fdt_path_offset_namelen+0x52>
2ffef936:	e01a      	b.n	2ffef96e <fdt_path_offset_namelen+0x84>
2ffef938:	42a6      	cmp	r6, r4
2ffef93a:	d018      	beq.n	2ffef96e <fdt_path_offset_namelen+0x84>
2ffef93c:	46a0      	mov	r8, r4
2ffef93e:	3401      	adds	r4, #1
2ffef940:	f898 3000 	ldrb.w	r3, [r8]
2ffef944:	2b2f      	cmp	r3, #47	@ 0x2f
2ffef946:	d0f7      	beq.n	2ffef938 <fdt_path_offset_namelen+0x4e>
2ffef948:	eba6 0208 	sub.w	r2, r6, r8
2ffef94c:	212f      	movs	r1, #47	@ 0x2f
2ffef94e:	4640      	mov	r0, r8
2ffef950:	f000 f909 	bl	2ffefb66 <memchr>
2ffef954:	2800      	cmp	r0, #0
2ffef956:	bf14      	ite	ne
2ffef958:	4604      	movne	r4, r0
2ffef95a:	4634      	moveq	r4, r6
2ffef95c:	4629      	mov	r1, r5
2ffef95e:	eba4 0308 	sub.w	r3, r4, r8
2ffef962:	4642      	mov	r2, r8
2ffef964:	4638      	mov	r0, r7
2ffef966:	f7ff feed 	bl	2ffef744 <fdt_subnode_offset_namelen>
2ffef96a:	1e05      	subs	r5, r0, #0
2ffef96c:	dae1      	bge.n	2ffef932 <fdt_path_offset_namelen+0x48>
2ffef96e:	4628      	mov	r0, r5
2ffef970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffef974:	2500      	movs	r5, #0
2ffef976:	e7dc      	b.n	2ffef932 <fdt_path_offset_namelen+0x48>
2ffef978:	f06f 0504 	mvn.w	r5, #4
2ffef97c:	e7f7      	b.n	2ffef96e <fdt_path_offset_namelen+0x84>

2ffef97e <fdt_path_offset>:
2ffef97e:	b538      	push	{r3, r4, r5, lr}
2ffef980:	4605      	mov	r5, r0
2ffef982:	4608      	mov	r0, r1
2ffef984:	460c      	mov	r4, r1
2ffef986:	f000 fa37 	bl	2ffefdf8 <strlen>
2ffef98a:	4602      	mov	r2, r0
2ffef98c:	4621      	mov	r1, r4
2ffef98e:	4628      	mov	r0, r5
2ffef990:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffef994:	f7ff bfa9 	b.w	2ffef8ea <fdt_path_offset_namelen>

2ffef998 <fdt_supernode_atdepth_offset>:
2ffef998:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffef99c:	4607      	mov	r7, r0
2ffef99e:	460c      	mov	r4, r1
2ffef9a0:	4615      	mov	r5, r2
2ffef9a2:	461e      	mov	r6, r3
2ffef9a4:	f7fd fe54 	bl	2ffed650 <fdt_ro_probe_>
2ffef9a8:	2800      	cmp	r0, #0
2ffef9aa:	db03      	blt.n	2ffef9b4 <fdt_supernode_atdepth_offset+0x1c>
2ffef9ac:	2d00      	cmp	r5, #0
2ffef9ae:	da04      	bge.n	2ffef9ba <fdt_supernode_atdepth_offset+0x22>
2ffef9b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef9b4:	b002      	add	sp, #8
2ffef9b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffef9ba:	2000      	movs	r0, #0
2ffef9bc:	4284      	cmp	r4, r0
2ffef9be:	9001      	str	r0, [sp, #4]
2ffef9c0:	db16      	blt.n	2ffef9f0 <fdt_supernode_atdepth_offset+0x58>
2ffef9c2:	f06f 080c 	mvn.w	r8, #12
2ffef9c6:	9b01      	ldr	r3, [sp, #4]
2ffef9c8:	42ab      	cmp	r3, r5
2ffef9ca:	bf08      	it	eq
2ffef9cc:	4680      	moveq	r8, r0
2ffef9ce:	4284      	cmp	r4, r0
2ffef9d0:	d105      	bne.n	2ffef9de <fdt_supernode_atdepth_offset+0x46>
2ffef9d2:	b106      	cbz	r6, 2ffef9d6 <fdt_supernode_atdepth_offset+0x3e>
2ffef9d4:	6033      	str	r3, [r6, #0]
2ffef9d6:	42ab      	cmp	r3, r5
2ffef9d8:	dbea      	blt.n	2ffef9b0 <fdt_supernode_atdepth_offset+0x18>
2ffef9da:	4640      	mov	r0, r8
2ffef9dc:	e7ea      	b.n	2ffef9b4 <fdt_supernode_atdepth_offset+0x1c>
2ffef9de:	4601      	mov	r1, r0
2ffef9e0:	aa01      	add	r2, sp, #4
2ffef9e2:	4638      	mov	r0, r7
2ffef9e4:	f7ff fdc8 	bl	2ffef578 <fdt_next_node>
2ffef9e8:	2800      	cmp	r0, #0
2ffef9ea:	db04      	blt.n	2ffef9f6 <fdt_supernode_atdepth_offset+0x5e>
2ffef9ec:	4284      	cmp	r4, r0
2ffef9ee:	daea      	bge.n	2ffef9c6 <fdt_supernode_atdepth_offset+0x2e>
2ffef9f0:	f06f 0003 	mvn.w	r0, #3
2ffef9f4:	e7de      	b.n	2ffef9b4 <fdt_supernode_atdepth_offset+0x1c>
2ffef9f6:	1c42      	adds	r2, r0, #1
2ffef9f8:	d0fa      	beq.n	2ffef9f0 <fdt_supernode_atdepth_offset+0x58>
2ffef9fa:	1d03      	adds	r3, r0, #4
2ffef9fc:	bf08      	it	eq
2ffef9fe:	f06f 000a 	mvneq.w	r0, #10
2ffefa02:	e7d7      	b.n	2ffef9b4 <fdt_supernode_atdepth_offset+0x1c>

2ffefa04 <fdt_node_depth>:
2ffefa04:	b507      	push	{r0, r1, r2, lr}
2ffefa06:	2200      	movs	r2, #0
2ffefa08:	ab01      	add	r3, sp, #4
2ffefa0a:	f7ff ffc5 	bl	2ffef998 <fdt_supernode_atdepth_offset>
2ffefa0e:	2800      	cmp	r0, #0
2ffefa10:	d005      	beq.n	2ffefa1e <fdt_node_depth+0x1a>
2ffefa12:	db01      	blt.n	2ffefa18 <fdt_node_depth+0x14>
2ffefa14:	f06f 000c 	mvn.w	r0, #12
2ffefa18:	b003      	add	sp, #12
2ffefa1a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffefa1e:	9801      	ldr	r0, [sp, #4]
2ffefa20:	e7fa      	b.n	2ffefa18 <fdt_node_depth+0x14>

2ffefa22 <fdt_parent_offset>:
2ffefa22:	b570      	push	{r4, r5, r6, lr}
2ffefa24:	4604      	mov	r4, r0
2ffefa26:	460d      	mov	r5, r1
2ffefa28:	f7ff ffec 	bl	2ffefa04 <fdt_node_depth>
2ffefa2c:	1e02      	subs	r2, r0, #0
2ffefa2e:	db07      	blt.n	2ffefa40 <fdt_parent_offset+0x1e>
2ffefa30:	4629      	mov	r1, r5
2ffefa32:	4620      	mov	r0, r4
2ffefa34:	2300      	movs	r3, #0
2ffefa36:	3a01      	subs	r2, #1
2ffefa38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffefa3c:	f7ff bfac 	b.w	2ffef998 <fdt_supernode_atdepth_offset>
2ffefa40:	bd70      	pop	{r4, r5, r6, pc}

2ffefa42 <fdt_node_offset_by_phandle>:
2ffefa42:	1e4b      	subs	r3, r1, #1
2ffefa44:	3303      	adds	r3, #3
2ffefa46:	b570      	push	{r4, r5, r6, lr}
2ffefa48:	4605      	mov	r5, r0
2ffefa4a:	460e      	mov	r6, r1
2ffefa4c:	d817      	bhi.n	2ffefa7e <fdt_node_offset_by_phandle+0x3c>
2ffefa4e:	f7fd fdff 	bl	2ffed650 <fdt_ro_probe_>
2ffefa52:	1e04      	subs	r4, r0, #0
2ffefa54:	db08      	blt.n	2ffefa68 <fdt_node_offset_by_phandle+0x26>
2ffefa56:	2200      	movs	r2, #0
2ffefa58:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffefa5c:	4628      	mov	r0, r5
2ffefa5e:	f7ff fd8b 	bl	2ffef578 <fdt_next_node>
2ffefa62:	2800      	cmp	r0, #0
2ffefa64:	4604      	mov	r4, r0
2ffefa66:	da01      	bge.n	2ffefa6c <fdt_node_offset_by_phandle+0x2a>
2ffefa68:	4620      	mov	r0, r4
2ffefa6a:	bd70      	pop	{r4, r5, r6, pc}
2ffefa6c:	4621      	mov	r1, r4
2ffefa6e:	4628      	mov	r0, r5
2ffefa70:	f7fd fef4 	bl	2ffed85c <fdt_get_phandle>
2ffefa74:	42b0      	cmp	r0, r6
2ffefa76:	d0f7      	beq.n	2ffefa68 <fdt_node_offset_by_phandle+0x26>
2ffefa78:	2200      	movs	r2, #0
2ffefa7a:	4621      	mov	r1, r4
2ffefa7c:	e7ee      	b.n	2ffefa5c <fdt_node_offset_by_phandle+0x1a>
2ffefa7e:	f06f 0405 	mvn.w	r4, #5
2ffefa82:	e7f1      	b.n	2ffefa68 <fdt_node_offset_by_phandle+0x26>

2ffefa84 <fdt_stringlist_contains>:
2ffefa84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffefa88:	4604      	mov	r4, r0
2ffefa8a:	4610      	mov	r0, r2
2ffefa8c:	460d      	mov	r5, r1
2ffefa8e:	4617      	mov	r7, r2
2ffefa90:	f000 f9b2 	bl	2ffefdf8 <strlen>
2ffefa94:	4606      	mov	r6, r0
2ffefa96:	f100 0801 	add.w	r8, r0, #1
2ffefa9a:	42b5      	cmp	r5, r6
2ffefa9c:	db0b      	blt.n	2ffefab6 <fdt_stringlist_contains+0x32>
2ffefa9e:	4642      	mov	r2, r8
2ffefaa0:	4621      	mov	r1, r4
2ffefaa2:	4638      	mov	r0, r7
2ffefaa4:	f000 f86d 	bl	2ffefb82 <memcmp>
2ffefaa8:	b168      	cbz	r0, 2ffefac6 <fdt_stringlist_contains+0x42>
2ffefaaa:	462a      	mov	r2, r5
2ffefaac:	2100      	movs	r1, #0
2ffefaae:	4620      	mov	r0, r4
2ffefab0:	f000 f859 	bl	2ffefb66 <memchr>
2ffefab4:	b910      	cbnz	r0, 2ffefabc <fdt_stringlist_contains+0x38>
2ffefab6:	2000      	movs	r0, #0
2ffefab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffefabc:	1b04      	subs	r4, r0, r4
2ffefabe:	3401      	adds	r4, #1
2ffefac0:	1b2d      	subs	r5, r5, r4
2ffefac2:	1c44      	adds	r4, r0, #1
2ffefac4:	e7e9      	b.n	2ffefa9a <fdt_stringlist_contains+0x16>
2ffefac6:	2001      	movs	r0, #1
2ffefac8:	e7f6      	b.n	2ffefab8 <fdt_stringlist_contains+0x34>

2ffefaca <fdt_stringlist_search>:
2ffefaca:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffeface:	4698      	mov	r8, r3
2ffefad0:	ab01      	add	r3, sp, #4
2ffefad2:	f7ff fef9 	bl	2ffef8c8 <fdt_getprop>
2ffefad6:	4604      	mov	r4, r0
2ffefad8:	b920      	cbnz	r0, 2ffefae4 <fdt_stringlist_search+0x1a>
2ffefada:	9d01      	ldr	r5, [sp, #4]
2ffefadc:	4628      	mov	r0, r5
2ffefade:	b003      	add	sp, #12
2ffefae0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffefae4:	4640      	mov	r0, r8
2ffefae6:	2500      	movs	r5, #0
2ffefae8:	f000 f986 	bl	2ffefdf8 <strlen>
2ffefaec:	9e01      	ldr	r6, [sp, #4]
2ffefaee:	1c47      	adds	r7, r0, #1
2ffefaf0:	4426      	add	r6, r4
2ffefaf2:	42b4      	cmp	r4, r6
2ffefaf4:	d302      	bcc.n	2ffefafc <fdt_stringlist_search+0x32>
2ffefaf6:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffefafa:	e7ef      	b.n	2ffefadc <fdt_stringlist_search+0x12>
2ffefafc:	1b31      	subs	r1, r6, r4
2ffefafe:	4620      	mov	r0, r4
2ffefb00:	f000 f996 	bl	2ffefe30 <strnlen>
2ffefb04:	3001      	adds	r0, #1
2ffefb06:	eb04 0900 	add.w	r9, r4, r0
2ffefb0a:	45b1      	cmp	r9, r6
2ffefb0c:	9001      	str	r0, [sp, #4]
2ffefb0e:	d80c      	bhi.n	2ffefb2a <fdt_stringlist_search+0x60>
2ffefb10:	42b8      	cmp	r0, r7
2ffefb12:	d002      	beq.n	2ffefb1a <fdt_stringlist_search+0x50>
2ffefb14:	3501      	adds	r5, #1
2ffefb16:	464c      	mov	r4, r9
2ffefb18:	e7eb      	b.n	2ffefaf2 <fdt_stringlist_search+0x28>
2ffefb1a:	463a      	mov	r2, r7
2ffefb1c:	4641      	mov	r1, r8
2ffefb1e:	4620      	mov	r0, r4
2ffefb20:	f000 f82f 	bl	2ffefb82 <memcmp>
2ffefb24:	2800      	cmp	r0, #0
2ffefb26:	d1f5      	bne.n	2ffefb14 <fdt_stringlist_search+0x4a>
2ffefb28:	e7d8      	b.n	2ffefadc <fdt_stringlist_search+0x12>
2ffefb2a:	f06f 050e 	mvn.w	r5, #14
2ffefb2e:	e7d5      	b.n	2ffefadc <fdt_stringlist_search+0x12>

2ffefb30 <fdt_node_offset_by_compatible>:
2ffefb30:	b570      	push	{r4, r5, r6, lr}
2ffefb32:	4605      	mov	r5, r0
2ffefb34:	460c      	mov	r4, r1
2ffefb36:	4616      	mov	r6, r2
2ffefb38:	f7fd fd8a 	bl	2ffed650 <fdt_ro_probe_>
2ffefb3c:	2800      	cmp	r0, #0
2ffefb3e:	db11      	blt.n	2ffefb64 <fdt_node_offset_by_compatible+0x34>
2ffefb40:	4621      	mov	r1, r4
2ffefb42:	2200      	movs	r2, #0
2ffefb44:	4628      	mov	r0, r5
2ffefb46:	f7ff fd17 	bl	2ffef578 <fdt_next_node>
2ffefb4a:	2800      	cmp	r0, #0
2ffefb4c:	4604      	mov	r4, r0
2ffefb4e:	db08      	blt.n	2ffefb62 <fdt_node_offset_by_compatible+0x32>
2ffefb50:	4632      	mov	r2, r6
2ffefb52:	4621      	mov	r1, r4
2ffefb54:	4628      	mov	r0, r5
2ffefb56:	f7fd feb9 	bl	2ffed8cc <fdt_node_check_compatible>
2ffefb5a:	1c43      	adds	r3, r0, #1
2ffefb5c:	db02      	blt.n	2ffefb64 <fdt_node_offset_by_compatible+0x34>
2ffefb5e:	2800      	cmp	r0, #0
2ffefb60:	d1ee      	bne.n	2ffefb40 <fdt_node_offset_by_compatible+0x10>
2ffefb62:	4620      	mov	r0, r4
2ffefb64:	bd70      	pop	{r4, r5, r6, pc}

2ffefb66 <memchr>:
2ffefb66:	4402      	add	r2, r0
2ffefb68:	4603      	mov	r3, r0
2ffefb6a:	b2c9      	uxtb	r1, r1
2ffefb6c:	b510      	push	{r4, lr}
2ffefb6e:	4618      	mov	r0, r3
2ffefb70:	4293      	cmp	r3, r2
2ffefb72:	d101      	bne.n	2ffefb78 <memchr+0x12>
2ffefb74:	2000      	movs	r0, #0
2ffefb76:	e003      	b.n	2ffefb80 <memchr+0x1a>
2ffefb78:	7804      	ldrb	r4, [r0, #0]
2ffefb7a:	3301      	adds	r3, #1
2ffefb7c:	428c      	cmp	r4, r1
2ffefb7e:	d1f6      	bne.n	2ffefb6e <memchr+0x8>
2ffefb80:	bd10      	pop	{r4, pc}

2ffefb82 <memcmp>:
2ffefb82:	4402      	add	r2, r0
2ffefb84:	b510      	push	{r4, lr}
2ffefb86:	4290      	cmp	r0, r2
2ffefb88:	d101      	bne.n	2ffefb8e <memcmp+0xc>
2ffefb8a:	2000      	movs	r0, #0
2ffefb8c:	e006      	b.n	2ffefb9c <memcmp+0x1a>
2ffefb8e:	f810 3b01 	ldrb.w	r3, [r0], #1
2ffefb92:	f811 4b01 	ldrb.w	r4, [r1], #1
2ffefb96:	42a3      	cmp	r3, r4
2ffefb98:	d0f5      	beq.n	2ffefb86 <memcmp+0x4>
2ffefb9a:	1b18      	subs	r0, r3, r4
2ffefb9c:	bd10      	pop	{r4, pc}

2ffefb9e <memcpy>:
2ffefb9e:	440a      	add	r2, r1
2ffefba0:	1e43      	subs	r3, r0, #1
2ffefba2:	b510      	push	{r4, lr}
2ffefba4:	4291      	cmp	r1, r2
2ffefba6:	d100      	bne.n	2ffefbaa <memcpy+0xc>
2ffefba8:	bd10      	pop	{r4, pc}
2ffefbaa:	f811 4b01 	ldrb.w	r4, [r1], #1
2ffefbae:	f803 4f01 	strb.w	r4, [r3, #1]!
2ffefbb2:	e7f7      	b.n	2ffefba4 <memcpy+0x6>

2ffefbb4 <memmove>:
2ffefbb4:	b470      	push	{r4, r5, r6}
2ffefbb6:	4613      	mov	r3, r2
2ffefbb8:	1a46      	subs	r6, r0, r1
2ffefbba:	4605      	mov	r5, r0
2ffefbbc:	4296      	cmp	r6, r2
2ffefbbe:	460c      	mov	r4, r1
2ffefbc0:	d302      	bcc.n	2ffefbc8 <memmove+0x14>
2ffefbc2:	bc70      	pop	{r4, r5, r6}
2ffefbc4:	f7ff bfeb 	b.w	2ffefb9e <memcpy>
2ffefbc8:	4414      	add	r4, r2
2ffefbca:	4403      	add	r3, r0
2ffefbcc:	429d      	cmp	r5, r3
2ffefbce:	d102      	bne.n	2ffefbd6 <memmove+0x22>
2ffefbd0:	4628      	mov	r0, r5
2ffefbd2:	bc70      	pop	{r4, r5, r6}
2ffefbd4:	4770      	bx	lr
2ffefbd6:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2ffefbda:	f803 2d01 	strb.w	r2, [r3, #-1]!
2ffefbde:	e7f5      	b.n	2ffefbcc <memmove+0x18>

2ffefbe0 <memset>:
2ffefbe0:	b570      	push	{r4, r5, r6, lr}
2ffefbe2:	b1ca      	cbz	r2, 2ffefc18 <memset+0x38>
2ffefbe4:	b2c9      	uxtb	r1, r1
2ffefbe6:	4603      	mov	r3, r0
2ffefbe8:	075c      	lsls	r4, r3, #29
2ffefbea:	d111      	bne.n	2ffefc10 <memset+0x30>
2ffefbec:	f022 0407 	bic.w	r4, r2, #7
2ffefbf0:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
2ffefbf4:	fba1 5605 	umull	r5, r6, r1, r5
2ffefbf8:	441c      	add	r4, r3
2ffefbfa:	442e      	add	r6, r5
2ffefbfc:	42a3      	cmp	r3, r4
2ffefbfe:	d10c      	bne.n	2ffefc1a <memset+0x3a>
2ffefc00:	f002 0207 	and.w	r2, r2, #7
2ffefc04:	4422      	add	r2, r4
2ffefc06:	4294      	cmp	r4, r2
2ffefc08:	d006      	beq.n	2ffefc18 <memset+0x38>
2ffefc0a:	f804 1b01 	strb.w	r1, [r4], #1
2ffefc0e:	e7fa      	b.n	2ffefc06 <memset+0x26>
2ffefc10:	f803 1b01 	strb.w	r1, [r3], #1
2ffefc14:	3a01      	subs	r2, #1
2ffefc16:	d1e7      	bne.n	2ffefbe8 <memset+0x8>
2ffefc18:	bd70      	pop	{r4, r5, r6, pc}
2ffefc1a:	e9c3 5600 	strd	r5, r6, [r3]
2ffefc1e:	3308      	adds	r3, #8
2ffefc20:	e7ec      	b.n	2ffefbfc <memset+0x1c>

2ffefc22 <unsigned_num_print.part.0>:
2ffefc22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffefc26:	b089      	sub	sp, #36	@ 0x24
2ffefc28:	f10d 0a0c 	add.w	sl, sp, #12
2ffefc2c:	4605      	mov	r5, r0
2ffefc2e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
2ffefc30:	460c      	mov	r4, r1
2ffefc32:	9301      	str	r3, [sp, #4]
2ffefc34:	4690      	mov	r8, r2
2ffefc36:	2600      	movs	r6, #0
2ffefc38:	46d3      	mov	fp, sl
2ffefc3a:	4621      	mov	r1, r4
2ffefc3c:	4642      	mov	r2, r8
2ffefc3e:	2300      	movs	r3, #0
2ffefc40:	4628      	mov	r0, r5
2ffefc42:	f106 0901 	add.w	r9, r6, #1
2ffefc46:	f7fd ecf2 	blx	2ffed62c <__aeabi_uldivmod>
2ffefc4a:	b2d3      	uxtb	r3, r2
2ffefc4c:	2a09      	cmp	r2, #9
2ffefc4e:	bf94      	ite	ls
2ffefc50:	3330      	addls	r3, #48	@ 0x30
2ffefc52:	3357      	addhi	r3, #87	@ 0x57
2ffefc54:	4545      	cmp	r5, r8
2ffefc56:	b2db      	uxtb	r3, r3
2ffefc58:	f174 0400 	sbcs.w	r4, r4, #0
2ffefc5c:	f80a 3b01 	strb.w	r3, [sl], #1
2ffefc60:	d20e      	bcs.n	2ffefc80 <unsigned_num_print.part.0+0x5e>
2ffefc62:	2f00      	cmp	r7, #0
2ffefc64:	dc1c      	bgt.n	2ffefca0 <unsigned_num_print.part.0+0x7e>
2ffefc66:	2400      	movs	r4, #0
2ffefc68:	4635      	mov	r5, r6
2ffefc6a:	f81b 0005 	ldrb.w	r0, [fp, r5]
2ffefc6e:	f7fe fa25 	bl	2ffee0bc <putchar>
2ffefc72:	3d01      	subs	r5, #1
2ffefc74:	d2f9      	bcs.n	2ffefc6a <unsigned_num_print.part.0+0x48>
2ffefc76:	1c60      	adds	r0, r4, #1
2ffefc78:	4430      	add	r0, r6
2ffefc7a:	b009      	add	sp, #36	@ 0x24
2ffefc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffefc80:	464e      	mov	r6, r9
2ffefc82:	4605      	mov	r5, r0
2ffefc84:	460c      	mov	r4, r1
2ffefc86:	e7d8      	b.n	2ffefc3a <unsigned_num_print.part.0+0x18>
2ffefc88:	9801      	ldr	r0, [sp, #4]
2ffefc8a:	3c01      	subs	r4, #1
2ffefc8c:	f7fe fa16 	bl	2ffee0bc <putchar>
2ffefc90:	45a1      	cmp	r9, r4
2ffefc92:	dbf9      	blt.n	2ffefc88 <unsigned_num_print.part.0+0x66>
2ffefc94:	eba7 0409 	sub.w	r4, r7, r9
2ffefc98:	45b9      	cmp	r9, r7
2ffefc9a:	bfc8      	it	gt
2ffefc9c:	2400      	movgt	r4, #0
2ffefc9e:	e7e3      	b.n	2ffefc68 <unsigned_num_print.part.0+0x46>
2ffefca0:	463c      	mov	r4, r7
2ffefca2:	e7f5      	b.n	2ffefc90 <unsigned_num_print.part.0+0x6e>

2ffefca4 <printf>:
2ffefca4:	b40f      	push	{r0, r1, r2, r3}
2ffefca6:	b507      	push	{r0, r1, r2, lr}
2ffefca8:	a904      	add	r1, sp, #16
2ffefcaa:	f851 0b04 	ldr.w	r0, [r1], #4
2ffefcae:	9101      	str	r1, [sp, #4]
2ffefcb0:	f7fd fe2c 	bl	2ffed90c <vprintf>
2ffefcb4:	b003      	add	sp, #12
2ffefcb6:	f85d eb04 	ldr.w	lr, [sp], #4
2ffefcba:	b004      	add	sp, #16
2ffefcbc:	4770      	bx	lr

2ffefcbe <unsigned_num_print>:
2ffefcbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffefcc2:	b089      	sub	sp, #36	@ 0x24
2ffefcc4:	4604      	mov	r4, r0
2ffefcc6:	460f      	mov	r7, r1
2ffefcc8:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
2ffefccc:	4615      	mov	r5, r2
2ffefcce:	e9dd 9812 	ldrd	r9, r8, [sp, #72]	@ 0x48
2ffefcd2:	f89d a054 	ldrb.w	sl, [sp, #84]	@ 0x54
2ffefcd6:	2b00      	cmp	r3, #0
2ffefcd8:	bf0c      	ite	eq
2ffefcda:	2361      	moveq	r3, #97	@ 0x61
2ffefcdc:	2341      	movne	r3, #65	@ 0x41
2ffefcde:	f10d 0b0c 	add.w	fp, sp, #12
2ffefce2:	2600      	movs	r6, #0
2ffefce4:	3b0a      	subs	r3, #10
2ffefce6:	9301      	str	r3, [sp, #4]
2ffefce8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
2ffefcea:	4641      	mov	r1, r8
2ffefcec:	2300      	movs	r3, #0
2ffefcee:	4648      	mov	r0, r9
2ffefcf0:	3601      	adds	r6, #1
2ffefcf2:	f7fd ec9c 	blx	2ffed62c <__aeabi_uldivmod>
2ffefcf6:	2a09      	cmp	r2, #9
2ffefcf8:	b2d3      	uxtb	r3, r2
2ffefcfa:	bf92      	itee	ls
2ffefcfc:	3330      	addls	r3, #48	@ 0x30
2ffefcfe:	9a01      	ldrhi	r2, [sp, #4]
2ffefd00:	189b      	addhi	r3, r3, r2
2ffefd02:	b2db      	uxtb	r3, r3
2ffefd04:	f80b 3b01 	strb.w	r3, [fp], #1
2ffefd08:	9b14      	ldr	r3, [sp, #80]	@ 0x50
2ffefd0a:	4599      	cmp	r9, r3
2ffefd0c:	f178 0800 	sbcs.w	r8, r8, #0
2ffefd10:	d21c      	bcs.n	2ffefd4c <unsigned_num_print+0x8e>
2ffefd12:	9b16      	ldr	r3, [sp, #88]	@ 0x58
2ffefd14:	1b9b      	subs	r3, r3, r6
2ffefd16:	682a      	ldr	r2, [r5, #0]
2ffefd18:	2b00      	cmp	r3, #0
2ffefd1a:	dc1a      	bgt.n	2ffefd52 <unsigned_num_print+0x94>
2ffefd1c:	4633      	mov	r3, r6
2ffefd1e:	a903      	add	r1, sp, #12
2ffefd20:	682a      	ldr	r2, [r5, #0]
2ffefd22:	3b01      	subs	r3, #1
2ffefd24:	42ba      	cmp	r2, r7
2ffefd26:	d205      	bcs.n	2ffefd34 <unsigned_num_print+0x76>
2ffefd28:	6822      	ldr	r2, [r4, #0]
2ffefd2a:	5c58      	ldrb	r0, [r3, r1]
2ffefd2c:	7010      	strb	r0, [r2, #0]
2ffefd2e:	6822      	ldr	r2, [r4, #0]
2ffefd30:	3201      	adds	r2, #1
2ffefd32:	6022      	str	r2, [r4, #0]
2ffefd34:	682a      	ldr	r2, [r5, #0]
2ffefd36:	3201      	adds	r2, #1
2ffefd38:	602a      	str	r2, [r5, #0]
2ffefd3a:	2b00      	cmp	r3, #0
2ffefd3c:	d1f0      	bne.n	2ffefd20 <unsigned_num_print+0x62>
2ffefd3e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
2ffefd40:	441e      	add	r6, r3
2ffefd42:	2e00      	cmp	r6, #0
2ffefd44:	db12      	blt.n	2ffefd6c <unsigned_num_print+0xae>
2ffefd46:	b009      	add	sp, #36	@ 0x24
2ffefd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffefd4c:	4681      	mov	r9, r0
2ffefd4e:	4688      	mov	r8, r1
2ffefd50:	e7ca      	b.n	2ffefce8 <unsigned_num_print+0x2a>
2ffefd52:	4297      	cmp	r7, r2
2ffefd54:	d905      	bls.n	2ffefd62 <unsigned_num_print+0xa4>
2ffefd56:	6822      	ldr	r2, [r4, #0]
2ffefd58:	f882 a000 	strb.w	sl, [r2]
2ffefd5c:	6822      	ldr	r2, [r4, #0]
2ffefd5e:	3201      	adds	r2, #1
2ffefd60:	6022      	str	r2, [r4, #0]
2ffefd62:	682a      	ldr	r2, [r5, #0]
2ffefd64:	3b01      	subs	r3, #1
2ffefd66:	3201      	adds	r2, #1
2ffefd68:	602a      	str	r2, [r5, #0]
2ffefd6a:	e7d4      	b.n	2ffefd16 <unsigned_num_print+0x58>
2ffefd6c:	682b      	ldr	r3, [r5, #0]
2ffefd6e:	42bb      	cmp	r3, r7
2ffefd70:	d205      	bcs.n	2ffefd7e <unsigned_num_print+0xc0>
2ffefd72:	6823      	ldr	r3, [r4, #0]
2ffefd74:	f883 a000 	strb.w	sl, [r3]
2ffefd78:	6823      	ldr	r3, [r4, #0]
2ffefd7a:	3301      	adds	r3, #1
2ffefd7c:	6023      	str	r3, [r4, #0]
2ffefd7e:	682b      	ldr	r3, [r5, #0]
2ffefd80:	3601      	adds	r6, #1
2ffefd82:	3301      	adds	r3, #1
2ffefd84:	602b      	str	r3, [r5, #0]
2ffefd86:	e7dc      	b.n	2ffefd42 <unsigned_num_print+0x84>

2ffefd88 <snprintf>:
2ffefd88:	b40c      	push	{r2, r3}
2ffefd8a:	b507      	push	{r0, r1, r2, lr}
2ffefd8c:	ab04      	add	r3, sp, #16
2ffefd8e:	f853 2b04 	ldr.w	r2, [r3], #4
2ffefd92:	9301      	str	r3, [sp, #4]
2ffefd94:	f7fd fe90 	bl	2ffedab8 <vsnprintf>
2ffefd98:	b003      	add	sp, #12
2ffefd9a:	f85d eb04 	ldr.w	lr, [sp], #4
2ffefd9e:	b002      	add	sp, #8
2ffefda0:	4770      	bx	lr

2ffefda2 <strchr>:
2ffefda2:	b2c9      	uxtb	r1, r1
2ffefda4:	4603      	mov	r3, r0
2ffefda6:	781a      	ldrb	r2, [r3, #0]
2ffefda8:	4618      	mov	r0, r3
2ffefdaa:	3301      	adds	r3, #1
2ffefdac:	428a      	cmp	r2, r1
2ffefdae:	d002      	beq.n	2ffefdb6 <strchr+0x14>
2ffefdb0:	2a00      	cmp	r2, #0
2ffefdb2:	d1f8      	bne.n	2ffefda6 <strchr+0x4>
2ffefdb4:	4610      	mov	r0, r2
2ffefdb6:	4770      	bx	lr

2ffefdb8 <strcmp>:
2ffefdb8:	1e43      	subs	r3, r0, #1
2ffefdba:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2ffefdbe:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffefdc2:	4290      	cmp	r0, r2
2ffefdc4:	d001      	beq.n	2ffefdca <strcmp+0x12>
2ffefdc6:	1a80      	subs	r0, r0, r2
2ffefdc8:	e001      	b.n	2ffefdce <strcmp+0x16>
2ffefdca:	2800      	cmp	r0, #0
2ffefdcc:	d1f5      	bne.n	2ffefdba <strcmp+0x2>
2ffefdce:	4770      	bx	lr

2ffefdd0 <strlcpy>:
2ffefdd0:	460b      	mov	r3, r1
2ffefdd2:	b510      	push	{r4, lr}
2ffefdd4:	b962      	cbnz	r2, 2ffefdf0 <strlcpy+0x20>
2ffefdd6:	f813 2b01 	ldrb.w	r2, [r3], #1
2ffefdda:	2a00      	cmp	r2, #0
2ffefddc:	d1fb      	bne.n	2ffefdd6 <strlcpy+0x6>
2ffefdde:	e004      	b.n	2ffefdea <strlcpy+0x1a>
2ffefde0:	f813 4b01 	ldrb.w	r4, [r3], #1
2ffefde4:	f800 4b01 	strb.w	r4, [r0], #1
2ffefde8:	b914      	cbnz	r4, 2ffefdf0 <strlcpy+0x20>
2ffefdea:	1a58      	subs	r0, r3, r1
2ffefdec:	3801      	subs	r0, #1
2ffefdee:	bd10      	pop	{r4, pc}
2ffefdf0:	3a01      	subs	r2, #1
2ffefdf2:	d1f5      	bne.n	2ffefde0 <strlcpy+0x10>
2ffefdf4:	7002      	strb	r2, [r0, #0]
2ffefdf6:	e7ee      	b.n	2ffefdd6 <strlcpy+0x6>

2ffefdf8 <strlen>:
2ffefdf8:	4603      	mov	r3, r0
2ffefdfa:	461a      	mov	r2, r3
2ffefdfc:	3301      	adds	r3, #1
2ffefdfe:	7811      	ldrb	r1, [r2, #0]
2ffefe00:	2900      	cmp	r1, #0
2ffefe02:	d1fa      	bne.n	2ffefdfa <strlen+0x2>
2ffefe04:	1a10      	subs	r0, r2, r0
2ffefe06:	4770      	bx	lr

2ffefe08 <strncmp>:
2ffefe08:	4603      	mov	r3, r0
2ffefe0a:	4610      	mov	r0, r2
2ffefe0c:	b510      	push	{r4, lr}
2ffefe0e:	b142      	cbz	r2, 2ffefe22 <strncmp+0x1a>
2ffefe10:	188c      	adds	r4, r1, r2
2ffefe12:	3b01      	subs	r3, #1
2ffefe14:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2ffefe18:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffefe1c:	4290      	cmp	r0, r2
2ffefe1e:	d001      	beq.n	2ffefe24 <strncmp+0x1c>
2ffefe20:	1a80      	subs	r0, r0, r2
2ffefe22:	bd10      	pop	{r4, pc}
2ffefe24:	2800      	cmp	r0, #0
2ffefe26:	d0fc      	beq.n	2ffefe22 <strncmp+0x1a>
2ffefe28:	42a1      	cmp	r1, r4
2ffefe2a:	d1f3      	bne.n	2ffefe14 <strncmp+0xc>
2ffefe2c:	2000      	movs	r0, #0
2ffefe2e:	e7f8      	b.n	2ffefe22 <strncmp+0x1a>

2ffefe30 <strnlen>:
2ffefe30:	4603      	mov	r3, r0
2ffefe32:	2000      	movs	r0, #0
2ffefe34:	4288      	cmp	r0, r1
2ffefe36:	d100      	bne.n	2ffefe3a <strnlen+0xa>
2ffefe38:	4770      	bx	lr
2ffefe3a:	5c1a      	ldrb	r2, [r3, r0]
2ffefe3c:	2a00      	cmp	r2, #0
2ffefe3e:	d0fb      	beq.n	2ffefe38 <strnlen+0x8>
2ffefe40:	3001      	adds	r0, #1
2ffefe42:	e7f7      	b.n	2ffefe34 <strnlen+0x4>

2ffefe44 <strrchr>:
2ffefe44:	4603      	mov	r3, r0
2ffefe46:	b2c9      	uxtb	r1, r1
2ffefe48:	2000      	movs	r0, #0
2ffefe4a:	b510      	push	{r4, lr}
2ffefe4c:	461c      	mov	r4, r3
2ffefe4e:	f813 2b01 	ldrb.w	r2, [r3], #1
2ffefe52:	428a      	cmp	r2, r1
2ffefe54:	bf08      	it	eq
2ffefe56:	4620      	moveq	r0, r4
2ffefe58:	2a00      	cmp	r2, #0
2ffefe5a:	d1f7      	bne.n	2ffefe4c <strrchr+0x8>
2ffefe5c:	bd10      	pop	{r4, pc}
	...

2ffefe60 <stm32mp1_mmap>:
2ffefe60:	0000 2ffe 0000 0000 0000 2ffe 0000 0002     .../......./....
2ffefe70:	004a 0000 0000 4000 0000 3000 0000 0000     J......@...0....
2ffefe80:	0000 3000 0000 0020 004a 0000 0000 4000     ...0.. .J......@
2ffefe90:	0000 4000 0000 0000 0000 4000 0000 4000     ...@.......@...@
2ffefea0:	0048 0000 0000 4000 0000 0000 0000 0000     H......@........
	...

2ffefec0 <fip_dev_funcs>:
2ffefec0:	dded 2ffe 5255 2ffe 0000 0000 5231 2ffe     .../UR./....1R./
2ffefed0:	517d 2ffe 0000 0000 50c1 2ffe 50e1 2ffe     }Q./.....P./.P./
2ffefee0:	5345 2ffe                                   ES./

2ffefee4 <fip_dev_connector>:
2ffefee4:	5395 2ffe                                   .S./

2ffefee8 <memmap_dev_funcs>:
2ffefee8:	ddf1 2ffe 5569 2ffe 550d 2ffe 54ed 2ffe     .../iU./.U./.T./
2ffefef8:	546d 2ffe 540d 2ffe 5545 2ffe 0000 0000     mT./.T./EU./....
2ffeff08:	ddf5 2ffe                                   .../

2ffeff0c <memmap_dev_connector>:
2ffeff0c:	54d1 2ffe                                   .T./

2ffeff10 <ddr_registers>:
2ffeff10:	1947 2fff 0d58 2fff 0019 0000 0000 0000     G../X../........
2ffeff20:	1ab2 2fff 0d28 2fff 000c 0000 0000 0000     .../(../........
2ffeff30:	1acb 2fff 0cd8 2fff 000b 0000 0000 0000     .../.../........
2ffeff40:	1ac0 2fff 0d04 2fff 0009 0000 0000 0000     .../.../........
2ffeff50:	1947 2fff 0cb4 2fff 0009 0000 0001 0000     G../.../........
2ffeff60:	1ab2 2fff 0c8c 2fff 000a 0000 0001 0000     .../.../........
2ffeff70:	1aa0 2fff 000c 0000 0019 0000 1aab 2fff     .../.........../
2ffeff80:	0070 0000 000c 0000 1ab9 2fff 00a0 0000     p........../....
2ffeff90:	0009 0000 1ac4 2fff 00c4 0000 000b 0000     ......./........
2ffeffa0:	1ad0 2fff 00f0 0000 0009 0000 1adb 2fff     .../.........../
2ffeffb0:	0114 0000 000a 0000                         ........

2ffeffb8 <init>:
2ffeffb8:	c200 0001 1000 0000 0000 0000 0400 0000     ................
2ffeffc8:	000c 0000 0000 0000 0000 0000 0000 0000     ................
2ffeffd8:	0000 2000 0000 0000 0000 0000               ... ........

2ffeffe4 <load_info>:
2ffeffe4:	0001 0000 2319 2fff 0004 0000 22d3 2fff     .....#./....."./
2ffefff4:	0008 0000 22dd 2fff 0009 0000 22ee 2fff     ....."./....."./
2fff0004:	0005 0000 22ff 2fff 0002 0000 2309 2fff     ....."./.....#./
2fff0014:	0010 0000 2315 2fff 0004 0000 0005 0000     .....#./........
2fff0024:	0002 0000 0010 0000                         ........

2fff002c <plat_prefix_str>:
2fff002c:	2a0b 2fff 2a15 2fff 2a1f 2fff 2a29 2fff     .*./.*./.*./)*./
2fff003c:	2a33 2fff                                   3*./

2fff0040 <stm32_tamp_nvram_nvmem_ops>:
2fff0040:	91e9 2ffe 928d 2ffe                         .../.../

2fff0048 <stm32mp1_uart_addresses>:
2fff0048:	0000 4c00 1000 4c00 f000 4000 0000 4001     ...L...L...@...@
2fff0058:	1000 4001 3000 4400 8000 4001 9000 4001     ...@.0.D...@...@

2fff0068 <i2c_specs>:
2fff0068:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fff0078:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fff0088:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fff0098:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fff00a8:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fff00b8:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........

2fff00c8 <pmic_regs>:
2fff00c8:	37f0 2fff 01e0 2fff 0000 0000 0000 0000     .7./.../........
2fff00d8:	03e8 0000 2861 2fff 01e0 2fff 0000 0000     ....a(./.../....
2fff00e8:	0000 0000 03e8 0000 380a 2fff 01e0 2fff     .........8./.../
	...
2fff0100:	03e8 0000 37f6 2fff 01e0 2fff 0000 0000     .....7./.../....
2fff0110:	0000 0000 03e8 0000 3810 2fff 01e0 2fff     .........8./.../
	...
2fff0128:	03e8 0000 3815 2fff 01e0 2fff 0000 0000     .....8./.../....
2fff0138:	0000 0000 03e8 0000 381a 2fff 01e0 2fff     .........8./.../
	...
2fff0150:	03e8 0000 381f 2fff 01e0 2fff 0000 0000     .....8./.../....
2fff0160:	0000 0000 03e8 0000 3824 2fff 01e0 2fff     ........$8./.../
	...
2fff0178:	03e8 0000 3829 2fff 01e0 2fff 0000 0000     ....)8./.../....
2fff0188:	0000 0000 03e8 0000 2867 2fff 01e0 2fff     ........g(./.../
	...
2fff01a0:	03e8 0000 382e 2fff 01e0 2fff 0000 0000     .....8./.../....
2fff01b0:	0000 0000 03e8 0000 3834 2fff 01e0 2fff     ........48./.../
	...
2fff01c8:	03e8 0000 383c 2fff 01e0 2fff 0000 0000     ....<8./.../....
2fff01d8:	0000 0000 03e8 0000                         ........

2fff01e0 <pmic_ops>:
2fff01e0:	eb0f 2ffe eac1 2ffe eabb 2ffe eab5 2ffe     .../.../.../.../
2fff01f0:	eaaf 2ffe eacb 2ffe 0000 0000 0000 0000     .../.../........

2fff0200 <regulators_table>:
2fff0200:	37f0 2fff 1022 2fff 2040 3001 0012 0018     .7./"../@ .0....
2fff0210:	001d 0000 2861 2fff 0fd8 2fff 2125 3101     ....a(./.../%!.1
2fff0220:	0212 0118 011d 0000 380a 2fff 0f68 2fff     .........8./h../
2fff0230:	2238 3201 0412 0218 021d 0000 37f6 2fff     8".2.........7./
2fff0240:	0eee 2fff 233d 3301 0612 0318 031d 0000     .../=#.3........
2fff0250:	3810 2fff 0ebc 2fff 2519 3501 0000 001a     .8./.../.%.5....
2fff0260:	001e 0000 3815 2fff 0e8a 2fff 2619 3601     .....8./.../.&.6
2fff0270:	0000 011a 011e 0000 381a 2fff 0e4c 2fff     .........8./L../
2fff0280:	271f 3701 0000 021a 021e 0000 381f 2fff     .'.7.........8./
2fff0290:	0dd8 2fff 2801 3801 0000 031a 031e 0000     .../.(.8........
2fff02a0:	3824 2fff 0e0c 2fff 291f 3901 0000 041a     $8./.../.).9....
2fff02b0:	041e 0000 3829 2fff 0dda 2fff 2a19 3a01     ....)8./.../.*.:
2fff02c0:	0000 051a 051e 0000 2867 2fff 0dd6 2fff     ........g(./.../
2fff02d0:	2401 3401 0000 061a 0000 0000 382e 2fff     .$.4.........8./
2fff02e0:	0dd4 2fff 4001 0001 0000 0000 061d 0000     .../.@..........
2fff02f0:	3834 2fff 0dd4 2fff 4001 0002 0000 0000     48./.../.@......
2fff0300:	041d 0000 383c 2fff 0dd4 2fff 4001 0004     ....<8./.../.@..
2fff0310:	0000 0000 051d 0000                         ........

2fff0318 <stm32mp1_tamp_nvram>:
2fff0318:	0003 0000 0320 2fff                         .... ../

2fff0320 <mp1_zone_cfg_fields>:
2fff0320:	0020 0000 0000 0000 0007 0000 0020 0000      ........... ...
2fff0330:	0010 0000 0017 0000                         ........

2fff0338 <clk_stm32_osc_nogate_ops>:
2fff0338:	ee03 2ffe 0000 0000 0000 0000 0000 0000     .../............
	...
2fff0350:	bfa9 2ffe                                   .../

2fff0354 <clk_stm32_osc_ops>:
2fff0354:	ee03 2ffe 0000 0000 0000 0000 c325 2ffe     .../........%../
2fff0364:	c369 2ffe f30d 2ffe bfa9 2ffe               i../.../.../

2fff0370 <clk_stm32_fixed_rate_ops>:
2fff0370:	eefb 2ffe 0000 0000 0000 0000 0000 0000     .../............
	...

2fff038c <clk_timer_ops>:
2fff038c:	eed5 2ffe 0000 0000 0000 0000 0000 0000     .../............
	...

2fff03a8 <clk_fixed_factor_ops>:
2fff03a8:	c051 2ffe 0000 0000 0000 0000 0000 0000     Q../............
	...

2fff03c4 <clk_stm32_gate_ops>:
	...
2fff03d0:	ee75 2ffe eea3 2ffe f2f7 2ffe 0000 0000     u../.../.../....

2fff03e0 <clk_stm32_divider_ops>:
2fff03e0:	f24b 2ffe 0000 0000 0000 0000 0000 0000     K../............
	...

2fff03fc <stm32mp_clk_ops>:
2fff03fc:	c181 2ffe c215 2ffe c131 2ffe c109 2ffe     .../.../1../.../
2fff040c:	c23d 2ffe                                   =../

2fff0410 <clk_gate_ops>:
	...
2fff041c:	ee53 2ffe ee2d 2ffe ee0d 2ffe 0000 0000     S../-../.../....

2fff042c <clk_mux_ops>:
	...

2fff0448 <stm32mp13_clk>:
2fff0448:	ffff ffff 0007 0000 5b8c 2fff 0004 ffff     .........[./....
2fff0458:	0108 0000 5c1f 2fff 0000 ffff 0108 0000     .....\./........
2fff0468:	47da 2fff 0001 ffff 0108 0000 47d9 2fff     .G./.........G./
2fff0478:	0002 ffff 0108 0000 47d8 2fff 0003 ffff     .........G./....
2fff0488:	0108 0000 47d7 2fff ffff ffff 0109 0000     .....G./........
2fff0498:	47d6 2fff ffff 0003 0001 0000 47d1 2fff     .G./.........G./
2fff04a8:	ffff 0002 0004 0000 47d5 2fff 0005 0002     .........G./....
2fff04b8:	0001 0000 47d3 2fff 0006 8003 000a 0000     .....G./........
2fff04c8:	5c1e 2fff 0007 8003 000a 0000 47d0 2fff     .\./.........G./
2fff04d8:	0008 8004 000a 0000 47cf 2fff 0009 8005     .........G./....
2fff04e8:	000a 0000 47ce 2fff 000a 000a 010b 0000     .....G./........
2fff04f8:	47cc 2fff ffff 000a 0004 0000 47cb 2fff     .G./.........G./
2fff0508:	000d 000b 010b 0000 47c9 2fff 000e 000b     .........G./....
2fff0518:	000b 0000 47c7 2fff 000f 000b 010b 0000     .....G./........
2fff0528:	47c5 2fff 0010 000c 000b 0000 47c3 2fff     .G./.........G./
2fff0538:	0011 000c 000b 0000 47c1 2fff 0012 000c     .........G./....
2fff0548:	000b 0000 47bf 2fff 0013 000d 000b 0000     .....G./........
2fff0558:	47bd 2fff 0014 000d 000b 0000 47bb 2fff     .G./.........G./
2fff0568:	0015 000d 000b 0000 47b9 2fff 0016 0021     .........G./..!.
2fff0578:	0004 0000 47b6 2fff 0017 0021 0004 0000     .....G./..!.....
2fff0588:	47b5 2fff 0018 0021 0004 0000 47b4 2fff     .G./..!......G./
2fff0598:	0019 0020 0004 0000 47b3 2fff 001a 0020     .. ......G./.. .
2fff05a8:	0004 0000 47b2 2fff 001b 0021 0004 0000     .....G./..!.....
2fff05b8:	47b1 2fff 001d 8000 0003 0000 0000 0000     .G./............
2fff05c8:	001e 8001 0004 0000 47b8 2fff 001f 8002     .........G./....
2fff05d8:	0104 0000 47b7 2fff 001c 8009 0003 0000     .....G./........
2fff05e8:	0000 0000 0020 0019 0406 0000 4558 2fff     .... .......XE./
2fff05f8:	0021 001a 0406 0000 4550 2fff 0022 001e     !.......PE./"...
2fff0608:	0406 0000 4548 2fff ffff ffff 0007 0000     ....HE./........
2fff0618:	4560 2fff 0026 8007 000b 0000 4778 2fff     `E./&.......xG./
2fff0628:	0027 8008 000b 0000 4776 2fff 0025 0020     '.......vG./%. .
2fff0638:	000b 0000 4774 2fff 0092 0020 0105 0000     ....tG./.. .....
2fff0648:	47b0 2fff 0093 0020 0105 0000 47af 2fff     .G./.. ......G./
2fff0658:	0096 0012 0105 0000 47ae 2fff 0097 0012     .........G./....
2fff0668:	0105 0000 47ad 2fff 0098 001c 0105 0000     .....G./........
2fff0678:	47ac 2fff 0099 001c 0105 0000 47ab 2fff     .G./.........G./
2fff0688:	009a 0020 0105 0000 47aa 2fff 009b 001c     .. ......G./....
2fff0698:	0105 0000 47a9 2fff 009c 001c 0105 0000     .....G./........
2fff06a8:	47a8 2fff 0028 001b 0005 0000 47a7 2fff     .G./(........G./
2fff06b8:	009d 001c 0005 0000 47a6 2fff 002d 001c     .........G./-...
2fff06c8:	0005 0000 47a5 2fff 005c 802d 0005 0000     .....G./\.-.....
2fff06d8:	47a4 2fff 0089 802c 0005 0000 47a3 2fff     .G./..,......G./
2fff06e8:	0030 001d 0105 0000 47a2 2fff 0031 001d     0........G./1...
2fff06f8:	0105 0000 47a1 2fff 0032 001d 0105 0000     .....G./2.......
2fff0708:	47a0 2fff 0033 001d 0005 0000 479f 2fff     .G./3........G./
2fff0718:	0034 001d 0105 0000 479e 2fff 005d 8025     4........G./].%.
2fff0728:	0105 0000 479d 2fff 007c 8026 0005 0000     .....G./|.&.....
2fff0738:	479c 2fff 007d 8027 0005 0000 479b 2fff     .G./}.'......G./
2fff0748:	0066 8012 0005 0000 479a 2fff 0067 8013     f........G./g...
2fff0758:	0005 0000 4799 2fff 0068 8014 0005 0000     .....G./h.......
2fff0768:	4798 2fff 006f 0025 0005 0000 4797 2fff     .G./o.%......G./
2fff0778:	0074 0025 0005 0000 4796 2fff 0023 8006     t.%......G./#...
2fff0788:	0005 0000 4795 2fff 0039 0021 0005 0000     .....G./9.!.....
2fff0798:	4794 2fff 003a 0021 0005 0000 4793 2fff     .G./:.!......G./
2fff07a8:	003b 0021 0005 0000 4792 2fff 003c 0021     ;.!......G./<.!.
2fff07b8:	0005 0000 4791 2fff 003d 0021 0005 0000     .....G./=.!.....
2fff07c8:	4790 2fff 003e 0021 0005 0000 478f 2fff     .G./>.!......G./
2fff07d8:	003f 0021 0005 0000 478e 2fff 0040 0021     ?.!......G./@.!.
2fff07e8:	0005 0000 478d 2fff 0041 0021 0005 0000     .....G./A.!.....
2fff07f8:	478c 2fff 004a 0020 0005 0000 478b 2fff     .G./J. ......G./
2fff0808:	0090 801b 0005 0000 478a 2fff 0042 001d     .........G./B...
2fff0818:	0005 0000 4789 2fff 0043 001d 0005 0000     .....G./C.......
2fff0828:	4788 2fff 005b 801a 0005 0000 4787 2fff     .G./[........G./
2fff0838:	0044 001d 0105 0000 4786 2fff 0055 801e     D........G./U...
2fff0848:	0005 0000 4785 2fff 0056 801f 0005 0000     .....G./V.......
2fff0858:	4784 2fff 0024 0020 0005 0000 4783 2fff     .G./$. ......G./
2fff0868:	007e 8028 0005 0000 4782 2fff 007f 8029     ~.(......G./..).
2fff0878:	0005 0000 4781 2fff 0080 8028 0005 0000     .....G./..(.....
2fff0888:	4780 2fff 0082 802b 0005 0000 477f 2fff     .G./..+......G./
2fff0898:	0083 802b 0005 0000 477e 2fff 0081 802a     ..+.....~G./..*.
2fff08a8:	0005 0000 477d 2fff 004c 0020 0105 0000     ....}G./L. .....
2fff08b8:	477c 2fff 0059 8010 0005 0000 477b 2fff     |G./Y.......{G./
2fff08c8:	005a 8019 0005 0000 477a 2fff               Z.......zG./

2fff08d4 <clk_stm32_composite_ops>:
2fff08d4:	f399 2ffe 0000 0000 0000 0000 f36d 2ffe     .../........m../
2fff08e4:	f383 2ffe f357 2ffe 0000 0000               .../W../....

2fff08f0 <clk_stm32_pll_ops>:
2fff08f0:	c40d 2ffe 0000 0000 0000 0000 c4e9 2ffe     .../.........../
2fff0900:	c585 2ffe c3e9 2ffe 0000 0000               .../.../....

2fff090c <stm32_mp13_clk_pll>:
2fff090c:	0002 0000 000a 04a0 0001 0000 000b 04d0     ................
2fff091c:	0000 0000 000c 0500 0000 0000 000d 0520     .............. .

2fff092c <dividers_mp13>:
2fff092c:	0000 0000 04a8 0700 ff00 0000 0000 0000     ................
2fff093c:	04d8 0700 ff00 0000 0000 0000 04d8 0708     ................
2fff094c:	ff00 0000 0000 0000 04d8 0710 ff00 0000     ................
2fff095c:	0000 0000 0508 0700 ff00 0000 0000 0000     ................
2fff096c:	0508 0708 ff00 0000 0000 0000 0508 0710     ................
2fff097c:	ff00 0000 0000 0000 0528 0700 ff00 0000     ........(.......
2fff098c:	0000 0000 0528 0708 ff00 0000 0000 0000     ....(...........
2fff099c:	0528 0710 ff00 0000 0000 0000 0564 0400     (...........d...
2fff09ac:	ff00 0000 110a 2fff 0568 0300 1f00 0000     ......./h.......
2fff09bc:	10c6 2fff 056c 0400 1f00 0000 10a2 2fff     .../l........../
2fff09cc:	0570 0300 1f00 0000 10a2 2fff 0574 0300     p........../t...
2fff09dc:	1f00 0000 10a2 2fff 0578 0300 1f00 0000     ......./x.......
2fff09ec:	10a2 2fff 057c 0300 1f00 0000 10a2 2fff     .../|........../
2fff09fc:	0580 0300 1f00 0000 10a2 2fff 0584 0300     .........../....
2fff0a0c:	1f00 0000 0000 0000 0560 0600 ff00 0000     ........`.......
2fff0a1c:	0000 0000 0460 0404 ff00 0000 0000 0000     ....`...........
2fff0a2c:	0464 0404 ff00 0000 0000 0000 0440 0200     d...........@...
2fff0a3c:	ff02 0000 0000 0000 0468 0300 ff02 0000     ........h.......
2fff0a4c:	0000 0000 064c 0404 ff00 0000 0000 0000     ....L...........
2fff0a5c:	064c 040c ff00 0000                         L.......

2fff0a64 <parent_mp13>:
2fff0a64:	14b0 2fff 46f4 2fff 0004 0000 14aa 2fff     .../.F./......./
2fff0a74:	4760 2fff 0003 0000 14a2 2fff 46fa 2fff     `G./......./.F./
2fff0a84:	0004 0000 14c6 2fff 46ee 2fff 0002 0000     ......./.F./....
2fff0a94:	14c0 2fff 46e8 2fff 0003 0000 14b8 2fff     .../.F./......./
2fff0aa4:	46e2 2fff 0004 0000 14e0 2fff 46d0 2fff     .F./......./.F./
2fff0ab4:	0004 0000 14d6 2fff 4706 2fff 0005 0000     ......./.G./....
2fff0ac4:	14ca 2fff 4700 2fff 0006 0000 149a 2fff     .../.G./......./
2fff0ad4:	475a 2fff 0004 0000 13ba 2fff 476c 2fff     ZG./......./lG./
2fff0ae4:	0003 0000 13b4 2fff 4766 2fff 0003 0000     ......./fG./....
2fff0af4:	136e 2fff 4754 2fff 0004 0000 13a0 2fff     n../TG./......./
2fff0b04:	474e 2fff 0002 0000 139c 2fff 4748 2fff     NG./......./HG./
2fff0b14:	0002 0000 13c6 2fff 4742 2fff 0004 0000     ......./BG./....
2fff0b24:	1382 2fff 473c 2fff 0004 0000 1492 2fff     .../<G./......./
2fff0b34:	4736 2fff 0004 0000 148a 2fff 4730 2fff     6G./......./0G./
2fff0b44:	0004 0000 1482 2fff 472a 2fff 0004 0000     ......./*G./....
2fff0b54:	147a 2fff 4724 2fff 0004 0000 1404 2fff     z../$G./......./
2fff0b64:	471e 2fff 0006 0000 13fa 2fff 4718 2fff     .G./......./.G./
2fff0b74:	0005 0000 13f0 2fff 4712 2fff 0005 0000     ......./.G./....
2fff0b84:	13e4 2fff 470c 2fff 0006 0000 138a 2fff     .../.G./......./
2fff0b94:	46dc 2fff 0004 0000 137a 2fff 46d6 2fff     .F./....z../.F./
2fff0ba4:	0004 0000 1366 2fff 46ca 2fff 0004 0000     ....f../.F./....
2fff0bb4:	13da 2fff 46c4 2fff 0005 0000 13ce 2fff     .../.F./......./
2fff0bc4:	46be 2fff 0006 0000 13ac 2fff 46b8 2fff     .F./......./.F./
2fff0bd4:	0004 0000 13a4 2fff 46b2 2fff 0004 0000     ......./.F./....
2fff0be4:	13c0 2fff 46ac 2fff 0003 0000 1470 2fff     .../.F./....p../
2fff0bf4:	46a6 2fff 0005 0000 1466 2fff 46a0 2fff     .F./....f../.F./
2fff0c04:	0005 0000 145a 2fff 469a 2fff 0006 0000     ....Z../.F./....
2fff0c14:	1450 2fff 4694 2fff 0005 0000 1376 2fff     P../.F./....v../
2fff0c24:	468e 2fff 0002 0000 1444 2fff 4688 2fff     .F./....D../.F./
2fff0c34:	0006 0000 1438 2fff 4682 2fff 0006 0000     ....8../.F./....
2fff0c44:	142e 2fff 467c 2fff 0005 0000 1424 2fff     .../|F./....$../
2fff0c54:	4676 2fff 0005 0000 141a 2fff 4670 2fff     vF./......./pF./
2fff0c64:	0005 0000 1410 2fff 466a 2fff 0005 0000     ......./jF./....
2fff0c74:	1392 2fff 4664 2fff 0002 0000 1396 2fff     .../dF./......./
2fff0c84:	465e 2fff 0003 0000                         ^F./....

2fff0c8c <ddrphy_timing>:
2fff0c8c:	0018 0000 001c 0004 0020 0008 0034 000c     ........ ...4...
2fff0c9c:	0038 0010 003c 0014 0040 0018 0044 001c     8...<...@...D...
2fff0cac:	0048 0020 004c 0024                         H. .L.$.

2fff0cb4 <ddrphy_reg>:
2fff0cb4:	0008 0000 0024 0004 0028 0008 002c 000c     ....$...(...,...
2fff0cc4:	0030 0010 0050 0014 0184 0018 01c0 001c     0...P...........
2fff0cd4:	0200 0020                                   .. .

2fff0cd8 <ddr_perf>:
2fff0cd8:	0250 0000 0254 0004 025c 0008 0264 000c     P...T...\...d...
2fff0ce8:	026c 0010 0404 0014 0408 0018 0494 001c     l...............
2fff0cf8:	0498 0020 049c 0024 04a0 0028               .. ...$...(.

2fff0d04 <ddr_map>:
2fff0d04:	0204 0000 0208 0004 020c 0008 0210 000c     ................
2fff0d14:	0214 0010 0218 0014 0224 0018 0228 001c     ........$...(...
2fff0d24:	022c 0020                                   ,. .

2fff0d28 <ddr_timing>:
2fff0d28:	0064 0000 0100 0004 0104 0008 0108 000c     d...............
2fff0d38:	010c 0010 0110 0014 0114 0018 0118 001c     ................
2fff0d48:	011c 0020 0120 0024 0138 0028 0240 002c     .. . .$.8.(.@.,.

2fff0d58 <ddr_reg>:
2fff0d58:	0000 0000 0010 0004 0014 0008 0020 000c     ............ ...
2fff0d68:	0024 0010 0030 0014 0034 0018 0038 001c     $...0...4...8...
2fff0d78:	0050 0020 0060 0024 00c0 0028 0180 002c     P. .`.$...(...,.
2fff0d88:	0190 0030 0194 0034 0198 0038 01a0 003c     ..0...4...8...<.
2fff0d98:	01a4 0040 01a8 0044 01c4 0048 0244 004c     ..@...D...H.D.L.
2fff0da8:	0300 0050 0304 0054 030c 0058 036c 005c     ..P...T...X.l.\.
2fff0db8:	0400 0060                                   ..`.

2fff0dbc <presc_table>:
2fff0dbc:	0001 0002 0004 0006 0008 000a 000c 0010     ................
2fff0dcc:	0020 0040 0080 0100                          .@.....

2fff0dd4 <fixed_5v_voltage_table>:
2fff0dd4:	1388                                        ..

2fff0dd6 <vref_ddr_voltage_table>:
2fff0dd6:	0ce4                                        ..

2fff0dd8 <ldo4_voltage_table>:
2fff0dd8:	0ce4                                        ..

2fff0dda <ldo6_voltage_table>:
2fff0dda:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fff0dea:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff0dfa:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff0e0a:	0ce4                                        ..

2fff0e0c <ldo5_voltage_table>:
2fff0e0c:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff0e1c:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff0e2c:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff0e3c:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fff0e4a <ldo3_special_mode_table>:
	...

2fff0e4c <ldo3_voltage_table>:
2fff0e4c:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff0e5c:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff0e6c:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff0e7c:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4          ..............

2fff0e8a <ldo2_voltage_table>:
2fff0e8a:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff0e9a:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff0eaa:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff0eba:	0ce4                                        ..

2fff0ebc <ldo1_voltage_table>:
2fff0ebc:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff0ecc:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff0edc:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff0eec:	0ce4                                        ..

2fff0eee <buck4_voltage_table>:
2fff0eee:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fff0efe:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fff0f0e:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fff0f1e:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fff0f2e:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fff0f3e:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fff0f4e:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fff0f5e:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fff0f68 <buck3_voltage_table>:
2fff0f68:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff0f78:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff0f88:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fff0f98:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fff0fa8:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fff0fb8:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fff0fc8:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fff0fd8 <buck2_voltage_table>:
2fff0fd8:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff0fe8:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff0ff8:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fff1008:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fff1018:	0578 0578 05aa 05aa 05dc                    x.x.......

2fff1022 <buck1_voltage_table>:
2fff1022:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fff1032:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fff1042:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fff1052:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fff1062:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fff1072:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fff1082:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fff1092:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fff10a2 <apb_div_table>:
2fff10a2:	0000 0001 0001 0002 0002 0004 0003 0008     ................
2fff10b2:	0004 0010 0005 0010 0006 0010 0007 0010     ................
2fff10c2:	0000 0000                                   ....

2fff10c6 <mlahb_div_table>:
2fff10c6:	0000 0001 0001 0002 0002 0004 0003 0008     ................
2fff10d6:	0004 0010 0005 0020 0006 0040 0007 0080     ...... ...@.....
2fff10e6:	0008 0100 0009 0200 000a 0200 000b 0200     ................
2fff10f6:	000c 0200 000d 0200 000e 0200 000f 0200     ................
2fff1106:	0000 0000                                   ....

2fff110a <axi_div_table>:
2fff110a:	0000 0001 0001 0002 0002 0003 0003 0004     ................
2fff111a:	0004 0004 0005 0004 0006 0004 0007 0004     ................
2fff112a:	0000 0000                                   ....

2fff112e <gates_mp13>:
2fff112e:	0000 0000 0400 0000 0400 0014 0404 0000     ................
2fff113e:	0420 0100 0420 0104 0420 0108 0404 0001      ... ... .......
2fff114e:	0428 0004 0400 0002 0428 0008 0428 0000     (.......(...(...
2fff115e:	0460 000c 0464 000c 0468 0008 0468 0009     `...d...h...h...
2fff116e:	04a0 0000 04a0 0004 04a0 0005 04a0 0006     ................
2fff117e:	04d0 0000 04d0 0004 04d0 0005 04d0 0006     ................
2fff118e:	0500 0000 0500 0004 0500 0005 0500 0006     ................
2fff119e:	0520 0000 0520 0004 0520 0005 0520 0006      ... ... ... ...
2fff11ae:	05c0 0000 05c0 0001 05c0 0004 05c0 0005     ................
2fff11be:	05c0 0006 05c0 0007 05c0 0008 05c0 0009     ................
2fff11ce:	05c0 000a 0700 0100 0700 0101 0700 0102     ................
2fff11de:	0700 0103 0700 0104 0700 0105 0700 0109     ................
2fff11ee:	0700 010b 0700 010c 0700 010f 0700 0110     ................
2fff11fe:	0700 0111 0700 0112 0700 0113 0700 0115     ................
2fff120e:	0700 0116 0700 011a 0708 0100 0708 0101     ................
2fff121e:	0708 0108 0708 010d 0708 0110 0708 0111     ................
2fff122e:	0708 0114 0708 0115 0708 0118 0710 0100     ................
2fff123e:	0710 0101 0710 0102 0710 0103 0710 010d     ................
2fff124e:	0710 0110 0710 0111 0710 0114 0718 0100     ................
2fff125e:	0728 0101 0728 0108 0728 010f 0728 0110     (...(...(...(...
2fff126e:	0728 0114 0730 0100 0740 0108 0740 010b     (...0...@...@...
2fff127e:	0740 010d 0740 010f 0740 0110 0740 0114     @...@...@...@...
2fff128e:	0748 0100 0748 0101 0748 0102 0748 0103     H...H...H...H...
2fff129e:	0748 0104 0748 0105 0748 0106 0748 0107     H...H...H...H...
2fff12ae:	0748 0108 0748 0109 0748 010a 0748 010b     H...H...H...H...
2fff12be:	0748 010c 0750 0100 0750 0101 0750 0102     H...P...P...P...
2fff12ce:	0750 0103 0750 0104 0750 0105 0750 0106     P...P...P...P...
2fff12de:	0750 0108 0760 010f 0768 0100 0768 0101     P...`...h...h...
2fff12ee:	0768 0102 0768 0103 0768 0104 0768 0105     h...h...h...h...
2fff12fe:	0768 0106 0768 0107 0768 0108 0778 0102     h...h...h...x...
2fff130e:	0778 0103 0778 0104 0778 0105 0778 0106     x...x...x...x...
2fff131e:	0778 0108 0778 0110 0780 0101 0780 0107     x...x...........
2fff132e:	0780 0108 0780 0109 0780 010a 0780 010c     ................
2fff133e:	0780 010e 0780 0110 0780 0111 0780 0114     ................
2fff134e:	0780 0118 0780 011b 0780 011c 0780 011d     ................
2fff135e:	0780 011e 0788 0100                         ........

2fff1366 <SAES_src>:
2fff1366:	0020 0022 0018 0004                          .".....

2fff136e <DCMIPP_src>:
2fff136e:	0020 0011 0016 0022                          .....".

2fff1376 <STGEN_src>:
2fff1376:	0001 0002                                   ....

2fff137a <RNG1_src>:
2fff137a:	0003 0018 0000 0004                         ........

2fff1382 <FMC_src>:
2fff1382:	0020 0015 0016 0022                          .....".

2fff138a <QSPI_src>:
2fff138a:	0020 0015 0016 0022                          .....".

2fff1392 <USBO_src>:
2fff1392:	0018 0026                                   ..&.

2fff1396 <USBPHY_src>:
2fff1396:	0002 0018 0009                              ......

2fff139c <ETH2_src>:
2fff139c:	0016 0014                                   ....

2fff13a0 <ETH1_src>:
2fff13a0:	0016 0014                                   ....

2fff13a4 <SDMMC2_src>:
2fff13a4:	0020 0015 0016 0001                          .......

2fff13ac <SDMMC1_src>:
2fff13ac:	0020 0015 0016 0001                          .......

2fff13b4 <ADC2_src>:
2fff13b4:	0018 0022 0014                              .."...

2fff13ba <ADC1_src>:
2fff13ba:	0018 0022 0014                              .."...

2fff13c0 <SPDIF_src>:
2fff13c0:	0016 0014 0001                              ......

2fff13c6 <FDCAN_src>:
2fff13c6:	0002 0014 0017 0018                         ........

2fff13ce <SAI2_src>:
2fff13ce:	0017 0014 0006 0022 ffff 0015               ......".....

2fff13da <SAI1_src>:
2fff13da:	0017 0014 0006 0022 0015                    ......"...

2fff13e4 <LPTIM45_src>:
2fff13e4:	001b 0016 0014 0005 0004 0022               ..........".

2fff13f0 <LPTIM3_src>:
2fff13f0:	001b 0017 0022 0005 0004                    ....".....

2fff13fa <LPTIM2_src>:
2fff13fa:	001b 0017 0022 0005 0004                    ....".....

2fff1404 <LPTIM1_src>:
2fff1404:	0019 0016 0014 0005 0004 0022               ..........".

2fff1410 <UART78_src>:
2fff1410:	0019 0017 0001 0003 0002                    ..........

2fff141a <UART6_src>:
2fff141a:	001a 0017 0001 0003 0002                    ..........

2fff1424 <UART4_src>:
2fff1424:	0019 0017 0001 0003 0002                    ..........

2fff142e <UART35_src>:
2fff142e:	0019 0017 0001 0003 0002                    ..........

2fff1438 <UART2_src>:
2fff1438:	001e 0014 0001 0003 0017 0002               ............

2fff1444 <UART1_src>:
2fff1444:	001e 0014 0001 0003 0017 0002               ............

2fff1450 <SPI5_src>:
2fff1450:	001e 0017 0001 0003 0002                    ..........

2fff145a <SPI4_src>:
2fff145a:	001e 0017 0001 0003 0002 0006               ............

2fff1466 <SPI23_src>:
2fff1466:	0016 0014 0006 0022 0015                    ......"...

2fff1470 <SPI1_src>:
2fff1470:	0016 0014 0006 0022 0015                    ......"...

2fff147a <I2C5_src>:
2fff147a:	001e 0018 0001 0003                         ........

2fff1482 <I2C4_src>:
2fff1482:	001e 0018 0001 0003                         ........

2fff148a <I2C3_src>:
2fff148a:	001e 0018 0001 0003                         ........

2fff1492 <I2C12_src>:
2fff1492:	0019 0018 0001 0003                         ........

2fff149a <CKPER_src>:
2fff149a:	0001 0003 0002 0000                         ........

2fff14a2 <MLAHBS_src>:
2fff14a2:	0001 0002 0003 0013                         ........

2fff14aa <AXI_src>:
2fff14aa:	0001 0002 0010                              ......

2fff14b0 <MPU_src>:
2fff14b0:	0001 0002 000e 000f                         ........

2fff14b8 <PLL4_src>:
2fff14b8:	0001 0002 0003 0006                         ........

2fff14c0 <PLL3_src>:
2fff14c0:	0001 0002 0003                              ......

2fff14c6 <PLL12_src>:
2fff14c6:	0001 0002                                   ....

2fff14ca <MCO2_src>:
2fff14ca:	001f 0020 0021 0016 0002 0001               .. .!.......

2fff14d6 <MCO1_src>:
2fff14d6:	0001 0002 0003 0004 0005                    ..........

2fff14e0 <RTC_src>:
2fff14e0:	0000 0005 0004 0002                         ........

2fff14e8 <version_string>:
2fff14e8:	3276 382e 732d 6d74 3233 706d 2d31 3272     v2.8-stm32mp1-r2
2fff14f8:	302e 6428 6265 6775 3a29 3161 3464 6137     .0(debug):a1d47a
2fff1508:	6663 2d64 6964 7472 2879 3161 3464 6137     cfd-dirty(a1d47a
2fff1518:	6663 0029                                   cf).

2fff151c <build_message>:
2fff151c:	7542 6c69 2074 203a 3931 313a 3a32 3833     Built : 19:12:38
2fff152c:	202c 7541 2067 3032 3220 3230 0034 6c62     , Aug 20 2024.bl
2fff153c:	2f32 6c62 5f32 6d69 6761 5f65 6f6c 6461     2/bl2_image_load
2fff154c:	765f 2e32 0063 421e 324c 203a 6c50 7461     _v2.c..BL2: Plat
2fff155c:	6f66 6d72 7320 7465 7075 6120 726c 6165     form setup alrea
2fff156c:	7964 6420 6e6f 2165 0a21 2800 4c42 3a32     dy done!!..(BL2:
2fff157c:	4420 696f 676e 7020 616c 6674 726f 206d      Doing platform 
2fff158c:	6573 7574 0a70 0a00 4c42 3a32 4620 6961     setup...BL2: Fai
2fff159c:	756c 6572 6920 206e 7270 2065 6d69 6761     lure in pre imag
2fff15ac:	2065 6f6c 6461 6820 6e61 6c64 6e69 2067     e load handling 
2fff15bc:	2528 2969 000a 4228 324c 203a 6f4c 6461     (%i)..(BL2: Load
2fff15cc:	6e69 2067 6d69 6761 2065 6469 2520 0a75     ing image id %u.
2fff15dc:	0a00 4c42 3a32 4620 6961 656c 2064 6f74     ..BL2: Failed to
2fff15ec:	6c20 616f 2064 6d69 6761 2065 6469 2520      load image id %
2fff15fc:	2075 2528 2969 000a 4228 324c 203a 6b53     u (%i)..(BL2: Sk
2fff160c:	7069 6c20 616f 6964 676e 6920 616d 6567     ip loading image
2fff161c:	6920 2064 7525 000a 420a 324c 203a 6146      id %u...BL2: Fa
2fff162c:	6c69 7275 2065 6e69 7020 736f 2074 6d69     ilure in post im
2fff163c:	6761 2065 6f6c 6461 6820 6e61 6c64 6e69     age load handlin
2fff164c:	2067 2528 2969 000a 4214 324c 203a 7325     g (%i)...BL2: %s
2fff165c:	000a 4214 324c 203a 6f42 746f 6e69 2067     ...BL2: Booting 
2fff166c:	4c42 3233 000a 6f63 6d6d 6e6f 642f 7365     BL32..common/des
2fff167c:	5f63 6d69 6761 5f65 6f6c 6461 632e           c_image_load.c.

2fff168b <CSWTCH.28>:
2fff168b:	1019 631b 6d6f 6f6d 2f6e 6466 5f74 7277     ...common/fdt_wr
2fff169b:	7061 6570 7372 632e 1e00 7250 706f 7265     appers.c..Proper
2fff16ab:	7974 6c20 6e65 7467 2068 696d 6d73 7461     ty length mismat
2fff16bb:	6863 000a 431e 756f 646c 276e 2074 6966     ch...Couldn't fi
2fff16cb:	646e 7020 6f72 6570 7472 2079 7325 6920     nd property %s i
2fff16db:	206e 7464 0a62 1e00 7453 6972 676e 6f20     n dtb...String o
2fff16eb:	2066 7270 706f 7265 7974 2520 2073 6e69     f property %s in
2fff16fb:	6420 6274 6820 7361 6220 6565 206e 7274      dtb has been tr
2fff170b:	6e75 6163 6574 0a64 2f00 6573 7563 6572     uncated../secure
2fff171b:	632d 6f68 6573 006e 632f 6f68 6573 006e     -chosen./chosen.
2fff172b:	7473 6f64 7475 702d 7461 0068 7264 7669     stdout-path.driv
2fff173b:	7265 2f73 6f69 692f 5f6f 6966 2e70 0063     ers/io/io_fip.c.
2fff174b:	461e 6961 656c 2064 6f74 6f20 7462 6961     .Failed to obtai
2fff175b:	206e 6572 6566 6572 636e 2065 6f74 6920     n reference to i
2fff176b:	616d 6567 6920 3d64 7525 2820 6925 0a29     mage id=%u (%i).
2fff177b:	1e00 6146 6c69 6465 7420 206f 6361 6563     ..Failed to acce
2fff178b:	7373 6920 616d 6567 6920 3d64 7525 2820     ss image id=%u (
2fff179b:	6925 0a29 1e00 6946 6d72 6177 6572 4920     %i)...Firmware I
2fff17ab:	616d 6567 5020 6361 616b 6567 6820 6165     mage Package hea
2fff17bb:	6564 2072 6863 6365 206b 6166 6c69 6465     der check failed
2fff17cb:	0a2e 1e00 6146 6c69 6465 7420 206f 706f     ....Failed to op
2fff17db:	6e65 4620 5049 2820 6925 0a29 1e00 6966     en FIP (%i)...fi
2fff17eb:	5f70 6966 656c 725f 6165 3a64 6620 6961     p_file_read: fai
2fff17fb:	656c 2064 6f74 7320 6565 0a6b 1e00 6146     led to seek...Fa
2fff180b:	6c69 6465 7420 206f 6572 6461 7020 7961     iled to read pay
2fff181b:	6f6c 6461 2820 6925 0a29 1e00 6966 5f70     load (%i)...fip_
2fff182b:	6966 656c 6f5f 6570 206e 203a 6e4f 796c     file_open : Only
2fff183b:	6f20 656e 6f20 6570 206e 6966 656c 6120      one open file a
2fff184b:	2074 2061 6974 656d 0a2e 1e00 6146 6c69     t a time....Fail
2fff185b:	6465 7420 206f 706f 6e65 4620 7269 776d     ed to open Firmw
2fff186b:	7261 2065 6d49 6761 2065 6150 6b63 6761     are Image Packag
2fff187b:	2065 2528 2969 000a 661e 7069 665f 6c69     e (%i)...fip_fil
2fff188b:	5f65 706f 6e65 203a 6166 6c69 6465 7420     e_open: failed t
2fff189b:	206f 6573 6b65 000a 461e 6961 656c 2064     o seek...Failed 
2fff18ab:	6f74 7220 6165 2064 4946 2050 2528 2969     to read FIP (%i)
2fff18bb:	000a                                        ..

2fff18bd <uuid_null.0>:
	...
2fff18cd:	7264 7669 7265 2f73 6f69 692f 5f6f 656d     drivers/io/io_me
2fff18dd:	6d6d 7061 632e 1e00 2041 654d 6d6d 7061     mmap.c..A Memmap
2fff18ed:	6420 7665 6369 2065 7369 6120 726c 6165      device is alrea
2fff18fd:	7964 6120 7463 7669 2e65 4320 6f6c 6573     dy active. Close
2fff190d:	6620 7269 7473 0a2e 6400 6972 6576 7372      first...drivers
2fff191d:	692f 2f6f 6f69 735f 6f74 6172 6567 632e     /io/io_storage.c
2fff192d:	0a00 4444 2052 7974 6570 6e20 746f 7320     ..DDR type not s
2fff193d:	7075 6f70 7472 6465 000a 7473 7461 6369     upported..static
2fff194d:	7300 2c74 7473 336d 6d32 3170 2d33 6464     .st,stm32mp13-dd
2fff195d:	0072 250a 3a73 4320 6e61 6f6e 2074 6572     r..%s: Cannot re
2fff196d:	6461 4420 5244 6e20 646f 2065 6e69 4420     ad DDR node in D
2fff197d:	0a54 0a00 4444 2052 7772 7420 7365 3a74     T...DDR rw test:
2fff198d:	4320 6e61 7427 6120 6363 7365 2073 656d      Can't access me
2fff199d:	6f6d 7972 4020 3020 2578 786c 000a 440a     mory @ 0x%lx...D
2fff19ad:	5244 6420 7461 2061 7562 2073 6574 7473     DR data bus test
2fff19bd:	203a 6163 276e 2074 6361 6563 7373 6d20     : can't access m
2fff19cd:	6d65 726f 2079 2040 7830 6c25 0a78 0a00     emory @ 0x%lx...
2fff19dd:	4444 2052 6461 7264 6220 7375 7420 7365     DDR addr bus tes
2fff19ed:	3a74 6320 6e61 7427 6120 6363 7365 2073     t: can't access 
2fff19fd:	656d 6f6d 7972 4020 3020 2578 786c 000a     memory @ 0x%lx..
2fff1a0d:	440a 5244 7320 7a69 3a65 3020 2578 787a     .DDR size: 0x%zx
2fff1a1d:	6420 656f 2073 6f6e 2074 616d 6374 2068      does not match 
2fff1a2d:	5444 6320 6e6f 6966 3a67 3020 2578 787a     DT config: 0x%zx
2fff1a3d:	000a 4d28 6d65 726f 2079 6973 657a 3d20     ..(Memory size =
2fff1a4d:	3020 2578 787a 2820 7a25 2075 424d 0a29      0x%zx (%zu MB).
2fff1a5d:	0a00 4444 2052 7865 6570 7463 6465 6620     ..DDR expected f
2fff1a6d:	6572 2071 7525 6b20 7a48 202c 7563 7272     req %u kHz, curr
2fff1a7d:	6e65 2074 7369 2520 756c 6b20 7a48 000a     ent is %lu kHz..

2fff1a8d <__func__.0>:
2fff1a8d:	7473 336d 6d32 3170 645f 7264 735f 7465     stm32mp1_ddr_set
2fff1a9d:	7075 7300 2c74 7463 2d6c 6572 0067 7473     up.st,ctl-reg.st
2fff1aad:	632c 6c74 742d 6d69 6e69 0067 7473 632c     ,ctl-timing.st,c
2fff1abd:	6c74 6d2d 7061 7300 2c74 7463 2d6c 6570     tl-map.st,ctl-pe
2fff1acd:	6672 7300 2c74 6870 2d79 6572 0067 7473     rf.st,phy-reg.st
2fff1add:	702c 7968 742d 6d69 6e69 0067 7473 6d2c     ,phy-timing.st,m
2fff1aed:	6d65 732d 6570 6465 7300 2c74 656d 2d6d     em-speed.st,mem-
2fff1afd:	616e 656d 2800 4152 3a4d 2520 0a73 0a00     name.(RAM: %s...
2fff1b0d:	7325 203a 6143 6e6e 746f 7220 6165 2064     %s: Cannot read 
2fff1b1d:	7325 202c 7265 6f72 3d72 6425 000a          %s, error=%d..

2fff1b2b <__func__.0>:
2fff1b2b:	7473 336d 6d32 5f70 6464 5f72 7464 675f     stm32mp_ddr_dt_g
2fff1b3b:	7465 705f 7261 6d61 0a00 434d 3a45 6520     et_param..MCE: e
2fff1b4b:	636e 7972 7470 6f69 206e 6f6d 6564 6f20     ncryption mode o
2fff1b5b:	7475 6f20 2066 6172 676e 2065 7265 6f72     ut of range erro
2fff1b6b:	0a72 0a00 434d 3a45 7320 6174 7472 652f     r...MCE: start/e
2fff1b7b:	646e 6120 6464 6572 7373 6c20 776f 7265     nd address lower
2fff1b8b:	7420 6168 206e 4444 2052 6162 6573 000a      than DDR base..
2fff1b9b:	4d0a 4543 203a 7473 7261 2f74 6e65 2064     .MCE: start/end 
2fff1bab:	6461 7264 7365 2073 6968 6867 7265 7420     address higher t
2fff1bbb:	6168 206e 6870 7379 6369 6c61 6520 646e     han physical end
2fff1bcb:	000a 4d0a 4543 203a 7473 7261 2074 6461     ...MCE: start ad
2fff1bdb:	7264 7365 2073 6968 6867 7265 7420 6168     dress higher tha
2fff1beb:	206e 726f 6520 7571 6c61 7420 206f 6e65     n or equal to en
2fff1bfb:	2064 6e6f 0a65 0a00 434d 3a45 7320 6174     d one...MCE: sta
2fff1c0b:	7472 652f 646e 6120 6464 6572 7373 6720     rt/end address g
2fff1c1b:	6172 756e 616c 6972 7974 6e20 746f 7220     ranularity not r
2fff1c2b:	7365 6570 7463 6465 000a 4d0a 4543 203a     espected...MCE: 
2fff1c3b:	6e75 7865 6570 7463 6465 4920 2050 6576     unexpected IP ve
2fff1c4b:	7372 6f69 206e 207b 7830 7825 202c 7830     rsion { 0x%x, 0x
2fff1c5b:	7825 202c 7830 7825 202c 7830 7825 7d20     %x, 0x%x, 0x%x }
2fff1c6b:	000a 4d0a 4543 203a 6e65 7263 7079 6974     ...MCE: encrypti
2fff1c7b:	6e6f 6620 6165 7574 6572 6520 7272 726f     on feature error
2fff1c8b:	000a 7473 6d2c 6d65 652d 636e 7972 7470     ..st,mem-encrypt
2fff1c9b:	0a00 4346 4e4f 3a46 4320 6e61 7427 6620     ..FCONF: Can't f
2fff1cab:	6e69 2064 7325 6320 6d6f 6170 6974 6c62     ind %s compatibl
2fff1cbb:	2065 6e69 6420 6274 000a 656d 6f6d 7972     e in dtb..memory
2fff1ccb:	722d 6e61 6567 0073 461e 4f43 464e 203a     -ranges..FCONF: 
2fff1cdb:	6552 6461 6320 6c65 206c 6166 6c69 6465     Read cell failed
2fff1ceb:	6620 726f 2520 0a73 4600 5f57 4f43 464e      for %s..FW_CONF
2fff1cfb:	4749 6d00 6563 635f 6e6f 6966 0067 7473     IG.mce_config.st
2fff1d0b:	732c 6d74 3233 3768 752d 7261 0074 7264     ,stm32h7-uart.dr
2fff1d1b:	7669 7265 2f73 7473 752f 7261 2f74 7473     ivers/st/uart/st
2fff1d2b:	336d 5f32 6175 7472 632e 6c00 6269 662f     m32_uart.c.lib/f
2fff1d3b:	6f63 666e 662f 6f63 666e 632e 2800 4346     conf/fconf.c.(FC
2fff1d4b:	4e4f 3a46 4320 6e6f 6966 2067 6966 656c     ONF: Config file
2fff1d5b:	7720 7469 2068 6d69 6761 2065 4449 253a      with image ID:%
2fff1d6b:	2075 6f6c 6461 6465 6120 2074 6461 7264     u loaded at addr
2fff1d7b:	7365 2073 203d 7830 6c25 0a78 0a00 4346     ess = 0x%lx...FC
2fff1d8b:	4e4f 3a46 4920 766e 6c61 6469 4420 4254     ONF: Invalid DTB
2fff1d9b:	6620 6c69 2065 6170 7373 6465 6620 726f      file passed for
2fff1dab:	2520 0a73 2800 4346 4e4f 3a46 5220 6165      %s..(FCONF: Rea
2fff1dbb:	6964 676e 2520 2073 6966 6d72 6177 6572     ding %s firmware
2fff1dcb:	6320 6e6f 6966 7567 6172 6974 6e6f 6620      configuration f
2fff1ddb:	6c69 2065 7266 6d6f 203a 7830 6c25 0a78     ile from: 0x%lx.
2fff1deb:	2800 4346 4e4f 3a46 5220 6165 6964 676e     .(FCONF: Reading
2fff1dfb:	6620 7269 776d 7261 2065 6f63 666e 6769      firmware config
2fff1e0b:	7275 7461 6f69 206e 6e69 6f66 6d72 7461     uration informat
2fff1e1b:	6f69 206e 6f66 3a72 2520 0a73 0a00 6143     ion for: %s...Ca
2fff1e2b:	6e6e 746f 6120 6c6c 636f 7461 2065 7a25     nnot allocate %z
2fff1e3b:	2075 626f 656a 7463 2073 756f 2074 666f     u objects out of
2fff1e4b:	7020 6f6f 206c 2528 757a 6f20 6a62 6365      pool (%zu objec
2fff1e5b:	7374 6c20 6665 2974 0a2e 6600 6f63 666e     ts left)...fconf
2fff1e6b:	642c 6e79 635f 6766 642d 6274 725f 6765     ,dyn_cfg-dtb_reg
2fff1e7b:	7369 7274 0079 460a 4f43 464e 203a 6e49     istry..FCONF: In
2fff1e8b:	6f63 706d 656c 6574 6320 6e6f 6966 7567     complete configu
2fff1e9b:	6172 6974 6e6f 7020 6f72 6570 7472 2079     ration property 
2fff1eab:	6e69 6420 6274 722d 6765 7369 7274 2e79     in dtb-registry.
2fff1ebb:	000a 616d 2d78 6973 657a 6e00 2d73 6f6c     ..max-size.ns-lo
2fff1ecb:	6461 612d 6464 6572 7373 0a00 6425 203a     ad-address..%d: 
2fff1edb:	6466 5f74 6f66 5f72 6165 6863 735f 6275     fdt_for_each_sub
2fff1eeb:	6f6e 6564 2928 203a 6425 000a 461e 4f43     node(): %d...FCO
2fff1efb:	464e 203a 6e49 6176 696c 2064 6f63 666e     NF: Invalid conf
2fff1f0b:	6769 6920 2064 7525 000a 7964 5f6e 6663     ig id %u..dyn_cf
2fff1f1b:	0067 541e 6568 6c20 616f 2064 6461 7264     g..The load addr
2fff1f2b:	7365 2073 6e69 6f20 7470 6565 6820 6165     ess in optee hea
2fff1f3b:	6564 2072 7025 2d20 2520 2070 7369 6e20     der %p - %p is n
2fff1f4b:	746f 6920 206e 6572 6573 7672 6465 6120     ot in reserved a
2fff1f5b:	6572 3a61 2520 2070 202d 7025 0a2e 6c00     rea: %p - %p...l
2fff1f6b:	6269 6f2f 7470 6565 6f2f 7470 6565 755f     ib/optee/optee_u
2fff1f7b:	6974 736c 632e 2800 504f 4554 2045 7065     tils.c.(OPTEE ep
2fff1f8b:	303d 2578 0a78 2800 504f 4554 2045 6568     =0x%x..(OPTEE he
2fff1f9b:	6461 7265 6920 666e 3a6f 000a 2028 2020     ader info:..(   
2fff1fab:	2020 6d20 6761 6369 303d 2578 0a78 2800        magic=0x%x..(
2fff1fbb:	2020 2020 2020 6576 7372 6f69 3d6e 7830           version=0x
2fff1fcb:	7825 000a 2028 2020 2020 6120 6372 3d68     %x..(      arch=
2fff1fdb:	7830 7825 000a 2028 2020 2020 6620 616c     0x%x..(      fla
2fff1feb:	7367 303d 2578 0a78 2800 2020 2020 2020     gs=0x%x..(      
2fff1ffb:	626e 695f 616d 6567 3d73 7830 7825 000a     nb_images=0x%x..
2fff200b:	4928 766e 6c61 6469 4f20 5450 4545 6820     (Invalid OPTEE h
2fff201b:	6165 6564 2c72 7320 7465 6c20 6765 6361     eader, set legac
2fff202b:	2079 6f6d 6564 0a2e 0a00 6150 6567 2064     y mode....Paged 
2fff203b:	6d69 6761 2065 7369 6e20 746f 7320 7075     image is not sup
2fff204b:	6f70 7472 6465 000a 500a 7261 6573 6f20     ported...Parse o
2fff205b:	7470 6565 6920 616d 6567 6620 6961 656c     ptee image faile
2fff206b:	2e64 000a 430a 6e61 6f6e 2074 6f62 746f     d....Cannot boot
2fff207b:	6120 206e 4141 6372 3668 2034 504f 542d      an AArch64 OP-T
2fff208b:	4545 000a 5528 6973 676e 5320 4d44 434d     EE..(Using SDMMC
2fff209b:	000a 5528 6973 676e 4520 4d4d 0a43 2800     ..(Using EMMC..(
2fff20ab:	7355 6e69 2067 5053 2049 4f4e 0a52 2800     Using SPI NOR..(
2fff20bb:	7355 6e69 2067 4d46 2043 414e 444e 000a     Using FMC NAND..
2fff20cb:	5528 6973 676e 5320 4950 4e20 4e41 0a44     (Using SPI NAND.
2fff20db:	2800 7355 6e69 2067 4155 5452 000a 5528     .(Using UART..(U
2fff20eb:	6973 676e 5520 4253 000a 420a 6f6f 2074     sing USB...Boot 
2fff20fb:	6e69 6574 6672 6361 2065 7525 6e20 746f     interface %u not
2fff210b:	6620 756f 646e 000a 2028 4920 736e 6174      found..(  Insta
2fff211b:	636e 2065 6425 000a 4228 6f6f 2074 7375     nce %d..(Boot us
2fff212b:	6465 7020 7261 6974 6974 6e6f 6620 6273     ed partition fsb
2fff213b:	256c 0a75 7000 616c 2f74 7473 632f 6d6f     l%u..plat/st/com
2fff214b:	6f6d 2f6e 6c62 5f32 6f69 735f 6f74 6172     mon/bl2_io_stora
2fff215b:	6567 632e 0a00 6f42 746f 6920 746e 7265     ge.c..Boot inter
2fff216b:	6166 6563 2520 2064 6f6e 2074 7573 7070     face %d not supp
2fff217b:	726f 6574 0a64 0a00 4946 2050 6f4e 2074     orted...FIP Not 
2fff218b:	6f66 6e75 0a64 2800 4155 5452 203a 6572     found..(UART: re
2fff219b:	6461 7020 6168 6573 2520 2075 7461 3020     ad phase %u at 0
2fff21ab:	2578 786c 7320 7a69 2065 7830 7a25 0a78     x%lx size 0x%zx.
2fff21bb:	2800 4155 5452 203a 6f43 6e6e 6365 6574     .(UART: Connecte
2fff21cb:	0a64 2800 4155 5452 203a 6552 6573 0a74     d..(UART: Reset.
2fff21db:	1e00 4155 5452 203a 6142 2064 6170 6b63     ..UART: Bad pack
2fff21eb:	7465 6e20 6d75 6562 2072 6572 6563 7669     et number receiv
2fff21fb:	3a65 2520 2c75 6520 7078 6365 6574 2064     e: %u, expected 
2fff220b:	7525 000a 440a 776f 6c6e 616f 2064 766f     %u...Download ov
2fff221b:	7265 6c66 776f 6120 2074 7025 000a 490a     erflow at %p...I
2fff222b:	766e 6c61 6469 7320 6174 7472 6120 2074     nvalid start at 
2fff223b:	7825 202c 6f66 2072 6870 7361 2065 7525     %x, for phase %u
2fff224b:	000a 460a 5049 4820 6165 6564 2072 6863     ...FIP Header ch
2fff225b:	6365 206b 6166 6c69 6465 2520 786c 202c     eck failed %lx, 
2fff226b:	6f66 2072 6870 7361 2065 7525 000a 5528     for phase %u..(U
2fff227b:	5241 3a54 5320 6174 7472 7020 6168 6573     ART: Start phase
2fff228b:	2520 0a75 1e00 4155 5452 203a 6e55 6e6b      %u...UART: Unkn
2fff229b:	776f 206e 6f63 6d6d 6e61 0a64                own command..

2fff22a8 <command_tab>:
2fff22a8:	0100 0302 3121 0002 7300 2c74 6f69 662d     ....!1...st,io-f
2fff22b8:	7069 682d 6e61 6c64 0065 4254 465f 0057     ip-handle.TB_FW.
2fff22c8:	7473 336d 6d32 5f70 6f69 6200 336c 5f32     stm32mp_io.bl32_
2fff22d8:	7575 6469 6200 336c 5f32 7865 7274 3161     uuid.bl32_extra1
2fff22e8:	755f 6975 0064 6c62 3233 655f 7478 6172     _uuid.bl32_extra
2fff22f8:	5f32 7575 6469 6200 336c 5f33 7575 6469     2_uuid.bl33_uuid
2fff2308:	6800 5f77 6663 5f67 7575 6469 7400 736f     .hw_cfg_uuid.tos
2fff2318:	665f 5f77 6663 5f67 7575 6469 0a00 6e49     _fw_cfg_uuid..In
2fff2328:	6176 696c 2064 4444 2052 6e69 7469 203a     valid DDR init: 
2fff2338:	7265 6f72 2072 6425 000a 440a 5244 6d20     error %d...DDR m
2fff2348:	7061 6970 676e 203a 7265 6f72 2072 6425     apping: error %d
2fff2358:	000a 6166 6c69 6465 7300 6375 6563 6465     ..failed.succeed
2fff2368:	6465 4900 544e 5245 414e 004c 5845 4554     ed.INTERNAL.EXTE
2fff2378:	4e52 4c41 1400 6f4d 6564 3a6c 2520 0a73     RNAL..Model: %s.
2fff2388:	1400 6f42 746f 6f72 206d 7561 6874 6e65     ..Bootrom authen
2fff2398:	6974 6163 6974 6e6f 2520 0a73 0a00 2a2a     tication %s...**
2fff23a8:	4920 544e 5552 4953 4e4f 4120 454c 5452      INTRUSION ALERT
2fff23b8:	203a 534c 2045 4f4d 494e 4f54 4952 474e     : LSE MONITORING
2fff23c8:	5420 4d41 4550 2052 4544 4554 5443 4445      TAMPER DETECTED
2fff23d8:	2a20 0a2a 0a00 2a2a 5220 6265 6f6f 6974      **...** Rebooti
2fff23e8:	676e 2e2e 202e 2a2a 000a 2a0a 202a 4e49     ng... **...** IN
2fff23f8:	5254 5355 4f49 204e 4c41 5245 3a54 2520     TRUSION ALERT: %
2fff2408:	2073 4154 504d 5245 2520 2075 4544 4554     s TAMPER %u DETE
2fff2418:	5443 4445 2a20 0a2a 0a00 6148 646e 696c     CTED **...Handli
2fff2428:	676e 5020 746f 6e65 6974 6c61 7420 6d61     ng Potential tam
2fff2438:	6570 0a72 0a00 6148 646e 696c 676e 4320     per...Handling C
2fff2448:	6e6f 6966 6d72 6465 7420 6d61 6570 0a72     onfirmed tamper.
2fff2458:	0a00 6553 7563 6572 6320 6968 3a70 5420     ..Secure chip: T
2fff2468:	5552 5453 4445 425f 414f 4452 425f 4f4f     RUSTED_BOARD_BOO
2fff2478:	2054 756d 7473 6220 2065 6e65 6261 656c     T must be enable
2fff2488:	0a64 0a00 4d50 4349 7620 6c6f 6174 6567     d...PMIC voltage
2fff2498:	2073 6e69 7469 6620 6961 656c 0a64 1e00     s init failed...
2fff24a8:	250a 0073 521e 7365 7465 7220 6165 6f73     .%s..Reset reaso
2fff24b8:	206e 6e75 6e6b 776f 0a6e 2800 6552 6573     n unknown..(Rese
2fff24c8:	2074 6572 7361 6e6f 2820 7830 7825 3a29     t reason (0x%x):
2fff24d8:	000a 5328 7379 6574 206d 7865 7469 2073     ..(System exits 
2fff24e8:	7266 6d6f 5320 4154 444e 5942 000a 4d28     from STANDBY..(M
2fff24f8:	5550 6520 6978 7374 6620 6f72 206d 5343     PU exits from CS
2fff2508:	4154 444e 5942 000a 2028 5020 776f 7265     TANDBY..(  Power
2fff2518:	6f2d 206e 6552 6573 2074 7228 7473 705f     -on Reset (rst_p
2fff2528:	726f 0a29 2800 2020 7242 776f 6f6e 7475     or)..(  Brownout
2fff2538:	5220 7365 7465 2820 7372 5f74 6f62 2972      Reset (rst_bor)
2fff2548:	000a 2028 5320 7379 6574 206d 6572 6573     ..(  System rese
2fff2558:	2074 6567 656e 6172 6574 2064 7962 4d20     t generated by M
2fff2568:	5550 2820 504d 5953 5253 5453 0a29 2800     PU (MPSYSRST)..(
2fff2578:	2020 6552 6573 2074 7564 2065 6f74 6120       Reset due to a
2fff2588:	6320 6f6c 6b63 6620 6961 756c 6572 6f20      clock failure o
2fff2598:	206e 5348 0a45 2800 2020 5749 4744 2031     n HSE..(  IWDG1 
2fff25a8:	6552 6573 2074 7228 7473 695f 6477 3167     Reset (rst_iwdg1
2fff25b8:	0a29 2800 2020 5749 4744 2032 6552 6573     )..(  IWDG2 Rese
2fff25c8:	2074 7228 7473 695f 6477 3267 0a29 2800     t (rst_iwdg2)..(
2fff25d8:	2020 504d 2055 7250 636f 7365 6f73 2072       MPU Processor 
2fff25e8:	2030 6552 6573 0a74 2800 2020 6150 2064     0 Reset..(  Pad 
2fff25f8:	6552 6573 2074 7266 6d6f 4e20 5352 0a54     Reset from NRST.
2fff2608:	2800 2020 6552 6573 2074 7564 2065 6f74     .(  Reset due to
2fff2618:	6120 6620 6961 756c 6572 6f20 2066 4456      a failure of VD
2fff2628:	5f44 4f43 4552 000a 200a 5520 696e 6564     D_CORE...  Unide
2fff2638:	746e 6669 6569 2064 6572 6573 2074 6572     ntified reset re
2fff2648:	7361 6e6f 000a 6c70 7461 732f 2f74 7473     ason..plat/st/st
2fff2658:	336d 6d32 3170 622f 326c 705f 616c 5f74     m32mp1/bl2_plat_
2fff2668:	6573 7574 2e70 0063 4f0a 5450 4545 6820     setup.c..OPTEE h
2fff2678:	6165 6564 2072 6170 7372 2065 7265 6f72     eader parse erro
2fff2688:	2e72 000a                                   r...

2fff268c <debug_msg>:
2fff268c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff269c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff26ac:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff26bc:	2a2a 0a2a 2a2a 4420 4245 4755 4120 4343     ***.** DEBUG ACC
2fff26cc:	5345 2053 4f50 5452 4920 2053 504f 4e45     ESS PORT IS OPEN
2fff26dc:	2021 2020 2020 2020 2020 2020 2020 2020     !               
2fff26ec:	2020 2020 2a20 0a2a 2a2a 5420 6968 2073          **.** This 
2fff26fc:	6f62 746f 6920 616d 6567 6920 2073 6e6f     boot image is on
2fff270c:	796c 6620 726f 6420 6265 6775 6967 676e     ly for debugging
2fff271c:	7020 7275 6f70 6573 2a20 0a2a 2a2a 6120      purpose **.** a
2fff272c:	646e 6920 2073 6e75 6173 6566 6620 726f     nd is unsafe for
2fff273c:	7020 6f72 7564 7463 6f69 206e 7375 2e65      production use.
2fff274c:	2020 2020 2020 2020 2020 2020 2a20 0a2a                  **.
2fff275c:	2a2a 2020 2020 2020 2020 2020 2020 2020     **              
2fff276c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff277c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff278c:	2a20 0a2a 2a2a 4920 2066 6f79 2075 6573      **.** If you se
2fff279c:	2065 6874 7369 6d20 7365 6173 6567 6120     e this message a
2fff27ac:	646e 7920 756f 6120 6572 6e20 746f 2020     nd you are not  
2fff27bc:	2020 2020 2a20 0a2a 2a2a 6420 6265 6775          **.** debug
2fff27cc:	6967 676e 7220 7065 726f 2074 6874 7369     ging report this
2fff27dc:	6920 6d6d 6465 6169 6574 796c 7420 206f      immediately to 
2fff27ec:	6f79 7275 2020 2020 2a20 0a2a 2a2a 7620     your     **.** v
2fff27fc:	6e65 6f64 2172 2020 2020 2020 2020 2020     endor!          
2fff280c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff281c:	2020 2020 2020 2020 2020 2020 2a20 0a2a                  **.
2fff282c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff283c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff284c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff285c:	2a2a 0a2a 6200 6375 326b 7600 6572 5f66     ***..buck2.vref_
2fff286c:	6464 0072 550a 616e 6c62 2065 6f74 7020     ddr..Unable to p
2fff287c:	7475 4420 5244 6920 206e 5253 000a 7473     ut DDR in SR..st
2fff288c:	6d2c 6d65 662d 7269 7765 6c61 006c 6c70     ,mem-firewall.pl
2fff289c:	7461 732f 2f74 7473 336d 6d32 3170 732f     at/st/stm32mp1/s
2fff28ac:	6d74 3233 706d 5f31 6366 6e6f 5f66 6966     tm32mp1_fconf_fi
2fff28bc:	6572 6177 6c6c 632e 7300 6d74 3233 706d     rewall.c.stm32mp
2fff28cc:	5f31 6966 6572 6177 6c6c 6300 6d6f 6f6d     1_firewall.commo
2fff28dc:	2f6e 6c62 635f 6d6f 6f6d 2e6e 0063 4c28     n/bl_common.c.(L
2fff28ec:	616f 6964 676e 6920 616d 6567 6920 3d64     oading image id=
2fff28fc:	7525 6120 2074 6461 7264 7365 2073 7830     %u at address 0x
2fff290c:	6c25 0a78 1e00 6146 6c69 6465 7420 206f     %lx...Failed to 
2fff291c:	6564 6574 6d72 6e69 2065 6874 2065 6973     determine the si
2fff292c:	657a 6f20 2066 6874 2065 6d69 6761 2065     ze of the image 
2fff293c:	6469 253d 2075 2528 2969 000a 491e 616d     id=%u (%i)...Ima
2fff294c:	6567 6920 3d64 7525 7320 7a69 2065 756f     ge id=%u size ou
2fff295c:	2074 666f 6220 756f 646e 0a73 1e00 6146     t of bounds...Fa
2fff296c:	6c69 6465 7420 206f 6f6c 6461 6920 616d     iled to load ima
2fff297c:	6567 6920 3d64 7525 2820 6925 0a29 2800     ge id=%u (%i)..(
2fff298c:	6d49 6761 2065 6469 253d 2075 6f6c 6461     Image id=%u load
2fff299c:	6465 203a 7830 6c25 2078 202d 7830 6c25     ed: 0x%lx - 0x%l
2fff29ac:	0a78 2800 6e45 7274 2079 6f70 6e69 2074     x..(Entry point 
2fff29bc:	6461 7264 7365 2073 203d 7830 6c25 0a78     address = 0x%lx.
2fff29cc:	2800 5053 5253 3d20 3020 2578 0a78 6300     .(SPSR = 0x%x..c
2fff29dc:	6d6f 6f6d 2f6e 6674 6c5f 676f 632e 6400     ommon/tf_log.c.d
2fff29ec:	6972 6576 7372 632f 6e6f 6f73 656c 6d2f     rivers/console/m
2fff29fc:	6c75 6974 635f 6e6f 6f73 656c 632e 4500     ulti_console.c.E
2fff2a0c:	5252 524f 203a 2020 4e00 544f 4349 3a45     RROR:   .NOTICE:
2fff2a1c:	2020 5700 5241 494e 474e 203a 4900 464e       .WARNING: .INF
2fff2a2c:	3a4f 2020 2020 5600 5245 4f42 4553 203a     O:    .VERBOSE: 
2fff2a3c:	1e00 5555 4449 7320 7274 6e69 2067 7369     ..UUID string is
2fff2a4c:	7420 6f6f 7320 6f68 7472 000a 451e 7272      too short...Err
2fff2a5c:	726f 7020 7261 6973 676e 5520 4955 0a44     or parsing UUID.
2fff2a6c:	7300 2c74 7473 336d 6d32 2d70 6f62 746f     .st,stm32mp-boot
2fff2a7c:	6e69 6f66 7000 616c 2f74 7473 632f 6d6f     info.plat/st/com
2fff2a8c:	6f6d 2f6e 7473 336d 6d32 5f70 6f63 6d6d     mon/stm32mp_comm
2fff2a9c:	6e6f 632e 0a00 5342 4345 203a 6469 3d78     on.c..BSEC: idx=
2fff2aac:	7525 5220 6165 2064 7245 6f72 0a72 0a00     %u Read Error...
2fff2abc:	5342 4345 203a 7325 5220 6165 2064 7245     BSEC: %s Read Er
2fff2acc:	6f72 0a72 1400 6f42 7261 3a64 4d20 2542     ror...Board: MB%
2fff2adc:	3430 2078 6156 2572 2e75 7525 5220 7665     04x Var%u.%u Rev
2fff2aec:	252e 2d63 3025 7532 000a 6f62 746f 6d2d     .%c-%02u..boot-m
2fff2afc:	646f 0065 696c 2f62 6c78 7461 745f 6261     ode.lib/xlat_tab
2fff2b0c:	656c 5f73 3276 612f 7261 6863 3233 782f     les_v2/aarch32/x
2fff2b1c:	616c 5f74 6174 6c62 7365 615f 6372 2e68     lat_tables_arch.
2fff2b2c:	0063 696c 2f62 6c78 7461 745f 6261 656c     c.lib/xlat_table
2fff2b3c:	5f73 3276 782f 616c 5f74 6174 6c62 7365     s_v2/xlat_tables
2fff2b4c:	635f 6e6f 6574 7478 632e 6c00 6269 782f     _context.c.lib/x
2fff2b5c:	616c 5f74 6174 6c62 7365 765f 2f32 6c78     lat_tables_v2/xl
2fff2b6c:	7461 745f 6261 656c 5f73 6f63 6572 632e     at_tables_core.c
2fff2b7c:	0a00 6d6d 7061 615f 6464 725f 6765 6f69     ..mmap_add_regio
2fff2b8c:	5f6e 6863 6365 286b 2029 6166 6c69 6465     n_check() failed
2fff2b9c:	202e 7265 6f72 2072 6425 000a 4e0a 746f     . error %d...Not
2fff2bac:	6520 6f6e 6775 2068 656d 6f6d 7972 7420      enough memory t
2fff2bbc:	206f 616d 2070 6572 6967 6e6f 0a3a 5620     o map region:. V
2fff2bcc:	3a41 7830 6c25 2078 5020 3a41 7830 6c25     A:0x%lx  PA:0x%l
2fff2bdc:	786c 2020 6973 657a 303a 2578 787a 2020     lx  size:0x%zx  
2fff2bec:	7461 7274 303a 2578 0a78 6400 6972 6576     attr:0x%x..drive
2fff2bfc:	7372 632f 6b6c 632f 6b6c 632e 6400 6972     rs/clk/clk.c.dri
2fff2c0c:	6576 7372 642f 6c65 7961 745f 6d69 7265     vers/delay_timer
2fff2c1c:	642f 6c65 7961 745f 6d69 7265 632e 6400     /delay_timer.c.d
2fff2c2c:	6972 6576 7372 642f 6c65 7961 745f 6d69     rivers/delay_tim
2fff2c3c:	7265 672f 6e65 7265 6369 645f 6c65 7961     er/generic_delay
2fff2c4c:	745f 6d69 7265 632e 0a00 6e69 6176 696c     _timer.c..invali
2fff2c5c:	2064 6170 6172 656d 6574 2072 666f 7366     d parameter offs
2fff2c6c:	7465 000a 7264 7669 7265 2f73 7473 672f     et..drivers/st/g
2fff2c7c:	6970 2f6f 7473 336d 5f32 7067 6f69 632e     pio/stm32_gpio.c
2fff2c8c:	7000 6e69 7463 6c72 302d 7000 6e69 756d     .pinctrl-0.pinmu
2fff2c9c:	0078 6c73 7765 722d 7461 0065 6962 7361     x.slew-rate.bias
2fff2cac:	702d 6c75 2d6c 7075 6200 6169 2d73 7570     -pull-up.bias-pu
2fff2cbc:	6c6c 642d 776f 006e 7264 7669 2d65 706f     ll-down.drive-op
2fff2ccc:	6e65 642d 6172 6e69 6f00 7475 7570 2d74     en-drain.output-
2fff2cdc:	6968 6867 6f00 7475 7570 2d74 6f6c 0077     high.output-low.
2fff2cec:	7067 6f69 632d 6e6f 7274 6c6f 656c 0072     gpio-controller.
2fff2cfc:	500a 4e49 5443 4c52 6920 636e 6e6f 6973     .PINCTRL inconsi
2fff2d0c:	7473 6e65 2074 6e69 4420 0a54 1e00 6f4e     stent in DT...No
2fff2d1c:	2074 6e65 756f 6867 7020 616c 6563 6620     t enough place f
2fff2d2c:	726f 4e20 4d56 4d45 6420 7665 202c 4c50     or NVMEM dev, PL
2fff2d3c:	5441 4e5f 5f42 564e 454d 5f4d 4544 5356     AT_NB_NVMEM_DEVS
2fff2d4c:	7320 6f68 6c75 2064 6562 6920 636e 6572      should be incre
2fff2d5c:	7361 6465 0a2e 6e00 6d76 6d65 632d 6c65     ased...nvmem-cel
2fff2d6c:	736c 0a00 6143 276e 2074 6966 646e 6e20     ls..Can't find n
2fff2d7c:	6d76 6d65 6320 6c65 006c 251e 3a73 6e20     vmem cell..%s: n
2fff2d8c:	646f 2065 6425 6e20 746f 6620 756f 646e     ode %d not found
2fff2d9c:	000a 766e 656d 2d6d 6563 6c6c 6e2d 6d61     ..nvmem-cell-nam
2fff2dac:	7365                                         es.

2fff2daf <__func__.0>:
2fff2daf:	766e 656d 5f6d 6567 5f74 7962 6e5f 646f     nvmem_get_by_nod
2fff2dbf:	0065 570a 6f72 676e 6120 6363 7365 2073     e..Wrong access 
2fff2dcf:	6972 6867 7374 6620 726f 7a20 6e6f 2065     rights for zone 
2fff2ddf:	6425 2820 7525 0a29 0a00 6146 6c69 6465     %d (%u)...Failed
2fff2def:	7420 206f 6572 6461 6220 706b 2520 757a      to read bkp %zu
2fff2dff:	000a 430a 6e61 7427 7220 6165 2064 6966     ...Can't read fi
2fff2e0f:	6c65 2064 6f66 2072 6572 6967 7473 7265     eld for register
2fff2e1f:	2073 6f7a 656e 0a73 1400 6146 6c69 6465     s zones...Failed
2fff2e2f:	7420 206f 6567 2074 6874 2065 6162 6b63      to get the back
2fff2e3f:	7075 7a20 6e6f 2065 7266 6d6f 7420 6d61     up zone from tam
2fff2e4f:	2070 6572 7367 0a0a 0a00 6146 6c69 6465     p regs....Failed
2fff2e5f:	7420 206f 6567 2074 6874 2065 6162 6b63      to get the back
2fff2e6f:	7075 7a20 6e6f 2065 6361 6563 7373 7220     up zone access r
2fff2e7f:	6769 7468 0a73 000a 7473 732c 6d74 3233     ights...st,stm32
2fff2e8f:	706d 3531 742d 6d61 2d70 766e 6172 006d     mp15-tamp-nvram.
2fff2e9f:	7264 7669 7265 2f73 7473 722f 6765 6c75     drivers/st/regul
2fff2eaf:	7461 726f 722f 6765 6c75 7461 726f 635f     ator/regulator_c
2fff2ebf:	726f 2e65 0063 251e 3a73 2520 2073 6f6e     ore.c..%s: %s no
2fff2ecf:	2074 6f66 6e75 0a64 2500 2d73 7573 7070     t found..%s-supp
2fff2edf:	796c 1e00 7325 203a 6870 6e61 6c64 2065     ly..%s: phandle 
2fff2eef:	6425 6e20 746f 6620 756f 646e 000a 720a     %d not found...r
2fff2eff:	6765 6c75 2520 2073 6567 2074 6f76 746c     egul %s get volt
2fff2f0f:	6761 2065 6166 6c69 6465 203a 7265 3a72     age failed: err:
2fff2f1f:	6425 000a 720a 6765 6c75 2520 2073 6573     %d...regul %s se
2fff2f2f:	2074 6f76 746c 6620 6961 656c 3a64 6520     t volt failed: e
2fff2f3f:	7272 253a 0a64 0a00 6572 7567 206c 7325     rr:%d...regul %s
2fff2f4f:	6c20 7369 5f74 6f76 746c 6761 7365 6620      list_voltages f
2fff2f5f:	6961 656c 3a64 6520 7272 203a 6425 000a     ailed: err: %d..
2fff2f6f:	720a 6765 6c75 2520 3a73 6d20 7861 7620     .regul %s: max v
2fff2f7f:	6c61 6575 2520 2075 7369 6920 766e 6c61     alue %u is inval
2fff2f8f:	6469 000a 720a 6765 6c75 2520 2073 6573     id...regul %s se
2fff2f9f:	2074 696d 206e 6f76 746c 6761 2065 7369     t min voltage is
2fff2faf:	7420 6f6f 6820 6769 0a68 0a00 6572 7567      too high...regu
2fff2fbf:	206c 7325 203a 696d 206e 6176 756c 2065     l %s: min value 
2fff2fcf:	7525 6920 2073 6e69 6176 696c 0a64 1e00     %u is invalid...
2fff2fdf:	6f4e 2074 6e65 756f 6867 7020 616c 6563     Not enough place
2fff2fef:	6620 726f 7220 6765 6c75 7461 726f 2c73      for regulators,
2fff2fff:	5020 414c 5f54 424e 525f 4544 5356 7320      PLAT_NB_RDEVS s
2fff300f:	6f68 6c75 2064 6562 6920 636e 6572 7361     hould be increas
2fff301f:	6465 0a2e 0a00 6572 7567 206c 7325 7320     ed....regul %s s
2fff302f:	7465 7320 6174 6574 6620 6961 656c 3a64     et state failed:
2fff303f:	6520 7272 253a 0a64 7200 6765 6c75 7461      err:%d..regulat
2fff304f:	726f 6d2d 6e69 6d2d 6369 6f72 6f76 746c     or-min-microvolt
2fff305f:	0a00 7325 203a 696d 5f6e 766d 253d 2064     ..%s: min_mv=%d 
2fff306f:	7369 7420 6f6f 6820 6769 0a68 7200 6765     is too high..reg
2fff307f:	6c75 7461 726f 6d2d 7861 6d2d 6369 6f72     ulator-max-micro
2fff308f:	6f76 746c 0a00 7325 203a 616d 5f78 766d     volt..%s: max_mv
2fff309f:	253d 2064 7369 7420 6f6f 6c20 776f 000a     =%d is too low..
2fff30af:	6572 7567 616c 6f74 2d72 6c61 6177 7379     regulator-always
2fff30bf:	6f2d 006e 6572 7567 616c 6f74 2d72 6e65     -on.regulator-en
2fff30cf:	6261 656c 722d 6d61 2d70 6564 616c 0079     able-ramp-delay.

2fff30df <__func__.0>:
2fff30df:	6572 7567 616c 6f74 5f72 6567 5f74 7962     regulator_get_by
2fff30ef:	705f 6168 646e 656c                          _phandle.

2fff30f8 <__func__.1>:
2fff30f8:	6572 7567 616c 6f74 5f72 6567 5f74 7962     regulator_get_by
2fff3108:	6e5f 6d61 0065 6572 7567 616c 6f74 2d72     _name.regulator-
2fff3118:	6966 6578 0064 7264 7669 7265 2f73 7473     fixed.drivers/st
2fff3128:	722f 6765 6c75 7461 726f 722f 6765 6c75     /regulator/regul
2fff3138:	7461 726f 665f 7869 6465 632e 1e00 7325     ator_fixed.c..%s
2fff3148:	253a 2064 6166 6c69 6465 7420 206f 6572     :%d failed to re
2fff3158:	6967 7473 7265 2520 0a73                     gister %s..

2fff3163 <__func__.0>:
2fff3163:	6966 6578 5f64 6572 7567 616c 6f74 5f72     fixed_regulator_
2fff3173:	6572 6967 7473 7265 6f00 616b 0079 6573     register.okay.se
2fff3183:	7563 6572 732d 6174 7574 0073 6c70 7461     cure-status.plat
2fff3193:	732f 2f74 6f63 6d6d 6e6f 732f 6d74 3233     /st/common/stm32
2fff31a3:	706d 645f 2e74 0063 6572 6573 7374 2800     mp_dt.c.resets.(
2fff31b3:	7325 203a 6143 6e6e 746f 7220 6165 2064     %s: Cannot read 
2fff31c3:	4444 2052 6f6e 6564 6920 206e 5444 000a     DDR node in DT..
2fff31d3:	7473 6d2c 6d65 732d 7a69 0065 7473 732c     st,mem-size.st,s
2fff31e3:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2fff31f3:	6476 0064 002f 6f6d 6564 006c 7473 732c     vdd./.model.st,s
2fff3203:	6d74 3233 706d 3331 622d 6573 0063 6e0a     tm32mp13-bsec..n
2fff3213:	6d76 6d65 6e20 646f 2065 7325 6e20 746f     vmem node %s not
2fff3223:	6620 756f 646e 000a 4d0a 6c61 6f66 6d72      found...Malform
2fff3233:	6465 6e20 6d76 6d65 6e20 646f 2065 7325     ed nvmem node %s
2fff3243:	203a 6769 6f6e 6572 0a64 0a00 694d 6173     : ignored...Misa
2fff3253:	696c 6e67 6465 6e20 6d76 6d65 2520 2073     ligned nvmem %s 
2fff3263:	6c65 6d65 6e65 3a74 6920 6e67 726f 6465     element: ignored
2fff3273:	000a                                        ..

2fff3275 <__func__.0>:
2fff3275:	7464 675f 7465 645f 7264 735f 7a69 0065     dt_get_ddr_size.
2fff3285:	7473 702c 6f72 6976 6973 6e6f 6e69 0067     st,provisioning.
2fff3295:	501e 6168 646e 656c 6e20 746f 6620 756f     .Phandle not fou
2fff32a5:	646e 000a 7473 732c 6168 6f64 2d77 6176     nd..st,shadow-va
2fff32b5:	756c 0065 491e 766e 6c61 6469 4f20 5054     lue..Invalid OTP
2fff32c5:	7320 7a69 0a65 1e00 6853 6461 776f 7720      size...Shadow w
2fff32d5:	6972 6574 6c20 636f 0a6b 2800 764f 7265     rite lock..(Over
2fff32e5:	6972 6564 7420 6568 4f20 5054 2520 2075     ride the OTP %u 
2fff32f5:	6e69 7469 6169 206c 6176 756c 0a65 7300     initial value..s
2fff3305:	6d74 3233 706d 665f 7375 0065 6170 7472     tm32mp_fuse.part
2fff3315:	6e5f 6d75 6562 5f72 746f 0070 6c70 7461     _number_otp.plat
2fff3325:	732f 2f74 7473 336d 6d32 3170 732f 6d74     /st/stm32mp1/stm
2fff3335:	3233 706d 5f31 7270 7669 7461 2e65 0063     32mp1_private.c.
2fff3345:	3331 4635 3100 3533 0044 3331 4335 3100     135F.135D.135C.1
2fff3355:	3533 0041 3331 4633 3100 3333 0044 3331     35A.133F.133D.13
2fff3365:	4333 3100 3333 0041 3331 4631 3100 3133     3C.133A.131F.131
2fff3375:	0044 3331 4331 3100 3133 0041 3f3f 3f3f     D.131C.131A.????
2fff3385:	4200 5900 5a00 5300 4d54 3233 504d 7325     .B.Y.Z.STM32MP%s
2fff3395:	7325 5220 7665 252e 0073 4314 5550 203a     %s Rev.%s..CPU: 
2fff33a5:	7325 000a 6f62 7261 5f64 6469 6300 6766     %s..board_id.cfg
2fff33b5:	5f30 746f 0070 7768 5f32 746f 0070 5414     0_otp.hw2_otp..T
2fff33c5:	4d41 4550 2052 6564 6574 7463 6465 3a20     AMPER detected :
2fff33d5:	4420 6765 6172 6564 2064 6f6d 6564 000a      Degraded mode..
2fff33e5:	7264 7669 7265 2f73 7261 2f6d 7a74 2f63     drivers/arm/tzc/
2fff33f5:	7a74 3463 3030 632e 0a00 5a54 2d43 3034     tzc400.c..TZC-40
2fff3405:	2030 203a 7257 6e6f 2067 6564 6976 6563     0 : Wrong device
2fff3415:	4920 2044 3028 2578 2978 0a2e 0a00 5a54      ID (0x%x)....TZ
2fff3425:	2d43 3034 2030 203a 6946 746c 7265 2520     C-400 : Filter %
2fff3435:	2075 6147 6574 656b 7065 7265 6120 726c     u Gatekeeper alr
2fff3445:	6165 7964 6520 616e 6c62 6465 0a2e 0a00     eady enabled....
2fff3455:	544f 2050 6f6d 6564 6920 2073 544f 2d50     OTP mode is OTP-
2fff3465:	4e49 4156 494c 0a44 6400 6972 6576 7372     INVALID..drivers
2fff3475:	732f 2f74 7362 6365 622f 6573 3263 632e     /st/bsec/bsec2.c
2fff3485:	0a00 5342 4345 203a 7525 5320 6974 6b63     ..BSEC: %u Stick
2fff3495:	2d79 7277 7469 2065 6962 2074 6572 6461     y-write bit read
2fff34a5:	4520 7272 726f 2520 0a75 0a00 5342 4345      Error %u...BSEC
2fff34b5:	203a 7525 5320 6974 6b63 2d79 6572 6461     : %u Sticky-read
2fff34c5:	6220 7469 7220 6165 2064 7245 6f72 2072      bit read Error 
2fff34d5:	7525 000a 420a 4553 3a43 2520 2075 6853     %u...BSEC: %u Sh
2fff34e5:	6461 776f 6e69 2067 7245 6f72 2072 7525     adowing Error %u
2fff34f5:	000a 420a 4553 3a43 2520 2075 6552 6461     ...BSEC: %u Read
2fff3505:	4520 7272 726f 2520 0a75 0a00 6e55 6e6b      Error %u...Unkn
2fff3515:	776f 206e 6553 666c 5220 6665 6572 6873     own Self Refresh
2fff3525:	6d20 646f 0a65                                mode..

2fff352c <CSWTCH.37>:
2fff352c:	0001 0000 0000 0000 0302 3269 2d63 6373     ..........i2c-sc
2fff353c:	2d6c 6972 6973 676e 742d 6d69 2d65 736e     l-rising-time-ns
2fff354c:	6900 6332 732d 6c63 662d 6c61 696c 676e     .i2c-scl-falling
2fff355c:	742d 6d69 2d65 736e 6300 6f6c 6b63 662d     -time-ns.clock-f
2fff356c:	6572 7571 6e65 7963 0a00 6e49 6176 696c     requency..Invali
2fff357c:	2064 7562 2073 7073 6565 2064 2528 2075     d bus speed (%u 
2fff358c:	203e 7525 0a29 0a00 3249 2043 6c63 636f     > %u)...I2C cloc
2fff359c:	206b 6172 6574 6920 2073 0a30 0a00 3249     k rate is 0...I2
2fff35ac:	2043 7073 6565 2064 756f 2074 666f 6220     C speed out of b
2fff35bc:	756f 646e 7b20 7525 0a7d 0a00 4920 4332     ound {%u}... I2C
2fff35cc:	7420 6d69 6e69 7367 6f20 7475 6f20 2066      timings out of 
2fff35dc:	6f62 6e75 2064 6952 6573 257b 3e75 7525     bound Rise{%u>%u
2fff35ec:	2f7d 6146 6c6c 257b 3e75 7525 0a7d 0a00     }/Fall{%u>%u}...
2fff35fc:	4e44 2046 756f 2074 666f 6220 756f 646e     DNF out of bound
2fff360c:	2520 2f75 7525 000a 200a 3249 2043 6f6e      %u/%u... I2C no
2fff361c:	5020 6572 6373 6c61 7265 7320 6c6f 7475      Prescaler solut
2fff362c:	6f69 0a6e 0a00 4920 4332 6e20 206f 6f73     ion... I2C no so
2fff363c:	756c 6974 6e6f 6120 2074 6c61 0a6c 0a00     lution at all...
2fff364c:	6146 6c69 6465 7420 206f 6f63 706d 7475     Failed to comput
2fff365c:	2065 3249 2043 6974 696d 676e 0a73 1e00     e I2C timings...
2fff366c:	6f44 6e77 7267 6461 2065 3249 2043 7073     Downgrade I2C sp
2fff367c:	6565 2064 6f74 2520 4875 297a 000a 490a     eed to %uHz)...I
2fff368c:	706d 736f 6973 6c62 2065 6f74 6320 6d6f     mpossible to com
2fff369c:	7570 6574 4920 4332 7420 6d69 6e69 7367     pute I2C timings
2fff36ac:	000a 430a 6e61 6f6e 2074 6e69 7469 6169     ...Cannot initia
2fff36bc:	696c 657a 4920 4332 6120 616e 6f6c 2067     lize I2C analog 
2fff36cc:	6966 746c 7265 2820 6425 0a29 7300 2c74     filter (%d)..st,
2fff36dc:	7473 336d 6d32 3170 692d 6477 0067 4f0a     stm32mp1-iwdg..O
2fff36ec:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2fff36fc:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2fff370c:	0a64 7300 2c74 7473 6d70 6369 0031 490a     d..st,stpmic1..I
2fff371c:	4332 6320 6e6f 6966 7567 6172 6974 6e6f     2C configuration
2fff372c:	6620 6961 656c 2064 6425 000a 430a 6e61      failed %d...Can
2fff373c:	6f6e 2074 6e69 7469 6169 696c 657a 4920     not initialize I
2fff374c:	4332 2520 2078 2528 2964 000a 490a 4332     2C %x (%d)...I2C
2fff375c:	6420 7665 6369 2065 6f6e 2074 6572 6461      device not read
2fff376c:	0a79 7200 6765 6c75 7461 726f 0073 7264     y..regulators.dr
2fff377c:	7669 7265 2f73 7473 702f 696d 2f63 7473     ivers/st/pmic/st
2fff378c:	336d 6d32 5f70 6d70 6369 632e 7300 2c74     m32mp_pmic.c.st,
2fff379c:	616d 6b73 722d 7365 7465 0a00 6573 2074     mask-reset..set 
2fff37ac:	616d 6b73 722d 7365 7465 6620 6961 656c     mask-reset faile
2fff37bc:	0a64 0a00 6146 6c69 6465 7420 206f 6361     d...Failed to ac
2fff37cc:	6563 7373 5020 494d 0a43 2800 4d50 4349     cess PMIC..(PMIC
2fff37dc:	7620 7265 6973 6e6f 3d20 3020 2578 3230      version = 0x%02
2fff37ec:	786c 000a 7562 6b63 0031 7562 6b63 0034     lx..buck1.buck4.

2fff37fc <__func__.0>:
2fff37fc:	6572 6967 7473 7265 705f 696d 0063 7562     register_pmic.bu
2fff380c:	6b63 0033 646c 316f 6c00 6f64 0032 646c     ck3.ldo1.ldo2.ld
2fff381c:	336f 6c00 6f64 0034 646c 356f 6c00 6f64     o3.ldo4.ldo5.ldo
2fff382c:	0036 6f62 736f 0074 7770 5f72 7773 0031     6.boost.pwr_sw1.
2fff383c:	7770 5f72 7773 0032 7562 6b63 6c00 6f64     pwr_sw2.buck.ldo
2fff384c:	0a00 4d50 6320 6e6f 6574 7478 203a 6162     ..PM context: ba
2fff385c:	2064 616d 6967 0a63 1e00 4f49 6320 6d6f     d magic...IO com
2fff386c:	6570 736e 7461 6f69 206e 6563 6c6c 6e20     pensation cell n
2fff387c:	746f 7220 6165 7964 000a 7473 732c 6d74     ot ready..st,stm
2fff388c:	3233 732d 6d64 636d 0032 7176 6d6d 2d63     32-sdmmc2.vqmmc-
2fff389c:	7573 7070 796c 1e00 4456 2044 6e75 6e6b     supply..VDD unkn
2fff38ac:	776f 0a6e 2800 7250 646f 6375 5f74 6562     own..(Product_be
2fff38bc:	6f6c 5f77 7632 3d35 3a30 4820 4c53 4556     low_2v5=0: HSLVE
2fff38cc:	204e 7270 746f 6365 6574 2064 7962 4820     N protected by H
2fff38dc:	0a57 0a00 7250 646f 6375 5f74 6562 6f6c     W...Product_belo
2fff38ec:	5f77 7632 3d35 3a31 000a 090a 5348 564c     w_2v5=1:....HSLV
2fff38fc:	4e45 7520 6470 7461 2065 7369 6420 7365     EN update is des
2fff390c:	7274 6375 6974 6576 0a2c 0a00 6e09 206f     tructive,....no 
2fff391c:	7075 6164 6574 6120 2073 4456 2044 203e     update as VDD > 
2fff392c:	2e32 5637 000a 632f 6f6c 6b63 0073 7264     2.7V../clocks.dr
2fff393c:	7669 7265 2f73 7473 632f 6b6c 632f 6b6c     ivers/st/clk/clk
2fff394c:	732d 6d74 3233 632d 726f 2e65 0063 640a     -stm32-core.c..d
2fff395c:	7669 7369 6f69 206e 7962 7a20 7265 0a6f     ivision by zero.
2fff396c:	0a00 7325 203a 7325 2820 6425 0a29           ..%s: %s (%d)..

2fff397b <__func__.0>:
2fff397b:	6c63 5f6b 7473 336d 5f32 736f 5f63 6167     clk_stm32_osc_ga
2fff398b:	6574 645f 7369 6261 656c                     te_disable.

2fff3996 <__func__.1>:
2fff3996:	6c63 5f6b 7473 336d 5f32 736f 5f63 6167     clk_stm32_osc_ga
2fff39a6:	6574 655f 616e 6c62 0065 250a 2064 6c63     te_enable..%d cl
2fff39b6:	636f 206b 7473 7261 2074 6166 6c69 6465     ock start failed
2fff39c6:	4020 3020 2578 3a78 3020 2578 0a78 0a00      @ 0x%x: 0x%x...
2fff39d6:	6425 6320 6f6c 6b63 7320 6f74 2070 6166     %d clock stop fa
2fff39e6:	6c69 6465 4020 3020 2578 3a78 3020 2578     iled @ 0x%x: 0x%
2fff39f6:	0a78 7300 2c74 7473 336d 6d32 3170 2d33     x..st,stm32mp13-
2fff3a06:	6372 0063 7473 622c 7079 7361 0073 7473     rcc.st,bypass.st
2fff3a16:	642c 6769 7962 6170 7373 7300 2c74 7363     ,digbypass.st,cs
2fff3a26:	0073 7473 642c 6972 6576 7300 2c74 6c70     s.st,drive.st,pl
2fff3a36:	406c 7525 7300 2c74 6c70 006c 7473 702c     l@%u.st,pll.st,p
2fff3a46:	6c6c 765f 6f63 6400 7669 6e6d 6300 6773     ll_vco.divmn.csg
2fff3a56:	6600 6172 0063 7473 702c 6c6c 645f 7669     .frac.st,pll_div
2fff3a66:	705f 7271 7300 2c74 6c63 646b 7669 7300     _pqr.st,clkdiv.s
2fff3a76:	2c74 6c63 736b 6372 6300 6b6c 682d 6973     t,clksrc.clk-hsi
2fff3a86:	6300 6b6c 682d 6573 6300 6b6c 632d 6973     .clk-hse.clk-csi
2fff3a96:	6300 6b6c 6c2d 6973 6300 6b6c 6c2d 6573     .clk-lsi.clk-lse
2fff3aa6:	6900 7332 635f 696b 006e                    .i2s_ckin.

2fff3ab0 <stm32mp1_pll>:
2fff3ab0:	1004 1008 1008 520a 474e 6e20 696f 6573     .......RNG noise
2fff3ac0:	000a 7473 732c 6d74 3233 706d 3331 722d     ..st,stm32mp13-r
2fff3ad0:	676e 6400 6972 6576 7372 732f 2f74 7263     ng.drivers/st/cr
2fff3ae0:	7079 6f74 732f 6d74 3233 725f 676e 632e     ypto/stm32_rng.c
2fff3af0:	1e00 6954 656d 756f 2074 6177 7469 6e69     ..Timeout waitin
2fff3b00:	0a67 1e00 7325 203a 6974 656d 756f 0a74     g...%s: timeout.
2fff3b10:	7300 2c74 7473 336d 2d32 6173 7365 0a00     .st,stm32-saes..
2fff3b20:	6f4e 5320 4541 2053 6e65 7274 2079 6e69     No SAES entry in
2fff3b30:	4420 0a54 6400 6972 6576 7372 732f 2f74      DT..drivers/st/
2fff3b40:	7263 7079 6f74 732f 6d74 3233 735f 6561     crypto/stm32_sae
2fff3b50:	2e73 0063 250a 3a73 6e20 6e6f 6c20 7361     s.c..%s: non las
2fff3b60:	2074 6c62 636f 206b 756d 7473 6220 2065     t block must be 
2fff3b70:	756d 746c 7069 656c 6f20 2066 3231 2038     multiple of 128 
2fff3b80:	6962 7374 000a 690a 2066 4243 2c43 6c20     bits...if CBC, l
2fff3b90:	7361 2074 6170 7472 7320 7a69 2065 6873     ast part size sh
2fff3ba0:	756f 646c 6220 2065 7461 6c20 6165 7473     ould be at least
2fff3bb0:	3220 2a20 4120 5345 425f 4f4c 4b43 535f      2 * AES_BLOCK_S
2fff3bc0:	5a49 0a45                                    IZE..

2fff3bc5 <__func__.0>:
2fff3bc5:	7473 336d 5f32 6173 7365 755f 6470 7461     stm32_saes_updat
2fff3bd5:	0065                                        e.

2fff3bd7 <__func__.1>:
2fff3bd7:	6177 7469 635f 6d6f 7570 6174 6974 6e6f     wait_computation
2fff3be7:	635f 6d6f 6c70 7465 6465                     _completed.

2fff3bf2 <__func__.2>:
2fff3bf2:	6173 7365 735f 6174 7472 6900 636e 756c     saes_start.inclu
2fff3c02:	6564 612f 6372 2f68 6161 6372 3368 2f32     de/arch/aarch32/
2fff3c12:	6c65 5f33 6f63 6d6d 6e6f 6d5f 6361 6f72     el3_common_macro
2fff3c22:	2e73 0053 696c 2f62 7063 7375 612f 7261     s.S.lib/cpus/aar
2fff3c32:	6863 3233 632f 7570 685f 6c65 6570 7372     ch32/cpu_helpers
2fff3c42:	532e                                         .S.

2fff3c45 <assert_msg1>:
2fff3c45:	41          	.byte	0x41
2fff3c46:	5353      	.short	0x5353
2fff3c48:	3a545245 	.word	0x3a545245
2fff3c4c:	6c694620 	.word	0x6c694620
2fff3c50:	2065      	.short	0x2065
	...

2fff3c53 <assert_msg2>:
2fff3c53:	20          	.byte	0x20
2fff3c54:	656e694c 	.word	0x656e694c
2fff3c58:	0020      	.short	0x0020

2fff3c5a <panic_msg>:
2fff3c5a:	4150      	.short	0x4150
2fff3c5c:	2043494e 	.word	0x2043494e
2fff3c60:	50207461 	.word	0x50207461
2fff3c64:	203a2043 	.word	0x203a2043
2fff3c68:	7830      	.short	0x7830
	...

2fff3c6b <panic_end>:
2fff3c6b:	0d          	.byte	0x0d
2fff3c6c:	000a      	.short	0x000a
2fff3c6e:	696c      	.short	0x696c
2fff3c70:	6c782f62 	.word	0x6c782f62
2fff3c74:	745f7461 	.word	0x745f7461
2fff3c78:	656c6261 	.word	0x656c6261
2fff3c7c:	32765f73 	.word	0x32765f73
2fff3c80:	7261612f 	.word	0x7261612f
2fff3c84:	32336863 	.word	0x32336863
2fff3c88:	616e652f 	.word	0x616e652f
2fff3c8c:	5f656c62 	.word	0x5f656c62
2fff3c90:	2e756d6d 	.word	0x2e756d6d
2fff3c94:	0053      	.short	0x0053
2fff3c96:	7264      	.short	0x7264
2fff3c98:	72657669 	.word	0x72657669
2fff3c9c:	74732f73 	.word	0x74732f73
2fff3ca0:	7261752f 	.word	0x7261752f
2fff3ca4:	61612f74 	.word	0x61612f74
2fff3ca8:	33686372 	.word	0x33686372
2fff3cac:	74732f32 	.word	0x74732f32
2fff3cb0:	5f32336d 	.word	0x5f32336d
2fff3cb4:	736e6f63 	.word	0x736e6f63
2fff3cb8:	2e656c6f 	.word	0x2e656c6f
2fff3cbc:	0053      	.short	0x0053

2fff3cbe <cortex_a7_errata_list_end>:
2fff3cbe:	500a      	.short	0x500a
2fff3cc0:	65666572 	.word	0x65666572
2fff3cc4:	20686374 	.word	0x20686374
2fff3cc8:	726f6241 	.word	0x726f6241
2fff3ccc:	74612074 	.word	0x74612074
2fff3cd0:	7830203a 	.word	0x7830203a
	...

2fff3cd5 <data_abort_str>:
2fff3cd5:	0a          	.byte	0x0a
2fff3cd6:	6144      	.short	0x6144
2fff3cd8:	41206174 	.word	0x41206174
2fff3cdc:	74726f62 	.word	0x74726f62
2fff3ce0:	3a746120 	.word	0x3a746120
2fff3ce4:	00783020 	.word	0x00783020

2fff3ce8 <undefined_str>:
2fff3ce8:	646e550a 	.word	0x646e550a
2fff3cec:	6e696665 	.word	0x6e696665
2fff3cf0:	69206465 	.word	0x69206465
2fff3cf4:	7274736e 	.word	0x7274736e
2fff3cf8:	69746375 	.word	0x69746375
2fff3cfc:	61206e6f 	.word	0x61206e6f
2fff3d00:	30203a74 	.word	0x30203a74
2fff3d04:	0078      	.short	0x0078

2fff3d06 <exception_start_str>:
2fff3d06:	450a      	.short	0x450a
2fff3d08:	70656378 	.word	0x70656378
2fff3d0c:	6e6f6974 	.word	0x6e6f6974
2fff3d10:	646f6d20 	.word	0x646f6d20
2fff3d14:	78303d65 	.word	0x78303d65
	...

2fff3d19 <exception_end_str>:
2fff3d19:	20          	.byte	0x20
2fff3d1a:	7461      	.short	0x7461
2fff3d1c:	7830203a 	.word	0x7830203a
	...

2fff3d21 <dfsr_str>:
2fff3d21:	20          	.byte	0x20
2fff3d22:	4644      	.short	0x4644
2fff3d24:	3d205253 	.word	0x3d205253
2fff3d28:	00783020 	.word	0x00783020

2fff3d2c <dfar_str>:
2fff3d2c:	41464420 	.word	0x41464420
2fff3d30:	203d2052 	.word	0x203d2052
2fff3d34:	7830      	.short	0x7830
	...

2fff3d37 <ifsr_str>:
2fff3d37:	20          	.byte	0x20
2fff3d38:	52534649 	.word	0x52534649
2fff3d3c:	30203d20 	.word	0x30203d20
2fff3d40:	0078      	.short	0x0078

2fff3d42 <ifar_str>:
2fff3d42:	4920      	.short	0x4920
2fff3d44:	20524146 	.word	0x20524146
2fff3d48:	7830203d 	.word	0x7830203d
	...

2fff3d4d <end_error_str>:
2fff3d4d:	0a          	.byte	0x0a
2fff3d4e:	000d      	.short	0x000d
2fff3d50:	64646123 	.word	0x64646123
2fff3d54:	73736572 	.word	0x73736572
2fff3d58:	6c65632d 	.word	0x6c65632d
2fff3d5c:	736c      	.short	0x736c
2fff3d5e:	00          	.byte	0x00
2fff3d5f:	6c          	.byte	0x6c
2fff3d60:	78756e69 	.word	0x78756e69
2fff3d64:	6168702c 	.word	0x6168702c
2fff3d68:	656c646e 	.word	0x656c646e
2fff3d6c:	00          	.byte	0x00
2fff3d6d:	2f          	.byte	0x2f
2fff3d6e:	6c61      	.short	0x6c61
2fff3d70:	65736169 	.word	0x65736169
2fff3d74:	0073      	.short	0x0073
2fff3d76:	6f63      	.short	0x6f63
2fff3d78:	7461706d 	.word	0x7461706d
2fff3d7c:	656c6269 	.word	0x656c6269
2fff3d80:	00          	.byte	0x00
2fff3d81:	41          	.byte	0x41
2fff3d82:	5353      	.short	0x5353
2fff3d84:	3a545245 	.word	0x3a545245
2fff3d88:	3a732520 	.word	0x3a732520
2fff3d8c:	000a7525 	.word	0x000a7525
2fff3d90:	2f62696c 	.word	0x2f62696c
2fff3d94:	6362696c 	.word	0x6362696c
2fff3d98:	6972702f 	.word	0x6972702f
2fff3d9c:	2e66746e 	.word	0x2e66746e
2fff3da0:	78300063 	.word	0x78300063
2fff3da4:	00000000 	.word	0x00000000

2fff3da8 <mce_config__populator>:
2fff3da8:	2fff1cf4 2fff1cfe 2ffe6169              .../.../ia./

2fff3db4 <dyn_cfg__populator>:
2fff3db4:	2fff1cf4 2fff1f15 2ffe64e9              .../.../.d./

2fff3dc0 <stm32mp_io__populator>:
2fff3dc0:	2fff22c2 2fff22c8 2ffe6e59              ."./."./Yn./

2fff3dcc <stm32mp1_firewall__populator>:
2fff3dcc:	2fff1cf4 2fff28c5 2ffe76d1              .../.(./.v./

2fff3dd8 <stm32mp_fuse__populator>:
2fff3dd8:	2fff22c2 2fff3304 2ffe9df5              ."./.3./.../

2fff3de4 <__CPU_OPS_START__>:
2fff3de4:	410fc070 	.word	0x410fc070
2fff3de8:	2ffe4924 	.word	0x2ffe4924
2fff3dec:	2fff3cbe 	.word	0x2fff3cbe
2fff3df0:	2fff3cbe 	.word	0x2fff3cbe

2fff3df4 <__CPU_OPS_END__>:
	...

2fff3e00 <bl2_vector_table>:
2fff3e00:	eaffc07e 	b	2ffe4000 <bl2_entrypoint>
2fff3e04:	eaffc199 	b	2ffe4470 <report_exception>
2fff3e08:	eaffc198 	b	2ffe4470 <report_exception>
2fff3e0c:	eaffc19c 	b	2ffe4484 <report_prefetch_abort>
2fff3e10:	eaffc19f 	b	2ffe4494 <report_data_abort>
2fff3e14:	eaffc195 	b	2ffe4470 <report_exception>
2fff3e18:	eaffc194 	b	2ffe4470 <report_exception>
2fff3e1c:	eaffc193 	b	2ffe4470 <report_exception>

2fff3e20 <__bl2_run_next_image_from_thumb>:
2fff3e20:	4778      	bx	pc
2fff3e22:	e7fd      	b.n	2fff3e20 <__bl2_run_next_image_from_thumb>
2fff3e24:	eaffc0cd 	b	2ffe4160 <bl2_run_next_image>

2fff3e28 <__flush_dcache_range_from_thumb>:
2fff3e28:	4778      	bx	pc
2fff3e2a:	e7fd      	b.n	2fff3e28 <__flush_dcache_range_from_thumb>
2fff3e2c:	eaffc19c 	b	2ffe44a4 <flush_dcache_range>

2fff3e30 <__enable_mmu_direct_svc_mon_from_thumb>:
2fff3e30:	4778      	bx	pc
2fff3e32:	e7fd      	b.n	2fff3e30 <__enable_mmu_direct_svc_mon_from_thumb>
2fff3e34:	eaffc221 	b	2ffe46c0 <enable_mmu_direct_svc_mon>

2fff3e38 <__console_register_from_arm>:
2fff3e38:	e51ff004 	ldr	pc, [pc, #-4]	@ 2fff3e3c <__console_register_from_arm+0x4>
2fff3e3c:	2ffe79f9 	.word	0x2ffe79f9

2fff3e40 <__clean_dcache_range_from_thumb>:
2fff3e40:	4778      	bx	pc
2fff3e42:	e7fd      	b.n	2fff3e40 <__clean_dcache_range_from_thumb>
2fff3e44:	eaffc1a5 	b	2ffe44e0 <clean_dcache_range>

2fff3e48 <__spin_unlock_from_thumb>:
2fff3e48:	4778      	bx	pc
2fff3e4a:	e7fd      	b.n	2fff3e48 <__spin_unlock_from_thumb>
2fff3e4c:	eaffc103 	b	2ffe4260 <spin_unlock>

2fff3e50 <__spin_lock_from_thumb>:
2fff3e50:	4778      	bx	pc
2fff3e52:	e7fd      	b.n	2fff3e50 <__spin_lock_from_thumb>
2fff3e54:	eaffc0f8 	b	2ffe423c <spin_lock>

2fff3e58 <__RO_END_UNALIGNED__>:
	...
