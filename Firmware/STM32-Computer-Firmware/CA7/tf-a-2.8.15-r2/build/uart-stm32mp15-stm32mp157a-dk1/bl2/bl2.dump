
/home/lubuntu/Dokument/GitHub/STM32-Computer/Firmware/STM32-Computer-Firmware/CA7/tf-a-2.8.15-r2/tf-a-stm32mp-v2.8.15-stm32mp-r2/../build/uart-stm32mp15-stm32mp157a-dk1/bl2/bl2.elf:     file format elf32-littlearm
/home/lubuntu/Dokument/GitHub/STM32-Computer/Firmware/STM32-Computer-Firmware/CA7/tf-a-2.8.15-r2/tf-a-stm32mp-v2.8.15-stm32mp-r2/../build/uart-stm32mp15-stm32mp157a-dk1/bl2/bl2.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2ffe9000

Program Header:
    LOAD off    0x00001000 vaddr 0x2ffe9000 paddr 0x2ffe9000 align 2**12
         filesz 0x0000f000 memsz 0x0000f000 flags r-x
    LOAD off    0x00010000 vaddr 0x2fff8000 paddr 0x2fff8000 align 2**12
         filesz 0x000005a6 memsz 0x00004000 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            0000f000  2ffe9000  2ffe9000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000005a6  2fff8000  2fff8000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fff85c0  2fff85c0  000105a6  2**6
                  ALLOC
  3 .bss          00000920  2fff91c0  2fff91c0  000105a6  2**5
                  ALLOC
  4 xlat_table    00002000  2fffa000  2fffa000  000105a6  2**12
                  ALLOC
  5 .debug_info   0004024d  00000000  00000000  000105a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 0000c751  00000000  00000000  000507f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00001ce8  00000000  00000000  0005cf48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0001cf2c  00000000  00000000  0005ec30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00008dfb  00000000  00000000  0007bb5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      00000012  00000000  00000000  00084957  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000035  00000000  00000000  00084969  2**0
                  CONTENTS, READONLY
 12 .debug_ranges 00005088  00000000  00000000  000849a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  000048c8  00000000  00000000  00089a28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00028bf9  00000000  00000000  0008e2f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
2ffe9000 l    d  ro	00000000 ro
2fff8000 l    d  .data	00000000 .data
2fff85c0 l    d  stacks	00000000 stacks
2fff91c0 l    d  .bss	00000000 .bss
2fffa000 l    d  xlat_table	00000000 xlat_table
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 bl2_el3_entrypoint.o
2ffe90f0 l       ro	00000000 do_primary_cold_boot
00000000 l    df *ABS*	00000000 bl2_run_next_image.o
00000000 l    df *ABS*	00000000 cpu_helpers.o
2ffe9228 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 spinlock.o
00000000 l    df *ABS*	00000000 platform_up_stack.o
2fff85c0 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 stm32mp1_critic_power_wrapper.o
2fff8598 l       .data	00000000 saved_sp
2fff859c l       .data	00000000 saved_vbar
2fff85a0 l       .data	00000000 saved_mvbar
00000000 l    df *ABS*	00000000 debug.o
2fff7a39 l       ro	00000000 assert_msg1
2fff7a47 l       ro	00000000 assert_msg2
2ffe9374 l       ro	00000000 _assert_loop
2ffe9354 l       ro	00000000 dec_print_loop
2fff7a4e l       ro	00000000 panic_msg
2fff7a5f l       ro	00000000 panic_end
2ffe9408 l       ro	00000000 _panic_handler
00000000 l    df *ABS*	00000000 cache_helpers.o
2ffe9484 l       ro	00000000 exit_loop_cimvac
2ffe9470 l       ro	00000000 loop_cimvac
2ffe94c0 l       ro	00000000 exit_loop_cmvac
2ffe94ac l       ro	00000000 loop_cmvac
2ffe94fc l       ro	00000000 exit_loop_imvac
2ffe94e8 l       ro	00000000 loop_imvac
2ffe9500 l     F ro	000000c8 do_dcsw_op
2ffe95b0 l       ro	00000000 dcsw_loop_table
2ffe9514 l       ro	00000000 loop1
2ffe958c l       ro	00000000 level_done
2ffe9558 l       ro	00000000 loop2
2ffe9570 l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 misc_helpers.o
2ffe9644 l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 enable_mmu.o
00000000 l    df *ABS*	00000000 stm32_console.o
2ffe978c l       ro	00000000 core_init_fail
2ffe9770 l       ro	00000000 teack_loop
2ffe97e0 l       ro	00000000 register_fail
2ffe982c l       ro	00000000 putc_error
2ffe97f8 l       ro	00000000 txe_loop
2ffe9814 l       ro	00000000 tc_loop
2ffe9878 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 cortex_a7.o
2ffe98b8 l     F ro	00000014 cortex_a7_enable_smp
2ffe98cc l     F ro	00000004 cortex_a7_reset_func
2fff7ab2 l       ro	00000000 cortex_a7_errata_list_start
2fff7ab2 l       ro	00000000 cortex_a7_errata_list_end
00000000 l    df *ABS*	00000000 stm32mp1_helper.o
2ffe98f8 l       ro	00000000 other_exception_lbl
2fff7adc l       ro	00000000 undefined_str
2ffe9918 l       ro	00000000 print_exception_info
2fff7afa l       ro	00000000 exception_start_str
2fff7b0d l       ro	00000000 exception_end_str
2fff7b41 l       ro	00000000 end_error_str
2fff7ab2 l       ro	00000000 prefetch_abort_str
2fff7b2b l       ro	00000000 ifsr_str
2fff7b36 l       ro	00000000 ifar_str
2fff7ac9 l       ro	00000000 data_abort_str
2fff7b15 l       ro	00000000 dfsr_str
2fff7b20 l       ro	00000000 dfar_str
00000000 l    df *ABS*	00000000 bl2_image_load_v2.c
00000000 l    df *ABS*	00000000 bl2_main.c
00000000 l    df *ABS*	00000000 desc_image_load.c
2fff9300 l     O .bss	0000000c next_bl_params
2fff930c l     O .bss	0000000c bl_load_info
2fff5423 l     O ro	00000003 CSWTCH.28
00000000 l    df *ABS*	00000000 fdt_wrappers.c
2fff29bc l     F ro	00000004 fdt32_to_cpu
2fff29bc l     F ro	00000004 cpu_to_fdt32
00000000 l    df *ABS*	00000000 io_fip.c
2fff2a10 l     F ro	00000004 device_type_fip
2ffea068 l     F ro	00000020 fip_file_close
2fff91c0 l     O .bss	00000030 current_fip_file
2ffea088 l     F ro	0000009c fip_dev_init
2fff932c l     O .bss	00000004 backend_image_spec
2fff9330 l     O .bss	00000004 backend_dev_handle
2ffea124 l     F ro	000000b4 fip_file_read
2ffea1d8 l     F ro	00000024 fip_file_len
2ffea1fc l     F ro	000000f0 fip_file_open
2fff5655 l     O ro	00000010 uuid_null.0
2ffea2ec l     F ro	00000050 fip_dev_close
2fff9324 l     O .bss	00000008 state_pool
2fff9318 l     O .bss	00000004 fip_dev_count
2ffea33c l     F ro	0000004c fip_dev_open
2fff931c l     O .bss	00000008 dev_info_pool
2fff4460 l     O ro	00000024 fip_dev_funcs
2fff4484 l     O ro	00000004 fip_dev_connector
00000000 l    df *ABS*	00000000 io_memmap.c
2fff2a14 l     F ro	00000004 device_type_memmap
2fff2a18 l     F ro	00000004 memmap_dev_close
2ffea3b4 l     F ro	00000060 memmap_block_write
2ffea414 l     F ro	00000064 memmap_block_read
2ffea478 l     F ro	0000001c memmap_dev_open
2fff8048 l     O .data	00000008 memmap_dev_info
2ffea494 l     F ro	00000020 memmap_block_len
2ffea4b4 l     F ro	00000038 memmap_block_seek
2ffea4ec l     F ro	00000024 memmap_block_close
2fff91f0 l     O .bss	00000018 current_memmap_file
2ffea510 l     F ro	0000004c memmap_block_open
2fff44ac l     O ro	00000004 memmap_dev_connector
2fff4488 l     O ro	00000024 memmap_dev_funcs
00000000 l    df *ABS*	00000000 io_storage.c
2fff2a1c l     F ro	00000018 is_valid_dev
2fff2a34 l     F ro	00000010 is_valid_entity
2ffea584 l     F ro	00000040 free_entity.isra.0
2fff933c l     O .bss	00000010 entity_map
2fff9338 l     O .bss	00000004 entity_count
2fff9334 l     O .bss	00000004 dev_count
2fff934c l     O .bss	00000020 entity_pool
00000000 l    df *ABS*	00000000 stm32mp1_ddr.c
2fff2a44 l     F ro	00000022 stm32mp1_mode_register_write.isra.0
2fff2a66 l     F ro	0000003a stm32mp1_ddrphy_idone_wait
2fff2aa0 l     F ro	0000007e stm32mp1_wait_operating_mode
2fff44b0 l     O ro	00000060 ddr_registers
2fff4bc0 l     O ro	00000064 ddr_reg
2fff4b90 l     O ro	00000030 ddr_timing
2fff4b28 l     O ro	00000044 ddr_perf
2fff4b6c l     O ro	00000024 ddr_map
2fff4afc l     O ro	0000002c ddrphy_reg
2fff4ad4 l     O ro	00000028 ddrphy_timing
00000000 l    df *ABS*	00000000 stm32mp1_ram.c
2ffeacac l     F ro	0000015c stm32mp1_ddr_setup
2fff5824 l     O ro	00000013 __func__.0
2fff9208 l     O .bss	00000020 ddr_priv_data
2fff9a28 l     O .bss	00000001 ddr_self_refresh
00000000 l    df *ABS*	00000000 stm32mp_ram.c
2fff58c2 l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 stm32_uart.c
2ffeaf38 l     F ro	00000050 stm32_uart_wait_flag
2fff4c24 l     O ro	00000018 presc_table
00000000 l    df *ABS*	00000000 fconf.c
00000000 l    df *ABS*	00000000 fconf_dyn_cfg_getter.c
2fff8050 l     O .data	00000010 dtb_info_pool
2fff936c l     O .bss	00000060 dtb_infos
2fff7b9c l     O ro	0000000c dyn_cfg__populator
00000000 l    df *ABS*	00000000 optee_utils.c
2ffeb33c l     F ro	00000060 parse_optee_image
00000000 l    df *ABS*	00000000 bl2_io_storage.c
2fff93d8 l     O .bss	00000004 fip_dev_con
2fff93d4 l     O .bss	00000004 memmap_dev_con
00000000 l    df *ABS*	00000000 stm32cubeprogrammer_uart.c
2ffeb6c4 l     F ro	00000020 uart_send_result
2ffeb6e4 l     F ro	00000028 uart_write
2ffeb70c l     F ro	00000054 uart_read_8
2fff9a29 l     O .bss	00000001 init_done.0
2fff5ead l     O ro	00000006 command_tab
00000000 l    df *ABS*	00000000 stm32mp_fconf_io.c
2fff4584 l     O ro	00000038 load_info
2fff8060 l     O .data	00000010 fconf_stm32mp_uuids_pool
2fff7ba8 l     O ro	0000000c stm32mp_io__populator
2fff9a2a l     O .bss	00000070 fconf_stm32mp_uuids
00000000 l    df *ABS*	00000000 bl2_plat_setup.c
2fff6358 l     O ro	000001d5 debug_msg
00000000 l    df *ABS*	00000000 plat_ddr.c
00000000 l    df *ABS*	00000000 stm32mp1_critic_power.c
00000000 l    df *ABS*	00000000 stm32mp1_fconf_firewall.c
2fff2cc6 l     F ro	00000004 fdt32_to_cpu
2ffec410 l     F ro	000000cc fconf_populate_stm32mp1_firewall
2fff943c l     O .bss	00000004 nb_regions
2fff7bb4 l     O ro	0000000c stm32mp1_firewall__populator
00000000 l    df *ABS*	00000000 bl_common.c
00000000 l    df *ABS*	00000000 tf_log.c
2fff8510 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fff45cc l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 uuid.c
2fff2eb2 l     F ro	0000002e hex_val
2fff2ee0 l     F ro	0000003a read_hex.part.0
00000000 l    df *ABS*	00000000 stm32mp_common.c
2ffec908 l     F ro	00000034 stm32_get_bootinfo_cell.isra.0
2fff9470 l     O .bss	00000004 boot_ctx_address
2fff9a24 l     O .bss	00000002 boot_itf_selected
2fff946c l     O .bss	00000004 boot_action_saved
2fff9474 l     O .bss	00000004 lock
2fff9a9c l     O .bss	00000001 initialized.7
2fff945c l     O .bss	0000000c s_magic_number.6
2fff9a9b l     O .bss	00000001 initialized.5
2fff9450 l     O .bss	0000000c s_core1_branch_address.4
2fff9a9a l     O .bss	00000001 initialized.1
2fff9444 l     O .bss	0000000c s_boot_mode.0
2fff9468 l     O .bss	00000004 itf.8
2fff9478 l     O .bss	00000018 console
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fff8000 l     O .data	00000048 tf_xlat_ctx
2fff9228 l     O .bss	000000c0 tf_mmap
2fffa000 l     O xlat_table	00002000 tf_xlat_tables
2fff9490 l     O .bss	00000008 tf_mapped_regions
2fff9ac0 l     O .bss	00000020 tf_base_xlat_table
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2fff3014 l     F ro	00000124 mmap_add_region_check
2fff3138 l     F ro	0000001a xlat_clean_dcache_range
2ffece84 l     F ro	00000028 xlat_table_get_index
2ffeceac l     F ro	0000013c xlat_tables_unmap_region
2ffed0ac l     F ro	000001d8 xlat_tables_map_region
00000000 l    df *ABS*	00000000 clk.c
2fff9498 l     O .bss	00000004 ops
00000000 l    df *ABS*	00000000 delay_timer.c
2fff949c l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2fff3178 l     F ro	00000008 get_timer_value
2fff94a0 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp_ddr.c
2fff9a9e l     O .bss	00000001 axi_port_reenable_request
2fff9a9d l     O .bss	00000001 host_interface_reenable_request
00000000 l    df *ABS*	00000000 stm32_gpio.c
2fff32d6 l     F ro	00000004 fdt32_to_cpu
2ffedc08 l     F ro	000000f0 set_gpio.constprop.0
00000000 l    df *ABS*	00000000 nvmem.c
2fff94ac l     O .bss	0000000c nvmem_dev_array
2fff6aee l     O ro	00000012 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_tamp_nvram_core.c
2fff3302 l     F ro	00000004 fdt32_to_cpu
2ffee018 l     F ro	00000064 stm32_tamp_nvram_write_bkp
2ffee07c l     F ro	00000064 stm32_tamp_nvram_read_bkp.constprop.0.isra.0
2ffee0e0 l     F ro	000000a4 stm32_tamp_nvram_read_cell
2ffee184 l     F ro	000000c4 stm32_tamp_nvram_write_cell
2fff94c4 l     O .bss	0000002c nvram_drv_data
2fff94b8 l     O .bss	0000000c static_bkpreg_zones_end.0
2fff45e0 l     O ro	00000008 stm32_tamp_nvram_nvmem_ops
00000000 l    df *ABS*	00000000 regulator_core.c
2fff3360 l     F ro	00000004 fdt32_to_cpu
2fff3364 l     F ro	0000000a unlock_driver.isra.0
2fff336e l     F ro	0000000a lock_driver.isra.0
2fff6e74 l     O ro	00000016 __func__.1
2fff94f0 l     O .bss	0000017c rdev_array
2fff6e5b l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 regulator_fixed.c
2fff337e l     F ro	00000004 fixed_set_state
2fff3382 l     F ro	00000004 fixed_get_state
2fff966c l     O .bss	00000068 data
2fff8514 l     O .data	00000020 fixed_ops
2fff6edf l     O ro	00000019 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2fff3386 l     F ro	00000004 fdt32_to_cpu
2ffee92c l     F ro	00000024 fdt_get_node_parent_address_cells
2fff96d8 l     O .bss	00000004 fdt
2fff96d4 l     O .bss	00000004 size.1
2fff6ff1 l     O ro	00000010 __func__.0
00000000 l    df *ABS*	00000000 stm32mp_fconf_fuse.c
2ffeed5c l     F ro	00000128 fconf_populate_stm32mp_fuse_provisioning
2fff7bc0 l     O ro	0000000c stm32mp_fuse__populator
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2fff4418 l     O ro	00000048 stm32mp1_mmap
2fff4608 l     O ro	00000020 stm32mp1_uart_addresses
2ffeef64 l     F ro	00000034 get_part_number
2fff96dc l     O .bss	00000004 part_number.0
2fff45f8 l     O ro	00000010 CSWTCH.25
2fff45e8 l     O ro	00000010 CSWTCH.26
00000000 l    df *ABS*	00000000 tzc400.c
2fff96e0 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 bsec2.c
2ffef430 l     F ro	00000028 is_otp_invalid_mode
2ffef458 l     F ro	00000018 bsec_lock
2fff96e8 l     O .bss	00000004 bsec_spinlock
2ffef470 l     F ro	00000018 bsec_unlock
2ffef488 l     F ro	00000058 bsec_power_safmem
2ffef4e0 l     F ro	00000018 otp_bank_offset
2ffef4f8 l     F ro	00000034 bsec_check_error
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff7393 l     O ro	0000000a CSWTCH.37
00000000 l    df *ABS*	00000000 stm32_i2c.c
2fff3590 l     F ro	00000044 i2c_wait_flag
2ffefbe8 l     F ro	0000002c i2c_transfer_config.isra.0
2fff35d4 l     F ro	0000008c i2c_ack_failed
2fff3660 l     F ro	00000042 i2c_wait_txis
2fff36a2 l     F ro	00000042 i2c_wait_stop
2ffefc14 l     F ro	000001f0 i2c_read.constprop.0
2ffefe04 l     F ro	00000218 i2c_write
2fff4628 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fff96ec l     O .bss	00000018 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2fff06d4 l     F ro	00000024 dt_get_pmic_node
2fff8538 l     O .data	00000004 node.2
2fff3712 l     F ro	00000006 pmic_list_voltages
2fff3718 l     F ro	00000006 pmic_get_voltage
2fff371e l     F ro	00000006 pmic_set_voltage
2fff3724 l     F ro	0000000a pmic_get_state
2fff372e l     F ro	00000044 pmic_set_flag
2fff3772 l     F ro	0000000c pmic_set_state
2fff853c l     O .data	00000004 status.3
2fff8534 l     O .data	00000004 i2c_node.1
2fff9704 l     O .bss	00000004 pmic_i2c_addr
2fff9708 l     O .bss	00000024 i2c_handle
2fff4688 l     O ro	00000118 pmic_regs
2fff7647 l     O ro	0000000e __func__.0
2fff47a0 l     O ro	00000020 pmic_ops
00000000 l    df *ABS*	00000000 stpmic1.c
2fff0958 l     F ro	00000044 get_regulator_data
2fff47c0 l     O ro	00000118 regulators_table
2fff9a9f l     O .bss	00000001 ldo3_special_mode
2fff4cb2 l     O ro	00000002 ldo3_special_mode_table
2fff9a26 l     O .bss	00000002 pmic_i2c_addr
2fff972c l     O .bss	00000004 pmic_i2c_handle
2fff4e8a l     O ro	00000080 buck1_voltage_table
2fff4e40 l     O ro	0000004a buck2_voltage_table
2fff4dd0 l     O ro	00000070 buck3_voltage_table
2fff4d56 l     O ro	0000007a buck4_voltage_table
2fff4d24 l     O ro	00000032 ldo1_voltage_table
2fff4cf2 l     O ro	00000032 ldo2_voltage_table
2fff4cb4 l     O ro	0000003e ldo3_voltage_table
2fff4c40 l     O ro	00000002 ldo4_voltage_table
2fff4c74 l     O ro	0000003e ldo5_voltage_table
2fff4c42 l     O ro	00000032 ldo6_voltage_table
2fff4c3e l     O ro	00000002 vref_ddr_voltage_table
2fff4c3c l     O ro	00000002 fixed_5v_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2fff0d78 l     F ro	00000030 stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 stm32mp_tamp_nvram_mp1.c
2fff48d8 l     O ro	00000008 stm32mp1_tamp_nvram
2fff8540 l     O .data	0000000c mp1_bkpreg_access
2fff48e0 l     O ro	00000018 mp1_zone_cfg_fields
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2fff390e l     F ro	00000020 clock_is_always_on
2fff0f10 l     F ro	000000fc stm32mp1_check_pll_conf
2fff490c l     O ro	00000080 stm32mp1_clk_pll
2fff9a08 l     O .bss	00000018 stm32mp1_osc
2fff794a l     O ro	00000004 stm32mp1_pll
2fff100c l     F ro	00000034 stm32mp1_pll_config_output
2fff392e l     F ro	00000016 stm32mp1_clk_lock
2fff3944 l     F ro	00000016 stm32mp1_clk_unlock
2fff395a l     F ro	00000036 stm32_clk_parse_fdt_by_name
2fff1040 l     F ro	00000034 stm32mp1_clk_get_gated_id
2fff4f0a l     O ro	000001d8 stm32mp1_clk_gate
2fff790d l     O ro	0000001a __func__.0
2fff1074 l     F ro	00000078 stm32mp1_clk_get_parent
2fff799d l     O ro	00000023 parent_id_clock_id
2fff498c l     O ro	00000108 stm32mp1_clk_sel
2fff10ec l     F ro	00000040 stm32mp_clk_is_enabled
2fff112c l     F ro	00000090 stm32mp_clk_disable
2fff9914 l     O .bss	00000004 refcount_lock
2fff9918 l     O .bss	000000ec gate_refcounts
2fff11bc l     F ro	0000008c stm32mp_clk_enable
2fff1248 l     F ro	00000090 stm32_clk_configure_mux
2fff3990 l     F ro	00000018 stm32mp1_pll_configure_src
2fff12d8 l     F ro	000000ac stm32mp1_read_pll_freq
2fff7947 l     O ro	00000003 pllncfgr2
2fff1384 l     F ro	00000228 stm32mp_clk_get_rate
2fff792f l     O ro	00000008 stm32mp1_mpu_apbx_div
2fff7927 l     O ro	00000008 stm32mp1_axi_div
2fff7937 l     O ro	00000010 stm32mp1_mcu_div
2fff15ac l     F ro	00000054 stm32mp1_osc_wait.isra.0
2fff9a04 l     O .bss	00000004 reg_lock
2fff9a20 l     O .bss	00000004 stm32_clock_data
2fff854c l     O .data	00000018 stm32mp15_clock_data
2fff48f8 l     O ro	00000014 stm32mp_clk_ops
2fff50e2 l     O ro	00000108 parent_mp15
2fff51ea l     O ro	00000096 dividers_mp15
2fff7999 l     O ro	00000004 i2c12_parents
2fff7995 l     O ro	00000004 i2c35_parents
2fff7993 l     O ro	00000002 stgen_parents
2fff798f l     O ro	00000004 i2c46_parents
2fff7989 l     O ro	00000006 spi6_parents
2fff7983 l     O ro	00000006 usart1_parents
2fff797f l     O ro	00000004 rng1_parents
2fff797a l     O ro	00000005 uart6_parents
2fff7975 l     O ro	00000005 uart234578_parents
2fff7971 l     O ro	00000004 sdmmc12_parents
2fff796d l     O ro	00000004 sdmmc3_parents
2fff7969 l     O ro	00000004 qspi_parents
2fff7965 l     O ro	00000004 fmc_parents
2fff7962 l     O ro	00000003 axiss_parents
2fff795e l     O ro	00000004 mcuss_parents
2fff795b l     O ro	00000003 usbphy_parents
2fff7959 l     O ro	00000002 usbo_parents
2fff7955 l     O ro	00000004 mpu_parents
2fff7952 l     O ro	00000003 per_parents
2fff794e l     O ro	00000004 rtc_parents
00000000 l    df *ABS*	00000000 aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 fdt.c
2fff39a8 l     F ro	00000018 fdt32_ld
00000000 l    df *ABS*	00000000 fdt_addresses.c
2fff3bea l     F ro	0000002a fdt_cells
00000000 l    df *ABS*	00000000 fdt_ro.c
2fff3c14 l     F ro	00000018 fdt32_ld
2fff3c2c l     F ro	00000032 nextprop_
2fff3c5e l     F ro	00000004 fdt32_ld_.isra.0
2fff3c62 l     F ro	00000034 fdt_get_property_by_offset_
2fff3dc0 l     F ro	0000007c fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 printf.c
2fff41d6 l     F ro	00000082 unsigned_num_print.part.0
00000000 l    df *ABS*	00000000 snprintf.c
2fff4272 l     F ro	000000ca unsigned_num_print
00000000 l    df *ABS*	00000000 bl2_arch_setup.c
00000000 l    df *ABS*	00000000 stm32mp_ddr_test.c
00000000 l    df *ABS*	00000000 plat_image_load.c
00000000 l    df *ABS*	00000000 plat_bl_common.c
00000000 l    df *ABS*	00000000 popcountsi2.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 <stdin>
00000000 l    df *ABS*	00000000 bl2_el3_exceptions.o
00000000 l    df *ABS*	00000000 plat_bl2_mem_params_desc.c
2fff828c l     O .data	00000284 bl2_mem_params_descs
2fff7c00 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fff7c08 l     F ro	00000008 __bl2_run_next_image_from_thumb
2fff7c10 l     F ro	00000008 __spin_unlock_from_thumb
2fff7c18 l     F ro	00000008 __flush_dcache_range_from_thumb
2fff7c20 l     F ro	00000008 __spin_lock_from_thumb
2fff7c28 l     F ro	00000008 __console_register_from_arm
2fff7c30 l     F ro	00000008 __clean_dcache_range_from_thumb
2fff2cca g     F ro	00000014 putchar
2ffef804 g     F ro	000001dc ddr_sw_self_refresh_exit
2ffee574 g     F ro	000000e0 regulator_list_voltages
2ffec780 g     F ro	0000001c console_set_scope
2fff23b4 g     F ro	0000001c fdt_address_cells
2fff316e g     F ro	0000000a mdelay
2ffec9ac g     F ro	00000018 stm32mp_pwr_regs_lock
2fff39ea g     F ro	00000054 fdt_offset_ptr
2fff3700 g     F ro	00000012 stm32_i2c_mem_read
2fff9ac0 g       .bss	00000000 __PMF_TIMESTAMP_START__
2ffee48c g     F ro	00000030 regulator_enable
2fff8580 g     O .data	00000018 stm32mp_osc_node_label
2ffec740 g     F ro	00000040 console_register
2ffe91a8 g     F ro	00000034 reset_handler
2fff2b38 g     F ro	0000001e stm32mp_ddr_test_data_bus
2ffe95dc g     F ro	00000064 zeromem
2fff5280 g     O ro	00000034 version_string
2ffef574 g     F ro	00000034 bsec_read_sr_lock
2fff3152 g     F ro	00000018 mmap_add_ctx
2ffec69c g     F ro	00000020 print_entry_point_info
2fff9844 g     O .bss	000000d0 mp15_pll
2fff4258 g     F ro	0000001a printf
2fff3782 g     F ro	00000016 pmic_switch_off
2ffed774 g     F ro	00000024 clk_is_enabled
2ffed370 g     F ro	00000154 mmap_add_dynamic_region_ctx
2ffec97c g     F ro	0000000c stm32mp_get_boot_ctx_address
2fff92e8 g     O .bss	00000018 mmu_cfg_params
2fff316c g     F ro	00000002 xlat_tables_print
2ffee3cc g     F ro	0000004c regulator_get_by_name
2fff8000 g       ro	00000000 __RW_START__
2ffeb314 g     F ro	00000028 dyn_cfg_dtb_info_getter
2ffef5a8 g     F ro	00000034 bsec_read_sw_lock
2fff05e4 g     F ro	00000040 stm32_iwdg_refresh
2fffa000 g       xlat_table	00000000 __XLAT_TABLE_START__
2fff8070 g     O .data	00000214 policies
2fff3e3c g     F ro	00000040 fdt_getprop_namelen
2ffeee84 g     F ro	0000001c configure_mmu
2fff3d90 g     F ro	00000018 fdt_first_property_offset
2fff2c90 g     F ro	00000004 bl2_el3_early_platform_setup
2ffecddc g     F ro	00000028 mmap_add_dynamic_region
2ffe9310 g     F ro	0000006c asm_assert
2ffedf5c g     F ro	00000090 nvmem_get_cell_by_index
2ffeb2f4 g     F ro	00000020 dyn_cfg_dtb_info_get_index
2ffef5dc g     F ro	0000004c bsec_write_otp
2ffe93dc g     F ro	00000034 do_panic
2ffeca9c g     F ro	00000030 stm32_get_magic_number_cell
2ffe943c g     F ro	00000010 report_data_abort
2fff4168 g     F ro	0000002c memmove
2fff3fd6 g     F ro	00000020 fdt_parent_offset
2ffec360 g     F ro	000000b0 stm32_pwr_down_wfi_load
2ffeccfc g     F ro	000000ac setup_mmu_cfg
2fff433c g     F ro	0000001a snprintf
2fff33ac g     F ro	00000004 stm32mp_is_wakeup_from_standby
2ffed4c4 g     F ro	00000104 mmap_remove_dynamic_region_ctx
2ffedcf8 g     F ro	00000240 dt_set_pinctrl_config
2ffef3e0 g     F ro	00000050 tzc400_disable_filters
2fff3f32 g     F ro	0000001a fdt_path_offset
2fff93dc g     O .bss	00000004 storage_dev_handle
2fff38f2 g     F ro	0000001c stm32_get_zdata_from_context
2ffec81c  w    F ro	00000024 plat_log_get_prefix
2fff09dc g     F ro	00000028 stpmic1_register_read
2ffe98d4 g     F ro	00000054 plat_report_exception
2ffeb1e8 g     F ro	0000010c fconf_populate_dtb_registry
2fff52b4 g     O ro	0000001e build_message
2ffee30c g     F ro	000000c0 stm32_tamp_nvram_init
2ffece14 g     F ro	0000003c init_xlat_tables
2fff8000 g       .data	00000000 __DATA_START__
2ffeeee8 g     F ro	00000020 stm32_get_gpio_bank_clock
2ffe9cfc g     F ro	00000030 get_bl_mem_params_node
2fff23d0 g     F ro	000000b0 fdt_get_string
2ffef568 g     F ro	0000000c bsec_read_debug_conf
2ffe9794 g     F ro	00000050 console_stm32_register
2ffec988 g     F ro	0000000c stm32mp_get_boot_itf_selected
2fff2c60 g     F ro	0000002c stm32_uart_getc
2ffecc28 g     F ro	00000028 xlat_arch_regime_get_xn_desc
2fff072c g     F ro	0000010c initialize_pmic_i2c
2ffedad4 g     F ro	00000010 stm32mp_stgen_restore_rate
2fff16a0 g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffeb760 g     F ro	000003f8 stm32cubeprog_uart_load
2fff328a g     F ro	0000004c stm32mp_ddr_wait_refresh_update_done_ack
2fff40e4 g     F ro	00000036 fdt_node_offset_by_compatible
2ffebc30 g     F ro	00000074 bl2_platform_setup
2fff2bdc g     F ro	0000002e stm32mp_ddr_check_size
2ffed9c0 g     F ro	00000064 fdt_clk_read_uint32_default
2ffeae08 g     F ro	00000044 stm32mp1_ddr_clk_enable
2ffe9b04 g       ro	00000000 __TEXT_RESIDENT_END__
2ffecb2c g     F ro	0000004c stm32_get_boot_interface
2fff4152 g     F ro	00000016 memcpy
2ffec99c g     F ro	00000008 stm32mp_ddrphyc_base
2ffe9c9c g     F ro	0000001c flush_bl_params_desc
2ffe95dc g     F ro	00000064 zero_normalmem
2ffe9f18 g     F ro	00000088 fdtw_read_string
2fff2250 g     F ro	00000024 __aeabi_uldivmod
2ffee6e4 g     F ro	00000180 regulator_register
2fff0838 g     F ro	000000f0 initialize_pmic
2fff0c28 g     F ro	00000014 stpmic1_bind_i2c
2ffe98d0 g     F ro	00000004 platform_mem_init
2fff3330 g     F ro	00000030 stm32_tamp_nvram_reg_field_read
2ffe942c g     F ro	00000010 report_prefetch_abort
2ffef52c g     F ro	0000003c bsec_probe
2fff33b4 g     F ro	0000002c bsec_read_otp
2fff26dc g     F ro	000002d0 vsnprintf
2ffecdd0 g     F ro	0000000c mmap_add
2fff0da8 g     F ro	0000002c stm32mp1_dbgmcu_get_chip_version
2fff37c6 g     F ro	0000002e stpmic1_register_update
2ffec9a4 g     F ro	00000008 stm32mp_pwr_base
2fff2f1a g     F ro	00000006 plat_get_syscnt_freq2
2ffeeec8 g     F ro	00000020 stm32_get_gpio_bank_offset
2ffe9af0 g     F ro	00000014 plat_panic_handler
2fff2c94 g     F ro	00000004 plat_flush_next_bl_params
2fff7b9c g       ro	00000000 __RT_SVC_DESCS_START__
2fff3cf8 g     F ro	0000007a fdt_subnode_offset_namelen
2ffef9e0 g     F ro	00000018 ddr_read_sr_mode
2fff91c0 g       stacks	00000000 __STACKS_END__
2fff3fb8 g     F ro	0000001e fdt_node_depth
2fff9ac0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2ffef14c g     F ro	00000028 stm32_iwdg_get_instance
2fff2d32 g     F ro	00000180 __udivmoddi4
2ffe9488 g     F ro	0000003c clean_dcache_range
2ffeef08 g     F ro	00000014 get_uart_address
2ffeea2c g     F ro	00000088 dt_fill_device_info
2ffeea0c g     F ro	00000020 dt_set_stdout_pinctrl
2fff3180 g     F ro	0000000e stm32mp_ddr_start_sw_done
2ffedae4 g     F ro	00000048 stm32mp_ddr_set_reg
2fff8288 g     O .data	00000004 bl_mem_params_desc_ptr
2ffea758 g     F ro	00000034 io_size
2fff39da g     F ro	00000010 fdt_header_size
2fff9730 g     O .bss	00000064 mp15_clkdiv
2ffebb58 g     F ro	000000d8 fconf_populate_stm32mp_io_policies
2fff31c8 g     F ro	0000001a stm32mp_ddr_enable_axi_port
2ffee4bc g     F ro	0000004c regulator_get_voltage
2ffea5ec g     F ro	00000028 io_dev_open
2ffe9990 g     F ro	00000048 plat_report_data_abort
2ffe9278  w    F ro	0000000c plat_set_my_stack
2fff7b9c g       ro	00000000 __RT_SVC_DESCS_END__
2fff3ae4 g     F ro	00000024 fdt_check_node_offset_
2ffee418 g     F ro	00000074 regulator_get_by_supply_name
2ffe9cb8 g     F ro	00000044 get_bl_params_node_index
2ffe9288 g     F ro	00000074 stm32_pwr_down_wfi_wrapper
2ffe93a8 g     F ro	00000034 asm_print_hex
2ffedb84 g     F ro	0000004c stm32mp_ddr_set_qd3_update_conditions
2fff318e g     F ro	0000003a stm32mp_ddr_wait_sw_done_ack
00000920 g       *ABS*	00000000 __BSS_SIZE__
2ffe938c g     F ro	0000001c asm_print_str
2ffedf38 g     F ro	00000024 nvmem_driver_register
2ffe9ad8 g     F ro	00000008 plat_crash_console_flush
2fff9794 g     O .bss	000000b0 mp15_clksrc
2ffef1a4 g     F ro	00000020 stm32mp_bkpram_get_access
2fff2cde  w    F ro	00000004 plat_error_handler
2ffec994 g     F ro	00000008 stm32mp_ddrctrl_base
2fff43e4 g     F ro	00000014 strnlen
2fff3e7c g     F ro	00000022 fdt_getprop
2fff93cc g     O .bss	00000008 image_block_spec
2fff203c g     F ro	00000214 stm32mp1_clk_probe
2ffec094 g     F ro	000001a4 bl2_plat_handle_post_image_load
2fff7c38 g       ro	00000000 __RO_END_UNALIGNED__
2ffed8cc g     F ro	0000008c fdt_osc_read_freq
2ffec79c g     F ro	00000058 console_putc
2ffe99f4 g     F ro	00000004 plat_secondary_cold_boot_setup
2ffea804 g     F ro	000004a8 stm32mp1_ddr_init
2ffeca70 g     F ro	0000002c stm32_display_board_info
2fff43f8 g     F ro	0000001a strrchr
2fff38ba g     F ro	00000014 stm32mp_system_reset
2fff32f2 g     F ro	00000010 nvmem_cell_write
2ffe9a18 g     F ro	000000a0 plat_crash_console_init
2ffe944c g     F ro	0000003c flush_dcache_range
2fff04b4 g     F ro	00000130 stm32_i2c_is_device_ready
2ffeb39c g     F ro	00000024 optee_header_is_valid
2ffed838 g     F ro	00000028 timer_init
2ffe9d80 g     F ro	000000c0 get_next_bl_params_from_mem_params_desc
2fff4038 g     F ro	00000046 fdt_stringlist_contains
2fff32da g     F ro	00000018 nvmem_cell_read
2fff3808 g     F ro	00000014 stpmic1_regulator_enable
2fff7bcc g       ro	00000000 __PMF_SVC_DESCS_END__
2fff2fe2 g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff85a8 g       .data	00000000 __RELA_END__
2fff85a8 g       .data	00000000 __RELA_START__
2fff1600 g     F ro	00000094 clk_stm32_set_div
2ffeb4d4 g     F ro	00000010 open_fip
2fff3236 g     F ro	0000004a stm32mp_ddr_disable_host_interface
2fff0a04 g     F ro	00000090 stpmic1_regulator_voltage_get
2fff2530 g     F ro	000001ac vprintf
2fff2ce8 g     F ro	0000002a __popcountsi2
2ffe9ea8 g     F ro	00000070 fdt_read_uint32_array
2fff8564 g     O .data	0000001c stm32mp15_clock_pdata
2ffed958 g     F ro	00000068 fdt_clk_read_bool
2fff2fe8 g     F ro	0000001c is_dcache_enabled
2ffedbd0 g     F ro	00000038 stm32mp_ddr_unset_qd3_update_conditions
2ffe95c8 g     F ro	00000014 dcsw_op_all
2ffe99e8 g     F ro	00000004 plat_reset_handler
2ffeaf88 g     F ro	00000198 stm32_uart_init
2fff3d72 g     F ro	0000001e fdt_subnode_offset
2ffe91e0 g     F ro	0000004c get_cpu_ops_ptr
2fff2c98 g     F ro	00000004 plat_get_bl_image_load_info
2ffec93c g     F ro	00000040 stm32mp_save_boot_ctx_address
2ffec56c g     F ro	00000130 load_auth_image
2fff411a g     F ro	0000001c memchr
2fff389c g     F ro	0000001e stpmic1_get_version
2fff099c g     F ro	00000040 stpmic1_regulator_levels_mv
2fffc000 g       xlat_table	00000000 __BL2_END__
2ffecc80 g     F ro	0000003c xlat_arch_current_el
2ffeda88 g     F ro	0000004c stm32mp_stgen_config
2fff3f4c g     F ro	0000006c fdt_supernode_atdepth_offset
2ffeebfc g     F ro	00000030 dt_get_board_model
2fff29d0 g     F ro	00000018 fdt_read_uint32_default
00000000 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2fff2fca g     F ro	00000010 xlat_arch_get_pas
2fff3306 g     F ro	0000002a stm32_tamp_nvram_reg_get_zone
2fff3bc0 g     F ro	0000002a fdt_next_subnode
2ffec9fc g     F ro	00000030 stm32_get_otp_value_from_idx
2fff0f00 g     F ro	00000008 stm32_tamp_nvram_get_cdata
2fff85a6 g       .data	00000000 __DATA_RAM_END__
2ffeb120 g     F ro	00000088 fconf_populate
2ffeec2c g     F ro	000000a8 dt_find_otp_name
2fff9ac0 g       .bss	00000000 __PMF_PERCPU_TIMESTAMP_END__
2fff4384 g     F ro	00000028 strlcpy
2ffe9c1c g     F ro	0000004c bl2_main
2fff43bc g     F ro	00000028 strncmp
2fff93e4 g     O .bss	00000058 handle
2fff85a6 g       .data	00000000 __DATA_END__
2ffe93ac g       ro	00000000 asm_print_hex_bits
2ffee674 g     F ro	00000070 regulator_set_flag
2fff9ac0 g       .bss	00000000 __BASE_XLAT_TABLE_START__
2fff7bcc g       ro	00000000 __CPU_OPS_START__
2fff0bbc g     F ro	00000030 stpmic1_regulator_bypass_mode_set
2ffed7c8 g     F ro	00000070 udelay
2ffeeadc g     F ro	00000028 dt_get_stdout_uart_info
2fff3b08 g     F ro	00000024 fdt_check_prop_offset_
2ffe94c4 g     F ro	0000003c inv_dcache_range
2fff85a4 g     O .data	00000001 console_state
2ffe97ec g     F ro	00000048 console_stm32_core_putc
2fff0d50 g     F ro	00000028 stm32_restore_ddr_training_area
2ffe9000 g     F ro	00000140 bl2_entrypoint
2ffe9854 g     F ro	0000003c console_stm32_core_flush
2ffed878 g     F ro	00000054 generic_delay_timer_init
2ffec238 g     F ro	00000048 bl2_el3_plat_prepare_exit
2ffed860 g     F ro	00000018 generic_delay_timer_init_args
2fff9ac0 g       .bss	00000000 __BAKERY_LOCK_END__
2fff4136 g     F ro	0000001c memcmp
2fff2f20 g     F ro	00000006 stm32mp_rcc_base
2ffeae4c g     F ro	0000000c stm32mp1_ddr_is_restored
2fff0bec g     F ro	0000003c stpmic1_active_discharge_mode_set
2fff338a g     F ro	00000022 dt_get_pwr_vdd_voltage
2ffecfe8 g     F ro	000000c4 xlat_desc
2fff3e9e g     F ro	00000094 fdt_path_offset_namelen
2fff3da8 g     F ro	00000018 fdt_next_property_offset
2fff0dd4 g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2fff4558 g     O ro	0000002c init
2ffe99f8 g     F ro	0000001c plat_is_my_cpu_primary
2ffeeab4 g     F ro	00000028 dt_get_node
2fff9ae0 g       .bss	00000000 __BSS_END__
2fff7bdc g       ro	00000000 __CPU_OPS_END__
2ffec4dc g     F ro	00000034 stm32mp1_arch_security_setup
2ffef378 g     F ro	00000068 tzc400_enable_filters
2fff3878 g     F ro	00000024 stpmic1_regulator_icc_set
2ffe99ec g     F ro	00000008 plat_get_my_entrypoint
2ffea70c g     F ro	0000004c io_seek
2fff3ff6 g     F ro	00000042 fdt_node_offset_by_phandle
2ffea7d4 g     F ro	00000030 io_close
2fff2d12 g     F ro	00000020 __ctzdi2
2ffeda24 g     F ro	00000034 fdt_get_clock_id
2ffef334 g     F ro	00000044 tzc400_update_filters
2ffef270 g     F ro	000000c4 tzc400_configure_region
2ffee950 g     F ro	00000014 dt_open_and_check
2ffe965c g     F ro	00000008 disable_mmu_icache_secure
2fff0eb0 g     F ro	00000050 stm32mp_syscfg_enable_io_compensation_finish
2fff2c40 g     F ro	00000020 stm32_uart_flush
2fff2c14 g     F ro	0000002c stm32_uart_putc
2fff7bdc g       ro	00000000 __GOT_END__
2fff4194 g     F ro	00000042 memset
2fff3228 g     F ro	0000000e stm32mp_ddr_enable_host_interface
2fff7bcc g       ro	00000000 __PARSER_LIB_DESCS_END__
2fff9ac0 g       .bss	00000000 __BAKERY_LOCK_START__
2ffebca4 g     F ro	000003f0 bl2_el3_plat_arch_setup
2fff7be0 g       ro	00000000 bl2_vector_table
2ffe9160 g     F ro	00000048 bl2_run_next_image
2ffee864 g     F ro	000000c8 fixed_regulator_register
2fff29e8 g     F ro	00000028 fdt_read_uint64
2ffe9834 g     F ro	0000001c console_stm32_putc
2fff8284 g     O .data	00000004 bl_mem_params_desc_num
2fff33b0 g     F ro	00000004 stm32mp_skip_boot_device_after_standby
2fff0e04 g     F ro	00000018 stm32mp_syscfg_enable_io_compensation_start
2fff2ce2  w    F ro	00000002 bl2_plat_preload_setup
2fff3402 g     F ro	00000010 ddr_get_io_calibration_val
2fff2fda g     F ro	00000008 xlat_arch_get_max_supported_pa
2ffe9b04 g     F ro	00000118 bl2_load_images
2ffece50 g     F ro	00000034 enable_mmu_svc_mon
2ffef9f8 g     F ro	000001f0 ddr_set_sr_mode
2fff3280 g     F ro	0000000a stm32mp_ddr_sw_selfref_exit
2fff29ac g     F ro	00000002 bl2_arch_setup
2fff7bdc g       ro	00000000 __GOT_START__
2ffeaee4 g     F ro	00000054 stm32mp_ddr_dt_get_param
2fff2480 g     F ro	00000044 fdt_get_phandle
00000000 g       *ABS*	00000000 __PERCPU_TIMESTAMP_SIZE__
2fff436c g     F ro	00000018 strcmp
2fff0624 g     F ro	000000b0 stm32_iwdg_init
2ffee654 g     F ro	00000020 regulator_get_range
2ffeb1a8 g     F ro	00000040 set_config_info
2ffec280 g     F ro	000000e0 stm32mp_board_ddr_power_init
2ffef1c4 g     F ro	00000024 tzc400_set_action
2fff0af4 g     F ro	00000098 stpmic1_regulator_voltage_set
2fff2b1e g     F ro	0000001a stm32mp_ddr_test_rw_access
2fff37f4 g     F ro	0000000a stpmic1_powerctrl_on
2fff7bcc g       ro	00000000 __FCONF_POPULATOR_END__
2ffe96e8 g     F ro	000000ac console_stm32_core_init
2ffe9c68 g     F ro	00000034 flush_bl_params_desc_args
2ffed750 g     F ro	00000024 clk_get_rate
2ffe9640 g     F ro	0000001c disable_mmu_secure
2fff001c g     F ro	00000064 stm32_i2c_get_setup_from_fdt
2ffecacc g     F ro	00000030 stm32_get_core1_branch_address_cell
2fff0a94 g     F ro	00000060 stpmic1_register_write
2ffeae94 g     F ro	00000050 stm32mp_ddr_dt_get_info
2fff3798 g     F ro	0000002e stpmic1_is_regulator_enabled
2ffe9894 g     F ro	0000001c console_stm32_flush
2ffec840 g     F ro	000000c8 read_uuid
2fff9ae0 g       .bss	00000000 __BASE_XLAT_TABLE_END__
2fff22e8 g     F ro	000000cc fdt_check_header
2ffedfec g     F ro	0000002c nvmem_get_cell_by_name
2ffec7f4 g     F ro	00000028 console_flush
2fff2f36 g     F ro	0000001e stm32mp_map_ddr_non_cacheable
2fff3004 g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff8000 g       ro	00000000 __RO_END__
2ffea614 g     F ro	00000034 io_dev_init
2fff0b8c g     F ro	00000030 stpmic1_regulator_sink_mode_set
2ffeb4e4 g     F ro	00000010 open_storage
2fff3c96 g     F ro	00000062 fdt_get_name
2ffeebcc g     F ro	00000030 dt_get_vdd_regulator
2ffee978 g     F ro	00000020 fdt_check_node
2ffea78c g     F ro	00000048 io_read
2ffe9ff4 g     F ro	00000074 fdt_get_stdout_node_offset
2ffe9260 g     F ro	00000018 spin_unlock
2fff3b9a g     F ro	00000026 fdt_first_subnode
2fff91c0 g       .bss	00000000 __BSS_START__
2fff8000 g       .data	00000000 __DATA_RAM_START__
2ffe9000 g       ro	00000000 __RO_START__
2fff3854 g     F ro	00000024 stpmic1_regulator_mask_reset_set
2fff2b56 g     F ro	00000086 stm32mp_ddr_test_addr_bus
2ffed284 g     F ro	000000ec mmap_add_region_ctx
2fff2ce4  w    F ro	00000004 plat_try_next_boot_source
2ffeef40 g     F ro	00000024 stm32mp_get_chip_dev_id
2fff7bcc g       ro	00000000 __PMF_SVC_DESCS_START__
2ffe9ae4 g     F ro	00000008 plat_crash_console_putc
2ffef65c g     F ro	000000f0 bsec_program_otp
2ffea678 g     F ro	00000094 io_open
2fff3b2c g     F ro	0000006e fdt_next_node
2ffef120 g     F ro	0000002c stm32mp_check_closed_device
2fff37fe g     F ro	0000000a stpmic1_switch_off
2fff29ae g     F ro	0000000e bl2_el3_setup
2fff0c9c g     F ro	00000060 stm32mp_reset_deassert
2ffee964 g     F ro	00000014 fdt_get_address
2ffe923c g     F ro	00000024 spin_lock
2ffec718 g     F ro	00000028 console_is_registered
2ffed798 g     F ro	00000030 clk_register
2ffec9c4 g     F ro	00000018 stm32mp_pwr_regs_unlock
2ffeeb04 g     F ro	00000070 dt_match_instance_by_compatible
2fff33e0 g     F ro	00000022 ddr_enable_clock
2ffeeb74 g     F ro	00000058 dt_get_ddr_size
2ffeccbc g     F ro	00000040 is_mmu_enabled_ctx
2ffef74c g     F ro	000000b8 bsec_shadow_read_otp
2ffeb680 g     F ro	00000044 plat_get_image_source
2ffed72c g     F ro	00000024 clk_disable
2ffef1e8 g     F ro	0000005c tzc400_init
2ffec6bc g     F ro	0000005c tf_log
2fff93e0 g     O .bss	00000004 fip_dev_handle
2ffea5c4 g     F ro	00000028 io_register_device
2fff0cfc g     F ro	00000054 stm32_context_save_bl2_param
2fff7b9c g       ro	00000000 __FCONF_POPULATOR_START__
2fff3412 g     F ro	0000017e ddr_standby_sr_entry
2ffeb3c0 g     F ro	00000114 parse_optee_header
2fff377e g     F ro	00000004 pmic_voltages_init
2ffe9e40 g     F ro	00000068 populate_next_bl_params_config
2fffc000 g       xlat_table	00000000 __RW_END__
2ffeeea0 g     F ro	00000028 stm32_get_gpio_bank_base
2ffee998 g     F ro	00000074 fdt_get_status
2fff2cac g     F ro	0000001a stm32_pwr_cstop_critic_exit
2fff0c3c g     F ro	00000060 stm32mp_reset_assert
2fff1694 g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2fff2f60 g     F ro	0000006a stm32_save_boot_info
2ffe9938 g     F ro	00000048 plat_report_prefetch_abort
2fff29c0 g     F ro	00000010 fdt_read_uint32
2ffe9d2c g     F ro	00000054 get_bl_load_info_from_mem_params_desc
2fff85c0 g       stacks	00000000 __STACKS_START__
2ffec510 g     F ro	0000005c stm32mp1_security_setup
2ffe9fa0 g     F ro	00000054 fdtw_read_uuid
2ffeef98 g     F ro	00000148 stm32mp_get_soc_name
2fff3a3e g     F ro	000000a6 fdt_next_tag
2fff9ac0 g       .bss	00000000 __PMF_TIMESTAMP_END__
2ffef0e0 g     F ro	0000001c stm32mp_print_cpuinfo
2ffe9000 g       ro	00000000 __TEXT_RESIDENT_START__
2ffedb2c g     F ro	00000058 stm32mp_ddr_sw_selfref_entry
2fff0f08 g     F ro	00000008 stm32_tamp_nvram_get_access_rights
2ffed5c8 g     F ro	00000140 init_xlat_tables_ctx
2fff0928 g     F ro	00000030 print_pmic_info_and_debug
2fff0080 g     F ro	00000434 stm32_i2c_init
2fff36e4 g     F ro	0000001c stm32_i2c_mem_write
2fffc000 g       xlat_table	00000000 __XLAT_TABLE_END__
2ffeb610 g     F ro	00000070 bl2_plat_handle_pre_image_load
2fff24c4 g     F ro	0000002c fdt_get_alias_namelen
2ffee248 g     F ro	000000c4 stm32_tamp_nvram_update_rights
2fff2f26 g     F ro	00000010 stm32mp_lock_available
2ffeda58 g     F ro	00000030 fdt_get_uart_clock_freq
2ffea55c g     F ro	00000028 register_io_dev_memmap
2ffeef1c g     F ro	00000024 stm32mp_get_chip_version
2fff43ac g     F ro	00000010 strlen
2fff16ac g     F ro	00000990 stm32mp1_clk_init
2ffe9418 g     F ro	00000014 report_exception
2ffec9dc g     F ro	00000020 stm32_get_otp_index
2ffecc50 g     F ro	00000030 xlat_arch_tlbi_va
2ffef174 g     F ro	00000030 stm32_iwdg_get_otp_config
2fff06f8 g     F ro	00000034 dt_pmic_status
2ffea648 g     F ro	00000030 io_dev_close
2fff2518 g     F ro	00000018 __assert
2fff4356 g     F ro	00000016 strchr
2fff316a g     F ro	00000002 xlat_mmap_print
2ffea388 g     F ro	0000002c register_io_dev_fip
2fff31e2 g     F ro	00000046 stm32mp_ddr_disable_axi_port
2fff381c g     F ro	00000014 stpmic1_regulator_disable
2ffeae58 g     F ro	0000003c stm32mp1_ddr_probe
2fff3830 g     F ro	00000024 stpmic1_regulator_pull_down_set
2ffe9668 g     F ro	00000074 enable_mmu_direct_svc_mon
2ffef244 g     F ro	0000002c tzc400_configure_region0
2ffecb78 g     F ro	000000b0 stm32mp_uart_console_setup
2fff2274 g     F ro	00000074 fdt_ro_probe_
2fff407e g     F ro	00000066 fdt_stringlist_search
2ffed708 g     F ro	00000024 clk_enable
2ffee508 g     F ro	0000006c regulator_set_voltage
2fff24f0 g     F ro	00000028 fdt_node_check_compatible
2ffeb4f4 g     F ro	0000011c stm32mp_io_setup
2fff38ce g     F ro	00000024 stm32_clean_context
2ffecafc g     F ro	00000030 stm32_get_boot_mode_cell
2ffece04 g     F ro	00000010 mmap_remove_dynamic_region
2ffeca2c g     F ro	00000044 stm32_get_otp_value
2ffeecd4 g     F ro	00000088 dt_get_otp_by_phandle
2fff9440 g     O .bss	00000004 console_list
2fff2f54 g     F ro	0000000c stm32mp_unmap_ddr
2ffef0fc g     F ro	00000024 stm32mp_print_boardinfo
2fff2c9c g     F ro	00000010 plat_get_next_bl_params
2fff39c0 g     F ro	0000001a fdt_header_size_
2fff3378 g     F ro	00000006 regulator_set_min_voltage
2fff2c8c g     F ro	00000004 plat_try_backup_partitions
2ffef628 g     F ro	00000034 bsec_read_sp_lock
2fff9ac0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2ffecda8 g     F ro	00000028 mmap_add_region
2fff0e1c g     F ro	00000094 stm32mp_syscfg_init
2fff7bcc g       ro	00000000 __PARSER_LIB_DESCS_START__
2fff2c0a g     F ro	0000000a stm32_uart_stop



Disassembly of section ro:

2ffe9000 <bl2_entrypoint>:
2ffe9000:	e1a09000 	mov	r9, r0
2ffe9004:	e1a0a001 	mov	sl, r1
2ffe9008:	e1a0b002 	mov	fp, r2
2ffe900c:	e1a0c003 	mov	ip, r3
2ffe9010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffe9014:	e3100001 	tst	r0, #1
2ffe9018:	0a000002 	beq	2ffe9028 <bl2_entrypoint+0x28>
2ffe901c:	e59f011c 	ldr	r0, [pc, #284]	@ 2ffe9140 <do_primary_cold_boot+0x50>
2ffe9020:	e3a010f7 	mov	r1, #247	@ 0xf7
2ffe9024:	ea0000b9 	b	2ffe9310 <asm_assert>
2ffe9028:	e59f0114 	ldr	r0, [pc, #276]	@ 2ffe9144 <do_primary_cold_boot+0x54>
2ffe902c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe9030:	f57ff06f 	isb	sy
2ffe9034:	f1020016 	cps	#22
2ffe9038:	f57ff06f 	isb	sy
2ffe903c:	eb00026a 	bl	2ffe99ec <plat_get_my_entrypoint>
2ffe9040:	e3500000 	cmp	r0, #0
2ffe9044:	112fff10 	bxne	r0
2ffe9048:	e59f00f8 	ldr	r0, [pc, #248]	@ 2ffe9148 <do_primary_cold_boot+0x58>
2ffe904c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffe9050:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffe9054:	f57ff06f 	isb	sy
2ffe9058:	eb000052 	bl	2ffe91a8 <reset_handler>
2ffe905c:	e59f10e8 	ldr	r1, [pc, #232]	@ 2ffe914c <do_primary_cold_boot+0x5c>
2ffe9060:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffe9064:	e1800001 	orr	r0, r0, r1
2ffe9068:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe906c:	f57ff06f 	isb	sy
2ffe9070:	e3a00c02 	mov	r0, #512	@ 0x200
2ffe9074:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffe9078:	f1080100 	cpsie	a
2ffe907c:	f57ff06f 	isb	sy
2ffe9080:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffe9084:	e2000807 	and	r0, r0, #458752	@ 0x70000
2ffe9088:	e3800b03 	orr	r0, r0, #3072	@ 0xc00
2ffe908c:	ee101f51 	mrc	15, 0, r1, cr0, cr1, {2}
2ffe9090:	e7e31651 	ubfx	r1, r1, #12, #4
2ffe9094:	e3510001 	cmp	r1, #1
2ffe9098:	1a000000 	bne	2ffe90a0 <bl2_entrypoint+0xa0>
2ffe909c:	e3800601 	orr	r0, r0, #1048576	@ 0x100000
2ffe90a0:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffe90a4:	f57ff06f 	isb	sy
2ffe90a8:	e3a0060f 	mov	r0, #15728640	@ 0xf00000
2ffe90ac:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffe90b0:	f57ff06f 	isb	sy
2ffe90b4:	e3a00020 	mov	r0, #32
2ffe90b8:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffe90bc:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffe90c0:	e200040f 	and	r0, r0, #251658240	@ 0xf000000
2ffe90c4:	e3500401 	cmp	r0, #16777216	@ 0x1000000
2ffe90c8:	1a000002 	bne	2ffe90d8 <bl2_entrypoint+0xd8>
2ffe90cc:	e10f0000 	mrs	r0, CPSR
2ffe90d0:	e3800602 	orr	r0, r0, #2097152	@ 0x200000
2ffe90d4:	e12ff000 	msr	CPSR_fsxc, r0
2ffe90d8:	eb000246 	bl	2ffe99f8 <plat_is_my_cpu_primary>
2ffe90dc:	e3500000 	cmp	r0, #0
2ffe90e0:	1a000002 	bne	2ffe90f0 <do_primary_cold_boot>
2ffe90e4:	eb000242 	bl	2ffe99f4 <plat_secondary_cold_boot_setup>
2ffe90e8:	eb000280 	bl	2ffe9af0 <plat_panic_handler>
2ffe90ec:	e320f000 	nop	{0}

2ffe90f0 <do_primary_cold_boot>:
2ffe90f0:	eb0001f6 	bl	2ffe98d0 <platform_mem_init>
2ffe90f4:	e59f0054 	ldr	r0, [pc, #84]	@ 2ffe9150 <do_primary_cold_boot+0x60>
2ffe90f8:	e59f1054 	ldr	r1, [pc, #84]	@ 2ffe9154 <do_primary_cold_boot+0x64>
2ffe90fc:	e0411000 	sub	r1, r1, r0
2ffe9100:	eb0000ef 	bl	2ffe94c4 <inv_dcache_range>
2ffe9104:	e1a0700c 	mov	r7, ip
2ffe9108:	e59f0048 	ldr	r0, [pc, #72]	@ 2ffe9158 <do_primary_cold_boot+0x68>
2ffe910c:	e59f1048 	ldr	r1, [pc, #72]	@ 2ffe915c <do_primary_cold_boot+0x6c>
2ffe9110:	e0411000 	sub	r1, r1, r0
2ffe9114:	eb000130 	bl	2ffe95dc <zero_normalmem>
2ffe9118:	e1a0c007 	mov	ip, r7
2ffe911c:	eb000055 	bl	2ffe9278 <plat_set_my_stack>
2ffe9120:	e1a00009 	mov	r0, r9
2ffe9124:	e1a0100a 	mov	r1, sl
2ffe9128:	e1a0200b 	mov	r2, fp
2ffe912c:	e1a0300c 	mov	r3, ip
2ffe9130:	fb00261d 	blx	2fff29ae <bl2_el3_setup>
2ffe9134:	fa0002b8 	blx	2ffe9c1c <bl2_main>
2ffe9138:	eb00026c 	bl	2ffe9af0 <plat_panic_handler>
2ffe913c:	e320f000 	nop	{0}
2ffe9140:	2fff79f1 	.word	0x2fff79f1
2ffe9144:	00c50038 	.word	0x00c50038
2ffe9148:	2fff7be0 	.word	0x2fff7be0
2ffe914c:	00001002 	.word	0x00001002
2ffe9150:	2fff8000 	.word	0x2fff8000
2ffe9154:	2fffc000 	.word	0x2fffc000
2ffe9158:	2fff91c0 	.word	0x2fff91c0
2ffe915c:	2fff9ae0 	.word	0x2fff9ae0

2ffe9160 <bl2_run_next_image>:
2ffe9160:	e1a08000 	mov	r8, r0
2ffe9164:	eb00013c 	bl	2ffe965c <disable_mmu_icache_secure>
2ffe9168:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffe916c:	f57ff04f 	dsb	sy
2ffe9170:	f57ff06f 	isb	sy
2ffe9174:	e1a00008 	mov	r0, r8
2ffe9178:	fa000c2e 	blx	2ffec238 <bl2_el3_plat_prepare_exit>
2ffe917c:	e598e008 	ldr	lr, [r8, #8]
2ffe9180:	e598100c 	ldr	r1, [r8, #12]
2ffe9184:	e163f001 	msr	SPSR_xc, r1
2ffe9188:	f1020013 	cps	#19
2ffe918c:	e598e010 	ldr	lr, [r8, #16]
2ffe9190:	f1020016 	cps	#22
2ffe9194:	e2888014 	add	r8, r8, #20
2ffe9198:	e898000f 	ldm	r8, {r0, r1, r2, r3}
2ffe919c:	e160006e 	eret
2ffe91a0:	f57ff047 	dsb	un
2ffe91a4:	f57ff06f 	isb	sy

2ffe91a8 <reset_handler>:
2ffe91a8:	e1a0800e 	mov	r8, lr
2ffe91ac:	eb00020d 	bl	2ffe99e8 <plat_reset_handler>
2ffe91b0:	eb00000a 	bl	2ffe91e0 <get_cpu_ops_ptr>
2ffe91b4:	e3500000 	cmp	r0, #0
2ffe91b8:	1a000002 	bne	2ffe91c8 <reset_handler+0x20>
2ffe91bc:	e59f0018 	ldr	r0, [pc, #24]	@ 2ffe91dc <reset_handler+0x34>
2ffe91c0:	e3a01024 	mov	r1, #36	@ 0x24
2ffe91c4:	ea000051 	b	2ffe9310 <asm_assert>
2ffe91c8:	e5901004 	ldr	r1, [r0, #4]
2ffe91cc:	e3510000 	cmp	r1, #0
2ffe91d0:	e1a0e008 	mov	lr, r8
2ffe91d4:	112fff11 	bxne	r1
2ffe91d8:	e12fff1e 	bx	lr
2ffe91dc:	2fff7a1a 	.word	0x2fff7a1a

2ffe91e0 <get_cpu_ops_ptr>:
2ffe91e0:	e59f4044 	ldr	r4, [pc, #68]	@ 2ffe922c <error_exit+0x4>
2ffe91e4:	e59f5044 	ldr	r5, [pc, #68]	@ 2ffe9230 <error_exit+0x8>
2ffe91e8:	e3a00000 	mov	r0, #0
2ffe91ec:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffe91f0:	e59f303c 	ldr	r3, [pc, #60]	@ 2ffe9234 <error_exit+0xc>
2ffe91f4:	e0022003 	and	r2, r2, r3
2ffe91f8:	e1540005 	cmp	r4, r5
2ffe91fc:	2a000009 	bcs	2ffe9228 <error_exit>
2ffe9200:	e4941010 	ldr	r1, [r4], #16
2ffe9204:	e0011003 	and	r1, r1, r3
2ffe9208:	e1510002 	cmp	r1, r2
2ffe920c:	1afffff9 	bne	2ffe91f8 <get_cpu_ops_ptr+0x18>
2ffe9210:	e2440010 	sub	r0, r4, #16
2ffe9214:	e3500000 	cmp	r0, #0
2ffe9218:	1a000002 	bne	2ffe9228 <error_exit>
2ffe921c:	e59f0014 	ldr	r0, [pc, #20]	@ 2ffe9238 <error_exit+0x10>
2ffe9220:	e3a0109c 	mov	r1, #156	@ 0x9c
2ffe9224:	ea000039 	b	2ffe9310 <asm_assert>

2ffe9228 <error_exit>:
2ffe9228:	e12fff1e 	bx	lr
2ffe922c:	2fff7bcc 	.word	0x2fff7bcc
2ffe9230:	2fff7bdc 	.word	0x2fff7bdc
2ffe9234:	ff00fff0 	.word	0xff00fff0
2ffe9238:	2fff7a1a 	.word	0x2fff7a1a

2ffe923c <spin_lock>:
2ffe923c:	e3a02001 	mov	r2, #1
2ffe9240:	e1901f9f 	ldrex	r1, [r0]
2ffe9244:	e3510000 	cmp	r1, #0
2ffe9248:	1320f002 	wfene
2ffe924c:	01801f92 	strexeq	r1, r2, [r0]
2ffe9250:	03510000 	cmpeq	r1, #0
2ffe9254:	1afffff9 	bne	2ffe9240 <spin_lock+0x4>
2ffe9258:	f57ff05f 	dmb	sy
2ffe925c:	e12fff1e 	bx	lr

2ffe9260 <spin_unlock>:
2ffe9260:	e3a01000 	mov	r1, #0
2ffe9264:	f57ff05f 	dmb	sy
2ffe9268:	e5801000 	str	r1, [r0]
2ffe926c:	f57ff04f 	dsb	sy
2ffe9270:	e320f004 	sev
2ffe9274:	e12fff1e 	bx	lr

2ffe9278 <plat_set_my_stack>:
2ffe9278:	e59f0004 	ldr	r0, [pc, #4]	@ 2ffe9284 <plat_set_my_stack+0xc>
2ffe927c:	e1a0d000 	mov	sp, r0
2ffe9280:	e12fff1e 	bx	lr
2ffe9284:	2fff91c0 	.word	0x2fff91c0

2ffe9288 <stm32_pwr_down_wfi_wrapper>:
2ffe9288:	e92d4070 	push	{r4, r5, r6, lr}
2ffe928c:	e1a02000 	mov	r2, r0
2ffe9290:	e1a03001 	mov	r3, r1
2ffe9294:	e59f1060 	ldr	r1, [pc, #96]	@ 2ffe92fc <stm32_pwr_down_wfi_wrapper+0x74>
2ffe9298:	e581d000 	str	sp, [r1]
2ffe929c:	e59f105c 	ldr	r1, [pc, #92]	@ 2ffe9300 <stm32_pwr_down_wfi_wrapper+0x78>
2ffe92a0:	ee1c0f10 	mrc	15, 0, r0, cr12, cr0, {0}
2ffe92a4:	e5810000 	str	r0, [r1]
2ffe92a8:	e59f1054 	ldr	r1, [pc, #84]	@ 2ffe9304 <stm32_pwr_down_wfi_wrapper+0x7c>
2ffe92ac:	ee1c0f30 	mrc	15, 0, r0, cr12, cr0, {1}
2ffe92b0:	e5810000 	str	r0, [r1]
2ffe92b4:	e59f104c 	ldr	r1, [pc, #76]	@ 2ffe9308 <stm32_pwr_down_wfi_wrapper+0x80>
2ffe92b8:	ee0c1f10 	mcr	15, 0, r1, cr12, cr0, {0}
2ffe92bc:	ee0c1f30 	mcr	15, 0, r1, cr12, cr0, {1}
2ffe92c0:	e59fd044 	ldr	sp, [pc, #68]	@ 2ffe930c <stm32_pwr_down_wfi_wrapper+0x84>
2ffe92c4:	e1a00002 	mov	r0, r2
2ffe92c8:	e1a01003 	mov	r1, r3
2ffe92cc:	fa000c23 	blx	2ffec360 <stm32_pwr_down_wfi_load>
2ffe92d0:	e59f1024 	ldr	r1, [pc, #36]	@ 2ffe92fc <stm32_pwr_down_wfi_wrapper+0x74>
2ffe92d4:	e591d000 	ldr	sp, [r1]
2ffe92d8:	e59f1020 	ldr	r1, [pc, #32]	@ 2ffe9300 <stm32_pwr_down_wfi_wrapper+0x78>
2ffe92dc:	e5910000 	ldr	r0, [r1]
2ffe92e0:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffe92e4:	e59f1018 	ldr	r1, [pc, #24]	@ 2ffe9304 <stm32_pwr_down_wfi_wrapper+0x7c>
2ffe92e8:	e5910000 	ldr	r0, [r1]
2ffe92ec:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffe92f0:	f57ff04f 	dsb	sy
2ffe92f4:	f57ff06f 	isb	sy
2ffe92f8:	e8bd8070 	pop	{r4, r5, r6, pc}
2ffe92fc:	2fff8598 	.word	0x2fff8598
2ffe9300:	2fff859c 	.word	0x2fff859c
2ffe9304:	2fff85a0 	.word	0x2fff85a0
2ffe9308:	2fff7be0 	.word	0x2fff7be0
2ffe930c:	2fff91c0 	.word	0x2fff91c0

2ffe9310 <asm_assert>:
2ffe9310:	e1a05000 	mov	r5, r0
2ffe9314:	e1a06001 	mov	r6, r1
2ffe9318:	eb0001be 	bl	2ffe9a18 <plat_crash_console_init>
2ffe931c:	e3500000 	cmp	r0, #0
2ffe9320:	0a000013 	beq	2ffe9374 <_assert_loop>
2ffe9324:	e59f4050 	ldr	r4, [pc, #80]	@ 2ffe937c <_assert_loop+0x8>
2ffe9328:	eb000017 	bl	2ffe938c <asm_print_str>
2ffe932c:	e1a04005 	mov	r4, r5
2ffe9330:	eb000015 	bl	2ffe938c <asm_print_str>
2ffe9334:	e59f4044 	ldr	r4, [pc, #68]	@ 2ffe9380 <_assert_loop+0xc>
2ffe9338:	eb000013 	bl	2ffe938c <asm_print_str>
2ffe933c:	e59f4040 	ldr	r4, [pc, #64]	@ 2ffe9384 <_assert_loop+0x10>
2ffe9340:	e1160004 	tst	r6, r4
2ffe9344:	1a00000a 	bne	2ffe9374 <_assert_loop>
2ffe9348:	e1a04006 	mov	r4, r6
2ffe934c:	e3a0600a 	mov	r6, #10
2ffe9350:	e59f5030 	ldr	r5, [pc, #48]	@ 2ffe9388 <_assert_loop+0x14>

2ffe9354 <dec_print_loop>:
2ffe9354:	e730f514 	udiv	r0, r4, r5
2ffe9358:	e0644590 	mls	r4, r0, r5, r4
2ffe935c:	e2800030 	add	r0, r0, #48	@ 0x30
2ffe9360:	eb0001df 	bl	2ffe9ae4 <plat_crash_console_putc>
2ffe9364:	e735f615 	udiv	r5, r5, r6
2ffe9368:	e3550000 	cmp	r5, #0
2ffe936c:	1afffff8 	bne	2ffe9354 <dec_print_loop>
2ffe9370:	eb0001d8 	bl	2ffe9ad8 <plat_crash_console_flush>

2ffe9374 <_assert_loop>:
2ffe9374:	eb0001dd 	bl	2ffe9af0 <plat_panic_handler>
2ffe9378:	e320f000 	nop	{0}
2ffe937c:	2fff7a39 	.word	0x2fff7a39
2ffe9380:	2fff7a47 	.word	0x2fff7a47
2ffe9384:	ffff0000 	.word	0xffff0000
2ffe9388:	00002710 	.word	0x00002710

2ffe938c <asm_print_str>:
2ffe938c:	e1a0700e 	mov	r7, lr
2ffe9390:	e4d40001 	ldrb	r0, [r4], #1
2ffe9394:	e3500000 	cmp	r0, #0
2ffe9398:	0a000001 	beq	2ffe93a4 <asm_print_str+0x18>
2ffe939c:	eb0001d0 	bl	2ffe9ae4 <plat_crash_console_putc>
2ffe93a0:	eafffffa 	b	2ffe9390 <asm_print_str+0x4>
2ffe93a4:	e12fff17 	bx	r7

2ffe93a8 <asm_print_hex>:
2ffe93a8:	e3a05020 	mov	r5, #32

2ffe93ac <asm_print_hex_bits>:
2ffe93ac:	e1a0700e 	mov	r7, lr
2ffe93b0:	e2455004 	sub	r5, r5, #4
2ffe93b4:	e1a00534 	lsr	r0, r4, r5
2ffe93b8:	e200000f 	and	r0, r0, #15
2ffe93bc:	e350000a 	cmp	r0, #10
2ffe93c0:	3a000000 	bcc	2ffe93c8 <asm_print_hex_bits+0x1c>
2ffe93c4:	e2800027 	add	r0, r0, #39	@ 0x27
2ffe93c8:	e2800030 	add	r0, r0, #48	@ 0x30
2ffe93cc:	eb0001c4 	bl	2ffe9ae4 <plat_crash_console_putc>
2ffe93d0:	e3550000 	cmp	r5, #0
2ffe93d4:	1afffff5 	bne	2ffe93b0 <asm_print_hex_bits+0x4>
2ffe93d8:	e12fff17 	bx	r7

2ffe93dc <do_panic>:
2ffe93dc:	e24e6004 	sub	r6, lr, #4
2ffe93e0:	eb00018c 	bl	2ffe9a18 <plat_crash_console_init>
2ffe93e4:	e3500000 	cmp	r0, #0
2ffe93e8:	0a000006 	beq	2ffe9408 <_panic_handler>
2ffe93ec:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe9410 <_panic_handler+0x8>
2ffe93f0:	ebffffe5 	bl	2ffe938c <asm_print_str>
2ffe93f4:	e1a04006 	mov	r4, r6
2ffe93f8:	ebffffea 	bl	2ffe93a8 <asm_print_hex>
2ffe93fc:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe9414 <_panic_handler+0xc>
2ffe9400:	ebffffe1 	bl	2ffe938c <asm_print_str>
2ffe9404:	eb0001b3 	bl	2ffe9ad8 <plat_crash_console_flush>

2ffe9408 <_panic_handler>:
2ffe9408:	e1a0e006 	mov	lr, r6
2ffe940c:	ea0001b7 	b	2ffe9af0 <plat_panic_handler>
2ffe9410:	2fff7a4e 	.word	0x2fff7a4e
2ffe9414:	2fff7a5f 	.word	0x2fff7a5f

2ffe9418 <report_exception>:
2ffe9418:	e10f0000 	mrs	r0, CPSR
2ffe941c:	e200001f 	and	r0, r0, #31
2ffe9420:	eb00012b 	bl	2ffe98d4 <plat_report_exception>
2ffe9424:	eb0001b1 	bl	2ffe9af0 <plat_panic_handler>
2ffe9428:	e320f000 	nop	{0}

2ffe942c <report_prefetch_abort>:
2ffe942c:	e1040300 	mrs	r0, LR_abt
2ffe9430:	eb000140 	bl	2ffe9938 <plat_report_prefetch_abort>
2ffe9434:	eb0001ad 	bl	2ffe9af0 <plat_panic_handler>
2ffe9438:	e320f000 	nop	{0}

2ffe943c <report_data_abort>:
2ffe943c:	e1040300 	mrs	r0, LR_abt
2ffe9440:	eb000152 	bl	2ffe9990 <plat_report_data_abort>
2ffe9444:	eb0001a9 	bl	2ffe9af0 <plat_panic_handler>
2ffe9448:	e320f000 	nop	{0}

2ffe944c <flush_dcache_range>:
2ffe944c:	e3510000 	cmp	r1, #0
2ffe9450:	0a00000b 	beq	2ffe9484 <exit_loop_cimvac>
2ffe9454:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe9458:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe945c:	e3a02004 	mov	r2, #4
2ffe9460:	e1a02312 	lsl	r2, r2, r3
2ffe9464:	e0801001 	add	r1, r0, r1
2ffe9468:	e2423001 	sub	r3, r2, #1
2ffe946c:	e1c00003 	bic	r0, r0, r3

2ffe9470 <loop_cimvac>:
2ffe9470:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2ffe9474:	e0800002 	add	r0, r0, r2
2ffe9478:	e1500001 	cmp	r0, r1
2ffe947c:	3afffffb 	bcc	2ffe9470 <loop_cimvac>
2ffe9480:	f57ff04f 	dsb	sy

2ffe9484 <exit_loop_cimvac>:
2ffe9484:	e12fff1e 	bx	lr

2ffe9488 <clean_dcache_range>:
2ffe9488:	e3510000 	cmp	r1, #0
2ffe948c:	0a00000b 	beq	2ffe94c0 <exit_loop_cmvac>
2ffe9490:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe9494:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe9498:	e3a02004 	mov	r2, #4
2ffe949c:	e1a02312 	lsl	r2, r2, r3
2ffe94a0:	e0801001 	add	r1, r0, r1
2ffe94a4:	e2423001 	sub	r3, r2, #1
2ffe94a8:	e1c00003 	bic	r0, r0, r3

2ffe94ac <loop_cmvac>:
2ffe94ac:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2ffe94b0:	e0800002 	add	r0, r0, r2
2ffe94b4:	e1500001 	cmp	r0, r1
2ffe94b8:	3afffffb 	bcc	2ffe94ac <loop_cmvac>
2ffe94bc:	f57ff04f 	dsb	sy

2ffe94c0 <exit_loop_cmvac>:
2ffe94c0:	e12fff1e 	bx	lr

2ffe94c4 <inv_dcache_range>:
2ffe94c4:	e3510000 	cmp	r1, #0
2ffe94c8:	0a00000b 	beq	2ffe94fc <exit_loop_imvac>
2ffe94cc:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffe94d0:	e7e33853 	ubfx	r3, r3, #16, #4
2ffe94d4:	e3a02004 	mov	r2, #4
2ffe94d8:	e1a02312 	lsl	r2, r2, r3
2ffe94dc:	e0801001 	add	r1, r0, r1
2ffe94e0:	e2423001 	sub	r3, r2, #1
2ffe94e4:	e1c00003 	bic	r0, r0, r3

2ffe94e8 <loop_imvac>:
2ffe94e8:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2ffe94ec:	e0800002 	add	r0, r0, r2
2ffe94f0:	e1500001 	cmp	r0, r1
2ffe94f4:	3afffffb 	bcc	2ffe94e8 <loop_imvac>
2ffe94f8:	f57ff04f 	dsb	sy

2ffe94fc <exit_loop_imvac>:
2ffe94fc:	e12fff1e 	bx	lr

2ffe9500 <do_dcsw_op>:
2ffe9500:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2ffe9504:	ee108fd2 	mrc	15, 0, r8, cr0, cr2, {6}
2ffe9508:	e7e38c58 	ubfx	r8, r8, #24, #4
2ffe950c:	e28fb09c 	add	fp, pc, #156	@ 0x9c
2ffe9510:	e08b6180 	add	r6, fp, r0, lsl #3

2ffe9514 <loop1>:
2ffe9514:	e081a0a1 	add	sl, r1, r1, lsr #1
2ffe9518:	e1a0ca32 	lsr	ip, r2, sl
2ffe951c:	e20cc007 	and	ip, ip, #7
2ffe9520:	e35c0002 	cmp	ip, #2
2ffe9524:	3a000018 	bcc	2ffe958c <level_done>
2ffe9528:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2ffe952c:	f57ff06f 	isb	sy
2ffe9530:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2ffe9534:	e20ca007 	and	sl, ip, #7
2ffe9538:	e28aa004 	add	sl, sl, #4
2ffe953c:	e3580000 	cmp	r8, #0
2ffe9540:	0a000001 	beq	2ffe954c <loop1+0x38>
2ffe9544:	e7f441dc 	ubfx	r4, ip, #3, #21
2ffe9548:	ea000000 	b	2ffe9550 <loop1+0x3c>
2ffe954c:	e7e941dc 	ubfx	r4, ip, #3, #10
2ffe9550:	e16f5f14 	clz	r5, r4
2ffe9554:	e1a09004 	mov	r9, r4

2ffe9558 <loop2>:
2ffe9558:	e3580000 	cmp	r8, #0
2ffe955c:	0a000002 	beq	2ffe956c <loop2+0x14>
2ffe9560:	ee30cf50 	mrc	15, 1, ip, cr0, cr0, {2}
2ffe9564:	e7f7705c 	ubfx	r7, ip, #0, #24
2ffe9568:	ea000000 	b	2ffe9570 <loop3>
2ffe956c:	e7ee76dc 	ubfx	r7, ip, #13, #15

2ffe9570 <loop3>:
2ffe9570:	e1810519 	orr	r0, r1, r9, lsl r5
2ffe9574:	e1800a17 	orr	r0, r0, r7, lsl sl
2ffe9578:	e12fff36 	blx	r6
2ffe957c:	e2577001 	subs	r7, r7, #1
2ffe9580:	2afffffa 	bcs	2ffe9570 <loop3>
2ffe9584:	e2599001 	subs	r9, r9, #1
2ffe9588:	2afffff2 	bcs	2ffe9558 <loop2>

2ffe958c <level_done>:
2ffe958c:	e2811002 	add	r1, r1, #2
2ffe9590:	e1530001 	cmp	r3, r1
2ffe9594:	f57ff04f 	dsb	sy
2ffe9598:	8affffdd 	bhi	2ffe9514 <loop1>
2ffe959c:	e3a06000 	mov	r6, #0
2ffe95a0:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2ffe95a4:	f57ff04f 	dsb	sy
2ffe95a8:	f57ff06f 	isb	sy
2ffe95ac:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2ffe95b0 <dcsw_loop_table>:
2ffe95b0:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2ffe95b4:	e12fff1e 	bx	lr
2ffe95b8:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2ffe95bc:	e12fff1e 	bx	lr
2ffe95c0:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2ffe95c4:	e12fff1e 	bx	lr

2ffe95c8 <dcsw_op_all>:
2ffe95c8:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2ffe95cc:	e7e23c52 	ubfx	r3, r2, #24, #3
2ffe95d0:	e1a03083 	lsl	r3, r3, #1
2ffe95d4:	e3a01000 	mov	r1, #0
2ffe95d8:	eaffffc8 	b	2ffe9500 <do_dcsw_op>

2ffe95dc <zero_normalmem>:
2ffe95dc:	e3a02000 	mov	r2, #0
2ffe95e0:	e0801001 	add	r1, r0, r1
2ffe95e4:	e3100007 	tst	r0, #7
2ffe95e8:	0a000007 	beq	2ffe960c <zero_normalmem+0x30>
2ffe95ec:	e380c007 	orr	ip, r0, #7
2ffe95f0:	e29cc001 	adds	ip, ip, #1
2ffe95f4:	0a00000b 	beq	2ffe9628 <zero_normalmem+0x4c>
2ffe95f8:	e15c0001 	cmp	ip, r1
2ffe95fc:	2a000009 	bcs	2ffe9628 <zero_normalmem+0x4c>
2ffe9600:	e4c02001 	strb	r2, [r0], #1
2ffe9604:	e150000c 	cmp	r0, ip
2ffe9608:	1afffffc 	bne	2ffe9600 <zero_normalmem+0x24>
2ffe960c:	e3c1c007 	bic	ip, r1, #7
2ffe9610:	e150000c 	cmp	r0, ip
2ffe9614:	2a000003 	bcs	2ffe9628 <zero_normalmem+0x4c>
2ffe9618:	e3a03000 	mov	r3, #0
2ffe961c:	e8a0000c 	stmia	r0!, {r2, r3}
2ffe9620:	e150000c 	cmp	r0, ip
2ffe9624:	3afffffc 	bcc	2ffe961c <zero_normalmem+0x40>
2ffe9628:	e1500001 	cmp	r0, r1
2ffe962c:	0a000002 	beq	2ffe963c <zero_normalmem+0x60>
2ffe9630:	e4c02001 	strb	r2, [r0], #1
2ffe9634:	e1500001 	cmp	r0, r1
2ffe9638:	1afffffc 	bne	2ffe9630 <zero_normalmem+0x54>
2ffe963c:	e12fff1e 	bx	lr

2ffe9640 <disable_mmu_secure>:
2ffe9640:	e3a01005 	mov	r1, #5

2ffe9644 <do_disable_mmu>:
2ffe9644:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffe9648:	e1c00001 	bic	r0, r0, r1
2ffe964c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffe9650:	f57ff06f 	isb	sy
2ffe9654:	f57ff04f 	dsb	sy
2ffe9658:	e12fff1e 	bx	lr

2ffe965c <disable_mmu_icache_secure>:
2ffe965c:	e51f1000 	ldr	r1, [pc, #-0]	@ 2ffe9664 <disable_mmu_icache_secure+0x8>
2ffe9660:	eafffff7 	b	2ffe9644 <do_disable_mmu>
2ffe9664:	00001005 	.word	0x00001005

2ffe9668 <enable_mmu_direct_svc_mon>:
2ffe9668:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffe966c:	e3110001 	tst	r1, #1
2ffe9670:	0a000002 	beq	2ffe9680 <enable_mmu_direct_svc_mon+0x18>
2ffe9674:	e59f0060 	ldr	r0, [pc, #96]	@ 2ffe96dc <enable_mmu_direct_svc_mon+0x74>
2ffe9678:	e3a01014 	mov	r1, #20
2ffe967c:	eaffff23 	b	2ffe9310 <asm_assert>
2ffe9680:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffe9684:	e1a03000 	mov	r3, r0
2ffe9688:	e59f0050 	ldr	r0, [pc, #80]	@ 2ffe96e0 <enable_mmu_direct_svc_mon+0x78>
2ffe968c:	e5901000 	ldr	r1, [r0]
2ffe9690:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2ffe9694:	e5902008 	ldr	r2, [r0, #8]
2ffe9698:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2ffe969c:	e5901010 	ldr	r1, [r0, #16]
2ffe96a0:	e5902014 	ldr	r2, [r0, #20]
2ffe96a4:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2ffe96a8:	e3a01000 	mov	r1, #0
2ffe96ac:	e3a02000 	mov	r2, #0
2ffe96b0:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2ffe96b4:	f57ff04b 	dsb	ish
2ffe96b8:	f57ff06f 	isb	sy
2ffe96bc:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffe96c0:	e59f201c 	ldr	r2, [pc, #28]	@ 2ffe96e4 <enable_mmu_direct_svc_mon+0x7c>
2ffe96c4:	e1811002 	orr	r1, r1, r2
2ffe96c8:	e3130001 	tst	r3, #1
2ffe96cc:	13c11004 	bicne	r1, r1, #4
2ffe96d0:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2ffe96d4:	f57ff06f 	isb	sy
2ffe96d8:	e12fff1e 	bx	lr
2ffe96dc:	2fff7a62 	.word	0x2fff7a62
2ffe96e0:	2fff92e8 	.word	0x2fff92e8
2ffe96e4:	00080005 	.word	0x00080005

2ffe96e8 <console_stm32_core_init>:
2ffe96e8:	e3500000 	cmp	r0, #0
2ffe96ec:	0a000026 	beq	2ffe978c <core_init_fail>
2ffe96f0:	e3510000 	cmp	r1, #0
2ffe96f4:	0a000024 	beq	2ffe978c <core_init_fail>
2ffe96f8:	e3520000 	cmp	r2, #0
2ffe96fc:	0a000022 	beq	2ffe978c <core_init_fail>
2ffe9700:	e5903000 	ldr	r3, [r0]
2ffe9704:	e3c33001 	bic	r3, r3, #1
2ffe9708:	e5803000 	str	r3, [r0]
2ffe970c:	e3833282 	orr	r3, r3, #536870920	@ 0x20000008
2ffe9710:	e5803000 	str	r3, [r0]
2ffe9714:	e5903004 	ldr	r3, [r0, #4]
2ffe9718:	e3c33a03 	bic	r3, r3, #12288	@ 0x3000
2ffe971c:	e5803004 	str	r3, [r0, #4]
2ffe9720:	e1a030a2 	lsr	r3, r2, #1
2ffe9724:	e0813003 	add	r3, r1, r3
2ffe9728:	e733f213 	udiv	r3, r3, r2
2ffe972c:	e3530010 	cmp	r3, #16
2ffe9730:	8a000009 	bhi	2ffe975c <console_stm32_core_init+0x74>
2ffe9734:	e1a030a2 	lsr	r3, r2, #1
2ffe9738:	e0833081 	add	r3, r3, r1, lsl #1
2ffe973c:	e733f213 	udiv	r3, r3, r2
2ffe9740:	e203100f 	and	r1, r3, #15
2ffe9744:	e1a010a1 	lsr	r1, r1, #1
2ffe9748:	e3c3300f 	bic	r3, r3, #15
2ffe974c:	e1833001 	orr	r3, r3, r1
2ffe9750:	e5901000 	ldr	r1, [r0]
2ffe9754:	e3811902 	orr	r1, r1, #32768	@ 0x8000
2ffe9758:	e5801000 	str	r1, [r0]
2ffe975c:	e580300c 	str	r3, [r0, #12]
2ffe9760:	e5903000 	ldr	r3, [r0]
2ffe9764:	e3833001 	orr	r3, r3, #1
2ffe9768:	e5803000 	str	r3, [r0]
2ffe976c:	e3a02a01 	mov	r2, #4096	@ 0x1000

2ffe9770 <teack_loop>:
2ffe9770:	e2522001 	subs	r2, r2, #1
2ffe9774:	0a000004 	beq	2ffe978c <core_init_fail>
2ffe9778:	e590301c 	ldr	r3, [r0, #28]
2ffe977c:	e3130602 	tst	r3, #2097152	@ 0x200000
2ffe9780:	0afffffa 	beq	2ffe9770 <teack_loop>
2ffe9784:	e3a00001 	mov	r0, #1
2ffe9788:	e12fff1e 	bx	lr

2ffe978c <core_init_fail>:
2ffe978c:	e3a00000 	mov	r0, #0
2ffe9790:	e12fff1e 	bx	lr

2ffe9794 <console_stm32_register>:
2ffe9794:	e92d4010 	push	{r4, lr}
2ffe9798:	e1a04003 	mov	r4, r3
2ffe979c:	e3540000 	cmp	r4, #0
2ffe97a0:	0a00000e 	beq	2ffe97e0 <register_fail>
2ffe97a4:	e5840014 	str	r0, [r4, #20]
2ffe97a8:	ebffffce 	bl	2ffe96e8 <console_stm32_core_init>
2ffe97ac:	e3500000 	cmp	r0, #0
2ffe97b0:	0a00000a 	beq	2ffe97e0 <register_fail>
2ffe97b4:	e1a00004 	mov	r0, r4
2ffe97b8:	e8bd4010 	pop	{r4, lr}
2ffe97bc:	e59f1020 	ldr	r1, [pc, #32]	@ 2ffe97e4 <register_fail+0x4>
2ffe97c0:	e5801008 	str	r1, [r0, #8]
2ffe97c4:	e3a01000 	mov	r1, #0
2ffe97c8:	e580100c 	str	r1, [r0, #12]
2ffe97cc:	e59f1014 	ldr	r1, [pc, #20]	@ 2ffe97e8 <register_fail+0x8>
2ffe97d0:	e5801010 	str	r1, [r0, #16]
2ffe97d4:	e3a01005 	mov	r1, #5
2ffe97d8:	e5801004 	str	r1, [r0, #4]
2ffe97dc:	ea003911 	b	2fff7c28 <__console_register_from_arm>

2ffe97e0 <register_fail>:
2ffe97e0:	e8bd8010 	pop	{r4, pc}
2ffe97e4:	2ffe9834 	.word	0x2ffe9834
2ffe97e8:	2ffe9894 	.word	0x2ffe9894

2ffe97ec <console_stm32_core_putc>:
2ffe97ec:	e3510000 	cmp	r1, #0
2ffe97f0:	0a00000d 	beq	2ffe982c <putc_error>
2ffe97f4:	e3a03a01 	mov	r3, #4096	@ 0x1000

2ffe97f8 <txe_loop>:
2ffe97f8:	e2533001 	subs	r3, r3, #1
2ffe97fc:	0a00000a 	beq	2ffe982c <putc_error>
2ffe9800:	e591201c 	ldr	r2, [r1, #28]
2ffe9804:	e3120080 	tst	r2, #128	@ 0x80
2ffe9808:	0afffffa 	beq	2ffe97f8 <txe_loop>
2ffe980c:	e5810028 	str	r0, [r1, #40]	@ 0x28
2ffe9810:	e3a03a01 	mov	r3, #4096	@ 0x1000

2ffe9814 <tc_loop>:
2ffe9814:	e2533001 	subs	r3, r3, #1
2ffe9818:	0a000003 	beq	2ffe982c <putc_error>
2ffe981c:	e591201c 	ldr	r2, [r1, #28]
2ffe9820:	e3120040 	tst	r2, #64	@ 0x40
2ffe9824:	0afffffa 	beq	2ffe9814 <tc_loop>
2ffe9828:	e12fff1e 	bx	lr

2ffe982c <putc_error>:
2ffe982c:	e3e00000 	mvn	r0, #0
2ffe9830:	e12fff1e 	bx	lr

2ffe9834 <console_stm32_putc>:
2ffe9834:	e3510000 	cmp	r1, #0
2ffe9838:	1a000002 	bne	2ffe9848 <console_stm32_putc+0x14>
2ffe983c:	e59f000c 	ldr	r0, [pc, #12]	@ 2ffe9850 <console_stm32_putc+0x1c>
2ffe9840:	e3a010ca 	mov	r1, #202	@ 0xca
2ffe9844:	eafffeb1 	b	2ffe9310 <asm_assert>
2ffe9848:	e5911014 	ldr	r1, [r1, #20]
2ffe984c:	eaffffe6 	b	2ffe97ec <console_stm32_core_putc>
2ffe9850:	2fff7a8a 	.word	0x2fff7a8a

2ffe9854 <console_stm32_core_flush>:
2ffe9854:	e3500000 	cmp	r0, #0
2ffe9858:	1a000002 	bne	2ffe9868 <console_stm32_core_flush+0x14>
2ffe985c:	e59f002c 	ldr	r0, [pc, #44]	@ 2ffe9890 <txe_loop_3+0x18>
2ffe9860:	e3a010ef 	mov	r1, #239	@ 0xef
2ffe9864:	eafffea9 	b	2ffe9310 <asm_assert>
2ffe9868:	e5901000 	ldr	r1, [r0]
2ffe986c:	e3110001 	tst	r1, #1
2ffe9870:	0a000005 	beq	2ffe988c <txe_loop_3+0x14>
2ffe9874:	e3a02a01 	mov	r2, #4096	@ 0x1000

2ffe9878 <txe_loop_3>:
2ffe9878:	e2522001 	subs	r2, r2, #1
2ffe987c:	0a000002 	beq	2ffe988c <txe_loop_3+0x14>
2ffe9880:	e590101c 	ldr	r1, [r0, #28]
2ffe9884:	e3110080 	tst	r1, #128	@ 0x80
2ffe9888:	0afffffa 	beq	2ffe9878 <txe_loop_3>
2ffe988c:	e12fff1e 	bx	lr
2ffe9890:	2fff7a8a 	.word	0x2fff7a8a

2ffe9894 <console_stm32_flush>:
2ffe9894:	e3500000 	cmp	r0, #0
2ffe9898:	1a000002 	bne	2ffe98a8 <console_stm32_flush+0x14>
2ffe989c:	e59f000c 	ldr	r0, [pc, #12]	@ 2ffe98b0 <console_stm32_flush+0x1c>
2ffe98a0:	e59f100c 	ldr	r1, [pc, #12]	@ 2ffe98b4 <console_stm32_flush+0x20>
2ffe98a4:	eafffe99 	b	2ffe9310 <asm_assert>
2ffe98a8:	e5900014 	ldr	r0, [r0, #20]
2ffe98ac:	eaffffe8 	b	2ffe9854 <console_stm32_core_flush>
2ffe98b0:	2fff7a8a 	.word	0x2fff7a8a
2ffe98b4:	0000010d 	.word	0x0000010d

2ffe98b8 <cortex_a7_enable_smp>:
2ffe98b8:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2ffe98bc:	e3800040 	orr	r0, r0, #64	@ 0x40
2ffe98c0:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2ffe98c4:	f57ff06f 	isb	sy
2ffe98c8:	e12fff1e 	bx	lr

2ffe98cc <cortex_a7_reset_func>:
2ffe98cc:	eafffff9 	b	2ffe98b8 <cortex_a7_enable_smp>

2ffe98d0 <platform_mem_init>:
2ffe98d0:	e12fff1e 	bx	lr

2ffe98d4 <plat_report_exception>:
2ffe98d4:	e1a0800e 	mov	r8, lr
2ffe98d8:	e3500017 	cmp	r0, #23
2ffe98dc:	0a000010 	beq	2ffe9924 <print_exception_info+0xc>
2ffe98e0:	e350001b 	cmp	r0, #27
2ffe98e4:	1a000003 	bne	2ffe98f8 <other_exception_lbl>
2ffe98e8:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe9928 <print_exception_info+0x10>
2ffe98ec:	ebfffea6 	bl	2ffe938c <asm_print_str>
2ffe98f0:	e1064300 	mrs	r4, LR_und
2ffe98f4:	ea000007 	b	2ffe9918 <print_exception_info>

2ffe98f8 <other_exception_lbl>:
2ffe98f8:	e1a09000 	mov	r9, r0
2ffe98fc:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe992c <print_exception_info+0x14>
2ffe9900:	ebfffea1 	bl	2ffe938c <asm_print_str>
2ffe9904:	e1a04009 	mov	r4, r9
2ffe9908:	ebfffea6 	bl	2ffe93a8 <asm_print_hex>
2ffe990c:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe9930 <print_exception_info+0x18>
2ffe9910:	ebfffe9d 	bl	2ffe938c <asm_print_str>
2ffe9914:	e1a04006 	mov	r4, r6

2ffe9918 <print_exception_info>:
2ffe9918:	ebfffea2 	bl	2ffe93a8 <asm_print_hex>
2ffe991c:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe9934 <print_exception_info+0x1c>
2ffe9920:	ebfffe99 	bl	2ffe938c <asm_print_str>
2ffe9924:	e12fff18 	bx	r8
2ffe9928:	2fff7adc 	.word	0x2fff7adc
2ffe992c:	2fff7afa 	.word	0x2fff7afa
2ffe9930:	2fff7b0d 	.word	0x2fff7b0d
2ffe9934:	2fff7b41 	.word	0x2fff7b41

2ffe9938 <plat_report_prefetch_abort>:
2ffe9938:	e1a0800e 	mov	r8, lr
2ffe993c:	e1a09000 	mov	r9, r0
2ffe9940:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe9980 <plat_report_prefetch_abort+0x48>
2ffe9944:	ebfffe90 	bl	2ffe938c <asm_print_str>
2ffe9948:	e1a04009 	mov	r4, r9
2ffe994c:	e2444004 	sub	r4, r4, #4
2ffe9950:	ebfffe94 	bl	2ffe93a8 <asm_print_hex>
2ffe9954:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe9984 <plat_report_prefetch_abort+0x4c>
2ffe9958:	ebfffe8b 	bl	2ffe938c <asm_print_str>
2ffe995c:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2ffe9960:	ebfffe90 	bl	2ffe93a8 <asm_print_hex>
2ffe9964:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe9988 <plat_report_prefetch_abort+0x50>
2ffe9968:	ebfffe87 	bl	2ffe938c <asm_print_str>
2ffe996c:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2ffe9970:	ebfffe8c 	bl	2ffe93a8 <asm_print_hex>
2ffe9974:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe998c <plat_report_prefetch_abort+0x54>
2ffe9978:	ebfffe83 	bl	2ffe938c <asm_print_str>
2ffe997c:	e12fff18 	bx	r8
2ffe9980:	2fff7ab2 	.word	0x2fff7ab2
2ffe9984:	2fff7b2b 	.word	0x2fff7b2b
2ffe9988:	2fff7b36 	.word	0x2fff7b36
2ffe998c:	2fff7b41 	.word	0x2fff7b41

2ffe9990 <plat_report_data_abort>:
2ffe9990:	e1a0800e 	mov	r8, lr
2ffe9994:	e1a09000 	mov	r9, r0
2ffe9998:	e59f4038 	ldr	r4, [pc, #56]	@ 2ffe99d8 <plat_report_data_abort+0x48>
2ffe999c:	ebfffe7a 	bl	2ffe938c <asm_print_str>
2ffe99a0:	e1a04009 	mov	r4, r9
2ffe99a4:	e2444008 	sub	r4, r4, #8
2ffe99a8:	ebfffe7e 	bl	2ffe93a8 <asm_print_hex>
2ffe99ac:	e59f4028 	ldr	r4, [pc, #40]	@ 2ffe99dc <plat_report_data_abort+0x4c>
2ffe99b0:	ebfffe75 	bl	2ffe938c <asm_print_str>
2ffe99b4:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2ffe99b8:	ebfffe7a 	bl	2ffe93a8 <asm_print_hex>
2ffe99bc:	e59f401c 	ldr	r4, [pc, #28]	@ 2ffe99e0 <plat_report_data_abort+0x50>
2ffe99c0:	ebfffe71 	bl	2ffe938c <asm_print_str>
2ffe99c4:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2ffe99c8:	ebfffe76 	bl	2ffe93a8 <asm_print_hex>
2ffe99cc:	e59f4010 	ldr	r4, [pc, #16]	@ 2ffe99e4 <plat_report_data_abort+0x54>
2ffe99d0:	ebfffe6d 	bl	2ffe938c <asm_print_str>
2ffe99d4:	e12fff18 	bx	r8
2ffe99d8:	2fff7ac9 	.word	0x2fff7ac9
2ffe99dc:	2fff7b15 	.word	0x2fff7b15
2ffe99e0:	2fff7b20 	.word	0x2fff7b20
2ffe99e4:	2fff7b41 	.word	0x2fff7b41

2ffe99e8 <plat_reset_handler>:
2ffe99e8:	e12fff1e 	bx	lr

2ffe99ec <plat_get_my_entrypoint>:
2ffe99ec:	e3a00000 	mov	r0, #0
2ffe99f0:	e12fff1e 	bx	lr

2ffe99f4 <plat_secondary_cold_boot_setup>:
2ffe99f4:	eafffffe 	b	2ffe99f4 <plat_secondary_cold_boot_setup>

2ffe99f8 <plat_is_my_cpu_primary>:
2ffe99f8:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffe99fc:	e59f1010 	ldr	r1, [pc, #16]	@ 2ffe9a14 <plat_is_my_cpu_primary+0x1c>
2ffe9a00:	e0000001 	and	r0, r0, r1
2ffe9a04:	e3500000 	cmp	r0, #0
2ffe9a08:	03a00001 	moveq	r0, #1
2ffe9a0c:	13a00000 	movne	r0, #0
2ffe9a10:	e12fff1e 	bx	lr
2ffe9a14:	0000ffff 	.word	0x0000ffff

2ffe9a18 <plat_crash_console_init>:
2ffe9a18:	e59f1098 	ldr	r1, [pc, #152]	@ 2ffe9ab8 <plat_crash_console_init+0xa0>
2ffe9a1c:	e3a02801 	mov	r2, #65536	@ 0x10000
2ffe9a20:	e5812000 	str	r2, [r1]
2ffe9a24:	e5910000 	ldr	r0, [r1]
2ffe9a28:	e0102002 	ands	r2, r0, r2
2ffe9a2c:	0afffffc 	beq	2ffe9a24 <plat_crash_console_init+0xc>
2ffe9a30:	e5812004 	str	r2, [r1, #4]
2ffe9a34:	e5910000 	ldr	r0, [r1]
2ffe9a38:	e0102002 	ands	r2, r0, r2
2ffe9a3c:	1afffffc 	bne	2ffe9a34 <plat_crash_console_init+0x1c>
2ffe9a40:	e59f1074 	ldr	r1, [pc, #116]	@ 2ffe9abc <plat_crash_console_init+0xa4>
2ffe9a44:	e5912000 	ldr	r2, [r1]
2ffe9a48:	e3822040 	orr	r2, r2, #64	@ 0x40
2ffe9a4c:	e5812000 	str	r2, [r1]
2ffe9a50:	e59f1068 	ldr	r1, [pc, #104]	@ 2ffe9ac0 <plat_crash_console_init+0xa8>
2ffe9a54:	e5912000 	ldr	r2, [r1]
2ffe9a58:	e3c22503 	bic	r2, r2, #12582912	@ 0xc00000
2ffe9a5c:	e3822502 	orr	r2, r2, #8388608	@ 0x800000
2ffe9a60:	e5812000 	str	r2, [r1]
2ffe9a64:	e5912008 	ldr	r2, [r1, #8]
2ffe9a68:	e3c22503 	bic	r2, r2, #12582912	@ 0xc00000
2ffe9a6c:	e5812008 	str	r2, [r1, #8]
2ffe9a70:	e591200c 	ldr	r2, [r1, #12]
2ffe9a74:	e3c22503 	bic	r2, r2, #12582912	@ 0xc00000
2ffe9a78:	e581200c 	str	r2, [r1, #12]
2ffe9a7c:	e5912024 	ldr	r2, [r1, #36]	@ 0x24
2ffe9a80:	e3c22a0f 	bic	r2, r2, #61440	@ 0xf000
2ffe9a84:	e3822a06 	orr	r2, r2, #24576	@ 0x6000
2ffe9a88:	e5812024 	str	r2, [r1, #36]	@ 0x24
2ffe9a8c:	e59f1030 	ldr	r1, [pc, #48]	@ 2ffe9ac4 <plat_crash_console_init+0xac>
2ffe9a90:	e3a02002 	mov	r2, #2
2ffe9a94:	e5812000 	str	r2, [r1]
2ffe9a98:	e59f1028 	ldr	r1, [pc, #40]	@ 2ffe9ac8 <plat_crash_console_init+0xb0>
2ffe9a9c:	e5912000 	ldr	r2, [r1]
2ffe9aa0:	e3822801 	orr	r2, r2, #65536	@ 0x10000
2ffe9aa4:	e5812000 	str	r2, [r1]
2ffe9aa8:	e59f001c 	ldr	r0, [pc, #28]	@ 2ffe9acc <plat_crash_console_init+0xb4>
2ffe9aac:	e59f101c 	ldr	r1, [pc, #28]	@ 2ffe9ad0 <plat_crash_console_init+0xb8>
2ffe9ab0:	e59f201c 	ldr	r2, [pc, #28]	@ 2ffe9ad4 <plat_crash_console_init+0xbc>
2ffe9ab4:	eaffff0b 	b	2ffe96e8 <console_stm32_core_init>
2ffe9ab8:	50000980 	.word	0x50000980
2ffe9abc:	50000a28 	.word	0x50000a28
2ffe9ac0:	50008000 	.word	0x50008000
2ffe9ac4:	500008e8 	.word	0x500008e8
2ffe9ac8:	50000a00 	.word	0x50000a00
2ffe9acc:	40010000 	.word	0x40010000
2ffe9ad0:	03d09000 	.word	0x03d09000
2ffe9ad4:	0001c200 	.word	0x0001c200

2ffe9ad8 <plat_crash_console_flush>:
2ffe9ad8:	e51f0000 	ldr	r0, [pc, #-0]	@ 2ffe9ae0 <plat_crash_console_flush+0x8>
2ffe9adc:	eaffff5c 	b	2ffe9854 <console_stm32_core_flush>
2ffe9ae0:	40010000 	.word	0x40010000

2ffe9ae4 <plat_crash_console_putc>:
2ffe9ae4:	e51f1000 	ldr	r1, [pc, #-0]	@ 2ffe9aec <plat_crash_console_putc+0x8>
2ffe9ae8:	eaffff3f 	b	2ffe97ec <console_stm32_core_putc>
2ffe9aec:	40010000 	.word	0x40010000

2ffe9af0 <plat_panic_handler>:
2ffe9af0:	e10f0000 	mrs	r0, CPSR
2ffe9af4:	e200001f 	and	r0, r0, #31
2ffe9af8:	ebffff75 	bl	2ffe98d4 <plat_report_exception>
2ffe9afc:	e1a0e006 	mov	lr, r6
2ffe9b00:	eafffffe 	b	2ffe9b00 <plat_panic_handler+0x10>

2ffe9b04 <bl2_load_images>:
2ffe9b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe9b08:	f009 f8c6 	bl	2fff2c98 <plat_get_bl_image_load_info>
2ffe9b0c:	b918      	cbnz	r0, 2ffe9b16 <bl2_load_images+0x12>
2ffe9b0e:	2125      	movs	r1, #37	@ 0x25
2ffe9b10:	483a      	ldr	r0, [pc, #232]	@ (2ffe9bfc <bl2_load_images+0xf8>)
2ffe9b12:	f008 fd01 	bl	2fff2518 <__assert>
2ffe9b16:	6884      	ldr	r4, [r0, #8]
2ffe9b18:	b90c      	cbnz	r4, 2ffe9b1e <bl2_load_images+0x1a>
2ffe9b1a:	2126      	movs	r1, #38	@ 0x26
2ffe9b1c:	e7f8      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9b1e:	7803      	ldrb	r3, [r0, #0]
2ffe9b20:	2b04      	cmp	r3, #4
2ffe9b22:	d11b      	bne.n	2ffe9b5c <bl2_load_images+0x58>
2ffe9b24:	7843      	ldrb	r3, [r0, #1]
2ffe9b26:	2b01      	cmp	r3, #1
2ffe9b28:	d91a      	bls.n	2ffe9b60 <bl2_load_images+0x5c>
2ffe9b2a:	4f35      	ldr	r7, [pc, #212]	@ (2ffe9c00 <bl2_load_images+0xfc>)
2ffe9b2c:	2600      	movs	r6, #0
2ffe9b2e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 2ffe9c04 <bl2_load_images+0x100>
2ffe9b32:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 2ffe9c08 <bl2_load_images+0x104>
2ffe9b36:	6863      	ldr	r3, [r4, #4]
2ffe9b38:	685b      	ldr	r3, [r3, #4]
2ffe9b3a:	075a      	lsls	r2, r3, #29
2ffe9b3c:	d504      	bpl.n	2ffe9b48 <bl2_load_images+0x44>
2ffe9b3e:	b18e      	cbz	r6, 2ffe9b64 <bl2_load_images+0x60>
2ffe9b40:	4640      	mov	r0, r8
2ffe9b42:	f002 fdbb 	bl	2ffec6bc <tf_log>
2ffe9b46:	2601      	movs	r6, #1
2ffe9b48:	6820      	ldr	r0, [r4, #0]
2ffe9b4a:	f001 fd61 	bl	2ffeb610 <bl2_plat_handle_pre_image_load>
2ffe9b4e:	4605      	mov	r5, r0
2ffe9b50:	b170      	cbz	r0, 2ffe9b70 <bl2_load_images+0x6c>
2ffe9b52:	4601      	mov	r1, r0
2ffe9b54:	482d      	ldr	r0, [pc, #180]	@ (2ffe9c0c <bl2_load_images+0x108>)
2ffe9b56:	f002 fdb1 	bl	2ffec6bc <tf_log>
2ffe9b5a:	e01c      	b.n	2ffe9b96 <bl2_load_images+0x92>
2ffe9b5c:	2127      	movs	r1, #39	@ 0x27
2ffe9b5e:	e7d7      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9b60:	2128      	movs	r1, #40	@ 0x28
2ffe9b62:	e7d5      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9b64:	4638      	mov	r0, r7
2ffe9b66:	f002 fda9 	bl	2ffec6bc <tf_log>
2ffe9b6a:	f002 f861 	bl	2ffebc30 <bl2_platform_setup>
2ffe9b6e:	e7ea      	b.n	2ffe9b46 <bl2_load_images+0x42>
2ffe9b70:	e9d4 1300 	ldrd	r1, r3, [r4]
2ffe9b74:	685b      	ldr	r3, [r3, #4]
2ffe9b76:	079b      	lsls	r3, r3, #30
2ffe9b78:	d410      	bmi.n	2ffe9b9c <bl2_load_images+0x98>
2ffe9b7a:	4825      	ldr	r0, [pc, #148]	@ (2ffe9c10 <bl2_load_images+0x10c>)
2ffe9b7c:	f002 fd9e 	bl	2ffec6bc <tf_log>
2ffe9b80:	e9d4 0100 	ldrd	r0, r1, [r4]
2ffe9b84:	f002 fcf2 	bl	2ffec56c <load_auth_image>
2ffe9b88:	4605      	mov	r5, r0
2ffe9b8a:	b150      	cbz	r0, 2ffe9ba2 <bl2_load_images+0x9e>
2ffe9b8c:	6821      	ldr	r1, [r4, #0]
2ffe9b8e:	4602      	mov	r2, r0
2ffe9b90:	4820      	ldr	r0, [pc, #128]	@ (2ffe9c14 <bl2_load_images+0x110>)
2ffe9b92:	f002 fd93 	bl	2ffec6bc <tf_log>
2ffe9b96:	4628      	mov	r0, r5
2ffe9b98:	f009 f8a1 	bl	2fff2cde <plat_error_handler>
2ffe9b9c:	4648      	mov	r0, r9
2ffe9b9e:	f002 fd8d 	bl	2ffec6bc <tf_log>
2ffe9ba2:	6820      	ldr	r0, [r4, #0]
2ffe9ba4:	f002 fa76 	bl	2ffec094 <bl2_plat_handle_post_image_load>
2ffe9ba8:	4605      	mov	r5, r0
2ffe9baa:	b110      	cbz	r0, 2ffe9bb2 <bl2_load_images+0xae>
2ffe9bac:	4601      	mov	r1, r0
2ffe9bae:	481a      	ldr	r0, [pc, #104]	@ (2ffe9c18 <bl2_load_images+0x114>)
2ffe9bb0:	e7d1      	b.n	2ffe9b56 <bl2_load_images+0x52>
2ffe9bb2:	68a4      	ldr	r4, [r4, #8]
2ffe9bb4:	2c00      	cmp	r4, #0
2ffe9bb6:	d1be      	bne.n	2ffe9b36 <bl2_load_images+0x32>
2ffe9bb8:	f009 f870 	bl	2fff2c9c <plat_get_next_bl_params>
2ffe9bbc:	4604      	mov	r4, r0
2ffe9bbe:	b908      	cbnz	r0, 2ffe9bc4 <bl2_load_images+0xc0>
2ffe9bc0:	215f      	movs	r1, #95	@ 0x5f
2ffe9bc2:	e7a5      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9bc4:	6883      	ldr	r3, [r0, #8]
2ffe9bc6:	b90b      	cbnz	r3, 2ffe9bcc <bl2_load_images+0xc8>
2ffe9bc8:	2160      	movs	r1, #96	@ 0x60
2ffe9bca:	e7a1      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9bcc:	7802      	ldrb	r2, [r0, #0]
2ffe9bce:	2a05      	cmp	r2, #5
2ffe9bd0:	d001      	beq.n	2ffe9bd6 <bl2_load_images+0xd2>
2ffe9bd2:	2161      	movs	r1, #97	@ 0x61
2ffe9bd4:	e79c      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9bd6:	7842      	ldrb	r2, [r0, #1]
2ffe9bd8:	2a01      	cmp	r2, #1
2ffe9bda:	d801      	bhi.n	2ffe9be0 <bl2_load_images+0xdc>
2ffe9bdc:	2162      	movs	r1, #98	@ 0x62
2ffe9bde:	e797      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9be0:	689b      	ldr	r3, [r3, #8]
2ffe9be2:	b90b      	cbnz	r3, 2ffe9be8 <bl2_load_images+0xe4>
2ffe9be4:	2163      	movs	r1, #99	@ 0x63
2ffe9be6:	e793      	b.n	2ffe9b10 <bl2_load_images+0xc>
2ffe9be8:	695a      	ldr	r2, [r3, #20]
2ffe9bea:	b902      	cbnz	r2, 2ffe9bee <bl2_load_images+0xea>
2ffe9bec:	6158      	str	r0, [r3, #20]
2ffe9bee:	f009 f851 	bl	2fff2c94 <plat_flush_next_bl_params>
2ffe9bf2:	68a3      	ldr	r3, [r4, #8]
2ffe9bf4:	6898      	ldr	r0, [r3, #8]
2ffe9bf6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe9bfa:	bf00      	nop
2ffe9bfc:	2fff52d2 	.word	0x2fff52d2
2ffe9c00:	2fff530f 	.word	0x2fff530f
2ffe9c04:	2fff52ea 	.word	0x2fff52ea
2ffe9c08:	2fff539c 	.word	0x2fff539c
2ffe9c0c:	2fff532b 	.word	0x2fff532b
2ffe9c10:	2fff535a 	.word	0x2fff535a
2ffe9c14:	2fff5375 	.word	0x2fff5375
2ffe9c18:	2fff53bc 	.word	0x2fff53bc

2ffe9c1c <bl2_main>:
2ffe9c1c:	b510      	push	{r4, lr}
2ffe9c1e:	4c0e      	ldr	r4, [pc, #56]	@ (2ffe9c58 <bl2_main+0x3c>)
2ffe9c20:	490e      	ldr	r1, [pc, #56]	@ (2ffe9c5c <bl2_main+0x40>)
2ffe9c22:	4620      	mov	r0, r4
2ffe9c24:	f002 fd4a 	bl	2ffec6bc <tf_log>
2ffe9c28:	490d      	ldr	r1, [pc, #52]	@ (2ffe9c60 <bl2_main+0x44>)
2ffe9c2a:	4620      	mov	r0, r4
2ffe9c2c:	f002 fd46 	bl	2ffec6bc <tf_log>
2ffe9c30:	f008 febc 	bl	2fff29ac <bl2_arch_setup>
2ffe9c34:	f009 f855 	bl	2fff2ce2 <bl2_plat_preload_setup>
2ffe9c38:	f7ff ff64 	bl	2ffe9b04 <bl2_load_images>
2ffe9c3c:	4604      	mov	r4, r0
2ffe9c3e:	4809      	ldr	r0, [pc, #36]	@ (2ffe9c64 <bl2_main+0x48>)
2ffe9c40:	f002 fd3c 	bl	2ffec6bc <tf_log>
2ffe9c44:	4620      	mov	r0, r4
2ffe9c46:	f002 fd29 	bl	2ffec69c <print_entry_point_info>
2ffe9c4a:	f002 fdd3 	bl	2ffec7f4 <console_flush>
2ffe9c4e:	4620      	mov	r0, r4
2ffe9c50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe9c54:	f00d bfd8 	b.w	2fff7c08 <__bl2_run_next_image_from_thumb>
2ffe9c58:	2fff53ec 	.word	0x2fff53ec
2ffe9c5c:	2fff5280 	.word	0x2fff5280
2ffe9c60:	2fff52b4 	.word	0x2fff52b4
2ffe9c64:	2fff53f6 	.word	0x2fff53f6

2ffe9c68 <flush_bl_params_desc_args>:
2ffe9c68:	b510      	push	{r4, lr}
2ffe9c6a:	4614      	mov	r4, r2
2ffe9c6c:	b918      	cbnz	r0, 2ffe9c76 <flush_bl_params_desc_args+0xe>
2ffe9c6e:	2125      	movs	r1, #37	@ 0x25
2ffe9c70:	4809      	ldr	r0, [pc, #36]	@ (2ffe9c98 <flush_bl_params_desc_args+0x30>)
2ffe9c72:	f008 fc51 	bl	2fff2518 <__assert>
2ffe9c76:	b909      	cbnz	r1, 2ffe9c7c <flush_bl_params_desc_args+0x14>
2ffe9c78:	2126      	movs	r1, #38	@ 0x26
2ffe9c7a:	e7f9      	b.n	2ffe9c70 <flush_bl_params_desc_args+0x8>
2ffe9c7c:	b90a      	cbnz	r2, 2ffe9c82 <flush_bl_params_desc_args+0x1a>
2ffe9c7e:	2127      	movs	r1, #39	@ 0x27
2ffe9c80:	e7f6      	b.n	2ffe9c70 <flush_bl_params_desc_args+0x8>
2ffe9c82:	235c      	movs	r3, #92	@ 0x5c
2ffe9c84:	4359      	muls	r1, r3
2ffe9c86:	f7ff ebe2 	blx	2ffe944c <flush_dcache_range>
2ffe9c8a:	4620      	mov	r0, r4
2ffe9c8c:	210c      	movs	r1, #12
2ffe9c8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe9c92:	f00d bfc1 	b.w	2fff7c18 <__flush_dcache_range_from_thumb>
2ffe9c96:	bf00      	nop
2ffe9c98:	2fff540a 	.word	0x2fff540a

2ffe9c9c <flush_bl_params_desc>:
2ffe9c9c:	4b03      	ldr	r3, [pc, #12]	@ (2ffe9cac <flush_bl_params_desc+0x10>)
2ffe9c9e:	4a04      	ldr	r2, [pc, #16]	@ (2ffe9cb0 <flush_bl_params_desc+0x14>)
2ffe9ca0:	6819      	ldr	r1, [r3, #0]
2ffe9ca2:	4b04      	ldr	r3, [pc, #16]	@ (2ffe9cb4 <flush_bl_params_desc+0x18>)
2ffe9ca4:	6818      	ldr	r0, [r3, #0]
2ffe9ca6:	f7ff bfdf 	b.w	2ffe9c68 <flush_bl_params_desc_args>
2ffe9caa:	bf00      	nop
2ffe9cac:	2fff8284 	.word	0x2fff8284
2ffe9cb0:	2fff9300 	.word	0x2fff9300
2ffe9cb4:	2fff8288 	.word	0x2fff8288

2ffe9cb8 <get_bl_params_node_index>:
2ffe9cb8:	b538      	push	{r3, r4, r5, lr}
2ffe9cba:	1c43      	adds	r3, r0, #1
2ffe9cbc:	d00a      	beq.n	2ffe9cd4 <get_bl_params_node_index+0x1c>
2ffe9cbe:	4b0c      	ldr	r3, [pc, #48]	@ (2ffe9cf0 <get_bl_params_node_index+0x38>)
2ffe9cc0:	245c      	movs	r4, #92	@ 0x5c
2ffe9cc2:	681a      	ldr	r2, [r3, #0]
2ffe9cc4:	4b0b      	ldr	r3, [pc, #44]	@ (2ffe9cf4 <get_bl_params_node_index+0x3c>)
2ffe9cc6:	6819      	ldr	r1, [r3, #0]
2ffe9cc8:	2300      	movs	r3, #0
2ffe9cca:	429a      	cmp	r2, r3
2ffe9ccc:	d106      	bne.n	2ffe9cdc <get_bl_params_node_index+0x24>
2ffe9cce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9cd2:	e009      	b.n	2ffe9ce8 <get_bl_params_node_index+0x30>
2ffe9cd4:	4808      	ldr	r0, [pc, #32]	@ (2ffe9cf8 <get_bl_params_node_index+0x40>)
2ffe9cd6:	2138      	movs	r1, #56	@ 0x38
2ffe9cd8:	f008 fc1e 	bl	2fff2518 <__assert>
2ffe9cdc:	fb04 f503 	mul.w	r5, r4, r3
2ffe9ce0:	594d      	ldr	r5, [r1, r5]
2ffe9ce2:	4285      	cmp	r5, r0
2ffe9ce4:	d101      	bne.n	2ffe9cea <get_bl_params_node_index+0x32>
2ffe9ce6:	4618      	mov	r0, r3
2ffe9ce8:	bd38      	pop	{r3, r4, r5, pc}
2ffe9cea:	3301      	adds	r3, #1
2ffe9cec:	e7ed      	b.n	2ffe9cca <get_bl_params_node_index+0x12>
2ffe9cee:	bf00      	nop
2ffe9cf0:	2fff8284 	.word	0x2fff8284
2ffe9cf4:	2fff8288 	.word	0x2fff8288
2ffe9cf8:	2fff540a 	.word	0x2fff540a

2ffe9cfc <get_bl_mem_params_node>:
2ffe9cfc:	b508      	push	{r3, lr}
2ffe9cfe:	1c43      	adds	r3, r0, #1
2ffe9d00:	d103      	bne.n	2ffe9d0a <get_bl_mem_params_node+0xe>
2ffe9d02:	4808      	ldr	r0, [pc, #32]	@ (2ffe9d24 <get_bl_mem_params_node+0x28>)
2ffe9d04:	214a      	movs	r1, #74	@ 0x4a
2ffe9d06:	f008 fc07 	bl	2fff2518 <__assert>
2ffe9d0a:	f7ff ffd5 	bl	2ffe9cb8 <get_bl_params_node_index>
2ffe9d0e:	1e03      	subs	r3, r0, #0
2ffe9d10:	bfb1      	iteee	lt
2ffe9d12:	2000      	movlt	r0, #0
2ffe9d14:	4a04      	ldrge	r2, [pc, #16]	@ (2ffe9d28 <get_bl_mem_params_node+0x2c>)
2ffe9d16:	6810      	ldrge	r0, [r2, #0]
2ffe9d18:	225c      	movge	r2, #92	@ 0x5c
2ffe9d1a:	bfa8      	it	ge
2ffe9d1c:	fb02 0003 	mlage	r0, r2, r3, r0
2ffe9d20:	bd08      	pop	{r3, pc}
2ffe9d22:	bf00      	nop
2ffe9d24:	2fff540a 	.word	0x2fff540a
2ffe9d28:	2fff8288 	.word	0x2fff8288

2ffe9d2c <get_bl_load_info_from_mem_params_desc>:
2ffe9d2c:	4b10      	ldr	r3, [pc, #64]	@ (2ffe9d70 <get_bl_load_info_from_mem_params_desc+0x44>)
2ffe9d2e:	b510      	push	{r4, lr}
2ffe9d30:	6818      	ldr	r0, [r3, #0]
2ffe9d32:	b1d8      	cbz	r0, 2ffe9d6c <get_bl_load_info_from_mem_params_desc+0x40>
2ffe9d34:	4b0f      	ldr	r3, [pc, #60]	@ (2ffe9d74 <get_bl_load_info_from_mem_params_desc+0x48>)
2ffe9d36:	4c10      	ldr	r4, [pc, #64]	@ (2ffe9d78 <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffe9d38:	681b      	ldr	r3, [r3, #0]
2ffe9d3a:	4a10      	ldr	r2, [pc, #64]	@ (2ffe9d7c <get_bl_load_info_from_mem_params_desc+0x50>)
2ffe9d3c:	f103 0140 	add.w	r1, r3, #64	@ 0x40
2ffe9d40:	3304      	adds	r3, #4
2ffe9d42:	6022      	str	r2, [r4, #0]
2ffe9d44:	2200      	movs	r2, #0
2ffe9d46:	60a1      	str	r1, [r4, #8]
2ffe9d48:	6062      	str	r2, [r4, #4]
2ffe9d4a:	f853 4c04 	ldr.w	r4, [r3, #-4]
2ffe9d4e:	3201      	adds	r2, #1
2ffe9d50:	4290      	cmp	r0, r2
2ffe9d52:	600c      	str	r4, [r1, #0]
2ffe9d54:	604b      	str	r3, [r1, #4]
2ffe9d56:	d905      	bls.n	2ffe9d64 <get_bl_load_info_from_mem_params_desc+0x38>
2ffe9d58:	f103 0498 	add.w	r4, r3, #152	@ 0x98
2ffe9d5c:	335c      	adds	r3, #92	@ 0x5c
2ffe9d5e:	608c      	str	r4, [r1, #8]
2ffe9d60:	4621      	mov	r1, r4
2ffe9d62:	e7f2      	b.n	2ffe9d4a <get_bl_load_info_from_mem_params_desc+0x1e>
2ffe9d64:	d001      	beq.n	2ffe9d6a <get_bl_load_info_from_mem_params_desc+0x3e>
2ffe9d66:	335c      	adds	r3, #92	@ 0x5c
2ffe9d68:	e7ef      	b.n	2ffe9d4a <get_bl_load_info_from_mem_params_desc+0x1e>
2ffe9d6a:	4803      	ldr	r0, [pc, #12]	@ (2ffe9d78 <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffe9d6c:	bd10      	pop	{r4, pc}
2ffe9d6e:	bf00      	nop
2ffe9d70:	2fff8284 	.word	0x2fff8284
2ffe9d74:	2fff8288 	.word	0x2fff8288
2ffe9d78:	2fff930c 	.word	0x2fff930c
2ffe9d7c:	000c0204 	.word	0x000c0204

2ffe9d80 <get_next_bl_params_from_mem_params_desc>:
2ffe9d80:	4b2a      	ldr	r3, [pc, #168]	@ (2ffe9e2c <get_next_bl_params_from_mem_params_desc+0xac>)
2ffe9d82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe9d86:	681c      	ldr	r4, [r3, #0]
2ffe9d88:	2c00      	cmp	r4, #0
2ffe9d8a:	d049      	beq.n	2ffe9e20 <get_next_bl_params_from_mem_params_desc+0xa0>
2ffe9d8c:	4b28      	ldr	r3, [pc, #160]	@ (2ffe9e30 <get_next_bl_params_from_mem_params_desc+0xb0>)
2ffe9d8e:	2000      	movs	r0, #0
2ffe9d90:	215c      	movs	r1, #92	@ 0x5c
2ffe9d92:	681d      	ldr	r5, [r3, #0]
2ffe9d94:	fb01 5300 	mla	r3, r1, r0, r5
2ffe9d98:	69da      	ldr	r2, [r3, #28]
2ffe9d9a:	f002 0218 	and.w	r2, r2, #24
2ffe9d9e:	2a18      	cmp	r2, #24
2ffe9da0:	d112      	bne.n	2ffe9dc8 <get_next_bl_params_from_mem_params_desc+0x48>
2ffe9da2:	4a24      	ldr	r2, [pc, #144]	@ (2ffe9e34 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe9da4:	334c      	adds	r3, #76	@ 0x4c
2ffe9da6:	6093      	str	r3, [r2, #8]
2ffe9da8:	4b22      	ldr	r3, [pc, #136]	@ (2ffe9e34 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe9daa:	f04f 085c 	mov.w	r8, #92	@ 0x5c
2ffe9dae:	4a22      	ldr	r2, [pc, #136]	@ (2ffe9e38 <get_next_bl_params_from_mem_params_desc+0xb8>)
2ffe9db0:	601a      	str	r2, [r3, #0]
2ffe9db2:	2200      	movs	r2, #0
2ffe9db4:	605a      	str	r2, [r3, #4]
2ffe9db6:	4616      	mov	r6, r2
2ffe9db8:	fb08 f000 	mul.w	r0, r8, r0
2ffe9dbc:	182b      	adds	r3, r5, r0
2ffe9dbe:	69d9      	ldr	r1, [r3, #28]
2ffe9dc0:	0709      	lsls	r1, r1, #28
2ffe9dc2:	d40f      	bmi.n	2ffe9de4 <get_next_bl_params_from_mem_params_desc+0x64>
2ffe9dc4:	21ab      	movs	r1, #171	@ 0xab
2ffe9dc6:	e006      	b.n	2ffe9dd6 <get_next_bl_params_from_mem_params_desc+0x56>
2ffe9dc8:	3001      	adds	r0, #1
2ffe9dca:	4284      	cmp	r4, r0
2ffe9dcc:	d1e2      	bne.n	2ffe9d94 <get_next_bl_params_from_mem_params_desc+0x14>
2ffe9dce:	4b19      	ldr	r3, [pc, #100]	@ (2ffe9e34 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe9dd0:	689b      	ldr	r3, [r3, #8]
2ffe9dd2:	b91b      	cbnz	r3, 2ffe9ddc <get_next_bl_params_from_mem_params_desc+0x5c>
2ffe9dd4:	219d      	movs	r1, #157	@ 0x9d
2ffe9dd6:	4819      	ldr	r0, [pc, #100]	@ (2ffe9e3c <get_next_bl_params_from_mem_params_desc+0xbc>)
2ffe9dd8:	f008 fb9e 	bl	2fff2518 <__assert>
2ffe9ddc:	2000      	movs	r0, #0
2ffe9dde:	e7e3      	b.n	2ffe9da8 <get_next_bl_params_from_mem_params_desc+0x28>
2ffe9de0:	463a      	mov	r2, r7
2ffe9de2:	e7e9      	b.n	2ffe9db8 <get_next_bl_params_from_mem_params_desc+0x38>
2ffe9de4:	5829      	ldr	r1, [r5, r0]
2ffe9de6:	f103 074c 	add.w	r7, r3, #76	@ 0x4c
2ffe9dea:	64d9      	str	r1, [r3, #76]	@ 0x4c
2ffe9dec:	1d19      	adds	r1, r3, #4
2ffe9dee:	6519      	str	r1, [r3, #80]	@ 0x50
2ffe9df0:	f103 0118 	add.w	r1, r3, #24
2ffe9df4:	6559      	str	r1, [r3, #84]	@ 0x54
2ffe9df6:	b122      	cbz	r2, 2ffe9e02 <get_next_bl_params_from_mem_params_desc+0x82>
2ffe9df8:	68d1      	ldr	r1, [r2, #12]
2ffe9dfa:	b109      	cbz	r1, 2ffe9e00 <get_next_bl_params_from_mem_params_desc+0x80>
2ffe9dfc:	21b7      	movs	r1, #183	@ 0xb7
2ffe9dfe:	e7ea      	b.n	2ffe9dd6 <get_next_bl_params_from_mem_params_desc+0x56>
2ffe9e00:	60d7      	str	r7, [r2, #12]
2ffe9e02:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
2ffe9e04:	1c43      	adds	r3, r0, #1
2ffe9e06:	d00e      	beq.n	2ffe9e26 <get_next_bl_params_from_mem_params_desc+0xa6>
2ffe9e08:	f7ff ff56 	bl	2ffe9cb8 <get_bl_params_node_index>
2ffe9e0c:	b108      	cbz	r0, 2ffe9e12 <get_next_bl_params_from_mem_params_desc+0x92>
2ffe9e0e:	4284      	cmp	r4, r0
2ffe9e10:	d801      	bhi.n	2ffe9e16 <get_next_bl_params_from_mem_params_desc+0x96>
2ffe9e12:	21c7      	movs	r1, #199	@ 0xc7
2ffe9e14:	e7df      	b.n	2ffe9dd6 <get_next_bl_params_from_mem_params_desc+0x56>
2ffe9e16:	3601      	adds	r6, #1
2ffe9e18:	42b4      	cmp	r4, r6
2ffe9e1a:	d1e1      	bne.n	2ffe9de0 <get_next_bl_params_from_mem_params_desc+0x60>
2ffe9e1c:	21cc      	movs	r1, #204	@ 0xcc
2ffe9e1e:	e7da      	b.n	2ffe9dd6 <get_next_bl_params_from_mem_params_desc+0x56>
2ffe9e20:	4620      	mov	r0, r4
2ffe9e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe9e26:	4803      	ldr	r0, [pc, #12]	@ (2ffe9e34 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffe9e28:	e7fb      	b.n	2ffe9e22 <get_next_bl_params_from_mem_params_desc+0xa2>
2ffe9e2a:	bf00      	nop
2ffe9e2c:	2fff8284 	.word	0x2fff8284
2ffe9e30:	2fff8288 	.word	0x2fff8288
2ffe9e34:	2fff9300 	.word	0x2fff9300
2ffe9e38:	000c0205 	.word	0x000c0205
2ffe9e3c:	2fff540a 	.word	0x2fff540a

2ffe9e40 <populate_next_bl_params_config>:
2ffe9e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe9e42:	4605      	mov	r5, r0
2ffe9e44:	b918      	cbnz	r0, 2ffe9e4e <populate_next_bl_params_config+0xe>
2ffe9e46:	4816      	ldr	r0, [pc, #88]	@ (2ffe9ea0 <populate_next_bl_params_config+0x60>)
2ffe9e48:	21dd      	movs	r1, #221	@ 0xdd
2ffe9e4a:	f008 fb65 	bl	2fff2518 <__assert>
2ffe9e4e:	2002      	movs	r0, #2
2ffe9e50:	f7ff ff54 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffe9e54:	4604      	mov	r4, r0
2ffe9e56:	b100      	cbz	r0, 2ffe9e5a <populate_next_bl_params_config+0x1a>
2ffe9e58:	68c4      	ldr	r4, [r0, #12]
2ffe9e5a:	68ae      	ldr	r6, [r5, #8]
2ffe9e5c:	4f11      	ldr	r7, [pc, #68]	@ (2ffe9ea4 <populate_next_bl_params_config+0x64>)
2ffe9e5e:	4635      	mov	r5, r6
2ffe9e60:	b905      	cbnz	r5, 2ffe9e64 <populate_next_bl_params_config+0x24>
2ffe9e62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe9e64:	682b      	ldr	r3, [r5, #0]
2ffe9e66:	3b03      	subs	r3, #3
2ffe9e68:	2b02      	cmp	r3, #2
2ffe9e6a:	d80f      	bhi.n	2ffe9e8c <populate_next_bl_params_config+0x4c>
2ffe9e6c:	5cf8      	ldrb	r0, [r7, r3]
2ffe9e6e:	f7ff ff45 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffe9e72:	b100      	cbz	r0, 2ffe9e76 <populate_next_bl_params_config+0x36>
2ffe9e74:	68c0      	ldr	r0, [r0, #12]
2ffe9e76:	68ab      	ldr	r3, [r5, #8]
2ffe9e78:	42b5      	cmp	r5, r6
2ffe9e7a:	699a      	ldr	r2, [r3, #24]
2ffe9e7c:	d108      	bne.n	2ffe9e90 <populate_next_bl_params_config+0x50>
2ffe9e7e:	b902      	cbnz	r2, 2ffe9e82 <populate_next_bl_params_config+0x42>
2ffe9e80:	6198      	str	r0, [r3, #24]
2ffe9e82:	69da      	ldr	r2, [r3, #28]
2ffe9e84:	b902      	cbnz	r2, 2ffe9e88 <populate_next_bl_params_config+0x48>
2ffe9e86:	61dc      	str	r4, [r3, #28]
2ffe9e88:	68ed      	ldr	r5, [r5, #12]
2ffe9e8a:	e7e9      	b.n	2ffe9e60 <populate_next_bl_params_config+0x20>
2ffe9e8c:	2000      	movs	r0, #0
2ffe9e8e:	e7f2      	b.n	2ffe9e76 <populate_next_bl_params_config+0x36>
2ffe9e90:	6959      	ldr	r1, [r3, #20]
2ffe9e92:	b901      	cbnz	r1, 2ffe9e96 <populate_next_bl_params_config+0x56>
2ffe9e94:	6158      	str	r0, [r3, #20]
2ffe9e96:	2a00      	cmp	r2, #0
2ffe9e98:	d1f6      	bne.n	2ffe9e88 <populate_next_bl_params_config+0x48>
2ffe9e9a:	619c      	str	r4, [r3, #24]
2ffe9e9c:	e7f4      	b.n	2ffe9e88 <populate_next_bl_params_config+0x48>
2ffe9e9e:	bf00      	nop
2ffe9ea0:	2fff540a 	.word	0x2fff540a
2ffe9ea4:	2fff5423 	.word	0x2fff5423

2ffe9ea8 <fdt_read_uint32_array>:
2ffe9ea8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe9eaa:	461c      	mov	r4, r3
2ffe9eac:	9d08      	ldr	r5, [sp, #32]
2ffe9eae:	b918      	cbnz	r0, 2ffe9eb8 <fdt_read_uint32_array+0x10>
2ffe9eb0:	2120      	movs	r1, #32
2ffe9eb2:	4817      	ldr	r0, [pc, #92]	@ (2ffe9f10 <fdt_read_uint32_array+0x68>)
2ffe9eb4:	f008 fb30 	bl	2fff2518 <__assert>
2ffe9eb8:	b90a      	cbnz	r2, 2ffe9ebe <fdt_read_uint32_array+0x16>
2ffe9eba:	2121      	movs	r1, #33	@ 0x21
2ffe9ebc:	e7f9      	b.n	2ffe9eb2 <fdt_read_uint32_array+0xa>
2ffe9ebe:	b90d      	cbnz	r5, 2ffe9ec4 <fdt_read_uint32_array+0x1c>
2ffe9ec0:	2122      	movs	r1, #34	@ 0x22
2ffe9ec2:	e7f6      	b.n	2ffe9eb2 <fdt_read_uint32_array+0xa>
2ffe9ec4:	2900      	cmp	r1, #0
2ffe9ec6:	da01      	bge.n	2ffe9ecc <fdt_read_uint32_array+0x24>
2ffe9ec8:	2123      	movs	r1, #35	@ 0x23
2ffe9eca:	e7f2      	b.n	2ffe9eb2 <fdt_read_uint32_array+0xa>
2ffe9ecc:	ab01      	add	r3, sp, #4
2ffe9ece:	f009 ffd5 	bl	2fff3e7c <fdt_getprop>
2ffe9ed2:	4602      	mov	r2, r0
2ffe9ed4:	b1c0      	cbz	r0, 2ffe9f08 <fdt_read_uint32_array+0x60>
2ffe9ed6:	9b01      	ldr	r3, [sp, #4]
2ffe9ed8:	ebb4 0f93 	cmp.w	r4, r3, lsr #2
2ffe9edc:	d806      	bhi.n	2ffe9eec <fdt_read_uint32_array+0x44>
2ffe9ede:	eb00 0484 	add.w	r4, r0, r4, lsl #2
2ffe9ee2:	3d04      	subs	r5, #4
2ffe9ee4:	42a2      	cmp	r2, r4
2ffe9ee6:	d108      	bne.n	2ffe9efa <fdt_read_uint32_array+0x52>
2ffe9ee8:	2000      	movs	r0, #0
2ffe9eea:	e004      	b.n	2ffe9ef6 <fdt_read_uint32_array+0x4e>
2ffe9eec:	4809      	ldr	r0, [pc, #36]	@ (2ffe9f14 <fdt_read_uint32_array+0x6c>)
2ffe9eee:	f002 fbe5 	bl	2ffec6bc <tf_log>
2ffe9ef2:	f06f 000e 	mvn.w	r0, #14
2ffe9ef6:	b003      	add	sp, #12
2ffe9ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe9efa:	f852 0b04 	ldr.w	r0, [r2], #4
2ffe9efe:	f008 fd5d 	bl	2fff29bc <cpu_to_fdt32>
2ffe9f02:	f845 0f04 	str.w	r0, [r5, #4]!
2ffe9f06:	e7ed      	b.n	2ffe9ee4 <fdt_read_uint32_array+0x3c>
2ffe9f08:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9f0c:	e7f3      	b.n	2ffe9ef6 <fdt_read_uint32_array+0x4e>
2ffe9f0e:	bf00      	nop
2ffe9f10:	2fff5426 	.word	0x2fff5426
2ffe9f14:	2fff543c 	.word	0x2fff543c

2ffe9f18 <fdtw_read_string>:
2ffe9f18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffe9f1c:	4689      	mov	r9, r1
2ffe9f1e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
2ffe9f22:	4614      	mov	r4, r2
2ffe9f24:	461e      	mov	r6, r3
2ffe9f26:	4607      	mov	r7, r0
2ffe9f28:	b918      	cbnz	r0, 2ffe9f32 <fdtw_read_string+0x1a>
2ffe9f2a:	2196      	movs	r1, #150	@ 0x96
2ffe9f2c:	4819      	ldr	r0, [pc, #100]	@ (2ffe9f94 <fdtw_read_string+0x7c>)
2ffe9f2e:	f008 faf3 	bl	2fff2518 <__assert>
2ffe9f32:	2900      	cmp	r1, #0
2ffe9f34:	da01      	bge.n	2ffe9f3a <fdtw_read_string+0x22>
2ffe9f36:	2197      	movs	r1, #151	@ 0x97
2ffe9f38:	e7f8      	b.n	2ffe9f2c <fdtw_read_string+0x14>
2ffe9f3a:	b90a      	cbnz	r2, 2ffe9f40 <fdtw_read_string+0x28>
2ffe9f3c:	2198      	movs	r1, #152	@ 0x98
2ffe9f3e:	e7f5      	b.n	2ffe9f2c <fdtw_read_string+0x14>
2ffe9f40:	b90b      	cbnz	r3, 2ffe9f46 <fdtw_read_string+0x2e>
2ffe9f42:	2199      	movs	r1, #153	@ 0x99
2ffe9f44:	e7f2      	b.n	2ffe9f2c <fdtw_read_string+0x14>
2ffe9f46:	f1b8 0f00 	cmp.w	r8, #0
2ffe9f4a:	d101      	bne.n	2ffe9f50 <fdtw_read_string+0x38>
2ffe9f4c:	219a      	movs	r1, #154	@ 0x9a
2ffe9f4e:	e7ed      	b.n	2ffe9f2c <fdtw_read_string+0x14>
2ffe9f50:	4610      	mov	r0, r2
2ffe9f52:	2500      	movs	r5, #0
2ffe9f54:	f00a fa2a 	bl	2fff43ac <strlen>
2ffe9f58:	9500      	str	r5, [sp, #0]
2ffe9f5a:	4603      	mov	r3, r0
2ffe9f5c:	4649      	mov	r1, r9
2ffe9f5e:	4622      	mov	r2, r4
2ffe9f60:	4638      	mov	r0, r7
2ffe9f62:	f009 ff6b 	bl	2fff3e3c <fdt_getprop_namelen>
2ffe9f66:	4601      	mov	r1, r0
2ffe9f68:	b940      	cbnz	r0, 2ffe9f7c <fdtw_read_string+0x64>
2ffe9f6a:	480b      	ldr	r0, [pc, #44]	@ (2ffe9f98 <fdtw_read_string+0x80>)
2ffe9f6c:	4621      	mov	r1, r4
2ffe9f6e:	f002 fba5 	bl	2ffec6bc <tf_log>
2ffe9f72:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffe9f76:	b003      	add	sp, #12
2ffe9f78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe9f7c:	4642      	mov	r2, r8
2ffe9f7e:	4630      	mov	r0, r6
2ffe9f80:	f00a fa00 	bl	2fff4384 <strlcpy>
2ffe9f84:	4580      	cmp	r8, r0
2ffe9f86:	d802      	bhi.n	2ffe9f8e <fdtw_read_string+0x76>
2ffe9f88:	4804      	ldr	r0, [pc, #16]	@ (2ffe9f9c <fdtw_read_string+0x84>)
2ffe9f8a:	4621      	mov	r1, r4
2ffe9f8c:	e7ef      	b.n	2ffe9f6e <fdtw_read_string+0x56>
2ffe9f8e:	4628      	mov	r0, r5
2ffe9f90:	e7f1      	b.n	2ffe9f76 <fdtw_read_string+0x5e>
2ffe9f92:	bf00      	nop
2ffe9f94:	2fff5426 	.word	0x2fff5426
2ffe9f98:	2fff5457 	.word	0x2fff5457
2ffe9f9c:	2fff547a 	.word	0x2fff547a

2ffe9fa0 <fdtw_read_uuid>:
2ffe9fa0:	b570      	push	{r4, r5, r6, lr}
2ffe9fa2:	b08c      	sub	sp, #48	@ 0x30
2ffe9fa4:	9e10      	ldr	r6, [sp, #64]	@ 0x40
2ffe9fa6:	b918      	cbnz	r0, 2ffe9fb0 <fdtw_read_uuid+0x10>
2ffe9fa8:	21b6      	movs	r1, #182	@ 0xb6
2ffe9faa:	4811      	ldr	r0, [pc, #68]	@ (2ffe9ff0 <fdtw_read_uuid+0x50>)
2ffe9fac:	f008 fab4 	bl	2fff2518 <__assert>
2ffe9fb0:	b90a      	cbnz	r2, 2ffe9fb6 <fdtw_read_uuid+0x16>
2ffe9fb2:	21b7      	movs	r1, #183	@ 0xb7
2ffe9fb4:	e7f9      	b.n	2ffe9faa <fdtw_read_uuid+0xa>
2ffe9fb6:	b90e      	cbnz	r6, 2ffe9fbc <fdtw_read_uuid+0x1c>
2ffe9fb8:	21b8      	movs	r1, #184	@ 0xb8
2ffe9fba:	e7f6      	b.n	2ffe9faa <fdtw_read_uuid+0xa>
2ffe9fbc:	2900      	cmp	r1, #0
2ffe9fbe:	da01      	bge.n	2ffe9fc4 <fdtw_read_uuid+0x24>
2ffe9fc0:	21b9      	movs	r1, #185	@ 0xb9
2ffe9fc2:	e7f2      	b.n	2ffe9faa <fdtw_read_uuid+0xa>
2ffe9fc4:	2b0f      	cmp	r3, #15
2ffe9fc6:	d90f      	bls.n	2ffe9fe8 <fdtw_read_uuid+0x48>
2ffe9fc8:	2325      	movs	r3, #37	@ 0x25
2ffe9fca:	9300      	str	r3, [sp, #0]
2ffe9fcc:	ab02      	add	r3, sp, #8
2ffe9fce:	f7ff ffa3 	bl	2ffe9f18 <fdtw_read_string>
2ffe9fd2:	b938      	cbnz	r0, 2ffe9fe4 <fdtw_read_uuid+0x44>
2ffe9fd4:	a902      	add	r1, sp, #8
2ffe9fd6:	4630      	mov	r0, r6
2ffe9fd8:	f002 fc32 	bl	2ffec840 <read_uuid>
2ffe9fdc:	2800      	cmp	r0, #0
2ffe9fde:	bf18      	it	ne
2ffe9fe0:	f06f 000e 	mvnne.w	r0, #14
2ffe9fe4:	b00c      	add	sp, #48	@ 0x30
2ffe9fe6:	bd70      	pop	{r4, r5, r6, pc}
2ffe9fe8:	f06f 0015 	mvn.w	r0, #21
2ffe9fec:	e7fa      	b.n	2ffe9fe4 <fdtw_read_uuid+0x44>
2ffe9fee:	bf00      	nop
2ffe9ff0:	2fff5426 	.word	0x2fff5426

2ffe9ff4 <fdt_get_stdout_node_offset>:
2ffe9ff4:	4919      	ldr	r1, [pc, #100]	@ (2ffea05c <fdt_get_stdout_node_offset+0x68>)
2ffe9ff6:	b538      	push	{r3, r4, r5, lr}
2ffe9ff8:	4605      	mov	r5, r0
2ffe9ffa:	f009 ff9a 	bl	2fff3f32 <fdt_path_offset>
2ffe9ffe:	1e01      	subs	r1, r0, #0
2ffea000:	da05      	bge.n	2ffea00e <fdt_get_stdout_node_offset+0x1a>
2ffea002:	4917      	ldr	r1, [pc, #92]	@ (2ffea060 <fdt_get_stdout_node_offset+0x6c>)
2ffea004:	4628      	mov	r0, r5
2ffea006:	f009 ff94 	bl	2fff3f32 <fdt_path_offset>
2ffea00a:	1e01      	subs	r1, r0, #0
2ffea00c:	db22      	blt.n	2ffea054 <fdt_get_stdout_node_offset+0x60>
2ffea00e:	4a15      	ldr	r2, [pc, #84]	@ (2ffea064 <fdt_get_stdout_node_offset+0x70>)
2ffea010:	2300      	movs	r3, #0
2ffea012:	4628      	mov	r0, r5
2ffea014:	f009 ff32 	bl	2fff3e7c <fdt_getprop>
2ffea018:	4604      	mov	r4, r0
2ffea01a:	b1d8      	cbz	r0, 2ffea054 <fdt_get_stdout_node_offset+0x60>
2ffea01c:	213a      	movs	r1, #58	@ 0x3a
2ffea01e:	f00a f99a 	bl	2fff4356 <strchr>
2ffea022:	b960      	cbnz	r0, 2ffea03e <fdt_get_stdout_node_offset+0x4a>
2ffea024:	4620      	mov	r0, r4
2ffea026:	f00a f9c1 	bl	2fff43ac <strlen>
2ffea02a:	4602      	mov	r2, r0
2ffea02c:	7823      	ldrb	r3, [r4, #0]
2ffea02e:	4621      	mov	r1, r4
2ffea030:	4628      	mov	r0, r5
2ffea032:	2b2f      	cmp	r3, #47	@ 0x2f
2ffea034:	d105      	bne.n	2ffea042 <fdt_get_stdout_node_offset+0x4e>
2ffea036:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffea03a:	f009 bf30 	b.w	2fff3e9e <fdt_path_offset_namelen>
2ffea03e:	1b02      	subs	r2, r0, r4
2ffea040:	e7f4      	b.n	2ffea02c <fdt_get_stdout_node_offset+0x38>
2ffea042:	f008 fa3f 	bl	2fff24c4 <fdt_get_alias_namelen>
2ffea046:	4601      	mov	r1, r0
2ffea048:	b120      	cbz	r0, 2ffea054 <fdt_get_stdout_node_offset+0x60>
2ffea04a:	4628      	mov	r0, r5
2ffea04c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffea050:	f009 bf6f 	b.w	2fff3f32 <fdt_path_offset>
2ffea054:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffea058:	bd38      	pop	{r3, r4, r5, pc}
2ffea05a:	bf00      	nop
2ffea05c:	2fff54ac 	.word	0x2fff54ac
2ffea060:	2fff54bb 	.word	0x2fff54bb
2ffea064:	2fff54c3 	.word	0x2fff54c3

2ffea068 <fip_file_close>:
2ffea068:	b510      	push	{r4, lr}
2ffea06a:	4604      	mov	r4, r0
2ffea06c:	4805      	ldr	r0, [pc, #20]	@ (2ffea084 <fip_file_close+0x1c>)
2ffea06e:	e9d0 3206 	ldrd	r3, r2, [r0, #24]
2ffea072:	4313      	orrs	r3, r2
2ffea074:	d002      	beq.n	2ffea07c <fip_file_close+0x14>
2ffea076:	2130      	movs	r1, #48	@ 0x30
2ffea078:	f7ff eab0 	blx	2ffe95dc <zero_normalmem>
2ffea07c:	2000      	movs	r0, #0
2ffea07e:	6060      	str	r0, [r4, #4]
2ffea080:	bd10      	pop	{r4, pc}
2ffea082:	bf00      	nop
2ffea084:	2fff91c0 	.word	0x2fff91c0

2ffea088 <fip_dev_init>:
2ffea088:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffea08a:	460c      	mov	r4, r1
2ffea08c:	b087      	sub	sp, #28
2ffea08e:	b918      	cbnz	r0, 2ffea098 <fip_dev_init+0x10>
2ffea090:	481d      	ldr	r0, [pc, #116]	@ (2ffea108 <fip_dev_init+0x80>)
2ffea092:	21e1      	movs	r1, #225	@ 0xe1
2ffea094:	f008 fa40 	bl	2fff2518 <__assert>
2ffea098:	4f1c      	ldr	r7, [pc, #112]	@ (2ffea10c <fip_dev_init+0x84>)
2ffea09a:	4e1d      	ldr	r6, [pc, #116]	@ (2ffea110 <fip_dev_init+0x88>)
2ffea09c:	6845      	ldr	r5, [r0, #4]
2ffea09e:	463a      	mov	r2, r7
2ffea0a0:	4631      	mov	r1, r6
2ffea0a2:	4620      	mov	r0, r4
2ffea0a4:	f001 faec 	bl	2ffeb680 <plat_get_image_source>
2ffea0a8:	4602      	mov	r2, r0
2ffea0aa:	b140      	cbz	r0, 2ffea0be <fip_dev_init+0x36>
2ffea0ac:	4819      	ldr	r0, [pc, #100]	@ (2ffea114 <fip_dev_init+0x8c>)
2ffea0ae:	4621      	mov	r1, r4
2ffea0b0:	f06f 0401 	mvn.w	r4, #1
2ffea0b4:	f002 fb02 	bl	2ffec6bc <tf_log>
2ffea0b8:	4620      	mov	r0, r4
2ffea0ba:	b007      	add	sp, #28
2ffea0bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffea0be:	6839      	ldr	r1, [r7, #0]
2ffea0c0:	466a      	mov	r2, sp
2ffea0c2:	6830      	ldr	r0, [r6, #0]
2ffea0c4:	f000 fad8 	bl	2ffea678 <io_open>
2ffea0c8:	4602      	mov	r2, r0
2ffea0ca:	b110      	cbz	r0, 2ffea0d2 <fip_dev_init+0x4a>
2ffea0cc:	4812      	ldr	r0, [pc, #72]	@ (2ffea118 <fip_dev_init+0x90>)
2ffea0ce:	4621      	mov	r1, r4
2ffea0d0:	e7ee      	b.n	2ffea0b0 <fip_dev_init+0x28>
2ffea0d2:	9800      	ldr	r0, [sp, #0]
2ffea0d4:	ab01      	add	r3, sp, #4
2ffea0d6:	2210      	movs	r2, #16
2ffea0d8:	a902      	add	r1, sp, #8
2ffea0da:	f000 fb57 	bl	2ffea78c <io_read>
2ffea0de:	4604      	mov	r4, r0
2ffea0e0:	b938      	cbnz	r0, 2ffea0f2 <fip_dev_init+0x6a>
2ffea0e2:	4b0e      	ldr	r3, [pc, #56]	@ (2ffea11c <fip_dev_init+0x94>)
2ffea0e4:	9a02      	ldr	r2, [sp, #8]
2ffea0e6:	429a      	cmp	r2, r3
2ffea0e8:	d107      	bne.n	2ffea0fa <fip_dev_init+0x72>
2ffea0ea:	9b03      	ldr	r3, [sp, #12]
2ffea0ec:	b12b      	cbz	r3, 2ffea0fa <fip_dev_init+0x72>
2ffea0ee:	9b05      	ldr	r3, [sp, #20]
2ffea0f0:	80ab      	strh	r3, [r5, #4]
2ffea0f2:	9800      	ldr	r0, [sp, #0]
2ffea0f4:	f000 fb6e 	bl	2ffea7d4 <io_close>
2ffea0f8:	e7de      	b.n	2ffea0b8 <fip_dev_init+0x30>
2ffea0fa:	4809      	ldr	r0, [pc, #36]	@ (2ffea120 <fip_dev_init+0x98>)
2ffea0fc:	f06f 0401 	mvn.w	r4, #1
2ffea100:	f002 fadc 	bl	2ffec6bc <tf_log>
2ffea104:	e7f5      	b.n	2ffea0f2 <fip_dev_init+0x6a>
2ffea106:	bf00      	nop
2ffea108:	2fff54cf 	.word	0x2fff54cf
2ffea10c:	2fff932c 	.word	0x2fff932c
2ffea110:	2fff9330 	.word	0x2fff9330
2ffea114:	2fff54e3 	.word	0x2fff54e3
2ffea118:	2fff5514 	.word	0x2fff5514
2ffea11c:	aa640001 	.word	0xaa640001
2ffea120:	2fff5538 	.word	0x2fff5538

2ffea124 <fip_file_read>:
2ffea124:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffea128:	460f      	mov	r7, r1
2ffea12a:	4690      	mov	r8, r2
2ffea12c:	461e      	mov	r6, r3
2ffea12e:	4604      	mov	r4, r0
2ffea130:	b920      	cbnz	r0, 2ffea13c <fip_file_read+0x18>
2ffea132:	f44f 71c2 	mov.w	r1, #388	@ 0x184
2ffea136:	4822      	ldr	r0, [pc, #136]	@ (2ffea1c0 <fip_file_read+0x9c>)
2ffea138:	f008 f9ee 	bl	2fff2518 <__assert>
2ffea13c:	b913      	cbnz	r3, 2ffea144 <fip_file_read+0x20>
2ffea13e:	f240 1185 	movw	r1, #389	@ 0x185
2ffea142:	e7f8      	b.n	2ffea136 <fip_file_read+0x12>
2ffea144:	6843      	ldr	r3, [r0, #4]
2ffea146:	b913      	cbnz	r3, 2ffea14e <fip_file_read+0x2a>
2ffea148:	f44f 71c3 	mov.w	r1, #390	@ 0x186
2ffea14c:	e7f3      	b.n	2ffea136 <fip_file_read+0x12>
2ffea14e:	4b1d      	ldr	r3, [pc, #116]	@ (2ffea1c4 <fip_file_read+0xa0>)
2ffea150:	aa01      	add	r2, sp, #4
2ffea152:	6819      	ldr	r1, [r3, #0]
2ffea154:	4b1c      	ldr	r3, [pc, #112]	@ (2ffea1c8 <fip_file_read+0xa4>)
2ffea156:	6818      	ldr	r0, [r3, #0]
2ffea158:	f000 fa8e 	bl	2ffea678 <io_open>
2ffea15c:	4603      	mov	r3, r0
2ffea15e:	b148      	cbz	r0, 2ffea174 <fip_file_read+0x50>
2ffea160:	4601      	mov	r1, r0
2ffea162:	f06f 0401 	mvn.w	r4, #1
2ffea166:	4819      	ldr	r0, [pc, #100]	@ (2ffea1cc <fip_file_read+0xa8>)
2ffea168:	f002 faa8 	bl	2ffec6bc <tf_log>
2ffea16c:	4620      	mov	r0, r4
2ffea16e:	b002      	add	sp, #8
2ffea170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffea174:	6865      	ldr	r5, [r4, #4]
2ffea176:	9801      	ldr	r0, [sp, #4]
2ffea178:	69a9      	ldr	r1, [r5, #24]
2ffea17a:	682a      	ldr	r2, [r5, #0]
2ffea17c:	440a      	add	r2, r1
2ffea17e:	2101      	movs	r1, #1
2ffea180:	f000 fac4 	bl	2ffea70c <io_seek>
2ffea184:	b140      	cbz	r0, 2ffea198 <fip_file_read+0x74>
2ffea186:	4812      	ldr	r0, [pc, #72]	@ (2ffea1d0 <fip_file_read+0xac>)
2ffea188:	f002 fa98 	bl	2ffec6bc <tf_log>
2ffea18c:	f06f 0401 	mvn.w	r4, #1
2ffea190:	9801      	ldr	r0, [sp, #4]
2ffea192:	f000 fb1f 	bl	2ffea7d4 <io_close>
2ffea196:	e7e9      	b.n	2ffea16c <fip_file_read+0x48>
2ffea198:	9801      	ldr	r0, [sp, #4]
2ffea19a:	466b      	mov	r3, sp
2ffea19c:	4642      	mov	r2, r8
2ffea19e:	4639      	mov	r1, r7
2ffea1a0:	f000 faf4 	bl	2ffea78c <io_read>
2ffea1a4:	4604      	mov	r4, r0
2ffea1a6:	b120      	cbz	r0, 2ffea1b2 <fip_file_read+0x8e>
2ffea1a8:	4601      	mov	r1, r0
2ffea1aa:	480a      	ldr	r0, [pc, #40]	@ (2ffea1d4 <fip_file_read+0xb0>)
2ffea1ac:	f002 fa86 	bl	2ffec6bc <tf_log>
2ffea1b0:	e7ec      	b.n	2ffea18c <fip_file_read+0x68>
2ffea1b2:	9a00      	ldr	r2, [sp, #0]
2ffea1b4:	6032      	str	r2, [r6, #0]
2ffea1b6:	682b      	ldr	r3, [r5, #0]
2ffea1b8:	4413      	add	r3, r2
2ffea1ba:	602b      	str	r3, [r5, #0]
2ffea1bc:	e7e8      	b.n	2ffea190 <fip_file_read+0x6c>
2ffea1be:	bf00      	nop
2ffea1c0:	2fff54cf 	.word	0x2fff54cf
2ffea1c4:	2fff932c 	.word	0x2fff932c
2ffea1c8:	2fff9330 	.word	0x2fff9330
2ffea1cc:	2fff5566 	.word	0x2fff5566
2ffea1d0:	2fff5580 	.word	0x2fff5580
2ffea1d4:	2fff55a0 	.word	0x2fff55a0

2ffea1d8 <fip_file_len>:
2ffea1d8:	b508      	push	{r3, lr}
2ffea1da:	b920      	cbnz	r0, 2ffea1e6 <fip_file_len+0xe>
2ffea1dc:	f240 1171 	movw	r1, #369	@ 0x171
2ffea1e0:	4805      	ldr	r0, [pc, #20]	@ (2ffea1f8 <fip_file_len+0x20>)
2ffea1e2:	f008 f999 	bl	2fff2518 <__assert>
2ffea1e6:	b911      	cbnz	r1, 2ffea1ee <fip_file_len+0x16>
2ffea1e8:	f44f 71b9 	mov.w	r1, #370	@ 0x172
2ffea1ec:	e7f8      	b.n	2ffea1e0 <fip_file_len+0x8>
2ffea1ee:	6843      	ldr	r3, [r0, #4]
2ffea1f0:	2000      	movs	r0, #0
2ffea1f2:	6a1b      	ldr	r3, [r3, #32]
2ffea1f4:	600b      	str	r3, [r1, #0]
2ffea1f6:	bd08      	pop	{r3, pc}
2ffea1f8:	2fff54cf 	.word	0x2fff54cf

2ffea1fc <fip_file_open>:
2ffea1fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffea200:	4616      	mov	r6, r2
2ffea202:	460f      	mov	r7, r1
2ffea204:	b921      	cbnz	r1, 2ffea210 <fip_file_open+0x14>
2ffea206:	f44f 7193 	mov.w	r1, #294	@ 0x126
2ffea20a:	482e      	ldr	r0, [pc, #184]	@ (2ffea2c4 <fip_file_open+0xc8>)
2ffea20c:	f008 f984 	bl	2fff2518 <__assert>
2ffea210:	b912      	cbnz	r2, 2ffea218 <fip_file_open+0x1c>
2ffea212:	f240 1127 	movw	r1, #295	@ 0x127
2ffea216:	e7f8      	b.n	2ffea20a <fip_file_open+0xe>
2ffea218:	4d2b      	ldr	r5, [pc, #172]	@ (2ffea2c8 <fip_file_open+0xcc>)
2ffea21a:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
2ffea21e:	4313      	orrs	r3, r2
2ffea220:	d008      	beq.n	2ffea234 <fip_file_open+0x38>
2ffea222:	482a      	ldr	r0, [pc, #168]	@ (2ffea2cc <fip_file_open+0xd0>)
2ffea224:	f06f 0416 	mvn.w	r4, #22
2ffea228:	f002 fa48 	bl	2ffec6bc <tf_log>
2ffea22c:	4620      	mov	r0, r4
2ffea22e:	b003      	add	sp, #12
2ffea230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffea234:	4b26      	ldr	r3, [pc, #152]	@ (2ffea2d0 <fip_file_open+0xd4>)
2ffea236:	466a      	mov	r2, sp
2ffea238:	6819      	ldr	r1, [r3, #0]
2ffea23a:	4b26      	ldr	r3, [pc, #152]	@ (2ffea2d4 <fip_file_open+0xd8>)
2ffea23c:	6818      	ldr	r0, [r3, #0]
2ffea23e:	f000 fa1b 	bl	2ffea678 <io_open>
2ffea242:	4601      	mov	r1, r0
2ffea244:	b128      	cbz	r0, 2ffea252 <fip_file_open+0x56>
2ffea246:	4824      	ldr	r0, [pc, #144]	@ (2ffea2d8 <fip_file_open+0xdc>)
2ffea248:	f06f 0401 	mvn.w	r4, #1
2ffea24c:	f002 fa36 	bl	2ffec6bc <tf_log>
2ffea250:	e7ec      	b.n	2ffea22c <fip_file_open+0x30>
2ffea252:	9800      	ldr	r0, [sp, #0]
2ffea254:	2210      	movs	r2, #16
2ffea256:	2300      	movs	r3, #0
2ffea258:	2101      	movs	r1, #1
2ffea25a:	f000 fa57 	bl	2ffea70c <io_seek>
2ffea25e:	b9b0      	cbnz	r0, 2ffea28e <fip_file_open+0x92>
2ffea260:	f8df 9078 	ldr.w	r9, [pc, #120]	@ 2ffea2dc <fip_file_open+0xe0>
2ffea264:	f105 0808 	add.w	r8, r5, #8
2ffea268:	491d      	ldr	r1, [pc, #116]	@ (2ffea2e0 <fip_file_open+0xe4>)
2ffea26a:	ab01      	add	r3, sp, #4
2ffea26c:	9800      	ldr	r0, [sp, #0]
2ffea26e:	2228      	movs	r2, #40	@ 0x28
2ffea270:	f000 fa8c 	bl	2ffea78c <io_read>
2ffea274:	4604      	mov	r4, r0
2ffea276:	b980      	cbnz	r0, 2ffea29a <fip_file_open+0x9e>
2ffea278:	2210      	movs	r2, #16
2ffea27a:	4639      	mov	r1, r7
2ffea27c:	4640      	mov	r0, r8
2ffea27e:	f009 ff5a 	bl	2fff4136 <memcmp>
2ffea282:	4604      	mov	r4, r0
2ffea284:	b988      	cbnz	r0, 2ffea2aa <fip_file_open+0xae>
2ffea286:	f848 0c08 	str.w	r0, [r8, #-8]
2ffea28a:	6075      	str	r5, [r6, #4]
2ffea28c:	e009      	b.n	2ffea2a2 <fip_file_open+0xa6>
2ffea28e:	4815      	ldr	r0, [pc, #84]	@ (2ffea2e4 <fip_file_open+0xe8>)
2ffea290:	f002 fa14 	bl	2ffec6bc <tf_log>
2ffea294:	f06f 0401 	mvn.w	r4, #1
2ffea298:	e003      	b.n	2ffea2a2 <fip_file_open+0xa6>
2ffea29a:	4601      	mov	r1, r0
2ffea29c:	4812      	ldr	r0, [pc, #72]	@ (2ffea2e8 <fip_file_open+0xec>)
2ffea29e:	f002 fa0d 	bl	2ffec6bc <tf_log>
2ffea2a2:	9800      	ldr	r0, [sp, #0]
2ffea2a4:	f000 fa96 	bl	2ffea7d4 <io_close>
2ffea2a8:	e7c0      	b.n	2ffea22c <fip_file_open+0x30>
2ffea2aa:	2210      	movs	r2, #16
2ffea2ac:	4649      	mov	r1, r9
2ffea2ae:	4640      	mov	r0, r8
2ffea2b0:	f009 ff41 	bl	2fff4136 <memcmp>
2ffea2b4:	2800      	cmp	r0, #0
2ffea2b6:	d1d7      	bne.n	2ffea268 <fip_file_open+0x6c>
2ffea2b8:	2200      	movs	r2, #0
2ffea2ba:	2300      	movs	r3, #0
2ffea2bc:	e9c5 2306 	strd	r2, r3, [r5, #24]
2ffea2c0:	e7e8      	b.n	2ffea294 <fip_file_open+0x98>
2ffea2c2:	bf00      	nop
2ffea2c4:	2fff54cf 	.word	0x2fff54cf
2ffea2c8:	2fff91c0 	.word	0x2fff91c0
2ffea2cc:	2fff55be 	.word	0x2fff55be
2ffea2d0:	2fff932c 	.word	0x2fff932c
2ffea2d4:	2fff9330 	.word	0x2fff9330
2ffea2d8:	2fff55ee 	.word	0x2fff55ee
2ffea2dc:	2fff5655 	.word	0x2fff5655
2ffea2e0:	2fff91c8 	.word	0x2fff91c8
2ffea2e4:	2fff561b 	.word	0x2fff561b
2ffea2e8:	2fff563b 	.word	0x2fff563b

2ffea2ec <fip_dev_close>:
2ffea2ec:	4b0e      	ldr	r3, [pc, #56]	@ (2ffea328 <fip_dev_close+0x3c>)
2ffea2ee:	b510      	push	{r4, lr}
2ffea2f0:	2400      	movs	r4, #0
2ffea2f2:	601c      	str	r4, [r3, #0]
2ffea2f4:	4b0d      	ldr	r3, [pc, #52]	@ (2ffea32c <fip_dev_close+0x40>)
2ffea2f6:	601c      	str	r4, [r3, #0]
2ffea2f8:	b918      	cbnz	r0, 2ffea302 <fip_dev_close+0x16>
2ffea2fa:	480d      	ldr	r0, [pc, #52]	@ (2ffea330 <fip_dev_close+0x44>)
2ffea2fc:	21ab      	movs	r1, #171	@ 0xab
2ffea2fe:	f008 f90b 	bl	2fff2518 <__assert>
2ffea302:	6840      	ldr	r0, [r0, #4]
2ffea304:	4b0b      	ldr	r3, [pc, #44]	@ (2ffea334 <fip_dev_close+0x48>)
2ffea306:	6802      	ldr	r2, [r0, #0]
2ffea308:	681b      	ldr	r3, [r3, #0]
2ffea30a:	429a      	cmp	r2, r3
2ffea30c:	d108      	bne.n	2ffea320 <fip_dev_close+0x34>
2ffea30e:	2108      	movs	r1, #8
2ffea310:	f7ff e964 	blx	2ffe95dc <zero_normalmem>
2ffea314:	4a08      	ldr	r2, [pc, #32]	@ (2ffea338 <fip_dev_close+0x4c>)
2ffea316:	4620      	mov	r0, r4
2ffea318:	6813      	ldr	r3, [r2, #0]
2ffea31a:	3b01      	subs	r3, #1
2ffea31c:	6013      	str	r3, [r2, #0]
2ffea31e:	bd10      	pop	{r4, pc}
2ffea320:	f06f 0001 	mvn.w	r0, #1
2ffea324:	e7fb      	b.n	2ffea31e <fip_dev_close+0x32>
2ffea326:	bf00      	nop
2ffea328:	2fff9330 	.word	0x2fff9330
2ffea32c:	2fff932c 	.word	0x2fff932c
2ffea330:	2fff54cf 	.word	0x2fff54cf
2ffea334:	2fff9324 	.word	0x2fff9324
2ffea338:	2fff9318 	.word	0x2fff9318

2ffea33c <fip_dev_open>:
2ffea33c:	b570      	push	{r4, r5, r6, lr}
2ffea33e:	4604      	mov	r4, r0
2ffea340:	b919      	cbnz	r1, 2ffea34a <fip_dev_open+0xe>
2ffea342:	21c4      	movs	r1, #196	@ 0xc4
2ffea344:	480b      	ldr	r0, [pc, #44]	@ (2ffea374 <fip_dev_open+0x38>)
2ffea346:	f008 f8e7 	bl	2fff2518 <__assert>
2ffea34a:	4d0b      	ldr	r5, [pc, #44]	@ (2ffea378 <fip_dev_open+0x3c>)
2ffea34c:	682b      	ldr	r3, [r5, #0]
2ffea34e:	b96b      	cbnz	r3, 2ffea36c <fip_dev_open+0x30>
2ffea350:	4a0a      	ldr	r2, [pc, #40]	@ (2ffea37c <fip_dev_open+0x40>)
2ffea352:	6810      	ldr	r0, [r2, #0]
2ffea354:	b940      	cbnz	r0, 2ffea368 <fip_dev_open+0x2c>
2ffea356:	4b0a      	ldr	r3, [pc, #40]	@ (2ffea380 <fip_dev_open+0x44>)
2ffea358:	4e0a      	ldr	r6, [pc, #40]	@ (2ffea384 <fip_dev_open+0x48>)
2ffea35a:	605a      	str	r2, [r3, #4]
2ffea35c:	601e      	str	r6, [r3, #0]
2ffea35e:	2601      	movs	r6, #1
2ffea360:	6014      	str	r4, [r2, #0]
2ffea362:	602e      	str	r6, [r5, #0]
2ffea364:	600b      	str	r3, [r1, #0]
2ffea366:	bd70      	pop	{r4, r5, r6, pc}
2ffea368:	2198      	movs	r1, #152	@ 0x98
2ffea36a:	e7eb      	b.n	2ffea344 <fip_dev_open+0x8>
2ffea36c:	f06f 000b 	mvn.w	r0, #11
2ffea370:	e7f9      	b.n	2ffea366 <fip_dev_open+0x2a>
2ffea372:	bf00      	nop
2ffea374:	2fff54cf 	.word	0x2fff54cf
2ffea378:	2fff9318 	.word	0x2fff9318
2ffea37c:	2fff9324 	.word	0x2fff9324
2ffea380:	2fff931c 	.word	0x2fff931c
2ffea384:	2fff4460 	.word	0x2fff4460

2ffea388 <register_io_dev_fip>:
2ffea388:	b510      	push	{r4, lr}
2ffea38a:	4604      	mov	r4, r0
2ffea38c:	b920      	cbnz	r0, 2ffea398 <register_io_dev_fip+0x10>
2ffea38e:	4806      	ldr	r0, [pc, #24]	@ (2ffea3a8 <register_io_dev_fip+0x20>)
2ffea390:	f44f 71e4 	mov.w	r1, #456	@ 0x1c8
2ffea394:	f008 f8c0 	bl	2fff2518 <__assert>
2ffea398:	4804      	ldr	r0, [pc, #16]	@ (2ffea3ac <register_io_dev_fip+0x24>)
2ffea39a:	f000 f913 	bl	2ffea5c4 <io_register_device>
2ffea39e:	b908      	cbnz	r0, 2ffea3a4 <register_io_dev_fip+0x1c>
2ffea3a0:	4b03      	ldr	r3, [pc, #12]	@ (2ffea3b0 <register_io_dev_fip+0x28>)
2ffea3a2:	6023      	str	r3, [r4, #0]
2ffea3a4:	bd10      	pop	{r4, pc}
2ffea3a6:	bf00      	nop
2ffea3a8:	2fff54cf 	.word	0x2fff54cf
2ffea3ac:	2fff931c 	.word	0x2fff931c
2ffea3b0:	2fff4484 	.word	0x2fff4484

2ffea3b4 <memmap_block_write>:
2ffea3b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffea3b8:	4615      	mov	r5, r2
2ffea3ba:	461f      	mov	r7, r3
2ffea3bc:	b918      	cbnz	r0, 2ffea3c6 <memmap_block_write+0x12>
2ffea3be:	21cb      	movs	r1, #203	@ 0xcb
2ffea3c0:	4813      	ldr	r0, [pc, #76]	@ (2ffea410 <memmap_block_write+0x5c>)
2ffea3c2:	f008 f8a9 	bl	2fff2518 <__assert>
2ffea3c6:	b90b      	cbnz	r3, 2ffea3cc <memmap_block_write+0x18>
2ffea3c8:	21cc      	movs	r1, #204	@ 0xcc
2ffea3ca:	e7f9      	b.n	2ffea3c0 <memmap_block_write+0xc>
2ffea3cc:	6844      	ldr	r4, [r0, #4]
2ffea3ce:	f04f 0800 	mov.w	r8, #0
2ffea3d2:	e9d4 0602 	ldrd	r0, r6, [r4, #8]
2ffea3d6:	eb10 0902 	adds.w	r9, r0, r2
2ffea3da:	f156 0600 	adcs.w	r6, r6, #0
2ffea3de:	bf28      	it	cs
2ffea3e0:	f04f 0801 	movcs.w	r8, #1
2ffea3e4:	f1b8 0f00 	cmp.w	r8, #0
2ffea3e8:	d104      	bne.n	2ffea3f4 <memmap_block_write+0x40>
2ffea3ea:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
2ffea3ee:	454a      	cmp	r2, r9
2ffea3f0:	41b3      	sbcs	r3, r6
2ffea3f2:	d201      	bcs.n	2ffea3f8 <memmap_block_write+0x44>
2ffea3f4:	21d2      	movs	r1, #210	@ 0xd2
2ffea3f6:	e7e3      	b.n	2ffea3c0 <memmap_block_write+0xc>
2ffea3f8:	6863      	ldr	r3, [r4, #4]
2ffea3fa:	462a      	mov	r2, r5
2ffea3fc:	4418      	add	r0, r3
2ffea3fe:	f009 fea8 	bl	2fff4152 <memcpy>
2ffea402:	603d      	str	r5, [r7, #0]
2ffea404:	4640      	mov	r0, r8
2ffea406:	e9c4 9602 	strd	r9, r6, [r4, #8]
2ffea40a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffea40e:	bf00      	nop
2ffea410:	2fff5665 	.word	0x2fff5665

2ffea414 <memmap_block_read>:
2ffea414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffea418:	468c      	mov	ip, r1
2ffea41a:	4615      	mov	r5, r2
2ffea41c:	461f      	mov	r7, r3
2ffea41e:	b918      	cbnz	r0, 2ffea428 <memmap_block_read+0x14>
2ffea420:	21af      	movs	r1, #175	@ 0xaf
2ffea422:	4814      	ldr	r0, [pc, #80]	@ (2ffea474 <memmap_block_read+0x60>)
2ffea424:	f008 f878 	bl	2fff2518 <__assert>
2ffea428:	b90b      	cbnz	r3, 2ffea42e <memmap_block_read+0x1a>
2ffea42a:	21b0      	movs	r1, #176	@ 0xb0
2ffea42c:	e7f9      	b.n	2ffea422 <memmap_block_read+0xe>
2ffea42e:	6844      	ldr	r4, [r0, #4]
2ffea430:	f04f 0800 	mov.w	r8, #0
2ffea434:	e9d4 1602 	ldrd	r1, r6, [r4, #8]
2ffea438:	eb11 0902 	adds.w	r9, r1, r2
2ffea43c:	f156 0600 	adcs.w	r6, r6, #0
2ffea440:	bf28      	it	cs
2ffea442:	f04f 0801 	movcs.w	r8, #1
2ffea446:	f1b8 0f00 	cmp.w	r8, #0
2ffea44a:	d104      	bne.n	2ffea456 <memmap_block_read+0x42>
2ffea44c:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
2ffea450:	454a      	cmp	r2, r9
2ffea452:	41b3      	sbcs	r3, r6
2ffea454:	d201      	bcs.n	2ffea45a <memmap_block_read+0x46>
2ffea456:	21b6      	movs	r1, #182	@ 0xb6
2ffea458:	e7e3      	b.n	2ffea422 <memmap_block_read+0xe>
2ffea45a:	6863      	ldr	r3, [r4, #4]
2ffea45c:	462a      	mov	r2, r5
2ffea45e:	4660      	mov	r0, ip
2ffea460:	4419      	add	r1, r3
2ffea462:	f009 fe76 	bl	2fff4152 <memcpy>
2ffea466:	603d      	str	r5, [r7, #0]
2ffea468:	4640      	mov	r0, r8
2ffea46a:	e9c4 9602 	strd	r9, r6, [r4, #8]
2ffea46e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffea472:	bf00      	nop
2ffea474:	2fff5665 	.word	0x2fff5665

2ffea478 <memmap_dev_open>:
2ffea478:	b508      	push	{r3, lr}
2ffea47a:	b919      	cbnz	r1, 2ffea484 <memmap_dev_open+0xc>
2ffea47c:	4803      	ldr	r0, [pc, #12]	@ (2ffea48c <memmap_dev_open+0x14>)
2ffea47e:	2154      	movs	r1, #84	@ 0x54
2ffea480:	f008 f84a 	bl	2fff2518 <__assert>
2ffea484:	4b02      	ldr	r3, [pc, #8]	@ (2ffea490 <memmap_dev_open+0x18>)
2ffea486:	2000      	movs	r0, #0
2ffea488:	600b      	str	r3, [r1, #0]
2ffea48a:	bd08      	pop	{r3, pc}
2ffea48c:	2fff5665 	.word	0x2fff5665
2ffea490:	2fff8048 	.word	0x2fff8048

2ffea494 <memmap_block_len>:
2ffea494:	b508      	push	{r3, lr}
2ffea496:	b918      	cbnz	r0, 2ffea4a0 <memmap_block_len+0xc>
2ffea498:	219f      	movs	r1, #159	@ 0x9f
2ffea49a:	4805      	ldr	r0, [pc, #20]	@ (2ffea4b0 <memmap_block_len+0x1c>)
2ffea49c:	f008 f83c 	bl	2fff2518 <__assert>
2ffea4a0:	b909      	cbnz	r1, 2ffea4a6 <memmap_block_len+0x12>
2ffea4a2:	21a0      	movs	r1, #160	@ 0xa0
2ffea4a4:	e7f9      	b.n	2ffea49a <memmap_block_len+0x6>
2ffea4a6:	6843      	ldr	r3, [r0, #4]
2ffea4a8:	2000      	movs	r0, #0
2ffea4aa:	691b      	ldr	r3, [r3, #16]
2ffea4ac:	600b      	str	r3, [r1, #0]
2ffea4ae:	bd08      	pop	{r3, pc}
2ffea4b0:	2fff5665 	.word	0x2fff5665

2ffea4b4 <memmap_block_seek>:
2ffea4b4:	2901      	cmp	r1, #1
2ffea4b6:	b510      	push	{r4, lr}
2ffea4b8:	d113      	bne.n	2ffea4e2 <memmap_block_seek+0x2e>
2ffea4ba:	b918      	cbnz	r0, 2ffea4c4 <memmap_block_seek+0x10>
2ffea4bc:	218b      	movs	r1, #139	@ 0x8b
2ffea4be:	480a      	ldr	r0, [pc, #40]	@ (2ffea4e8 <memmap_block_seek+0x34>)
2ffea4c0:	f008 f82a 	bl	2fff2518 <__assert>
2ffea4c4:	6841      	ldr	r1, [r0, #4]
2ffea4c6:	2b00      	cmp	r3, #0
2ffea4c8:	db05      	blt.n	2ffea4d6 <memmap_block_seek+0x22>
2ffea4ca:	e9d1 4004 	ldrd	r4, r0, [r1, #16]
2ffea4ce:	42a2      	cmp	r2, r4
2ffea4d0:	eb73 0000 	sbcs.w	r0, r3, r0
2ffea4d4:	d301      	bcc.n	2ffea4da <memmap_block_seek+0x26>
2ffea4d6:	2190      	movs	r1, #144	@ 0x90
2ffea4d8:	e7f1      	b.n	2ffea4be <memmap_block_seek+0xa>
2ffea4da:	2000      	movs	r0, #0
2ffea4dc:	e9c1 2302 	strd	r2, r3, [r1, #8]
2ffea4e0:	bd10      	pop	{r4, pc}
2ffea4e2:	f06f 0001 	mvn.w	r0, #1
2ffea4e6:	e7fb      	b.n	2ffea4e0 <memmap_block_seek+0x2c>
2ffea4e8:	2fff5665 	.word	0x2fff5665

2ffea4ec <memmap_block_close>:
2ffea4ec:	b510      	push	{r4, lr}
2ffea4ee:	b918      	cbnz	r0, 2ffea4f8 <memmap_block_close+0xc>
2ffea4f0:	4805      	ldr	r0, [pc, #20]	@ (2ffea508 <memmap_block_close+0x1c>)
2ffea4f2:	21e3      	movs	r1, #227	@ 0xe3
2ffea4f4:	f008 f810 	bl	2fff2518 <__assert>
2ffea4f8:	2400      	movs	r4, #0
2ffea4fa:	2118      	movs	r1, #24
2ffea4fc:	6044      	str	r4, [r0, #4]
2ffea4fe:	4803      	ldr	r0, [pc, #12]	@ (2ffea50c <memmap_block_close+0x20>)
2ffea500:	f7ff e86c 	blx	2ffe95dc <zero_normalmem>
2ffea504:	4620      	mov	r0, r4
2ffea506:	bd10      	pop	{r4, pc}
2ffea508:	2fff5665 	.word	0x2fff5665
2ffea50c:	2fff91f0 	.word	0x2fff91f0

2ffea510 <memmap_block_open>:
2ffea510:	b538      	push	{r3, r4, r5, lr}
2ffea512:	4b0f      	ldr	r3, [pc, #60]	@ (2ffea550 <memmap_block_open+0x40>)
2ffea514:	6818      	ldr	r0, [r3, #0]
2ffea516:	b9a0      	cbnz	r0, 2ffea542 <memmap_block_open+0x32>
2ffea518:	b919      	cbnz	r1, 2ffea522 <memmap_block_open+0x12>
2ffea51a:	2170      	movs	r1, #112	@ 0x70
2ffea51c:	480d      	ldr	r0, [pc, #52]	@ (2ffea554 <memmap_block_open+0x44>)
2ffea51e:	f007 fffb 	bl	2fff2518 <__assert>
2ffea522:	b90a      	cbnz	r2, 2ffea528 <memmap_block_open+0x18>
2ffea524:	2171      	movs	r1, #113	@ 0x71
2ffea526:	e7f9      	b.n	2ffea51c <memmap_block_open+0xc>
2ffea528:	2401      	movs	r4, #1
2ffea52a:	2500      	movs	r5, #0
2ffea52c:	601c      	str	r4, [r3, #0]
2ffea52e:	680c      	ldr	r4, [r1, #0]
2ffea530:	6849      	ldr	r1, [r1, #4]
2ffea532:	605c      	str	r4, [r3, #4]
2ffea534:	2400      	movs	r4, #0
2ffea536:	e9c3 4502 	strd	r4, r5, [r3, #8]
2ffea53a:	e9c3 1004 	strd	r1, r0, [r3, #16]
2ffea53e:	6053      	str	r3, [r2, #4]
2ffea540:	bd38      	pop	{r3, r4, r5, pc}
2ffea542:	4805      	ldr	r0, [pc, #20]	@ (2ffea558 <memmap_block_open+0x48>)
2ffea544:	f002 f8ba 	bl	2ffec6bc <tf_log>
2ffea548:	f06f 000b 	mvn.w	r0, #11
2ffea54c:	e7f8      	b.n	2ffea540 <memmap_block_open+0x30>
2ffea54e:	bf00      	nop
2ffea550:	2fff91f0 	.word	0x2fff91f0
2ffea554:	2fff5665 	.word	0x2fff5665
2ffea558:	2fff567c 	.word	0x2fff567c

2ffea55c <register_io_dev_memmap>:
2ffea55c:	b510      	push	{r4, lr}
2ffea55e:	4604      	mov	r4, r0
2ffea560:	b918      	cbnz	r0, 2ffea56a <register_io_dev_memmap+0xe>
2ffea562:	4805      	ldr	r0, [pc, #20]	@ (2ffea578 <register_io_dev_memmap+0x1c>)
2ffea564:	21f4      	movs	r1, #244	@ 0xf4
2ffea566:	f007 ffd7 	bl	2fff2518 <__assert>
2ffea56a:	4804      	ldr	r0, [pc, #16]	@ (2ffea57c <register_io_dev_memmap+0x20>)
2ffea56c:	f000 f82a 	bl	2ffea5c4 <io_register_device>
2ffea570:	b908      	cbnz	r0, 2ffea576 <register_io_dev_memmap+0x1a>
2ffea572:	4b03      	ldr	r3, [pc, #12]	@ (2ffea580 <register_io_dev_memmap+0x24>)
2ffea574:	6023      	str	r3, [r4, #0]
2ffea576:	bd10      	pop	{r4, pc}
2ffea578:	2fff5665 	.word	0x2fff5665
2ffea57c:	2fff8048 	.word	0x2fff8048
2ffea580:	2fff44ac 	.word	0x2fff44ac

2ffea584 <free_entity.isra.0>:
2ffea584:	b510      	push	{r4, lr}
2ffea586:	b918      	cbnz	r0, 2ffea590 <free_entity.isra.0+0xc>
2ffea588:	480b      	ldr	r0, [pc, #44]	@ (2ffea5b8 <free_entity.isra.0+0x34>)
2ffea58a:	2182      	movs	r1, #130	@ 0x82
2ffea58c:	f007 ffc4 	bl	2fff2518 <__assert>
2ffea590:	4a0a      	ldr	r2, [pc, #40]	@ (2ffea5bc <free_entity.isra.0+0x38>)
2ffea592:	2300      	movs	r3, #0
2ffea594:	4611      	mov	r1, r2
2ffea596:	f852 4b04 	ldr.w	r4, [r2], #4
2ffea59a:	42a0      	cmp	r0, r4
2ffea59c:	d003      	beq.n	2ffea5a6 <free_entity.isra.0+0x22>
2ffea59e:	3301      	adds	r3, #1
2ffea5a0:	2b04      	cmp	r3, #4
2ffea5a2:	d1f8      	bne.n	2ffea596 <free_entity.isra.0+0x12>
2ffea5a4:	bd10      	pop	{r4, pc}
2ffea5a6:	2200      	movs	r2, #0
2ffea5a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
2ffea5ac:	4a04      	ldr	r2, [pc, #16]	@ (2ffea5c0 <free_entity.isra.0+0x3c>)
2ffea5ae:	6813      	ldr	r3, [r2, #0]
2ffea5b0:	3b01      	subs	r3, #1
2ffea5b2:	6013      	str	r3, [r2, #0]
2ffea5b4:	e7f6      	b.n	2ffea5a4 <free_entity.isra.0+0x20>
2ffea5b6:	bf00      	nop
2ffea5b8:	2fff56ae 	.word	0x2fff56ae
2ffea5bc:	2fff933c 	.word	0x2fff933c
2ffea5c0:	2fff9338 	.word	0x2fff9338

2ffea5c4 <io_register_device>:
2ffea5c4:	b508      	push	{r3, lr}
2ffea5c6:	b918      	cbnz	r0, 2ffea5d0 <io_register_device+0xc>
2ffea5c8:	4806      	ldr	r0, [pc, #24]	@ (2ffea5e4 <io_register_device+0x20>)
2ffea5ca:	2194      	movs	r1, #148	@ 0x94
2ffea5cc:	f007 ffa4 	bl	2fff2518 <__assert>
2ffea5d0:	4a05      	ldr	r2, [pc, #20]	@ (2ffea5e8 <io_register_device+0x24>)
2ffea5d2:	6813      	ldr	r3, [r2, #0]
2ffea5d4:	2b03      	cmp	r3, #3
2ffea5d6:	bf9d      	ittte	ls
2ffea5d8:	3301      	addls	r3, #1
2ffea5da:	2000      	movls	r0, #0
2ffea5dc:	6013      	strls	r3, [r2, #0]
2ffea5de:	f06f 000b 	mvnhi.w	r0, #11
2ffea5e2:	bd08      	pop	{r3, pc}
2ffea5e4:	2fff56ae 	.word	0x2fff56ae
2ffea5e8:	2fff9334 	.word	0x2fff9334

2ffea5ec <io_dev_open>:
2ffea5ec:	4603      	mov	r3, r0
2ffea5ee:	4608      	mov	r0, r1
2ffea5f0:	b510      	push	{r4, lr}
2ffea5f2:	4611      	mov	r1, r2
2ffea5f4:	b91a      	cbnz	r2, 2ffea5fe <io_dev_open+0x12>
2ffea5f6:	21a4      	movs	r1, #164	@ 0xa4
2ffea5f8:	4805      	ldr	r0, [pc, #20]	@ (2ffea610 <io_dev_open+0x24>)
2ffea5fa:	f007 ff8d 	bl	2fff2518 <__assert>
2ffea5fe:	b123      	cbz	r3, 2ffea60a <io_dev_open+0x1e>
2ffea600:	681b      	ldr	r3, [r3, #0]
2ffea602:	b113      	cbz	r3, 2ffea60a <io_dev_open+0x1e>
2ffea604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffea608:	4718      	bx	r3
2ffea60a:	214d      	movs	r1, #77	@ 0x4d
2ffea60c:	e7f4      	b.n	2ffea5f8 <io_dev_open+0xc>
2ffea60e:	bf00      	nop
2ffea610:	2fff56ae 	.word	0x2fff56ae

2ffea614 <io_dev_init>:
2ffea614:	b570      	push	{r4, r5, r6, lr}
2ffea616:	460d      	mov	r5, r1
2ffea618:	4604      	mov	r4, r0
2ffea61a:	b918      	cbnz	r0, 2ffea624 <io_dev_init+0x10>
2ffea61c:	21ae      	movs	r1, #174	@ 0xae
2ffea61e:	4809      	ldr	r0, [pc, #36]	@ (2ffea644 <io_dev_init+0x30>)
2ffea620:	f007 ff7a 	bl	2fff2518 <__assert>
2ffea624:	f008 f9fa 	bl	2fff2a1c <is_valid_dev>
2ffea628:	b908      	cbnz	r0, 2ffea62e <io_dev_init+0x1a>
2ffea62a:	21af      	movs	r1, #175	@ 0xaf
2ffea62c:	e7f7      	b.n	2ffea61e <io_dev_init+0xa>
2ffea62e:	6823      	ldr	r3, [r4, #0]
2ffea630:	69db      	ldr	r3, [r3, #28]
2ffea632:	b123      	cbz	r3, 2ffea63e <io_dev_init+0x2a>
2ffea634:	4629      	mov	r1, r5
2ffea636:	4620      	mov	r0, r4
2ffea638:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffea63c:	4718      	bx	r3
2ffea63e:	4618      	mov	r0, r3
2ffea640:	bd70      	pop	{r4, r5, r6, pc}
2ffea642:	bf00      	nop
2ffea644:	2fff56ae 	.word	0x2fff56ae

2ffea648 <io_dev_close>:
2ffea648:	b510      	push	{r4, lr}
2ffea64a:	4604      	mov	r4, r0
2ffea64c:	b918      	cbnz	r0, 2ffea656 <io_dev_close+0xe>
2ffea64e:	21bf      	movs	r1, #191	@ 0xbf
2ffea650:	4808      	ldr	r0, [pc, #32]	@ (2ffea674 <io_dev_close+0x2c>)
2ffea652:	f007 ff61 	bl	2fff2518 <__assert>
2ffea656:	f008 f9e1 	bl	2fff2a1c <is_valid_dev>
2ffea65a:	b908      	cbnz	r0, 2ffea660 <io_dev_close+0x18>
2ffea65c:	21c0      	movs	r1, #192	@ 0xc0
2ffea65e:	e7f7      	b.n	2ffea650 <io_dev_close+0x8>
2ffea660:	6823      	ldr	r3, [r4, #0]
2ffea662:	6a1b      	ldr	r3, [r3, #32]
2ffea664:	b11b      	cbz	r3, 2ffea66e <io_dev_close+0x26>
2ffea666:	4620      	mov	r0, r4
2ffea668:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffea66c:	4718      	bx	r3
2ffea66e:	4618      	mov	r0, r3
2ffea670:	bd10      	pop	{r4, pc}
2ffea672:	bf00      	nop
2ffea674:	2fff56ae 	.word	0x2fff56ae

2ffea678 <io_open>:
2ffea678:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffea67c:	4606      	mov	r6, r0
2ffea67e:	4690      	mov	r8, r2
2ffea680:	460d      	mov	r5, r1
2ffea682:	b101      	cbz	r1, 2ffea686 <io_open+0xe>
2ffea684:	b91a      	cbnz	r2, 2ffea68e <io_open+0x16>
2ffea686:	21d4      	movs	r1, #212	@ 0xd4
2ffea688:	481c      	ldr	r0, [pc, #112]	@ (2ffea6fc <io_open+0x84>)
2ffea68a:	f007 ff45 	bl	2fff2518 <__assert>
2ffea68e:	f008 f9c5 	bl	2fff2a1c <is_valid_dev>
2ffea692:	b908      	cbnz	r0, 2ffea698 <io_open+0x20>
2ffea694:	21d5      	movs	r1, #213	@ 0xd5
2ffea696:	e7f7      	b.n	2ffea688 <io_open+0x10>
2ffea698:	4919      	ldr	r1, [pc, #100]	@ (2ffea700 <io_open+0x88>)
2ffea69a:	680b      	ldr	r3, [r1, #0]
2ffea69c:	2b03      	cmp	r3, #3
2ffea69e:	d81b      	bhi.n	2ffea6d8 <io_open+0x60>
2ffea6a0:	4a18      	ldr	r2, [pc, #96]	@ (2ffea704 <io_open+0x8c>)
2ffea6a2:	2400      	movs	r4, #0
2ffea6a4:	4610      	mov	r0, r2
2ffea6a6:	f852 7b04 	ldr.w	r7, [r2], #4
2ffea6aa:	b1c7      	cbz	r7, 2ffea6de <io_open+0x66>
2ffea6ac:	3401      	adds	r4, #1
2ffea6ae:	2c04      	cmp	r4, #4
2ffea6b0:	d1f9      	bne.n	2ffea6a6 <io_open+0x2e>
2ffea6b2:	2173      	movs	r1, #115	@ 0x73
2ffea6b4:	e7e8      	b.n	2ffea688 <io_open+0x10>
2ffea6b6:	4629      	mov	r1, r5
2ffea6b8:	463a      	mov	r2, r7
2ffea6ba:	4630      	mov	r0, r6
2ffea6bc:	4798      	blx	r3
2ffea6be:	4605      	mov	r5, r0
2ffea6c0:	b930      	cbnz	r0, 2ffea6d0 <io_open+0x58>
2ffea6c2:	f849 6034 	str.w	r6, [r9, r4, lsl #3]
2ffea6c6:	f8c8 7000 	str.w	r7, [r8]
2ffea6ca:	4628      	mov	r0, r5
2ffea6cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffea6d0:	4638      	mov	r0, r7
2ffea6d2:	f7ff ff57 	bl	2ffea584 <free_entity.isra.0>
2ffea6d6:	e7f8      	b.n	2ffea6ca <io_open+0x52>
2ffea6d8:	f06f 050b 	mvn.w	r5, #11
2ffea6dc:	e7f5      	b.n	2ffea6ca <io_open+0x52>
2ffea6de:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 2ffea708 <io_open+0x90>
2ffea6e2:	3301      	adds	r3, #1
2ffea6e4:	600b      	str	r3, [r1, #0]
2ffea6e6:	6833      	ldr	r3, [r6, #0]
2ffea6e8:	eb09 07c4 	add.w	r7, r9, r4, lsl #3
2ffea6ec:	685b      	ldr	r3, [r3, #4]
2ffea6ee:	f840 7024 	str.w	r7, [r0, r4, lsl #2]
2ffea6f2:	2b00      	cmp	r3, #0
2ffea6f4:	d1df      	bne.n	2ffea6b6 <io_open+0x3e>
2ffea6f6:	21dd      	movs	r1, #221	@ 0xdd
2ffea6f8:	e7c6      	b.n	2ffea688 <io_open+0x10>
2ffea6fa:	bf00      	nop
2ffea6fc:	2fff56ae 	.word	0x2fff56ae
2ffea700:	2fff9338 	.word	0x2fff9338
2ffea704:	2fff933c 	.word	0x2fff933c
2ffea708:	2fff934c 	.word	0x2fff934c

2ffea70c <io_seek>:
2ffea70c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffea710:	4604      	mov	r4, r0
2ffea712:	460d      	mov	r5, r1
2ffea714:	4617      	mov	r7, r2
2ffea716:	461e      	mov	r6, r3
2ffea718:	f008 f98c 	bl	2fff2a34 <is_valid_entity>
2ffea71c:	b110      	cbz	r0, 2ffea724 <io_seek+0x18>
2ffea71e:	1e6b      	subs	r3, r5, #1
2ffea720:	2b02      	cmp	r3, #2
2ffea722:	d903      	bls.n	2ffea72c <io_seek+0x20>
2ffea724:	480b      	ldr	r0, [pc, #44]	@ (2ffea754 <io_seek+0x48>)
2ffea726:	21ee      	movs	r1, #238	@ 0xee
2ffea728:	f007 fef6 	bl	2fff2518 <__assert>
2ffea72c:	6823      	ldr	r3, [r4, #0]
2ffea72e:	681b      	ldr	r3, [r3, #0]
2ffea730:	f8d3 e008 	ldr.w	lr, [r3, #8]
2ffea734:	f1be 0f00 	cmp.w	lr, #0
2ffea738:	d007      	beq.n	2ffea74a <io_seek+0x3e>
2ffea73a:	463a      	mov	r2, r7
2ffea73c:	4633      	mov	r3, r6
2ffea73e:	4629      	mov	r1, r5
2ffea740:	4620      	mov	r0, r4
2ffea742:	46f4      	mov	ip, lr
2ffea744:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffea748:	4760      	bx	ip
2ffea74a:	f06f 0012 	mvn.w	r0, #18
2ffea74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffea752:	bf00      	nop
2ffea754:	2fff56ae 	.word	0x2fff56ae

2ffea758 <io_size>:
2ffea758:	b570      	push	{r4, r5, r6, lr}
2ffea75a:	4604      	mov	r4, r0
2ffea75c:	460d      	mov	r5, r1
2ffea75e:	f008 f969 	bl	2fff2a34 <is_valid_entity>
2ffea762:	b100      	cbz	r0, 2ffea766 <io_size+0xe>
2ffea764:	b91d      	cbnz	r5, 2ffea76e <io_size+0x16>
2ffea766:	4808      	ldr	r0, [pc, #32]	@ (2ffea788 <io_size+0x30>)
2ffea768:	21ff      	movs	r1, #255	@ 0xff
2ffea76a:	f007 fed5 	bl	2fff2518 <__assert>
2ffea76e:	6823      	ldr	r3, [r4, #0]
2ffea770:	681b      	ldr	r3, [r3, #0]
2ffea772:	68db      	ldr	r3, [r3, #12]
2ffea774:	b123      	cbz	r3, 2ffea780 <io_size+0x28>
2ffea776:	4629      	mov	r1, r5
2ffea778:	4620      	mov	r0, r4
2ffea77a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffea77e:	4718      	bx	r3
2ffea780:	f06f 0012 	mvn.w	r0, #18
2ffea784:	bd70      	pop	{r4, r5, r6, pc}
2ffea786:	bf00      	nop
2ffea788:	2fff56ae 	.word	0x2fff56ae

2ffea78c <io_read>:
2ffea78c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffea790:	4604      	mov	r4, r0
2ffea792:	460d      	mov	r5, r1
2ffea794:	4616      	mov	r6, r2
2ffea796:	461f      	mov	r7, r3
2ffea798:	f008 f94c 	bl	2fff2a34 <is_valid_entity>
2ffea79c:	b920      	cbnz	r0, 2ffea7a8 <io_read+0x1c>
2ffea79e:	480c      	ldr	r0, [pc, #48]	@ (2ffea7d0 <io_read+0x44>)
2ffea7a0:	f240 1113 	movw	r1, #275	@ 0x113
2ffea7a4:	f007 feb8 	bl	2fff2518 <__assert>
2ffea7a8:	6823      	ldr	r3, [r4, #0]
2ffea7aa:	681b      	ldr	r3, [r3, #0]
2ffea7ac:	f8d3 e010 	ldr.w	lr, [r3, #16]
2ffea7b0:	f1be 0f00 	cmp.w	lr, #0
2ffea7b4:	d007      	beq.n	2ffea7c6 <io_read+0x3a>
2ffea7b6:	463b      	mov	r3, r7
2ffea7b8:	4632      	mov	r2, r6
2ffea7ba:	4629      	mov	r1, r5
2ffea7bc:	4620      	mov	r0, r4
2ffea7be:	46f4      	mov	ip, lr
2ffea7c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffea7c4:	4760      	bx	ip
2ffea7c6:	f06f 0012 	mvn.w	r0, #18
2ffea7ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffea7ce:	bf00      	nop
2ffea7d0:	2fff56ae 	.word	0x2fff56ae

2ffea7d4 <io_close>:
2ffea7d4:	b538      	push	{r3, r4, r5, lr}
2ffea7d6:	4605      	mov	r5, r0
2ffea7d8:	f008 f92c 	bl	2fff2a34 <is_valid_entity>
2ffea7dc:	b920      	cbnz	r0, 2ffea7e8 <io_close+0x14>
2ffea7de:	4808      	ldr	r0, [pc, #32]	@ (2ffea800 <io_close+0x2c>)
2ffea7e0:	f44f 719d 	mov.w	r1, #314	@ 0x13a
2ffea7e4:	f007 fe98 	bl	2fff2518 <__assert>
2ffea7e8:	682b      	ldr	r3, [r5, #0]
2ffea7ea:	681b      	ldr	r3, [r3, #0]
2ffea7ec:	699c      	ldr	r4, [r3, #24]
2ffea7ee:	b114      	cbz	r4, 2ffea7f6 <io_close+0x22>
2ffea7f0:	4628      	mov	r0, r5
2ffea7f2:	47a0      	blx	r4
2ffea7f4:	4604      	mov	r4, r0
2ffea7f6:	4628      	mov	r0, r5
2ffea7f8:	f7ff fec4 	bl	2ffea584 <free_entity.isra.0>
2ffea7fc:	4620      	mov	r0, r4
2ffea7fe:	bd38      	pop	{r3, r4, r5, pc}
2ffea800:	2fff56ae 	.word	0x2fff56ae

2ffea804 <stm32mp1_ddr_init>:
2ffea804:	68cb      	ldr	r3, [r1, #12]
2ffea806:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffea80a:	4604      	mov	r4, r0
2ffea80c:	07df      	lsls	r7, r3, #31
2ffea80e:	460d      	mov	r5, r1
2ffea810:	d507      	bpl.n	2ffea822 <stm32mp1_ddr_init+0x1e>
2ffea812:	2000      	movs	r0, #0
2ffea814:	f001 fd34 	bl	2ffec280 <stm32mp_board_ddr_power_init>
2ffea818:	b190      	cbz	r0, 2ffea840 <stm32mp1_ddr_init+0x3c>
2ffea81a:	f001 ffeb 	bl	2ffec7f4 <console_flush>
2ffea81e:	f7fe edde 	blx	2ffe93dc <do_panic>
2ffea822:	075e      	lsls	r6, r3, #29
2ffea824:	d501      	bpl.n	2ffea82a <stm32mp1_ddr_init+0x26>
2ffea826:	2001      	movs	r0, #1
2ffea828:	e7f4      	b.n	2ffea814 <stm32mp1_ddr_init+0x10>
2ffea82a:	0718      	lsls	r0, r3, #28
2ffea82c:	d501      	bpl.n	2ffea832 <stm32mp1_ddr_init+0x2e>
2ffea82e:	2002      	movs	r0, #2
2ffea830:	e7f0      	b.n	2ffea814 <stm32mp1_ddr_init+0x10>
2ffea832:	4802      	ldr	r0, [pc, #8]	@ (2ffea83c <stm32mp1_ddr_init+0x38>)
2ffea834:	f001 ff42 	bl	2ffec6bc <tf_log>
2ffea838:	e7ef      	b.n	2ffea81a <stm32mp1_ddr_init+0x16>
2ffea83a:	bf00      	nop
2ffea83c:	2fff56c6 	.word	0x2fff56c6
2ffea840:	69a3      	ldr	r3, [r4, #24]
2ffea842:	f895 115c 	ldrb.w	r1, [r5, #348]	@ 0x15c
2ffea846:	68da      	ldr	r2, [r3, #12]
2ffea848:	b119      	cbz	r1, 2ffea852 <stm32mp1_ddr_init+0x4e>
2ffea84a:	04d1      	lsls	r1, r2, #19
2ffea84c:	d409      	bmi.n	2ffea862 <stm32mp1_ddr_init+0x5e>
2ffea84e:	f885 015c 	strb.w	r0, [r5, #348]	@ 0x15c
2ffea852:	68da      	ldr	r2, [r3, #12]
2ffea854:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
2ffea858:	60da      	str	r2, [r3, #12]
2ffea85a:	68da      	ldr	r2, [r3, #12]
2ffea85c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2ffea860:	60da      	str	r2, [r3, #12]
2ffea862:	69e3      	ldr	r3, [r4, #28]
2ffea864:	4620      	mov	r0, r4
2ffea866:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea86a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
2ffea86e:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea872:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea876:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
2ffea87a:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea87e:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea882:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
2ffea886:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea88a:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea88e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
2ffea892:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea896:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea89a:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
2ffea89e:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea8a2:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea8a6:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
2ffea8aa:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea8ae:	6869      	ldr	r1, [r5, #4]
2ffea8b0:	f000 faaa 	bl	2ffeae08 <stm32mp1_ddr_clk_enable>
2ffea8b4:	4606      	mov	r6, r0
2ffea8b6:	2800      	cmp	r0, #0
2ffea8b8:	d1af      	bne.n	2ffea81a <stm32mp1_ddr_init+0x16>
2ffea8ba:	69e3      	ldr	r3, [r4, #28]
2ffea8bc:	2002      	movs	r0, #2
2ffea8be:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea8c2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
2ffea8c6:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea8ca:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea8ce:	f422 2200 	bic.w	r2, r2, #524288	@ 0x80000
2ffea8d2:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea8d6:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea8da:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
2ffea8de:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea8e2:	f002 ff71 	bl	2ffed7c8 <udelay>
2ffea8e6:	6922      	ldr	r2, [r4, #16]
2ffea8e8:	4631      	mov	r1, r6
2ffea8ea:	4620      	mov	r0, r4
2ffea8ec:	f8d2 31b0 	ldr.w	r3, [r2, #432]	@ 0x1b0
2ffea8f0:	f023 0301 	bic.w	r3, r3, #1
2ffea8f4:	f8c2 31b0 	str.w	r3, [r2, #432]	@ 0x1b0
2ffea8f8:	f105 020c 	add.w	r2, r5, #12
2ffea8fc:	4bae      	ldr	r3, [pc, #696]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea8fe:	f003 f8f1 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea902:	68ea      	ldr	r2, [r5, #12]
2ffea904:	f248 0301 	movw	r3, #32769	@ 0x8001
2ffea908:	2101      	movs	r1, #1
2ffea90a:	4620      	mov	r0, r4
2ffea90c:	4393      	bics	r3, r2
2ffea90e:	bf01      	itttt	eq
2ffea910:	6922      	ldreq	r2, [r4, #16]
2ffea912:	6813      	ldreq	r3, [r2, #0]
2ffea914:	f423 4300 	biceq.w	r3, r3, #32768	@ 0x8000
2ffea918:	6013      	streq	r3, [r2, #0]
2ffea91a:	f105 0270 	add.w	r2, r5, #112	@ 0x70
2ffea91e:	4ba6      	ldr	r3, [pc, #664]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea920:	f003 f8e0 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea924:	4ba4      	ldr	r3, [pc, #656]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea926:	f105 02a0 	add.w	r2, r5, #160	@ 0xa0
2ffea92a:	2103      	movs	r1, #3
2ffea92c:	4620      	mov	r0, r4
2ffea92e:	f003 f8d9 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea932:	f895 315c 	ldrb.w	r3, [r5, #348]	@ 0x15c
2ffea936:	6922      	ldr	r2, [r4, #16]
2ffea938:	b11b      	cbz	r3, 2ffea942 <stm32mp1_ddr_init+0x13e>
2ffea93a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
2ffea93c:	f043 0320 	orr.w	r3, r3, #32
2ffea940:	6313      	str	r3, [r2, #48]	@ 0x30
2ffea942:	f8d2 30d0 	ldr.w	r3, [r2, #208]	@ 0xd0
2ffea946:	2102      	movs	r1, #2
2ffea948:	4620      	mov	r0, r4
2ffea94a:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
2ffea94e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffea952:	f8c2 30d0 	str.w	r3, [r2, #208]	@ 0xd0
2ffea956:	f105 02c4 	add.w	r2, r5, #196	@ 0xc4
2ffea95a:	4b97      	ldr	r3, [pc, #604]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea95c:	f003 f8c2 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea960:	69e3      	ldr	r3, [r4, #28]
2ffea962:	2104      	movs	r1, #4
2ffea964:	4620      	mov	r0, r4
2ffea966:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea96a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
2ffea96e:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea972:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea976:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
2ffea97a:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea97e:	f8d3 20d8 	ldr.w	r2, [r3, #216]	@ 0xd8
2ffea982:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
2ffea986:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
2ffea98a:	f505 7284 	add.w	r2, r5, #264	@ 0x108
2ffea98e:	4b8a      	ldr	r3, [pc, #552]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea990:	f003 f8a8 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea994:	4b88      	ldr	r3, [pc, #544]	@ (2ffeabb8 <stm32mp1_ddr_init+0x3b4>)
2ffea996:	f505 729a 	add.w	r2, r5, #308	@ 0x134
2ffea99a:	2105      	movs	r1, #5
2ffea99c:	4620      	mov	r0, r4
2ffea99e:	f003 f8a1 	bl	2ffedae4 <stm32mp_ddr_set_reg>
2ffea9a2:	68ea      	ldr	r2, [r5, #12]
2ffea9a4:	f248 0301 	movw	r3, #32769	@ 0x8001
2ffea9a8:	6960      	ldr	r0, [r4, #20]
2ffea9aa:	4393      	bics	r3, r2
2ffea9ac:	bf01      	itttt	eq
2ffea9ae:	6962      	ldreq	r2, [r4, #20]
2ffea9b0:	6c53      	ldreq	r3, [r2, #68]	@ 0x44
2ffea9b2:	f023 0301 	biceq.w	r3, r3, #1
2ffea9b6:	6453      	streq	r3, [r2, #68]	@ 0x44
2ffea9b8:	f008 f855 	bl	2fff2a66 <stm32mp1_ddrphy_idone_wait>
2ffea9bc:	68eb      	ldr	r3, [r5, #12]
2ffea9be:	4a7f      	ldr	r2, [pc, #508]	@ (2ffeabbc <stm32mp1_ddr_init+0x3b8>)
2ffea9c0:	f013 0f01 	tst.w	r3, #1
2ffea9c4:	4b7e      	ldr	r3, [pc, #504]	@ (2ffeabc0 <stm32mp1_ddr_init+0x3bc>)
2ffea9c6:	bf08      	it	eq
2ffea9c8:	4613      	moveq	r3, r2
2ffea9ca:	f895 215c 	ldrb.w	r2, [r5, #348]	@ 0x15c
2ffea9ce:	b10a      	cbz	r2, 2ffea9d4 <stm32mp1_ddr_init+0x1d0>
2ffea9d0:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffea9d4:	6966      	ldr	r6, [r4, #20]
2ffea9d6:	f043 0301 	orr.w	r3, r3, #1
2ffea9da:	200a      	movs	r0, #10
2ffea9dc:	6073      	str	r3, [r6, #4]
2ffea9de:	f002 fef3 	bl	2ffed7c8 <udelay>
2ffea9e2:	4630      	mov	r0, r6
2ffea9e4:	f008 f83f 	bl	2fff2a66 <stm32mp1_ddrphy_idone_wait>
2ffea9e8:	f895 315c 	ldrb.w	r3, [r5, #348]	@ 0x15c
2ffea9ec:	b333      	cbz	r3, 2ffeaa3c <stm32mp1_ddr_init+0x238>
2ffea9ee:	6966      	ldr	r6, [r4, #20]
2ffea9f0:	200a      	movs	r0, #10
2ffea9f2:	f8d5 2160 	ldr.w	r2, [r5, #352]	@ 0x160
2ffea9f6:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffea9fa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
2ffea9fe:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffeaa02:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffeaa06:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
2ffeaa0a:	4313      	orrs	r3, r2
2ffeaa0c:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffeaa10:	69a3      	ldr	r3, [r4, #24]
2ffeaa12:	68da      	ldr	r2, [r3, #12]
2ffeaa14:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
2ffeaa18:	60da      	str	r2, [r3, #12]
2ffeaa1a:	68da      	ldr	r2, [r3, #12]
2ffeaa1c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2ffeaa20:	60da      	str	r2, [r3, #12]
2ffeaa22:	f8d6 3180 	ldr.w	r3, [r6, #384]	@ 0x180
2ffeaa26:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
2ffeaa2a:	f8c6 3180 	str.w	r3, [r6, #384]	@ 0x180
2ffeaa2e:	2309      	movs	r3, #9
2ffeaa30:	6073      	str	r3, [r6, #4]
2ffeaa32:	f002 fec9 	bl	2ffed7c8 <udelay>
2ffeaa36:	4630      	mov	r0, r6
2ffeaa38:	f008 f815 	bl	2fff2a66 <stm32mp1_ddrphy_idone_wait>
2ffeaa3c:	6920      	ldr	r0, [r4, #16]
2ffeaa3e:	f008 fb9f 	bl	2fff3180 <stm32mp_ddr_start_sw_done>
2ffeaa42:	6920      	ldr	r0, [r4, #16]
2ffeaa44:	f8d0 31b0 	ldr.w	r3, [r0, #432]	@ 0x1b0
2ffeaa48:	f043 0301 	orr.w	r3, r3, #1
2ffeaa4c:	f8c0 31b0 	str.w	r3, [r0, #432]	@ 0x1b0
2ffeaa50:	f008 fb9d 	bl	2fff318e <stm32mp_ddr_wait_sw_done_ack>
2ffeaa54:	f895 315c 	ldrb.w	r3, [r5, #348]	@ 0x15c
2ffeaa58:	b113      	cbz	r3, 2ffeaa60 <stm32mp1_ddr_init+0x25c>
2ffeaa5a:	6920      	ldr	r0, [r4, #16]
2ffeaa5c:	f008 fc10 	bl	2fff3280 <stm32mp_ddr_sw_selfref_exit>
2ffeaa60:	2101      	movs	r1, #1
2ffeaa62:	4620      	mov	r0, r4
2ffeaa64:	f008 f81c 	bl	2fff2aa0 <stm32mp1_wait_operating_mode>
2ffeaa68:	68eb      	ldr	r3, [r5, #12]
2ffeaa6a:	041a      	lsls	r2, r3, #16
2ffeaa6c:	d565      	bpl.n	2ffeab3a <stm32mp1_ddr_init+0x336>
2ffeaa6e:	6963      	ldr	r3, [r4, #20]
2ffeaa70:	6920      	ldr	r0, [r4, #16]
2ffeaa72:	6c5e      	ldr	r6, [r3, #68]	@ 0x44
2ffeaa74:	6c9f      	ldr	r7, [r3, #72]	@ 0x48
2ffeaa76:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2ffeaa7a:	4a52      	ldr	r2, [pc, #328]	@ (2ffeabc4 <stm32mp1_ddr_init+0x3c0>)
2ffeaa7c:	f043 0302 	orr.w	r3, r3, #2
2ffeaa80:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2ffeaa84:	f8d0 3308 	ldr.w	r3, [r0, #776]	@ 0x308
2ffeaa88:	4013      	ands	r3, r2
2ffeaa8a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
2ffeaa8e:	d0f9      	beq.n	2ffeaa84 <stm32mp1_ddr_init+0x280>
2ffeaa90:	f426 7611 	bic.w	r6, r6, #580	@ 0x244
2ffeaa94:	2101      	movs	r1, #1
2ffeaa96:	4632      	mov	r2, r6
2ffeaa98:	f007 ffd4 	bl	2fff2a44 <stm32mp1_mode_register_write.isra.0>
2ffeaa9c:	f427 62c0 	bic.w	r2, r7, #1536	@ 0x600
2ffeaaa0:	2102      	movs	r1, #2
2ffeaaa2:	f007 ffcf 	bl	2fff2a44 <stm32mp1_mode_register_write.isra.0>
2ffeaaa6:	f046 0201 	orr.w	r2, r6, #1
2ffeaaaa:	2101      	movs	r1, #1
2ffeaaac:	f007 ffca 	bl	2fff2a44 <stm32mp1_mode_register_write.isra.0>
2ffeaab0:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffeaab2:	2103      	movs	r1, #3
2ffeaab4:	f043 0320 	orr.w	r3, r3, #32
2ffeaab8:	6303      	str	r3, [r0, #48]	@ 0x30
2ffeaaba:	4620      	mov	r0, r4
2ffeaabc:	f007 fff0 	bl	2fff2aa0 <stm32mp1_wait_operating_mode>
2ffeaac0:	6920      	ldr	r0, [r4, #16]
2ffeaac2:	f008 fb5d 	bl	2fff3180 <stm32mp_ddr_start_sw_done>
2ffeaac6:	6920      	ldr	r0, [r4, #16]
2ffeaac8:	6803      	ldr	r3, [r0, #0]
2ffeaaca:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
2ffeaace:	6003      	str	r3, [r0, #0]
2ffeaad0:	f008 fb5d 	bl	2fff318e <stm32mp_ddr_wait_sw_done_ack>
2ffeaad4:	20e0      	movs	r0, #224	@ 0xe0
2ffeaad6:	f002 fe3b 	bl	2ffed750 <clk_get_rate>
2ffeaada:	4b3b      	ldr	r3, [pc, #236]	@ (2ffeabc8 <stm32mp1_ddr_init+0x3c4>)
2ffeaadc:	4298      	cmp	r0, r3
2ffeaade:	6963      	ldr	r3, [r4, #20]
2ffeaae0:	6920      	ldr	r0, [r4, #16]
2ffeaae2:	691a      	ldr	r2, [r3, #16]
2ffeaae4:	bf94      	ite	ls
2ffeaae6:	f422 0200 	bicls.w	r2, r2, #8388608	@ 0x800000
2ffeaaea:	f442 0200 	orrhi.w	r2, r2, #8388608	@ 0x800000
2ffeaaee:	611a      	str	r2, [r3, #16]
2ffeaaf0:	695a      	ldr	r2, [r3, #20]
2ffeaaf2:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffeaaf6:	615a      	str	r2, [r3, #20]
2ffeaaf8:	f8d3 21cc 	ldr.w	r2, [r3, #460]	@ 0x1cc
2ffeaafc:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffeab00:	f8c3 21cc 	str.w	r2, [r3, #460]	@ 0x1cc
2ffeab04:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
2ffeab08:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffeab0c:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
2ffeab10:	f8d3 224c 	ldr.w	r2, [r3, #588]	@ 0x24c
2ffeab14:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffeab18:	f8c3 224c 	str.w	r2, [r3, #588]	@ 0x24c
2ffeab1c:	f8d3 228c 	ldr.w	r2, [r3, #652]	@ 0x28c
2ffeab20:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
2ffeab24:	f8c3 228c 	str.w	r2, [r3, #652]	@ 0x28c
2ffeab28:	f008 fbaa 	bl	2fff3280 <stm32mp_ddr_sw_selfref_exit>
2ffeab2c:	4620      	mov	r0, r4
2ffeab2e:	2101      	movs	r1, #1
2ffeab30:	f007 ffb6 	bl	2fff2aa0 <stm32mp1_wait_operating_mode>
2ffeab34:	6920      	ldr	r0, [r4, #16]
2ffeab36:	f008 fb77 	bl	2fff3228 <stm32mp_ddr_enable_host_interface>
2ffeab3a:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffeab3e:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffeab42:	6926      	ldr	r6, [r4, #16]
2ffeab44:	4689      	mov	r9, r1
2ffeab46:	9001      	str	r0, [sp, #4]
2ffeab48:	4630      	mov	r0, r6
2ffeab4a:	f008 fb74 	bl	2fff3236 <stm32mp_ddr_disable_host_interface>
2ffeab4e:	4630      	mov	r0, r6
2ffeab50:	f008 fb16 	bl	2fff3180 <stm32mp_ddr_start_sw_done>
2ffeab54:	6e32      	ldr	r2, [r6, #96]	@ 0x60
2ffeab56:	4630      	mov	r0, r6
2ffeab58:	f042 0201 	orr.w	r2, r2, #1
2ffeab5c:	6632      	str	r2, [r6, #96]	@ 0x60
2ffeab5e:	f008 fb94 	bl	2fff328a <stm32mp_ddr_wait_refresh_update_done_ack>
2ffeab62:	6b32      	ldr	r2, [r6, #48]	@ 0x30
2ffeab64:	4630      	mov	r0, r6
2ffeab66:	f022 0203 	bic.w	r2, r2, #3
2ffeab6a:	6332      	str	r2, [r6, #48]	@ 0x30
2ffeab6c:	f8d6 21b0 	ldr.w	r2, [r6, #432]	@ 0x1b0
2ffeab70:	f022 0201 	bic.w	r2, r2, #1
2ffeab74:	f8c6 21b0 	str.w	r2, [r6, #432]	@ 0x1b0
2ffeab78:	f008 fb09 	bl	2fff318e <stm32mp_ddr_wait_sw_done_ack>
2ffeab7c:	4630      	mov	r0, r6
2ffeab7e:	f008 fb53 	bl	2fff3228 <stm32mp_ddr_enable_host_interface>
2ffeab82:	68ea      	ldr	r2, [r5, #12]
2ffeab84:	200a      	movs	r0, #10
2ffeab86:	6966      	ldr	r6, [r4, #20]
2ffeab88:	f012 0f01 	tst.w	r2, #1
2ffeab8c:	bf0c      	ite	eq
2ffeab8e:	f44f 72c0 	moveq.w	r2, #384	@ 0x180
2ffeab92:	2280      	movne	r2, #128	@ 0x80
2ffeab94:	f042 0201 	orr.w	r2, r2, #1
2ffeab98:	6072      	str	r2, [r6, #4]
2ffeab9a:	f002 fe15 	bl	2ffed7c8 <udelay>
2ffeab9e:	4630      	mov	r0, r6
2ffeaba0:	f007 ff61 	bl	2fff2a66 <stm32mp1_ddrphy_idone_wait>
2ffeaba4:	6960      	ldr	r0, [r4, #20]
2ffeaba6:	f007 ff5e 	bl	2fff2a66 <stm32mp1_ddrphy_idone_wait>
2ffeabaa:	f895 215c 	ldrb.w	r2, [r5, #348]	@ 0x15c
2ffeabae:	6926      	ldr	r6, [r4, #16]
2ffeabb0:	9b01      	ldr	r3, [sp, #4]
2ffeabb2:	2a00      	cmp	r2, #0
2ffeabb4:	d139      	bne.n	2ffeac2a <stm32mp1_ddr_init+0x426>
2ffeabb6:	e009      	b.n	2ffeabcc <stm32mp1_ddr_init+0x3c8>
2ffeabb8:	2fff44b0 	.word	0x2fff44b0
2ffeabbc:	0001005e 	.word	0x0001005e
2ffeabc0:	0001007e 	.word	0x0001007e
2ffeabc4:	34001f1f 	.word	0x34001f1f
2ffeabc8:	05f5e0ff 	.word	0x05f5e0ff
2ffeabcc:	6b2f      	ldr	r7, [r5, #48]	@ 0x30
2ffeabce:	4630      	mov	r0, r6
2ffeabd0:	6a2d      	ldr	r5, [r5, #32]
2ffeabd2:	f008 fb30 	bl	2fff3236 <stm32mp_ddr_disable_host_interface>
2ffeabd6:	4630      	mov	r0, r6
2ffeabd8:	f008 fad2 	bl	2fff3180 <stm32mp_ddr_start_sw_done>
2ffeabdc:	07fb      	lsls	r3, r7, #31
2ffeabde:	d406      	bmi.n	2ffeabee <stm32mp1_ddr_init+0x3ea>
2ffeabe0:	6e33      	ldr	r3, [r6, #96]	@ 0x60
2ffeabe2:	4630      	mov	r0, r6
2ffeabe4:	f023 0301 	bic.w	r3, r3, #1
2ffeabe8:	6633      	str	r3, [r6, #96]	@ 0x60
2ffeabea:	f008 fb4e 	bl	2fff328a <stm32mp_ddr_wait_refresh_update_done_ack>
2ffeabee:	07aa      	lsls	r2, r5, #30
2ffeabf0:	4630      	mov	r0, r6
2ffeabf2:	bf42      	ittt	mi
2ffeabf4:	6b33      	ldrmi	r3, [r6, #48]	@ 0x30
2ffeabf6:	f043 0302 	orrmi.w	r3, r3, #2
2ffeabfa:	6333      	strmi	r3, [r6, #48]	@ 0x30
2ffeabfc:	07eb      	lsls	r3, r5, #31
2ffeabfe:	bf42      	ittt	mi
2ffeac00:	6b33      	ldrmi	r3, [r6, #48]	@ 0x30
2ffeac02:	f043 0301 	orrmi.w	r3, r3, #1
2ffeac06:	6333      	strmi	r3, [r6, #48]	@ 0x30
2ffeac08:	f8d6 31b0 	ldr.w	r3, [r6, #432]	@ 0x1b0
2ffeac0c:	f043 0301 	orr.w	r3, r3, #1
2ffeac10:	f8c6 31b0 	str.w	r3, [r6, #432]	@ 0x1b0
2ffeac14:	f008 fabb 	bl	2fff318e <stm32mp_ddr_wait_sw_done_ack>
2ffeac18:	4630      	mov	r0, r6
2ffeac1a:	f008 fb05 	bl	2fff3228 <stm32mp_ddr_enable_host_interface>
2ffeac1e:	6920      	ldr	r0, [r4, #16]
2ffeac20:	b003      	add	sp, #12
2ffeac22:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeac26:	f008 bacf 	b.w	2fff31c8 <stm32mp_ddr_enable_axi_port>
2ffeac2a:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffeac2e:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffeac32:	491c      	ldr	r1, [pc, #112]	@ (2ffeaca4 <stm32mp1_ddr_init+0x4a0>)
2ffeac34:	686a      	ldr	r2, [r5, #4]
2ffeac36:	428a      	cmp	r2, r1
2ffeac38:	d8c8      	bhi.n	2ffeabcc <stm32mp1_ddr_init+0x3c8>
2ffeac3a:	6e77      	ldr	r7, [r6, #100]	@ 0x64
2ffeac3c:	f3c7 470b 	ubfx	r7, r7, #16, #12
2ffeac40:	ea4f 1847 	mov.w	r8, r7, lsl #5
2ffeac44:	2f00      	cmp	r7, #0
2ffeac46:	d0c1      	beq.n	2ffeabcc <stm32mp1_ddr_init+0x3c8>
2ffeac48:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 2ffeaca8 <stm32mp1_ddr_init+0x4a4>
2ffeac4c:	2700      	movs	r7, #0
2ffeac4e:	ebba 0003 	subs.w	r0, sl, r3
2ffeac52:	463b      	mov	r3, r7
2ffeac54:	fba0 0e0c 	umull	r0, lr, r0, ip
2ffeac58:	eb6b 0909 	sbc.w	r9, fp, r9
2ffeac5c:	fbb1 f2f2 	udiv	r2, r1, r2
2ffeac60:	fb0c e109 	mla	r1, ip, r9, lr
2ffeac64:	f007 eaf4 	blx	2fff2250 <__aeabi_uldivmod>
2ffeac68:	f118 33ff 	adds.w	r3, r8, #4294967295	@ 0xffffffff
2ffeac6c:	4642      	mov	r2, r8
2ffeac6e:	18c0      	adds	r0, r0, r3
2ffeac70:	463b      	mov	r3, r7
2ffeac72:	f141 0100 	adc.w	r1, r1, #0
2ffeac76:	f007 eaec 	blx	2fff2250 <__aeabi_uldivmod>
2ffeac7a:	463b      	mov	r3, r7
2ffeac7c:	463a      	mov	r2, r7
2ffeac7e:	4291      	cmp	r1, r2
2ffeac80:	bf08      	it	eq
2ffeac82:	4298      	cmpeq	r0, r3
2ffeac84:	d0a2      	beq.n	2ffeabcc <stm32mp1_ddr_init+0x3c8>
2ffeac86:	f8d6 7310 	ldr.w	r7, [r6, #784]	@ 0x310
2ffeac8a:	07ff      	lsls	r7, r7, #31
2ffeac8c:	d4fb      	bmi.n	2ffeac86 <stm32mp1_ddr_init+0x482>
2ffeac8e:	f8d6 730c 	ldr.w	r7, [r6, #780]	@ 0x30c
2ffeac92:	3301      	adds	r3, #1
2ffeac94:	f142 0200 	adc.w	r2, r2, #0
2ffeac98:	f047 0701 	orr.w	r7, r7, #1
2ffeac9c:	f8c6 730c 	str.w	r7, [r6, #780]	@ 0x30c
2ffeaca0:	e7ed      	b.n	2ffeac7e <stm32mp1_ddr_init+0x47a>
2ffeaca2:	bf00      	nop
2ffeaca4:	3b9aca00 	.word	0x3b9aca00
2ffeaca8:	000f4240 	.word	0x000f4240

2ffeacac <stm32mp1_ddr_setup>:
2ffeacac:	b570      	push	{r4, r5, r6, lr}
2ffeacae:	b0ee      	sub	sp, #440	@ 0x1b8
2ffeacb0:	494a      	ldr	r1, [pc, #296]	@ (2ffeaddc <stm32mp1_ddr_setup+0x130>)
2ffeacb2:	2248      	movs	r2, #72	@ 0x48
2ffeacb4:	a803      	add	r0, sp, #12
2ffeacb6:	f009 fa4c 	bl	2fff4152 <memcpy>
2ffeacba:	a802      	add	r0, sp, #8
2ffeacbc:	f003 fe52 	bl	2ffee964 <fdt_get_address>
2ffeacc0:	2800      	cmp	r0, #0
2ffeacc2:	f000 8087 	beq.w	2ffeadd4 <stm32mp1_ddr_setup+0x128>
2ffeacc6:	4a46      	ldr	r2, [pc, #280]	@ (2ffeade0 <stm32mp1_ddr_setup+0x134>)
2ffeacc8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeaccc:	9802      	ldr	r0, [sp, #8]
2ffeacce:	f009 fa09 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeacd2:	1e06      	subs	r6, r0, #0
2ffeacd4:	da08      	bge.n	2ffeace8 <stm32mp1_ddr_setup+0x3c>
2ffeacd6:	4943      	ldr	r1, [pc, #268]	@ (2ffeade4 <stm32mp1_ddr_setup+0x138>)
2ffeacd8:	f06f 0415 	mvn.w	r4, #21
2ffeacdc:	4842      	ldr	r0, [pc, #264]	@ (2ffeade8 <stm32mp1_ddr_setup+0x13c>)
2ffeacde:	f001 fced 	bl	2ffec6bc <tf_log>
2ffeace2:	4620      	mov	r0, r4
2ffeace4:	b06e      	add	sp, #440	@ 0x1b8
2ffeace6:	bd70      	pop	{r4, r5, r6, pc}
2ffeace8:	9802      	ldr	r0, [sp, #8]
2ffeacea:	ad15      	add	r5, sp, #84	@ 0x54
2ffeacec:	462a      	mov	r2, r5
2ffeacee:	4631      	mov	r1, r6
2ffeacf0:	f000 f8d0 	bl	2ffeae94 <stm32mp_ddr_dt_get_info>
2ffeacf4:	1e04      	subs	r4, r0, #0
2ffeacf6:	dbf4      	blt.n	2ffeace2 <stm32mp1_ddr_setup+0x36>
2ffeacf8:	9802      	ldr	r0, [sp, #8]
2ffeacfa:	2306      	movs	r3, #6
2ffeacfc:	9500      	str	r5, [sp, #0]
2ffeacfe:	aa03      	add	r2, sp, #12
2ffead00:	4631      	mov	r1, r6
2ffead02:	f000 f8ef 	bl	2ffeaee4 <stm32mp_ddr_dt_get_param>
2ffead06:	1e04      	subs	r4, r0, #0
2ffead08:	dbeb      	blt.n	2ffeace2 <stm32mp1_ddr_setup+0x36>
2ffead0a:	2300      	movs	r3, #0
2ffead0c:	f885 315c 	strb.w	r3, [r5, #348]	@ 0x15c
2ffead10:	f008 fb4c 	bl	2fff33ac <stm32mp_is_wakeup_from_standby>
2ffead14:	b130      	cbz	r0, 2ffead24 <stm32mp1_ddr_setup+0x78>
2ffead16:	2301      	movs	r3, #1
2ffead18:	f885 315c 	strb.w	r3, [r5, #348]	@ 0x15c
2ffead1c:	f008 fde9 	bl	2fff38f2 <stm32_get_zdata_from_context>
2ffead20:	f8c5 0160 	str.w	r0, [r5, #352]	@ 0x160
2ffead24:	4c31      	ldr	r4, [pc, #196]	@ (2ffeadec <stm32mp1_ddr_setup+0x140>)
2ffead26:	4629      	mov	r1, r5
2ffead28:	69e2      	ldr	r2, [r4, #28]
2ffead2a:	4620      	mov	r0, r4
2ffead2c:	f8d2 30d8 	ldr.w	r3, [r2, #216]	@ 0xd8
2ffead30:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2ffead34:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
2ffead38:	f7ff fd64 	bl	2ffea804 <stm32mp1_ddr_init>
2ffead3c:	69e2      	ldr	r2, [r4, #28]
2ffead3e:	f8d2 30d8 	ldr.w	r3, [r2, #216]	@ 0xd8
2ffead42:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffead46:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
2ffead4a:	68ab      	ldr	r3, [r5, #8]
2ffead4c:	60a3      	str	r3, [r4, #8]
2ffead4e:	2300      	movs	r3, #0
2ffead50:	60e3      	str	r3, [r4, #12]
2ffead52:	f008 f8f0 	bl	2fff2f36 <stm32mp_map_ddr_non_cacheable>
2ffead56:	b118      	cbz	r0, 2ffead60 <stm32mp1_ddr_setup+0xb4>
2ffead58:	f001 fd4c 	bl	2ffec7f4 <console_flush>
2ffead5c:	f7fe eb3e 	blx	2ffe93dc <do_panic>
2ffead60:	f895 315c 	ldrb.w	r3, [r5, #348]	@ 0x15c
2ffead64:	b1d3      	cbz	r3, 2ffead9c <stm32mp1_ddr_setup+0xf0>
2ffead66:	f007 feda 	bl	2fff2b1e <stm32mp_ddr_test_rw_access>
2ffead6a:	4601      	mov	r1, r0
2ffead6c:	b118      	cbz	r0, 2ffead76 <stm32mp1_ddr_setup+0xca>
2ffead6e:	4820      	ldr	r0, [pc, #128]	@ (2ffeadf0 <stm32mp1_ddr_setup+0x144>)
2ffead70:	f001 fca4 	bl	2ffec6bc <tf_log>
2ffead74:	e7f0      	b.n	2ffead58 <stm32mp1_ddr_setup+0xac>
2ffead76:	f005 ffeb 	bl	2fff0d50 <stm32_restore_ddr_training_area>
2ffead7a:	f004 fe31 	bl	2ffef9e0 <ddr_read_sr_mode>
2ffead7e:	f004 fe3b 	bl	2ffef9f8 <ddr_set_sr_mode>
2ffead82:	f008 f8e7 	bl	2fff2f54 <stm32mp_unmap_ddr>
2ffead86:	4604      	mov	r4, r0
2ffead88:	2800      	cmp	r0, #0
2ffead8a:	d1e5      	bne.n	2ffead58 <stm32mp1_ddr_setup+0xac>
2ffead8c:	4819      	ldr	r0, [pc, #100]	@ (2ffeadf4 <stm32mp1_ddr_setup+0x148>)
2ffead8e:	2101      	movs	r1, #1
2ffead90:	f895 315c 	ldrb.w	r3, [r5, #348]	@ 0x15c
2ffead94:	7003      	strb	r3, [r0, #0]
2ffead96:	f7fe eb5a 	blx	2ffe944c <flush_dcache_range>
2ffead9a:	e7a2      	b.n	2ffeace2 <stm32mp1_ddr_setup+0x36>
2ffead9c:	f007 fecc 	bl	2fff2b38 <stm32mp_ddr_test_data_bus>
2ffeada0:	4601      	mov	r1, r0
2ffeada2:	b108      	cbz	r0, 2ffeada8 <stm32mp1_ddr_setup+0xfc>
2ffeada4:	4814      	ldr	r0, [pc, #80]	@ (2ffeadf8 <stm32mp1_ddr_setup+0x14c>)
2ffeada6:	e7e3      	b.n	2ffead70 <stm32mp1_ddr_setup+0xc4>
2ffeada8:	68a8      	ldr	r0, [r5, #8]
2ffeadaa:	f007 fed4 	bl	2fff2b56 <stm32mp_ddr_test_addr_bus>
2ffeadae:	4601      	mov	r1, r0
2ffeadb0:	b108      	cbz	r0, 2ffeadb6 <stm32mp1_ddr_setup+0x10a>
2ffeadb2:	4812      	ldr	r0, [pc, #72]	@ (2ffeadfc <stm32mp1_ddr_setup+0x150>)
2ffeadb4:	e7dc      	b.n	2ffead70 <stm32mp1_ddr_setup+0xc4>
2ffeadb6:	f007 ff11 	bl	2fff2bdc <stm32mp_ddr_check_size>
2ffeadba:	68aa      	ldr	r2, [r5, #8]
2ffeadbc:	4601      	mov	r1, r0
2ffeadbe:	4282      	cmp	r2, r0
2ffeadc0:	d903      	bls.n	2ffeadca <stm32mp1_ddr_setup+0x11e>
2ffeadc2:	480f      	ldr	r0, [pc, #60]	@ (2ffeae00 <stm32mp1_ddr_setup+0x154>)
2ffeadc4:	f001 fc7a 	bl	2ffec6bc <tf_log>
2ffeadc8:	e7c6      	b.n	2ffead58 <stm32mp1_ddr_setup+0xac>
2ffeadca:	0d02      	lsrs	r2, r0, #20
2ffeadcc:	480d      	ldr	r0, [pc, #52]	@ (2ffeae04 <stm32mp1_ddr_setup+0x158>)
2ffeadce:	f001 fc75 	bl	2ffec6bc <tf_log>
2ffeadd2:	e7d2      	b.n	2ffead7a <stm32mp1_ddr_setup+0xce>
2ffeadd4:	f06f 0401 	mvn.w	r4, #1
2ffeadd8:	e783      	b.n	2ffeace2 <stm32mp1_ddr_setup+0x36>
2ffeadda:	bf00      	nop
2ffeaddc:	2fff4510 	.word	0x2fff4510
2ffeade0:	2fff56e6 	.word	0x2fff56e6
2ffeade4:	2fff5824 	.word	0x2fff5824
2ffeade8:	2fff56f6 	.word	0x2fff56f6
2ffeadec:	2fff9208 	.word	0x2fff9208
2ffeadf0:	2fff5717 	.word	0x2fff5717
2ffeadf4:	2fff9a28 	.word	0x2fff9a28
2ffeadf8:	2fff5742 	.word	0x2fff5742
2ffeadfc:	2fff5773 	.word	0x2fff5773
2ffeae00:	2fff57a4 	.word	0x2fff57a4
2ffeae04:	2fff57d6 	.word	0x2fff57d6

2ffeae08 <stm32mp1_ddr_clk_enable>:
2ffeae08:	b510      	push	{r4, lr}
2ffeae0a:	460c      	mov	r4, r1
2ffeae0c:	f008 fae8 	bl	2fff33e0 <ddr_enable_clock>
2ffeae10:	20e0      	movs	r0, #224	@ 0xe0
2ffeae12:	f002 fc9d 	bl	2ffed750 <clk_get_rate>
2ffeae16:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffeae1a:	210a      	movs	r1, #10
2ffeae1c:	4363      	muls	r3, r4
2ffeae1e:	4298      	cmp	r0, r3
2ffeae20:	bf8c      	ite	hi
2ffeae22:	1ac2      	subhi	r2, r0, r3
2ffeae24:	1a1a      	subls	r2, r3, r0
2ffeae26:	fbb3 f3f1 	udiv	r3, r3, r1
2ffeae2a:	429a      	cmp	r2, r3
2ffeae2c:	d90a      	bls.n	2ffeae44 <stm32mp1_ddr_clk_enable+0x3c>
2ffeae2e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
2ffeae32:	4621      	mov	r1, r4
2ffeae34:	fbb0 f2f2 	udiv	r2, r0, r2
2ffeae38:	4803      	ldr	r0, [pc, #12]	@ (2ffeae48 <stm32mp1_ddr_clk_enable+0x40>)
2ffeae3a:	f001 fc3f 	bl	2ffec6bc <tf_log>
2ffeae3e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeae42:	bd10      	pop	{r4, pc}
2ffeae44:	2000      	movs	r0, #0
2ffeae46:	e7fc      	b.n	2ffeae42 <stm32mp1_ddr_clk_enable+0x3a>
2ffeae48:	2fff57f5 	.word	0x2fff57f5

2ffeae4c <stm32mp1_ddr_is_restored>:
2ffeae4c:	4b01      	ldr	r3, [pc, #4]	@ (2ffeae54 <stm32mp1_ddr_is_restored+0x8>)
2ffeae4e:	7818      	ldrb	r0, [r3, #0]
2ffeae50:	4770      	bx	lr
2ffeae52:	bf00      	nop
2ffeae54:	2fff9a28 	.word	0x2fff9a28

2ffeae58 <stm32mp1_ddr_probe>:
2ffeae58:	b510      	push	{r4, lr}
2ffeae5a:	f001 fd9b 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffeae5e:	4c0c      	ldr	r4, [pc, #48]	@ (2ffeae90 <stm32mp1_ddr_probe+0x38>)
2ffeae60:	6120      	str	r0, [r4, #16]
2ffeae62:	f001 fd9b 	bl	2ffec99c <stm32mp_ddrphyc_base>
2ffeae66:	6160      	str	r0, [r4, #20]
2ffeae68:	f001 fd9c 	bl	2ffec9a4 <stm32mp_pwr_base>
2ffeae6c:	61a0      	str	r0, [r4, #24]
2ffeae6e:	f008 f857 	bl	2fff2f20 <stm32mp_rcc_base>
2ffeae72:	61e0      	str	r0, [r4, #28]
2ffeae74:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffeae78:	2300      	movs	r3, #0
2ffeae7a:	e9c4 2300 	strd	r2, r3, [r4]
2ffeae7e:	2200      	movs	r2, #0
2ffeae80:	2300      	movs	r3, #0
2ffeae82:	e9c4 2302 	strd	r2, r3, [r4, #8]
2ffeae86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeae8a:	f7ff bf0f 	b.w	2ffeacac <stm32mp1_ddr_setup>
2ffeae8e:	bf00      	nop
2ffeae90:	2fff9208 	.word	0x2fff9208

2ffeae94 <stm32mp_ddr_dt_get_info>:
2ffeae94:	b570      	push	{r4, r5, r6, lr}
2ffeae96:	1d13      	adds	r3, r2, #4
2ffeae98:	4614      	mov	r4, r2
2ffeae9a:	4605      	mov	r5, r0
2ffeae9c:	4a0e      	ldr	r2, [pc, #56]	@ (2ffeaed8 <stm32mp_ddr_dt_get_info+0x44>)
2ffeae9e:	460e      	mov	r6, r1
2ffeaea0:	f007 fd8e 	bl	2fff29c0 <fdt_read_uint32>
2ffeaea4:	2800      	cmp	r0, #0
2ffeaea6:	da02      	bge.n	2ffeaeae <stm32mp_ddr_dt_get_info+0x1a>
2ffeaea8:	f06f 0015 	mvn.w	r0, #21
2ffeaeac:	bd70      	pop	{r4, r5, r6, pc}
2ffeaeae:	f003 fe61 	bl	2ffeeb74 <dt_get_ddr_size>
2ffeaeb2:	60a0      	str	r0, [r4, #8]
2ffeaeb4:	2800      	cmp	r0, #0
2ffeaeb6:	d0f7      	beq.n	2ffeaea8 <stm32mp_ddr_dt_get_info+0x14>
2ffeaeb8:	4a08      	ldr	r2, [pc, #32]	@ (2ffeaedc <stm32mp_ddr_dt_get_info+0x48>)
2ffeaeba:	4631      	mov	r1, r6
2ffeaebc:	2300      	movs	r3, #0
2ffeaebe:	4628      	mov	r0, r5
2ffeaec0:	f008 ffdc 	bl	2fff3e7c <fdt_getprop>
2ffeaec4:	6020      	str	r0, [r4, #0]
2ffeaec6:	4601      	mov	r1, r0
2ffeaec8:	2800      	cmp	r0, #0
2ffeaeca:	d0ed      	beq.n	2ffeaea8 <stm32mp_ddr_dt_get_info+0x14>
2ffeaecc:	4804      	ldr	r0, [pc, #16]	@ (2ffeaee0 <stm32mp_ddr_dt_get_info+0x4c>)
2ffeaece:	f001 fbf5 	bl	2ffec6bc <tf_log>
2ffeaed2:	2000      	movs	r0, #0
2ffeaed4:	e7ea      	b.n	2ffeaeac <stm32mp_ddr_dt_get_info+0x18>
2ffeaed6:	bf00      	nop
2ffeaed8:	2fff5880 	.word	0x2fff5880
2ffeaedc:	2fff588d 	.word	0x2fff588d
2ffeaee0:	2fff5899 	.word	0x2fff5899

2ffeaee4 <stm32mp_ddr_dt_get_param>:
2ffeaee4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffeaee8:	4680      	mov	r8, r0
2ffeaeea:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
2ffeaeec:	468a      	mov	sl, r1
2ffeaeee:	461e      	mov	r6, r3
2ffeaef0:	4614      	mov	r4, r2
2ffeaef2:	2700      	movs	r7, #0
2ffeaef4:	42b7      	cmp	r7, r6
2ffeaef6:	d101      	bne.n	2ffeaefc <stm32mp_ddr_dt_get_param+0x18>
2ffeaef8:	2000      	movs	r0, #0
2ffeaefa:	e014      	b.n	2ffeaf26 <stm32mp_ddr_dt_get_param+0x42>
2ffeaefc:	6863      	ldr	r3, [r4, #4]
2ffeaefe:	46a1      	mov	r9, r4
2ffeaf00:	4651      	mov	r1, sl
2ffeaf02:	4640      	mov	r0, r8
2ffeaf04:	442b      	add	r3, r5
2ffeaf06:	9300      	str	r3, [sp, #0]
2ffeaf08:	68a3      	ldr	r3, [r4, #8]
2ffeaf0a:	f854 2b0c 	ldr.w	r2, [r4], #12
2ffeaf0e:	f7fe ffcb 	bl	2ffe9ea8 <fdt_read_uint32_array>
2ffeaf12:	4603      	mov	r3, r0
2ffeaf14:	b150      	cbz	r0, 2ffeaf2c <stm32mp_ddr_dt_get_param+0x48>
2ffeaf16:	4806      	ldr	r0, [pc, #24]	@ (2ffeaf30 <stm32mp_ddr_dt_get_param+0x4c>)
2ffeaf18:	f8d9 2000 	ldr.w	r2, [r9]
2ffeaf1c:	4905      	ldr	r1, [pc, #20]	@ (2ffeaf34 <stm32mp_ddr_dt_get_param+0x50>)
2ffeaf1e:	f001 fbcd 	bl	2ffec6bc <tf_log>
2ffeaf22:	f06f 0015 	mvn.w	r0, #21
2ffeaf26:	b002      	add	sp, #8
2ffeaf28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffeaf2c:	3701      	adds	r7, #1
2ffeaf2e:	e7e1      	b.n	2ffeaef4 <stm32mp_ddr_dt_get_param+0x10>
2ffeaf30:	2fff58a3 	.word	0x2fff58a3
2ffeaf34:	2fff58c2 	.word	0x2fff58c2

2ffeaf38 <stm32_uart_wait_flag>:
2ffeaf38:	e92d 47e8 	stmdb	sp!, {r3, r5, r6, r7, r8, r9, sl, lr}
2ffeaf3c:	4680      	mov	r8, r0
2ffeaf3e:	460d      	mov	r5, r1
2ffeaf40:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeaf44:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2ffeaf48:	4a0e      	ldr	r2, [pc, #56]	@ (2ffeaf84 <stm32_uart_wait_flag+0x4c>)
2ffeaf4a:	f644 6020 	movw	r0, #20000	@ 0x4e20
2ffeaf4e:	2300      	movs	r3, #0
2ffeaf50:	464e      	mov	r6, r9
2ffeaf52:	fba1 0100 	umull	r0, r1, r1, r0
2ffeaf56:	f007 e97c 	blx	2fff2250 <__aeabi_uldivmod>
2ffeaf5a:	f8d8 2000 	ldr.w	r2, [r8]
2ffeaf5e:	1983      	adds	r3, r0, r6
2ffeaf60:	eb41 010a 	adc.w	r1, r1, sl
2ffeaf64:	321c      	adds	r2, #28
2ffeaf66:	6810      	ldr	r0, [r2, #0]
2ffeaf68:	4205      	tst	r5, r0
2ffeaf6a:	d002      	beq.n	2ffeaf72 <stm32_uart_wait_flag+0x3a>
2ffeaf6c:	2000      	movs	r0, #0
2ffeaf6e:	e8bd 87e8 	ldmia.w	sp!, {r3, r5, r6, r7, r8, r9, sl, pc}
2ffeaf72:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffeaf76:	42b3      	cmp	r3, r6
2ffeaf78:	eb71 0007 	sbcs.w	r0, r1, r7
2ffeaf7c:	d2f3      	bcs.n	2ffeaf66 <stm32_uart_wait_flag+0x2e>
2ffeaf7e:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffeaf82:	e7f4      	b.n	2ffeaf6e <stm32_uart_wait_flag+0x36>
2ffeaf84:	000f4240 	.word	0x000f4240

2ffeaf88 <stm32_uart_init>:
2ffeaf88:	2300      	movs	r3, #0
2ffeaf8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffeaf8c:	460e      	mov	r6, r1
2ffeaf8e:	9301      	str	r3, [sp, #4]
2ffeaf90:	4614      	mov	r4, r2
2ffeaf92:	4605      	mov	r5, r0
2ffeaf94:	2800      	cmp	r0, #0
2ffeaf96:	f000 80b2 	beq.w	2ffeb0fe <stm32_uart_init+0x176>
2ffeaf9a:	2a00      	cmp	r2, #0
2ffeaf9c:	f000 80af 	beq.w	2ffeb0fe <stm32_uart_init+0x176>
2ffeafa0:	2900      	cmp	r1, #0
2ffeafa2:	f000 80ac 	beq.w	2ffeb0fe <stm32_uart_init+0x176>
2ffeafa6:	6001      	str	r1, [r0, #0]
2ffeafa8:	a801      	add	r0, sp, #4
2ffeafaa:	f003 fcdb 	bl	2ffee964 <fdt_get_address>
2ffeafae:	b918      	cbnz	r0, 2ffeafb8 <stm32_uart_init+0x30>
2ffeafb0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeafb4:	b002      	add	sp, #8
2ffeafb6:	bd70      	pop	{r4, r5, r6, pc}
2ffeafb8:	9b01      	ldr	r3, [sp, #4]
2ffeafba:	2b00      	cmp	r3, #0
2ffeafbc:	d0f8      	beq.n	2ffeafb0 <stm32_uart_init+0x28>
2ffeafbe:	4854      	ldr	r0, [pc, #336]	@ (2ffeb110 <stm32_uart_init+0x188>)
2ffeafc0:	4631      	mov	r1, r6
2ffeafc2:	f003 fd9f 	bl	2ffeeb04 <dt_match_instance_by_compatible>
2ffeafc6:	1c42      	adds	r2, r0, #1
2ffeafc8:	4606      	mov	r6, r0
2ffeafca:	d0f1      	beq.n	2ffeafb0 <stm32_uart_init+0x28>
2ffeafcc:	f002 fe94 	bl	2ffedcf8 <dt_set_pinctrl_config>
2ffeafd0:	2800      	cmp	r0, #0
2ffeafd2:	f040 8097 	bne.w	2ffeb104 <stm32_uart_init+0x17c>
2ffeafd6:	4630      	mov	r0, r6
2ffeafd8:	f002 fd24 	bl	2ffeda24 <fdt_get_clock_id>
2ffeafdc:	2800      	cmp	r0, #0
2ffeafde:	dbe7      	blt.n	2ffeafb0 <stm32_uart_init+0x28>
2ffeafe0:	f002 fb92 	bl	2ffed708 <clk_enable>
2ffeafe4:	6828      	ldr	r0, [r5, #0]
2ffeafe6:	f007 fe10 	bl	2fff2c0a <stm32_uart_stop>
2ffeafea:	6863      	ldr	r3, [r4, #4]
2ffeafec:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
2ffeaff0:	d058      	beq.n	2ffeb0a4 <stm32_uart_init+0x11c>
2ffeaff2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
2ffeaff6:	d058      	beq.n	2ffeb0aa <stm32_uart_init+0x122>
2ffeaff8:	2b00      	cmp	r3, #0
2ffeaffa:	bf0c      	ite	eq
2ffeaffc:	23ff      	moveq	r3, #255	@ 0xff
2ffeaffe:	2300      	movne	r3, #0
2ffeb000:	68e2      	ldr	r2, [r4, #12]
2ffeb002:	b102      	cbz	r2, 2ffeb006 <stm32_uart_init+0x7e>
2ffeb004:	085b      	lsrs	r3, r3, #1
2ffeb006:	6828      	ldr	r0, [r5, #0]
2ffeb008:	606b      	str	r3, [r5, #4]
2ffeb00a:	f002 fd25 	bl	2ffeda58 <fdt_get_uart_clock_freq>
2ffeb00e:	2800      	cmp	r0, #0
2ffeb010:	d07b      	beq.n	2ffeb10a <stm32_uart_init+0x182>
2ffeb012:	4b40      	ldr	r3, [pc, #256]	@ (2ffeb114 <stm32_uart_init+0x18c>)
2ffeb014:	69e1      	ldr	r1, [r4, #28]
2ffeb016:	6822      	ldr	r2, [r4, #0]
2ffeb018:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
2ffeb01c:	0853      	lsrs	r3, r2, #1
2ffeb01e:	fbb0 f1f1 	udiv	r1, r0, r1
2ffeb022:	fbb0 f0f2 	udiv	r0, r0, r2
2ffeb026:	280f      	cmp	r0, #15
2ffeb028:	d841      	bhi.n	2ffeb0ae <stm32_uart_init+0x126>
2ffeb02a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
2ffeb02e:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
2ffeb032:	fbb3 f3f2 	udiv	r3, r3, r2
2ffeb036:	f3c3 0242 	ubfx	r2, r3, #1, #3
2ffeb03a:	f023 030f 	bic.w	r3, r3, #15
2ffeb03e:	041b      	lsls	r3, r3, #16
2ffeb040:	0c1b      	lsrs	r3, r3, #16
2ffeb042:	4313      	orrs	r3, r2
2ffeb044:	682a      	ldr	r2, [r5, #0]
2ffeb046:	60d3      	str	r3, [r2, #12]
2ffeb048:	68e2      	ldr	r2, [r4, #12]
2ffeb04a:	6863      	ldr	r3, [r4, #4]
2ffeb04c:	6829      	ldr	r1, [r5, #0]
2ffeb04e:	4313      	orrs	r3, r2
2ffeb050:	6922      	ldr	r2, [r4, #16]
2ffeb052:	680e      	ldr	r6, [r1, #0]
2ffeb054:	4313      	orrs	r3, r2
2ffeb056:	6a22      	ldr	r2, [r4, #32]
2ffeb058:	4313      	orrs	r3, r2
2ffeb05a:	4a2f      	ldr	r2, [pc, #188]	@ (2ffeb118 <stm32_uart_init+0x190>)
2ffeb05c:	4032      	ands	r2, r6
2ffeb05e:	4313      	orrs	r3, r2
2ffeb060:	4303      	orrs	r3, r0
2ffeb062:	600b      	str	r3, [r1, #0]
2ffeb064:	682a      	ldr	r2, [r5, #0]
2ffeb066:	68a1      	ldr	r1, [r4, #8]
2ffeb068:	6853      	ldr	r3, [r2, #4]
2ffeb06a:	f003 0386 	and.w	r3, r3, #134	@ 0x86
2ffeb06e:	430b      	orrs	r3, r1
2ffeb070:	6053      	str	r3, [r2, #4]
2ffeb072:	69a3      	ldr	r3, [r4, #24]
2ffeb074:	6962      	ldr	r2, [r4, #20]
2ffeb076:	431a      	orrs	r2, r3
2ffeb078:	6a23      	ldr	r3, [r4, #32]
2ffeb07a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
2ffeb07e:	bf02      	ittt	eq
2ffeb080:	6a63      	ldreq	r3, [r4, #36]	@ 0x24
2ffeb082:	6aa1      	ldreq	r1, [r4, #40]	@ 0x28
2ffeb084:	430b      	orreq	r3, r1
2ffeb086:	6829      	ldr	r1, [r5, #0]
2ffeb088:	bf08      	it	eq
2ffeb08a:	431a      	orreq	r2, r3
2ffeb08c:	688b      	ldr	r3, [r1, #8]
2ffeb08e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
2ffeb092:	4313      	orrs	r3, r2
2ffeb094:	608b      	str	r3, [r1, #8]
2ffeb096:	69e1      	ldr	r1, [r4, #28]
2ffeb098:	290b      	cmp	r1, #11
2ffeb09a:	d90e      	bls.n	2ffeb0ba <stm32_uart_init+0x132>
2ffeb09c:	481f      	ldr	r0, [pc, #124]	@ (2ffeb11c <stm32_uart_init+0x194>)
2ffeb09e:	21bc      	movs	r1, #188	@ 0xbc
2ffeb0a0:	f007 fa3a 	bl	2fff2518 <__assert>
2ffeb0a4:	f240 13ff 	movw	r3, #511	@ 0x1ff
2ffeb0a8:	e7aa      	b.n	2ffeb000 <stm32_uart_init+0x78>
2ffeb0aa:	237f      	movs	r3, #127	@ 0x7f
2ffeb0ac:	e7a8      	b.n	2ffeb000 <stm32_uart_init+0x78>
2ffeb0ae:	440b      	add	r3, r1
2ffeb0b0:	2000      	movs	r0, #0
2ffeb0b2:	fbb3 f3f2 	udiv	r3, r3, r2
2ffeb0b6:	b29b      	uxth	r3, r3
2ffeb0b8:	e7c4      	b.n	2ffeb044 <stm32_uart_init+0xbc>
2ffeb0ba:	682a      	ldr	r2, [r5, #0]
2ffeb0bc:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
2ffeb0be:	f023 030f 	bic.w	r3, r3, #15
2ffeb0c2:	430b      	orrs	r3, r1
2ffeb0c4:	62d3      	str	r3, [r2, #44]	@ 0x2c
2ffeb0c6:	682a      	ldr	r2, [r5, #0]
2ffeb0c8:	6813      	ldr	r3, [r2, #0]
2ffeb0ca:	f043 0301 	orr.w	r3, r3, #1
2ffeb0ce:	6013      	str	r3, [r2, #0]
2ffeb0d0:	682c      	ldr	r4, [r5, #0]
2ffeb0d2:	6823      	ldr	r3, [r4, #0]
2ffeb0d4:	071b      	lsls	r3, r3, #28
2ffeb0d6:	d40a      	bmi.n	2ffeb0ee <stm32_uart_init+0x166>
2ffeb0d8:	6820      	ldr	r0, [r4, #0]
2ffeb0da:	f010 0004 	ands.w	r0, r0, #4
2ffeb0de:	f43f af69 	beq.w	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb0e2:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
2ffeb0e6:	4628      	mov	r0, r5
2ffeb0e8:	f7ff ff26 	bl	2ffeaf38 <stm32_uart_wait_flag>
2ffeb0ec:	e762      	b.n	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb0ee:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
2ffeb0f2:	4628      	mov	r0, r5
2ffeb0f4:	f7ff ff20 	bl	2ffeaf38 <stm32_uart_wait_flag>
2ffeb0f8:	2800      	cmp	r0, #0
2ffeb0fa:	d0ed      	beq.n	2ffeb0d8 <stm32_uart_init+0x150>
2ffeb0fc:	e75a      	b.n	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb0fe:	f06f 0015 	mvn.w	r0, #21
2ffeb102:	e757      	b.n	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb104:	f06f 000e 	mvn.w	r0, #14
2ffeb108:	e754      	b.n	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb10a:	f06f 0012 	mvn.w	r0, #18
2ffeb10e:	e751      	b.n	2ffeafb4 <stm32_uart_init+0x2c>
2ffeb110:	2fff58db 	.word	0x2fff58db
2ffeb114:	2fff4c24 	.word	0x2fff4c24
2ffeb118:	cfff69f3 	.word	0xcfff69f3
2ffeb11c:	2fff58eb 	.word	0x2fff58eb

2ffeb120 <fconf_populate>:
2ffeb120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeb124:	4606      	mov	r6, r0
2ffeb126:	460d      	mov	r5, r1
2ffeb128:	b919      	cbnz	r1, 2ffeb132 <fconf_populate+0x12>
2ffeb12a:	2134      	movs	r1, #52	@ 0x34
2ffeb12c:	4818      	ldr	r0, [pc, #96]	@ (2ffeb190 <fconf_populate+0x70>)
2ffeb12e:	f007 f9f3 	bl	2fff2518 <__assert>
2ffeb132:	4608      	mov	r0, r1
2ffeb134:	f007 f8d8 	bl	2fff22e8 <fdt_check_header>
2ffeb138:	b138      	cbz	r0, 2ffeb14a <fconf_populate+0x2a>
2ffeb13a:	4816      	ldr	r0, [pc, #88]	@ (2ffeb194 <fconf_populate+0x74>)
2ffeb13c:	4631      	mov	r1, r6
2ffeb13e:	f001 fabd 	bl	2ffec6bc <tf_log>
2ffeb142:	f001 fb57 	bl	2ffec7f4 <console_flush>
2ffeb146:	f7fe e94a 	blx	2ffe93dc <do_panic>
2ffeb14a:	4813      	ldr	r0, [pc, #76]	@ (2ffeb198 <fconf_populate+0x78>)
2ffeb14c:	462a      	mov	r2, r5
2ffeb14e:	4c13      	ldr	r4, [pc, #76]	@ (2ffeb19c <fconf_populate+0x7c>)
2ffeb150:	4631      	mov	r1, r6
2ffeb152:	4f13      	ldr	r7, [pc, #76]	@ (2ffeb1a0 <fconf_populate+0x80>)
2ffeb154:	f001 fab2 	bl	2ffec6bc <tf_log>
2ffeb158:	f8df 8048 	ldr.w	r8, [pc, #72]	@ 2ffeb1a4 <fconf_populate+0x84>
2ffeb15c:	42bc      	cmp	r4, r7
2ffeb15e:	d101      	bne.n	2ffeb164 <fconf_populate+0x44>
2ffeb160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeb164:	6863      	ldr	r3, [r4, #4]
2ffeb166:	b10b      	cbz	r3, 2ffeb16c <fconf_populate+0x4c>
2ffeb168:	68a3      	ldr	r3, [r4, #8]
2ffeb16a:	b90b      	cbnz	r3, 2ffeb170 <fconf_populate+0x50>
2ffeb16c:	2144      	movs	r1, #68	@ 0x44
2ffeb16e:	e7dd      	b.n	2ffeb12c <fconf_populate+0xc>
2ffeb170:	6820      	ldr	r0, [r4, #0]
2ffeb172:	4631      	mov	r1, r6
2ffeb174:	f009 f8fa 	bl	2fff436c <strcmp>
2ffeb178:	b940      	cbnz	r0, 2ffeb18c <fconf_populate+0x6c>
2ffeb17a:	6861      	ldr	r1, [r4, #4]
2ffeb17c:	4640      	mov	r0, r8
2ffeb17e:	f001 fa9d 	bl	2ffec6bc <tf_log>
2ffeb182:	68a3      	ldr	r3, [r4, #8]
2ffeb184:	4628      	mov	r0, r5
2ffeb186:	4798      	blx	r3
2ffeb188:	2800      	cmp	r0, #0
2ffeb18a:	d1da      	bne.n	2ffeb142 <fconf_populate+0x22>
2ffeb18c:	340c      	adds	r4, #12
2ffeb18e:	e7e5      	b.n	2ffeb15c <fconf_populate+0x3c>
2ffeb190:	2fff5908 	.word	0x2fff5908
2ffeb194:	2fff595a 	.word	0x2fff595a
2ffeb198:	2fff5982 	.word	0x2fff5982
2ffeb19c:	2fff7b9c 	.word	0x2fff7b9c
2ffeb1a0:	2fff7bcc 	.word	0x2fff7bcc
2ffeb1a4:	2fff59be 	.word	0x2fff59be

2ffeb1a8 <set_config_info>:
2ffeb1a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeb1aa:	4d0d      	ldr	r5, [pc, #52]	@ (2ffeb1e0 <set_config_info+0x38>)
2ffeb1ac:	68ec      	ldr	r4, [r5, #12]
2ffeb1ae:	686e      	ldr	r6, [r5, #4]
2ffeb1b0:	f104 0c01 	add.w	ip, r4, #1
2ffeb1b4:	45b4      	cmp	ip, r6
2ffeb1b6:	d908      	bls.n	2ffeb1ca <set_config_info+0x22>
2ffeb1b8:	1b32      	subs	r2, r6, r4
2ffeb1ba:	2101      	movs	r1, #1
2ffeb1bc:	4809      	ldr	r0, [pc, #36]	@ (2ffeb1e4 <set_config_info+0x3c>)
2ffeb1be:	f001 fa7d 	bl	2ffec6bc <tf_log>
2ffeb1c2:	f001 fb17 	bl	2ffec7f4 <console_flush>
2ffeb1c6:	f7fe e90a 	blx	2ffe93dc <do_panic>
2ffeb1ca:	682e      	ldr	r6, [r5, #0]
2ffeb1cc:	68af      	ldr	r7, [r5, #8]
2ffeb1ce:	4374      	muls	r4, r6
2ffeb1d0:	f8c5 c00c 	str.w	ip, [r5, #12]
2ffeb1d4:	193e      	adds	r6, r7, r4
2ffeb1d6:	5138      	str	r0, [r7, r4]
2ffeb1d8:	60f1      	str	r1, [r6, #12]
2ffeb1da:	6072      	str	r2, [r6, #4]
2ffeb1dc:	60b3      	str	r3, [r6, #8]
2ffeb1de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeb1e0:	2fff8050 	.word	0x2fff8050
2ffeb1e4:	2fff59fa 	.word	0x2fff59fa

2ffeb1e8 <fconf_populate_dtb_registry>:
2ffeb1e8:	4b39      	ldr	r3, [pc, #228]	@ (2ffeb2d0 <fconf_populate_dtb_registry+0xe8>)
2ffeb1ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeb1ee:	4605      	mov	r5, r0
2ffeb1f0:	689b      	ldr	r3, [r3, #8]
2ffeb1f2:	b085      	sub	sp, #20
2ffeb1f4:	b97b      	cbnz	r3, 2ffeb216 <fconf_populate_dtb_registry+0x2e>
2ffeb1f6:	7943      	ldrb	r3, [r0, #5]
2ffeb1f8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb1fc:	7902      	ldrb	r2, [r0, #4]
2ffeb1fe:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
2ffeb202:	7983      	ldrb	r3, [r0, #6]
2ffeb204:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
2ffeb208:	79c3      	ldrb	r3, [r0, #7]
2ffeb20a:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
2ffeb20e:	2301      	movs	r3, #1
2ffeb210:	ba12      	rev	r2, r2
2ffeb212:	f7ff ffc9 	bl	2ffeb1a8 <set_config_info>
2ffeb216:	4a2f      	ldr	r2, [pc, #188]	@ (2ffeb2d4 <fconf_populate_dtb_registry+0xec>)
2ffeb218:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb21c:	4628      	mov	r0, r5
2ffeb21e:	f008 ff61 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeb222:	1e07      	subs	r7, r0, #0
2ffeb224:	da08      	bge.n	2ffeb238 <fconf_populate_dtb_registry+0x50>
2ffeb226:	492b      	ldr	r1, [pc, #172]	@ (2ffeb2d4 <fconf_populate_dtb_registry+0xec>)
2ffeb228:	463c      	mov	r4, r7
2ffeb22a:	482b      	ldr	r0, [pc, #172]	@ (2ffeb2d8 <fconf_populate_dtb_registry+0xf0>)
2ffeb22c:	f001 fa46 	bl	2ffec6bc <tf_log>
2ffeb230:	4620      	mov	r0, r4
2ffeb232:	b005      	add	sp, #20
2ffeb234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeb238:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 2ffeb2dc <fconf_populate_dtb_registry+0xf4>
2ffeb23c:	4639      	mov	r1, r7
2ffeb23e:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 2ffeb2e0 <fconf_populate_dtb_registry+0xf8>
2ffeb242:	4628      	mov	r0, r5
2ffeb244:	f8df a09c 	ldr.w	sl, [pc, #156]	@ 2ffeb2e4 <fconf_populate_dtb_registry+0xfc>
2ffeb248:	f008 fca7 	bl	2fff3b9a <fdt_first_subnode>
2ffeb24c:	4604      	mov	r4, r0
2ffeb24e:	2c00      	cmp	r4, #0
2ffeb250:	da07      	bge.n	2ffeb262 <fconf_populate_dtb_registry+0x7a>
2ffeb252:	1c63      	adds	r3, r4, #1
2ffeb254:	d03a      	beq.n	2ffeb2cc <fconf_populate_dtb_registry+0xe4>
2ffeb256:	4824      	ldr	r0, [pc, #144]	@ (2ffeb2e8 <fconf_populate_dtb_registry+0x100>)
2ffeb258:	463a      	mov	r2, r7
2ffeb25a:	2194      	movs	r1, #148	@ 0x94
2ffeb25c:	f001 fa2e 	bl	2ffec6bc <tf_log>
2ffeb260:	e7e6      	b.n	2ffeb230 <fconf_populate_dtb_registry+0x48>
2ffeb262:	ab02      	add	r3, sp, #8
2ffeb264:	4642      	mov	r2, r8
2ffeb266:	4621      	mov	r1, r4
2ffeb268:	4628      	mov	r0, r5
2ffeb26a:	f007 fbbd 	bl	2fff29e8 <fdt_read_uint64>
2ffeb26e:	1e06      	subs	r6, r0, #0
2ffeb270:	da04      	bge.n	2ffeb27c <fconf_populate_dtb_registry+0x94>
2ffeb272:	481e      	ldr	r0, [pc, #120]	@ (2ffeb2ec <fconf_populate_dtb_registry+0x104>)
2ffeb274:	4634      	mov	r4, r6
2ffeb276:	f001 fa21 	bl	2ffec6bc <tf_log>
2ffeb27a:	e7d9      	b.n	2ffeb230 <fconf_populate_dtb_registry+0x48>
2ffeb27c:	f8dd b008 	ldr.w	fp, [sp, #8]
2ffeb280:	466b      	mov	r3, sp
2ffeb282:	464a      	mov	r2, r9
2ffeb284:	4621      	mov	r1, r4
2ffeb286:	4628      	mov	r0, r5
2ffeb288:	f007 fb9a 	bl	2fff29c0 <fdt_read_uint32>
2ffeb28c:	1e06      	subs	r6, r0, #0
2ffeb28e:	dbf0      	blt.n	2ffeb272 <fconf_populate_dtb_registry+0x8a>
2ffeb290:	ab01      	add	r3, sp, #4
2ffeb292:	4652      	mov	r2, sl
2ffeb294:	4621      	mov	r1, r4
2ffeb296:	4628      	mov	r0, r5
2ffeb298:	f007 fb92 	bl	2fff29c0 <fdt_read_uint32>
2ffeb29c:	1e06      	subs	r6, r0, #0
2ffeb29e:	dbe8      	blt.n	2ffeb272 <fconf_populate_dtb_registry+0x8a>
2ffeb2a0:	4a13      	ldr	r2, [pc, #76]	@ (2ffeb2f0 <fconf_populate_dtb_registry+0x108>)
2ffeb2a2:	ab02      	add	r3, sp, #8
2ffeb2a4:	4621      	mov	r1, r4
2ffeb2a6:	4628      	mov	r0, r5
2ffeb2a8:	f007 fb9e 	bl	2fff29e8 <fdt_read_uint64>
2ffeb2ac:	b958      	cbnz	r0, 2ffeb2c6 <fconf_populate_dtb_registry+0xde>
2ffeb2ae:	9902      	ldr	r1, [sp, #8]
2ffeb2b0:	e9dd 2300 	ldrd	r2, r3, [sp]
2ffeb2b4:	4658      	mov	r0, fp
2ffeb2b6:	f7ff ff77 	bl	2ffeb1a8 <set_config_info>
2ffeb2ba:	4621      	mov	r1, r4
2ffeb2bc:	4628      	mov	r0, r5
2ffeb2be:	f008 fc7f 	bl	2fff3bc0 <fdt_next_subnode>
2ffeb2c2:	4604      	mov	r4, r0
2ffeb2c4:	e7c3      	b.n	2ffeb24e <fconf_populate_dtb_registry+0x66>
2ffeb2c6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeb2ca:	e7f1      	b.n	2ffeb2b0 <fconf_populate_dtb_registry+0xc8>
2ffeb2cc:	2400      	movs	r4, #0
2ffeb2ce:	e7af      	b.n	2ffeb230 <fconf_populate_dtb_registry+0x48>
2ffeb2d0:	2fff936c 	.word	0x2fff936c
2ffeb2d4:	2fff5a38 	.word	0x2fff5a38
2ffeb2d8:	2fff5a53 	.word	0x2fff5a53
2ffeb2dc:	2fff5ac4 	.word	0x2fff5ac4
2ffeb2e0:	2fff5ab8 	.word	0x2fff5ab8
2ffeb2e4:	2fff7180 	.word	0x2fff7180
2ffeb2e8:	2fff5ad1 	.word	0x2fff5ad1
2ffeb2ec:	2fff5a7c 	.word	0x2fff5a7c
2ffeb2f0:	2fff5ac1 	.word	0x2fff5ac1

2ffeb2f4 <dyn_cfg_dtb_info_get_index>:
2ffeb2f4:	4b06      	ldr	r3, [pc, #24]	@ (2ffeb310 <dyn_cfg_dtb_info_get_index+0x1c>)
2ffeb2f6:	4602      	mov	r2, r0
2ffeb2f8:	2000      	movs	r0, #0
2ffeb2fa:	6899      	ldr	r1, [r3, #8]
2ffeb2fc:	4291      	cmp	r1, r2
2ffeb2fe:	d005      	beq.n	2ffeb30c <dyn_cfg_dtb_info_get_index+0x18>
2ffeb300:	3001      	adds	r0, #1
2ffeb302:	3310      	adds	r3, #16
2ffeb304:	2806      	cmp	r0, #6
2ffeb306:	d1f8      	bne.n	2ffeb2fa <dyn_cfg_dtb_info_get_index+0x6>
2ffeb308:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeb30c:	4770      	bx	lr
2ffeb30e:	bf00      	nop
2ffeb310:	2fff936c 	.word	0x2fff936c

2ffeb314 <dyn_cfg_dtb_info_getter>:
2ffeb314:	b510      	push	{r4, lr}
2ffeb316:	4604      	mov	r4, r0
2ffeb318:	f7ff ffec 	bl	2ffeb2f4 <dyn_cfg_dtb_info_get_index>
2ffeb31c:	2805      	cmp	r0, #5
2ffeb31e:	d803      	bhi.n	2ffeb328 <dyn_cfg_dtb_info_getter+0x14>
2ffeb320:	4b04      	ldr	r3, [pc, #16]	@ (2ffeb334 <dyn_cfg_dtb_info_getter+0x20>)
2ffeb322:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2ffeb326:	bd10      	pop	{r4, pc}
2ffeb328:	4803      	ldr	r0, [pc, #12]	@ (2ffeb338 <dyn_cfg_dtb_info_getter+0x24>)
2ffeb32a:	4621      	mov	r1, r4
2ffeb32c:	f001 f9c6 	bl	2ffec6bc <tf_log>
2ffeb330:	2000      	movs	r0, #0
2ffeb332:	e7f8      	b.n	2ffeb326 <dyn_cfg_dtb_info_getter+0x12>
2ffeb334:	2fff936c 	.word	0x2fff936c
2ffeb338:	2fff5af2 	.word	0x2fff5af2

2ffeb33c <parse_optee_image>:
2ffeb33c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffeb33e:	460a      	mov	r2, r1
2ffeb340:	6849      	ldr	r1, [r1, #4]
2ffeb342:	68d5      	ldr	r5, [r2, #12]
2ffeb344:	6812      	ldr	r2, [r2, #0]
2ffeb346:	6883      	ldr	r3, [r0, #8]
2ffeb348:	6904      	ldr	r4, [r0, #16]
2ffeb34a:	400a      	ands	r2, r1
2ffeb34c:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
2ffeb350:	bf08      	it	eq
2ffeb352:	4619      	moveq	r1, r3
2ffeb354:	4262      	negs	r2, r4
2ffeb356:	429a      	cmp	r2, r3
2ffeb358:	d311      	bcc.n	2ffeb37e <parse_optee_image+0x42>
2ffeb35a:	441c      	add	r4, r3
2ffeb35c:	426a      	negs	r2, r5
2ffeb35e:	428a      	cmp	r2, r1
2ffeb360:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
2ffeb364:	d30b      	bcc.n	2ffeb37e <parse_optee_image+0x42>
2ffeb366:	4299      	cmp	r1, r3
2ffeb368:	eb01 0205 	add.w	r2, r1, r5
2ffeb36c:	f102 36ff 	add.w	r6, r2, #4294967295	@ 0xffffffff
2ffeb370:	d301      	bcc.n	2ffeb376 <parse_optee_image+0x3a>
2ffeb372:	42b7      	cmp	r7, r6
2ffeb374:	d207      	bcs.n	2ffeb386 <parse_optee_image+0x4a>
2ffeb376:	4808      	ldr	r0, [pc, #32]	@ (2ffeb398 <parse_optee_image+0x5c>)
2ffeb378:	9400      	str	r4, [sp, #0]
2ffeb37a:	f001 f99f 	bl	2ffec6bc <tf_log>
2ffeb37e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeb382:	b003      	add	sp, #12
2ffeb384:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffeb386:	6843      	ldr	r3, [r0, #4]
2ffeb388:	6081      	str	r1, [r0, #8]
2ffeb38a:	f023 0302 	bic.w	r3, r3, #2
2ffeb38e:	6043      	str	r3, [r0, #4]
2ffeb390:	60c5      	str	r5, [r0, #12]
2ffeb392:	2000      	movs	r0, #0
2ffeb394:	e7f5      	b.n	2ffeb382 <parse_optee_image+0x46>
2ffeb396:	bf00      	nop
2ffeb398:	2fff5b22 	.word	0x2fff5b22

2ffeb39c <optee_header_is_valid>:
2ffeb39c:	6802      	ldr	r2, [r0, #0]
2ffeb39e:	4b07      	ldr	r3, [pc, #28]	@ (2ffeb3bc <optee_header_is_valid+0x20>)
2ffeb3a0:	429a      	cmp	r2, r3
2ffeb3a2:	d109      	bne.n	2ffeb3b8 <optee_header_is_valid+0x1c>
2ffeb3a4:	7903      	ldrb	r3, [r0, #4]
2ffeb3a6:	2b02      	cmp	r3, #2
2ffeb3a8:	d106      	bne.n	2ffeb3b8 <optee_header_is_valid+0x1c>
2ffeb3aa:	6880      	ldr	r0, [r0, #8]
2ffeb3ac:	3801      	subs	r0, #1
2ffeb3ae:	2801      	cmp	r0, #1
2ffeb3b0:	bf8c      	ite	hi
2ffeb3b2:	2000      	movhi	r0, #0
2ffeb3b4:	2001      	movls	r0, #1
2ffeb3b6:	4770      	bx	lr
2ffeb3b8:	2000      	movs	r0, #0
2ffeb3ba:	4770      	bx	lr
2ffeb3bc:	4554504f 	.word	0x4554504f

2ffeb3c0 <parse_optee_header>:
2ffeb3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffeb3c4:	460f      	mov	r7, r1
2ffeb3c6:	4616      	mov	r6, r2
2ffeb3c8:	4605      	mov	r5, r0
2ffeb3ca:	b918      	cbnz	r0, 2ffeb3d4 <parse_optee_header+0x14>
2ffeb3cc:	2195      	movs	r1, #149	@ 0x95
2ffeb3ce:	4834      	ldr	r0, [pc, #208]	@ (2ffeb4a0 <parse_optee_header+0xe0>)
2ffeb3d0:	f007 f8a2 	bl	2fff2518 <__assert>
2ffeb3d4:	6884      	ldr	r4, [r0, #8]
2ffeb3d6:	46a0      	mov	r8, r4
2ffeb3d8:	b90c      	cbnz	r4, 2ffeb3de <parse_optee_header+0x1e>
2ffeb3da:	2197      	movs	r1, #151	@ 0x97
2ffeb3dc:	e7f7      	b.n	2ffeb3ce <parse_optee_header+0xe>
2ffeb3de:	4831      	ldr	r0, [pc, #196]	@ (2ffeb4a4 <parse_optee_header+0xe4>)
2ffeb3e0:	4621      	mov	r1, r4
2ffeb3e2:	f001 f96b 	bl	2ffec6bc <tf_log>
2ffeb3e6:	4830      	ldr	r0, [pc, #192]	@ (2ffeb4a8 <parse_optee_header+0xe8>)
2ffeb3e8:	f001 f968 	bl	2ffec6bc <tf_log>
2ffeb3ec:	6821      	ldr	r1, [r4, #0]
2ffeb3ee:	482f      	ldr	r0, [pc, #188]	@ (2ffeb4ac <parse_optee_header+0xec>)
2ffeb3f0:	f001 f964 	bl	2ffec6bc <tf_log>
2ffeb3f4:	7921      	ldrb	r1, [r4, #4]
2ffeb3f6:	482e      	ldr	r0, [pc, #184]	@ (2ffeb4b0 <parse_optee_header+0xf0>)
2ffeb3f8:	f001 f960 	bl	2ffec6bc <tf_log>
2ffeb3fc:	7961      	ldrb	r1, [r4, #5]
2ffeb3fe:	482d      	ldr	r0, [pc, #180]	@ (2ffeb4b4 <parse_optee_header+0xf4>)
2ffeb400:	f001 f95c 	bl	2ffec6bc <tf_log>
2ffeb404:	88e1      	ldrh	r1, [r4, #6]
2ffeb406:	482c      	ldr	r0, [pc, #176]	@ (2ffeb4b8 <parse_optee_header+0xf8>)
2ffeb408:	f001 f958 	bl	2ffec6bc <tf_log>
2ffeb40c:	68a1      	ldr	r1, [r4, #8]
2ffeb40e:	482b      	ldr	r0, [pc, #172]	@ (2ffeb4bc <parse_optee_header+0xfc>)
2ffeb410:	f001 f954 	bl	2ffec6bc <tf_log>
2ffeb414:	6822      	ldr	r2, [r4, #0]
2ffeb416:	4b2a      	ldr	r3, [pc, #168]	@ (2ffeb4c0 <parse_optee_header+0x100>)
2ffeb418:	429a      	cmp	r2, r3
2ffeb41a:	d11a      	bne.n	2ffeb452 <parse_optee_header+0x92>
2ffeb41c:	7923      	ldrb	r3, [r4, #4]
2ffeb41e:	2b02      	cmp	r3, #2
2ffeb420:	d117      	bne.n	2ffeb452 <parse_optee_header+0x92>
2ffeb422:	68a3      	ldr	r3, [r4, #8]
2ffeb424:	3b01      	subs	r3, #1
2ffeb426:	2b01      	cmp	r3, #1
2ffeb428:	d813      	bhi.n	2ffeb452 <parse_optee_header+0x92>
2ffeb42a:	f104 090c 	add.w	r9, r4, #12
2ffeb42e:	f04f 0a00 	mov.w	sl, #0
2ffeb432:	f8d8 3008 	ldr.w	r3, [r8, #8]
2ffeb436:	4553      	cmp	r3, sl
2ffeb438:	d813      	bhi.n	2ffeb462 <parse_optee_header+0xa2>
2ffeb43a:	68bb      	ldr	r3, [r7, #8]
2ffeb43c:	60ab      	str	r3, [r5, #8]
2ffeb43e:	b11e      	cbz	r6, 2ffeb448 <parse_optee_header+0x88>
2ffeb440:	68b3      	ldr	r3, [r6, #8]
2ffeb442:	61ab      	str	r3, [r5, #24]
2ffeb444:	68f3      	ldr	r3, [r6, #12]
2ffeb446:	61eb      	str	r3, [r5, #28]
2ffeb448:	f898 3005 	ldrb.w	r3, [r8, #5]
2ffeb44c:	b123      	cbz	r3, 2ffeb458 <parse_optee_header+0x98>
2ffeb44e:	481d      	ldr	r0, [pc, #116]	@ (2ffeb4c4 <parse_optee_header+0x104>)
2ffeb450:	e01d      	b.n	2ffeb48e <parse_optee_header+0xce>
2ffeb452:	481d      	ldr	r0, [pc, #116]	@ (2ffeb4c8 <parse_optee_header+0x108>)
2ffeb454:	f001 f932 	bl	2ffec6bc <tf_log>
2ffeb458:	2000      	movs	r0, #0
2ffeb45a:	2301      	movs	r3, #1
2ffeb45c:	616b      	str	r3, [r5, #20]
2ffeb45e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffeb462:	6963      	ldr	r3, [r4, #20]
2ffeb464:	b93b      	cbnz	r3, 2ffeb476 <parse_optee_header+0xb6>
2ffeb466:	4649      	mov	r1, r9
2ffeb468:	4638      	mov	r0, r7
2ffeb46a:	f7ff ff67 	bl	2ffeb33c <parse_optee_image>
2ffeb46e:	b138      	cbz	r0, 2ffeb480 <parse_optee_header+0xc0>
2ffeb470:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeb474:	e7f3      	b.n	2ffeb45e <parse_optee_header+0x9e>
2ffeb476:	2b01      	cmp	r3, #1
2ffeb478:	d10f      	bne.n	2ffeb49a <parse_optee_header+0xda>
2ffeb47a:	b95e      	cbnz	r6, 2ffeb494 <parse_optee_header+0xd4>
2ffeb47c:	69a3      	ldr	r3, [r4, #24]
2ffeb47e:	b92b      	cbnz	r3, 2ffeb48c <parse_optee_header+0xcc>
2ffeb480:	f10a 0a01 	add.w	sl, sl, #1
2ffeb484:	3410      	adds	r4, #16
2ffeb486:	f109 0910 	add.w	r9, r9, #16
2ffeb48a:	e7d2      	b.n	2ffeb432 <parse_optee_header+0x72>
2ffeb48c:	480f      	ldr	r0, [pc, #60]	@ (2ffeb4cc <parse_optee_header+0x10c>)
2ffeb48e:	f001 f915 	bl	2ffec6bc <tf_log>
2ffeb492:	e7ed      	b.n	2ffeb470 <parse_optee_header+0xb0>
2ffeb494:	4649      	mov	r1, r9
2ffeb496:	4630      	mov	r0, r6
2ffeb498:	e7e7      	b.n	2ffeb46a <parse_optee_header+0xaa>
2ffeb49a:	480d      	ldr	r0, [pc, #52]	@ (2ffeb4d0 <parse_optee_header+0x110>)
2ffeb49c:	e7f7      	b.n	2ffeb48e <parse_optee_header+0xce>
2ffeb49e:	bf00      	nop
2ffeb4a0:	2fff5b6f 	.word	0x2fff5b6f
2ffeb4a4:	2fff5b87 	.word	0x2fff5b87
2ffeb4a8:	2fff5b97 	.word	0x2fff5b97
2ffeb4ac:	2fff5bac 	.word	0x2fff5bac
2ffeb4b0:	2fff5bbf 	.word	0x2fff5bbf
2ffeb4b4:	2fff5bd4 	.word	0x2fff5bd4
2ffeb4b8:	2fff5be6 	.word	0x2fff5be6
2ffeb4bc:	2fff5bf9 	.word	0x2fff5bf9
2ffeb4c0:	4554504f 	.word	0x4554504f
2ffeb4c4:	2fff5c74 	.word	0x2fff5c74
2ffeb4c8:	2fff5c10 	.word	0x2fff5c10
2ffeb4cc:	2fff5c39 	.word	0x2fff5c39
2ffeb4d0:	2fff5c58 	.word	0x2fff5c58

2ffeb4d4 <open_fip>:
2ffeb4d4:	4b02      	ldr	r3, [pc, #8]	@ (2ffeb4e0 <open_fip+0xc>)
2ffeb4d6:	2100      	movs	r1, #0
2ffeb4d8:	6818      	ldr	r0, [r3, #0]
2ffeb4da:	f7ff b89b 	b.w	2ffea614 <io_dev_init>
2ffeb4de:	bf00      	nop
2ffeb4e0:	2fff93e0 	.word	0x2fff93e0

2ffeb4e4 <open_storage>:
2ffeb4e4:	4b02      	ldr	r3, [pc, #8]	@ (2ffeb4f0 <open_storage+0xc>)
2ffeb4e6:	2100      	movs	r1, #0
2ffeb4e8:	6818      	ldr	r0, [r3, #0]
2ffeb4ea:	f7ff b893 	b.w	2ffea614 <io_dev_init>
2ffeb4ee:	bf00      	nop
2ffeb4f0:	2fff93dc 	.word	0x2fff93dc

2ffeb4f4 <stm32mp_io_setup>:
2ffeb4f4:	b538      	push	{r3, r4, r5, lr}
2ffeb4f6:	f001 fa41 	bl	2ffec97c <stm32mp_get_boot_ctx_address>
2ffeb4fa:	7843      	ldrb	r3, [r0, #1]
2ffeb4fc:	4604      	mov	r4, r0
2ffeb4fe:	7801      	ldrb	r1, [r0, #0]
2ffeb500:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffeb504:	1e4b      	subs	r3, r1, #1
2ffeb506:	2b06      	cmp	r3, #6
2ffeb508:	d83b      	bhi.n	2ffeb582 <stm32mp_io_setup+0x8e>
2ffeb50a:	e8df f003 	tbb	[pc, r3]
2ffeb50e:	2e04      	.short	0x2e04
2ffeb510:	38363032 	.word	0x38363032
2ffeb514:	34          	.byte	0x34
2ffeb515:	00          	.byte	0x00
2ffeb516:	482e      	ldr	r0, [pc, #184]	@ (2ffeb5d0 <stm32mp_io_setup+0xdc>)
2ffeb518:	f001 f8d0 	bl	2ffec6bc <tf_log>
2ffeb51c:	78a1      	ldrb	r1, [r4, #2]
2ffeb51e:	78e3      	ldrb	r3, [r4, #3]
2ffeb520:	ea51 2103 	orrs.w	r1, r1, r3, lsl #8
2ffeb524:	d002      	beq.n	2ffeb52c <stm32mp_io_setup+0x38>
2ffeb526:	482b      	ldr	r0, [pc, #172]	@ (2ffeb5d4 <stm32mp_io_setup+0xe0>)
2ffeb528:	f001 f8c8 	bl	2ffec6bc <tf_log>
2ffeb52c:	f894 3091 	ldrb.w	r3, [r4, #145]	@ 0x91
2ffeb530:	f894 1090 	ldrb.w	r1, [r4, #144]	@ 0x90
2ffeb534:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffeb538:	f894 3092 	ldrb.w	r3, [r4, #146]	@ 0x92
2ffeb53c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
2ffeb540:	f894 3093 	ldrb.w	r3, [r4, #147]	@ 0x93
2ffeb544:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffeb548:	1e4b      	subs	r3, r1, #1
2ffeb54a:	2b01      	cmp	r3, #1
2ffeb54c:	d802      	bhi.n	2ffeb554 <stm32mp_io_setup+0x60>
2ffeb54e:	4822      	ldr	r0, [pc, #136]	@ (2ffeb5d8 <stm32mp_io_setup+0xe4>)
2ffeb550:	f001 f8b4 	bl	2ffec6bc <tf_log>
2ffeb554:	4d21      	ldr	r5, [pc, #132]	@ (2ffeb5dc <stm32mp_io_setup+0xe8>)
2ffeb556:	4628      	mov	r0, r5
2ffeb558:	f7fe ff16 	bl	2ffea388 <register_io_dev_fip>
2ffeb55c:	4601      	mov	r1, r0
2ffeb55e:	b1b8      	cbz	r0, 2ffeb590 <stm32mp_io_setup+0x9c>
2ffeb560:	f44f 71ec 	mov.w	r1, #472	@ 0x1d8
2ffeb564:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5e0 <stm32mp_io_setup+0xec>)
2ffeb566:	f006 ffd7 	bl	2fff2518 <__assert>
2ffeb56a:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5e4 <stm32mp_io_setup+0xf0>)
2ffeb56c:	e7d4      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb56e:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5e8 <stm32mp_io_setup+0xf4>)
2ffeb570:	e7d2      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb572:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5ec <stm32mp_io_setup+0xf8>)
2ffeb574:	e7d0      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb576:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5f0 <stm32mp_io_setup+0xfc>)
2ffeb578:	e7ce      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb57a:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5f4 <stm32mp_io_setup+0x100>)
2ffeb57c:	e7cc      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb57e:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5f8 <stm32mp_io_setup+0x104>)
2ffeb580:	e7ca      	b.n	2ffeb518 <stm32mp_io_setup+0x24>
2ffeb582:	481e      	ldr	r0, [pc, #120]	@ (2ffeb5fc <stm32mp_io_setup+0x108>)
2ffeb584:	f001 f89a 	bl	2ffec6bc <tf_log>
2ffeb588:	f001 f934 	bl	2ffec7f4 <console_flush>
2ffeb58c:	f7fd ef26 	blx	2ffe93dc <do_panic>
2ffeb590:	4a1b      	ldr	r2, [pc, #108]	@ (2ffeb600 <stm32mp_io_setup+0x10c>)
2ffeb592:	6828      	ldr	r0, [r5, #0]
2ffeb594:	f7ff f82a 	bl	2ffea5ec <io_dev_open>
2ffeb598:	7821      	ldrb	r1, [r4, #0]
2ffeb59a:	7863      	ldrb	r3, [r4, #1]
2ffeb59c:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffeb5a0:	2905      	cmp	r1, #5
2ffeb5a2:	d112      	bne.n	2ffeb5ca <stm32mp_io_setup+0xd6>
2ffeb5a4:	f3bf 8f5f 	dmb	sy
2ffeb5a8:	4c16      	ldr	r4, [pc, #88]	@ (2ffeb604 <stm32mp_io_setup+0x110>)
2ffeb5aa:	4620      	mov	r0, r4
2ffeb5ac:	f7fe ffd6 	bl	2ffea55c <register_io_dev_memmap>
2ffeb5b0:	4601      	mov	r1, r0
2ffeb5b2:	b110      	cbz	r0, 2ffeb5ba <stm32mp_io_setup+0xc6>
2ffeb5b4:	f240 11a3 	movw	r1, #419	@ 0x1a3
2ffeb5b8:	e7d4      	b.n	2ffeb564 <stm32mp_io_setup+0x70>
2ffeb5ba:	4a13      	ldr	r2, [pc, #76]	@ (2ffeb608 <stm32mp_io_setup+0x114>)
2ffeb5bc:	6820      	ldr	r0, [r4, #0]
2ffeb5be:	f7ff f815 	bl	2ffea5ec <io_dev_open>
2ffeb5c2:	b120      	cbz	r0, 2ffeb5ce <stm32mp_io_setup+0xda>
2ffeb5c4:	f240 11a7 	movw	r1, #423	@ 0x1a7
2ffeb5c8:	e7cc      	b.n	2ffeb564 <stm32mp_io_setup+0x70>
2ffeb5ca:	4810      	ldr	r0, [pc, #64]	@ (2ffeb60c <stm32mp_io_setup+0x118>)
2ffeb5cc:	e7da      	b.n	2ffeb584 <stm32mp_io_setup+0x90>
2ffeb5ce:	bd38      	pop	{r3, r4, r5, pc}
2ffeb5d0:	2fff5c94 	.word	0x2fff5c94
2ffeb5d4:	2fff5d18 	.word	0x2fff5d18
2ffeb5d8:	2fff5d28 	.word	0x2fff5d28
2ffeb5dc:	2fff93d8 	.word	0x2fff93d8
2ffeb5e0:	2fff5d45 	.word	0x2fff5d45
2ffeb5e4:	2fff5ca2 	.word	0x2fff5ca2
2ffeb5e8:	2fff5caf 	.word	0x2fff5caf
2ffeb5ec:	2fff5cbf 	.word	0x2fff5cbf
2ffeb5f0:	2fff5cd0 	.word	0x2fff5cd0
2ffeb5f4:	2fff5ce1 	.word	0x2fff5ce1
2ffeb5f8:	2fff5cee 	.word	0x2fff5cee
2ffeb5fc:	2fff5cfa 	.word	0x2fff5cfa
2ffeb600:	2fff93e0 	.word	0x2fff93e0
2ffeb604:	2fff93d4 	.word	0x2fff93d4
2ffeb608:	2fff93dc 	.word	0x2fff93dc
2ffeb60c:	2fff5d65 	.word	0x2fff5d65

2ffeb610 <bl2_plat_handle_pre_image_load>:
2ffeb610:	b538      	push	{r3, r4, r5, lr}
2ffeb612:	4604      	mov	r4, r0
2ffeb614:	f001 f9b8 	bl	2ffec988 <stm32mp_get_boot_itf_selected>
2ffeb618:	4605      	mov	r5, r0
2ffeb61a:	f007 fec9 	bl	2fff33b0 <stm32mp_skip_boot_device_after_standby>
2ffeb61e:	b9f8      	cbnz	r0, 2ffeb660 <bl2_plat_handle_pre_image_load+0x50>
2ffeb620:	2d05      	cmp	r5, #5
2ffeb622:	d11f      	bne.n	2ffeb664 <bl2_plat_handle_pre_image_load+0x54>
2ffeb624:	2c01      	cmp	r4, #1
2ffeb626:	d11b      	bne.n	2ffeb660 <bl2_plat_handle_pre_image_load+0x50>
2ffeb628:	f001 f9a8 	bl	2ffec97c <stm32mp_get_boot_ctx_address>
2ffeb62c:	7883      	ldrb	r3, [r0, #2]
2ffeb62e:	78c0      	ldrb	r0, [r0, #3]
2ffeb630:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffeb634:	f003 fc68 	bl	2ffeef08 <get_uart_address>
2ffeb638:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeb63c:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
2ffeb640:	2103      	movs	r1, #3
2ffeb642:	f000 f88d 	bl	2ffeb760 <stm32cubeprog_uart_load>
2ffeb646:	b120      	cbz	r0, 2ffeb652 <bl2_plat_handle_pre_image_load+0x42>
2ffeb648:	480a      	ldr	r0, [pc, #40]	@ (2ffeb674 <bl2_plat_handle_pre_image_load+0x64>)
2ffeb64a:	f44f 71da 	mov.w	r1, #436	@ 0x1b4
2ffeb64e:	f006 ff63 	bl	2fff2518 <__assert>
2ffeb652:	4b09      	ldr	r3, [pc, #36]	@ (2ffeb678 <bl2_plat_handle_pre_image_load+0x68>)
2ffeb654:	f04f 4247 	mov.w	r2, #3338665984	@ 0xc7000000
2ffeb658:	601a      	str	r2, [r3, #0]
2ffeb65a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
2ffeb65e:	605a      	str	r2, [r3, #4]
2ffeb660:	2000      	movs	r0, #0
2ffeb662:	bd38      	pop	{r3, r4, r5, pc}
2ffeb664:	4805      	ldr	r0, [pc, #20]	@ (2ffeb67c <bl2_plat_handle_pre_image_load+0x6c>)
2ffeb666:	f001 f829 	bl	2ffec6bc <tf_log>
2ffeb66a:	f001 f8c3 	bl	2ffec7f4 <console_flush>
2ffeb66e:	f7fd eeb6 	blx	2ffe93dc <do_panic>
2ffeb672:	bf00      	nop
2ffeb674:	2fff5d45 	.word	0x2fff5d45
2ffeb678:	2fff93cc 	.word	0x2fff93cc
2ffeb67c:	2fff5d87 	.word	0x2fff5d87

2ffeb680 <plat_get_image_source>:
2ffeb680:	2812      	cmp	r0, #18
2ffeb682:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeb686:	460d      	mov	r5, r1
2ffeb688:	4616      	mov	r6, r2
2ffeb68a:	d904      	bls.n	2ffeb696 <plat_get_image_source+0x16>
2ffeb68c:	480b      	ldr	r0, [pc, #44]	@ (2ffeb6bc <plat_get_image_source+0x3c>)
2ffeb68e:	f240 21da 	movw	r1, #730	@ 0x2da
2ffeb692:	f006 ff41 	bl	2fff2518 <__assert>
2ffeb696:	f8df 8028 	ldr.w	r8, [pc, #40]	@ 2ffeb6c0 <plat_get_image_source+0x40>
2ffeb69a:	231c      	movs	r3, #28
2ffeb69c:	fb03 f400 	mul.w	r4, r3, r0
2ffeb6a0:	eb08 0704 	add.w	r7, r8, r4
2ffeb6a4:	69bb      	ldr	r3, [r7, #24]
2ffeb6a6:	6878      	ldr	r0, [r7, #4]
2ffeb6a8:	4798      	blx	r3
2ffeb6aa:	b928      	cbnz	r0, 2ffeb6b8 <plat_get_image_source+0x38>
2ffeb6ac:	687b      	ldr	r3, [r7, #4]
2ffeb6ae:	6033      	str	r3, [r6, #0]
2ffeb6b0:	f858 3004 	ldr.w	r3, [r8, r4]
2ffeb6b4:	681b      	ldr	r3, [r3, #0]
2ffeb6b6:	602b      	str	r3, [r5, #0]
2ffeb6b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeb6bc:	2fff5d45 	.word	0x2fff5d45
2ffeb6c0:	2fff8070 	.word	0x2fff8070

2ffeb6c4 <uart_send_result>:
2ffeb6c4:	b510      	push	{r4, lr}
2ffeb6c6:	4604      	mov	r4, r0
2ffeb6c8:	4805      	ldr	r0, [pc, #20]	@ (2ffeb6e0 <uart_send_result+0x1c>)
2ffeb6ca:	f007 fac9 	bl	2fff2c60 <stm32_uart_getc>
2ffeb6ce:	2800      	cmp	r0, #0
2ffeb6d0:	dafa      	bge.n	2ffeb6c8 <uart_send_result+0x4>
2ffeb6d2:	4803      	ldr	r0, [pc, #12]	@ (2ffeb6e0 <uart_send_result+0x1c>)
2ffeb6d4:	4621      	mov	r1, r4
2ffeb6d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeb6da:	f007 ba9b 	b.w	2fff2c14 <stm32_uart_putc>
2ffeb6de:	bf00      	nop
2ffeb6e0:	2fff93e4 	.word	0x2fff93e4

2ffeb6e4 <uart_write>:
2ffeb6e4:	b570      	push	{r4, r5, r6, lr}
2ffeb6e6:	460c      	mov	r4, r1
2ffeb6e8:	4e07      	ldr	r6, [pc, #28]	@ (2ffeb708 <uart_write+0x24>)
2ffeb6ea:	1e45      	subs	r5, r0, #1
2ffeb6ec:	f815 1f01 	ldrb.w	r1, [r5, #1]!
2ffeb6f0:	4630      	mov	r0, r6
2ffeb6f2:	f007 fa8f 	bl	2fff2c14 <stm32_uart_putc>
2ffeb6f6:	b920      	cbnz	r0, 2ffeb702 <uart_write+0x1e>
2ffeb6f8:	3c01      	subs	r4, #1
2ffeb6fa:	b2a4      	uxth	r4, r4
2ffeb6fc:	2c00      	cmp	r4, #0
2ffeb6fe:	d1f5      	bne.n	2ffeb6ec <uart_write+0x8>
2ffeb700:	bd70      	pop	{r4, r5, r6, pc}
2ffeb702:	f06f 0004 	mvn.w	r0, #4
2ffeb706:	e7fb      	b.n	2ffeb700 <uart_write+0x1c>
2ffeb708:	2fff93e4 	.word	0x2fff93e4

2ffeb70c <uart_read_8>:
2ffeb70c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeb70e:	4605      	mov	r5, r0
2ffeb710:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeb714:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffeb718:	4a0f      	ldr	r2, [pc, #60]	@ (2ffeb758 <uart_read_8+0x4c>)
2ffeb71a:	f644 6020 	movw	r0, #20000	@ 0x4e20
2ffeb71e:	2300      	movs	r3, #0
2ffeb720:	fba1 0100 	umull	r0, r1, r1, r0
2ffeb724:	f006 ed94 	blx	2fff2250 <__aeabi_uldivmod>
2ffeb728:	1984      	adds	r4, r0, r6
2ffeb72a:	eb41 0607 	adc.w	r6, r1, r7
2ffeb72e:	4f0b      	ldr	r7, [pc, #44]	@ (2ffeb75c <uart_read_8+0x50>)
2ffeb730:	4638      	mov	r0, r7
2ffeb732:	f007 fa95 	bl	2fff2c60 <stm32_uart_getc>
2ffeb736:	f110 0f23 	cmn.w	r0, #35	@ 0x23
2ffeb73a:	d108      	bne.n	2ffeb74e <uart_read_8+0x42>
2ffeb73c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeb740:	4294      	cmp	r4, r2
2ffeb742:	eb76 0303 	sbcs.w	r3, r6, r3
2ffeb746:	d2f3      	bcs.n	2ffeb730 <uart_read_8+0x24>
2ffeb748:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2ffeb74c:	e003      	b.n	2ffeb756 <uart_read_8+0x4a>
2ffeb74e:	2800      	cmp	r0, #0
2ffeb750:	db01      	blt.n	2ffeb756 <uart_read_8+0x4a>
2ffeb752:	7028      	strb	r0, [r5, #0]
2ffeb754:	2000      	movs	r0, #0
2ffeb756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeb758:	000f4240 	.word	0x000f4240
2ffeb75c:	2fff93e4 	.word	0x2fff93e4

2ffeb760 <stm32cubeprog_uart_load>:
2ffeb760:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffeb764:	4698      	mov	r8, r3
2ffeb766:	4cb2      	ldr	r4, [pc, #712]	@ (2ffeba30 <stm32cubeprog_uart_load+0x2d0>)
2ffeb768:	460e      	mov	r6, r1
2ffeb76a:	4615      	mov	r5, r2
2ffeb76c:	7823      	ldrb	r3, [r4, #0]
2ffeb76e:	b97b      	cbnz	r3, 2ffeb790 <stm32cubeprog_uart_load+0x30>
2ffeb770:	4ab0      	ldr	r2, [pc, #704]	@ (2ffeba34 <stm32cubeprog_uart_load+0x2d4>)
2ffeb772:	4601      	mov	r1, r0
2ffeb774:	48b0      	ldr	r0, [pc, #704]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb776:	f7ff fc07 	bl	2ffeaf88 <stm32_uart_init>
2ffeb77a:	2800      	cmp	r0, #0
2ffeb77c:	f040 81d9 	bne.w	2ffebb32 <stm32cubeprog_uart_load+0x3d2>
2ffeb780:	201f      	movs	r0, #31
2ffeb782:	f7ff ff9f 	bl	2ffeb6c4 <uart_send_result>
2ffeb786:	2800      	cmp	r0, #0
2ffeb788:	f040 80b9 	bne.w	2ffeb8fe <stm32cubeprog_uart_load+0x19e>
2ffeb78c:	2301      	movs	r3, #1
2ffeb78e:	7023      	strb	r3, [r4, #0]
2ffeb790:	4ca9      	ldr	r4, [pc, #676]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb792:	2700      	movs	r7, #0
2ffeb794:	48a9      	ldr	r0, [pc, #676]	@ (2ffeba3c <stm32cubeprog_uart_load+0x2dc>)
2ffeb796:	4643      	mov	r3, r8
2ffeb798:	7526      	strb	r6, [r4, #20]
2ffeb79a:	462a      	mov	r2, r5
2ffeb79c:	60a7      	str	r7, [r4, #8]
2ffeb79e:	4631      	mov	r1, r6
2ffeb7a0:	60e5      	str	r5, [r4, #12]
2ffeb7a2:	f8c4 8010 	str.w	r8, [r4, #16]
2ffeb7a6:	f000 ff89 	bl	2ffec6bc <tf_log>
2ffeb7aa:	f88d 700b 	strb.w	r7, [sp, #11]
2ffeb7ae:	f88d 700c 	strb.w	r7, [sp, #12]
2ffeb7b2:	f004 ff17 	bl	2fff05e4 <stm32_iwdg_refresh>
2ffeb7b6:	f10d 000b 	add.w	r0, sp, #11
2ffeb7ba:	f7ff ffa7 	bl	2ffeb70c <uart_read_8>
2ffeb7be:	f110 0f3c 	cmn.w	r0, #60	@ 0x3c
2ffeb7c2:	d0f6      	beq.n	2ffeb7b2 <stm32cubeprog_uart_load+0x52>
2ffeb7c4:	b120      	cbz	r0, 2ffeb7d0 <stm32cubeprog_uart_load+0x70>
2ffeb7c6:	2003      	movs	r0, #3
2ffeb7c8:	f007 fcd1 	bl	2fff316e <mdelay>
2ffeb7cc:	201f      	movs	r0, #31
2ffeb7ce:	e101      	b.n	2ffeb9d4 <stm32cubeprog_uart_load+0x274>
2ffeb7d0:	f89d 900b 	ldrb.w	r9, [sp, #11]
2ffeb7d4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
2ffeb7d8:	d106      	bne.n	2ffeb7e8 <stm32cubeprog_uart_load+0x88>
2ffeb7da:	2079      	movs	r0, #121	@ 0x79
2ffeb7dc:	f7ff ff72 	bl	2ffeb6c4 <uart_send_result>
2ffeb7e0:	4897      	ldr	r0, [pc, #604]	@ (2ffeba40 <stm32cubeprog_uart_load+0x2e0>)
2ffeb7e2:	f000 ff6b 	bl	2ffec6bc <tf_log>
2ffeb7e6:	e7e0      	b.n	2ffeb7aa <stm32cubeprog_uart_load+0x4a>
2ffeb7e8:	f1b9 0f03 	cmp.w	r9, #3
2ffeb7ec:	d903      	bls.n	2ffeb7f6 <stm32cubeprog_uart_load+0x96>
2ffeb7ee:	f009 03ef 	and.w	r3, r9, #239	@ 0xef
2ffeb7f2:	2b21      	cmp	r3, #33	@ 0x21
2ffeb7f4:	d1e7      	bne.n	2ffeb7c6 <stm32cubeprog_uart_load+0x66>
2ffeb7f6:	a803      	add	r0, sp, #12
2ffeb7f8:	f7ff ff88 	bl	2ffeb70c <uart_read_8>
2ffeb7fc:	4680      	mov	r8, r0
2ffeb7fe:	2800      	cmp	r0, #0
2ffeb800:	d1e1      	bne.n	2ffeb7c6 <stm32cubeprog_uart_load+0x66>
2ffeb802:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeb806:	ea89 0303 	eor.w	r3, r9, r3
2ffeb80a:	2bff      	cmp	r3, #255	@ 0xff
2ffeb80c:	d1db      	bne.n	2ffeb7c6 <stm32cubeprog_uart_load+0x66>
2ffeb80e:	2079      	movs	r0, #121	@ 0x79
2ffeb810:	f7ff ff58 	bl	2ffeb6c4 <uart_send_result>
2ffeb814:	f1b9 0f03 	cmp.w	r9, #3
2ffeb818:	d808      	bhi.n	2ffeb82c <stm32cubeprog_uart_load+0xcc>
2ffeb81a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
2ffeb81e:	f1b9 0f02 	cmp.w	r9, #2
2ffeb822:	d80e      	bhi.n	2ffeb842 <stm32cubeprog_uart_load+0xe2>
2ffeb824:	e8df f009 	tbb	[pc, r9]
2ffeb828:	231c      	.short	0x231c
2ffeb82a:	36          	.byte	0x36
2ffeb82b:	00          	.byte	0x00
2ffeb82c:	f1b9 0f21 	cmp.w	r9, #33	@ 0x21
2ffeb830:	f000 8118 	beq.w	2ffeba64 <stm32cubeprog_uart_load+0x304>
2ffeb834:	f1b9 0f31 	cmp.w	r9, #49	@ 0x31
2ffeb838:	d06e      	beq.n	2ffeb918 <stm32cubeprog_uart_load+0x1b8>
2ffeb83a:	4882      	ldr	r0, [pc, #520]	@ (2ffeba44 <stm32cubeprog_uart_load+0x2e4>)
2ffeb83c:	f000 ff3e 	bl	2ffec6bc <tf_log>
2ffeb840:	e7c4      	b.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb842:	f244 0306 	movw	r3, #16390	@ 0x4006
2ffeb846:	2102      	movs	r1, #2
2ffeb848:	f8ad 300c 	strh.w	r3, [sp, #12]
2ffeb84c:	a803      	add	r0, sp, #12
2ffeb84e:	f7ff ff49 	bl	2ffeb6e4 <uart_write>
2ffeb852:	2800      	cmp	r0, #0
2ffeb854:	d1ba      	bne.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb856:	487c      	ldr	r0, [pc, #496]	@ (2ffeba48 <stm32cubeprog_uart_load+0x2e8>)
2ffeb858:	2106      	movs	r1, #6
2ffeb85a:	f7ff ff43 	bl	2ffeb6e4 <uart_write>
2ffeb85e:	e003      	b.n	2ffeb868 <stm32cubeprog_uart_load+0x108>
2ffeb860:	4875      	ldr	r0, [pc, #468]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb862:	2100      	movs	r1, #0
2ffeb864:	f007 f9d6 	bl	2fff2c14 <stm32_uart_putc>
2ffeb868:	2800      	cmp	r0, #0
2ffeb86a:	d1af      	bne.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb86c:	e0b1      	b.n	2ffeb9d2 <stm32cubeprog_uart_load+0x272>
2ffeb86e:	4977      	ldr	r1, [pc, #476]	@ (2ffeba4c <stm32cubeprog_uart_load+0x2ec>)
2ffeb870:	2202      	movs	r2, #2
2ffeb872:	a803      	add	r0, sp, #12
2ffeb874:	f008 fc6d 	bl	2fff4152 <memcpy>
2ffeb878:	2300      	movs	r3, #0
2ffeb87a:	f88d 300e 	strb.w	r3, [sp, #14]
2ffeb87e:	f003 fb5f 	bl	2ffeef40 <stm32mp_get_chip_dev_id>
2ffeb882:	f3c0 2307 	ubfx	r3, r0, #8, #8
2ffeb886:	2103      	movs	r1, #3
2ffeb888:	f88d 000e 	strb.w	r0, [sp, #14]
2ffeb88c:	a803      	add	r0, sp, #12
2ffeb88e:	f88d 300d 	strb.w	r3, [sp, #13]
2ffeb892:	e7e2      	b.n	2ffeb85a <stm32cubeprog_uart_load+0xfa>
2ffeb894:	7d23      	ldrb	r3, [r4, #20]
2ffeb896:	2bff      	cmp	r3, #255	@ 0xff
2ffeb898:	d134      	bne.n	2ffeb904 <stm32cubeprog_uart_load+0x1a4>
2ffeb89a:	486d      	ldr	r0, [pc, #436]	@ (2ffeba50 <stm32cubeprog_uart_load+0x2f0>)
2ffeb89c:	2140      	movs	r1, #64	@ 0x40
2ffeb89e:	f008 fda1 	bl	2fff43e4 <strnlen>
2ffeb8a2:	fa5f f880 	uxtb.w	r8, r0
2ffeb8a6:	4864      	ldr	r0, [pc, #400]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb8a8:	f108 0105 	add.w	r1, r8, #5
2ffeb8ac:	b2c9      	uxtb	r1, r1
2ffeb8ae:	f007 f9b1 	bl	2fff2c14 <stm32_uart_putc>
2ffeb8b2:	2800      	cmp	r0, #0
2ffeb8b4:	d18a      	bne.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb8b6:	7d21      	ldrb	r1, [r4, #20]
2ffeb8b8:	485f      	ldr	r0, [pc, #380]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb8ba:	f007 f9ab 	bl	2fff2c14 <stm32_uart_putc>
2ffeb8be:	2800      	cmp	r0, #0
2ffeb8c0:	d184      	bne.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb8c2:	9503      	str	r5, [sp, #12]
2ffeb8c4:	2104      	movs	r1, #4
2ffeb8c6:	a803      	add	r0, sp, #12
2ffeb8c8:	f7ff ff0c 	bl	2ffeb6e4 <uart_write>
2ffeb8cc:	2800      	cmp	r0, #0
2ffeb8ce:	f47f af7d 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb8d2:	4859      	ldr	r0, [pc, #356]	@ (2ffeba38 <stm32cubeprog_uart_load+0x2d8>)
2ffeb8d4:	4641      	mov	r1, r8
2ffeb8d6:	f007 f99d 	bl	2fff2c14 <stm32_uart_putc>
2ffeb8da:	2800      	cmp	r0, #0
2ffeb8dc:	f47f af76 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb8e0:	f1b8 0f00 	cmp.w	r8, #0
2ffeb8e4:	d111      	bne.n	2ffeb90a <stm32cubeprog_uart_load+0x1aa>
2ffeb8e6:	7d23      	ldrb	r3, [r4, #20]
2ffeb8e8:	2bff      	cmp	r3, #255	@ 0xff
2ffeb8ea:	d172      	bne.n	2ffeb9d2 <stm32cubeprog_uart_load+0x272>
2ffeb8ec:	4859      	ldr	r0, [pc, #356]	@ (2ffeba54 <stm32cubeprog_uart_load+0x2f4>)
2ffeb8ee:	f000 fee5 	bl	2ffec6bc <tf_log>
2ffeb8f2:	2079      	movs	r0, #121	@ 0x79
2ffeb8f4:	f7ff fee6 	bl	2ffeb6c4 <uart_send_result>
2ffeb8f8:	2800      	cmp	r0, #0
2ffeb8fa:	f000 8115 	beq.w	2ffebb28 <stm32cubeprog_uart_load+0x3c8>
2ffeb8fe:	b004      	add	sp, #16
2ffeb900:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffeb904:	f04f 0800 	mov.w	r8, #0
2ffeb908:	e7cd      	b.n	2ffeb8a6 <stm32cubeprog_uart_load+0x146>
2ffeb90a:	4851      	ldr	r0, [pc, #324]	@ (2ffeba50 <stm32cubeprog_uart_load+0x2f0>)
2ffeb90c:	4641      	mov	r1, r8
2ffeb90e:	f7ff fee9 	bl	2ffeb6e4 <uart_write>
2ffeb912:	2800      	cmp	r0, #0
2ffeb914:	d0e7      	beq.n	2ffeb8e6 <stm32cubeprog_uart_load+0x186>
2ffeb916:	e759      	b.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb918:	f88d 800b 	strb.w	r8, [sp, #11]
2ffeb91c:	f10d 000b 	add.w	r0, sp, #11
2ffeb920:	f88d 800c 	strb.w	r8, [sp, #12]
2ffeb924:	f7ff fef2 	bl	2ffeb70c <uart_read_8>
2ffeb928:	2800      	cmp	r0, #0
2ffeb92a:	f47f af4f 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb92e:	f89d a00b 	ldrb.w	sl, [sp, #11]
2ffeb932:	f04f 0903 	mov.w	r9, #3
2ffeb936:	4680      	mov	r8, r0
2ffeb938:	a803      	add	r0, sp, #12
2ffeb93a:	f7ff fee7 	bl	2ffeb70c <uart_read_8>
2ffeb93e:	2800      	cmp	r0, #0
2ffeb940:	f47f af44 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb944:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeb948:	f1b9 0901 	subs.w	r9, r9, #1
2ffeb94c:	ea83 0a0a 	eor.w	sl, r3, sl
2ffeb950:	ea43 2808 	orr.w	r8, r3, r8, lsl #8
2ffeb954:	d1f0      	bne.n	2ffeb938 <stm32cubeprog_uart_load+0x1d8>
2ffeb956:	68a2      	ldr	r2, [r4, #8]
2ffeb958:	4590      	cmp	r8, r2
2ffeb95a:	d004      	beq.n	2ffeb966 <stm32cubeprog_uart_load+0x206>
2ffeb95c:	483e      	ldr	r0, [pc, #248]	@ (2ffeba58 <stm32cubeprog_uart_load+0x2f8>)
2ffeb95e:	4641      	mov	r1, r8
2ffeb960:	f000 feac 	bl	2ffec6bc <tf_log>
2ffeb964:	e732      	b.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb966:	a803      	add	r0, sp, #12
2ffeb968:	f7ff fed0 	bl	2ffeb70c <uart_read_8>
2ffeb96c:	2800      	cmp	r0, #0
2ffeb96e:	f47f af2d 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb972:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeb976:	4553      	cmp	r3, sl
2ffeb978:	f47f af28 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb97c:	2079      	movs	r0, #121	@ 0x79
2ffeb97e:	f7ff fea1 	bl	2ffeb6c4 <uart_send_result>
2ffeb982:	2800      	cmp	r0, #0
2ffeb984:	f47f af22 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb988:	a803      	add	r0, sp, #12
2ffeb98a:	f7ff febf 	bl	2ffeb70c <uart_read_8>
2ffeb98e:	2800      	cmp	r0, #0
2ffeb990:	f47f af1c 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb994:	f89d a00c 	ldrb.w	sl, [sp, #12]
2ffeb998:	6923      	ldr	r3, [r4, #16]
2ffeb99a:	f10a 0801 	add.w	r8, sl, #1
2ffeb99e:	4598      	cmp	r8, r3
2ffeb9a0:	d91e      	bls.n	2ffeb9e0 <stm32cubeprog_uart_load+0x280>
2ffeb9a2:	68e1      	ldr	r1, [r4, #12]
2ffeb9a4:	482d      	ldr	r0, [pc, #180]	@ (2ffeba5c <stm32cubeprog_uart_load+0x2fc>)
2ffeb9a6:	4441      	add	r1, r8
2ffeb9a8:	f000 fe88 	bl	2ffec6bc <tf_log>
2ffeb9ac:	7d23      	ldrb	r3, [r4, #20]
2ffeb9ae:	2bff      	cmp	r3, #255	@ 0xff
2ffeb9b0:	d00f      	beq.n	2ffeb9d2 <stm32cubeprog_uart_load+0x272>
2ffeb9b2:	68e3      	ldr	r3, [r4, #12]
2ffeb9b4:	2140      	movs	r1, #64	@ 0x40
2ffeb9b6:	4a2a      	ldr	r2, [pc, #168]	@ (2ffeba60 <stm32cubeprog_uart_load+0x300>)
2ffeb9b8:	4443      	add	r3, r8
2ffeb9ba:	4825      	ldr	r0, [pc, #148]	@ (2ffeba50 <stm32cubeprog_uart_load+0x2f0>)
2ffeb9bc:	f008 fcbe 	bl	2fff433c <snprintf>
2ffeb9c0:	f8c4 9010 	str.w	r9, [r4, #16]
2ffeb9c4:	23ff      	movs	r3, #255	@ 0xff
2ffeb9c6:	7523      	strb	r3, [r4, #20]
2ffeb9c8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffeb9cc:	60e3      	str	r3, [r4, #12]
2ffeb9ce:	f8c4 9008 	str.w	r9, [r4, #8]
2ffeb9d2:	2079      	movs	r0, #121	@ 0x79
2ffeb9d4:	f7ff fe76 	bl	2ffeb6c4 <uart_send_result>
2ffeb9d8:	2800      	cmp	r0, #0
2ffeb9da:	f43f aee6 	beq.w	2ffeb7aa <stm32cubeprog_uart_load+0x4a>
2ffeb9de:	e78e      	b.n	2ffeb8fe <stm32cubeprog_uart_load+0x19e>
2ffeb9e0:	a803      	add	r0, sp, #12
2ffeb9e2:	f7ff fe93 	bl	2ffeb70c <uart_read_8>
2ffeb9e6:	2800      	cmp	r0, #0
2ffeb9e8:	f47f aef0 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeb9ec:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeb9f0:	68e2      	ldr	r2, [r4, #12]
2ffeb9f2:	ea83 0a0a 	eor.w	sl, r3, sl
2ffeb9f6:	f802 3009 	strb.w	r3, [r2, r9]
2ffeb9fa:	f109 0901 	add.w	r9, r9, #1
2ffeb9fe:	45c8      	cmp	r8, r9
2ffeba00:	d8ee      	bhi.n	2ffeb9e0 <stm32cubeprog_uart_load+0x280>
2ffeba02:	a803      	add	r0, sp, #12
2ffeba04:	f7ff fe82 	bl	2ffeb70c <uart_read_8>
2ffeba08:	2800      	cmp	r0, #0
2ffeba0a:	f47f aedf 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeba0e:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeba12:	4553      	cmp	r3, sl
2ffeba14:	f47f aeda 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeba18:	68a3      	ldr	r3, [r4, #8]
2ffeba1a:	3301      	adds	r3, #1
2ffeba1c:	60a3      	str	r3, [r4, #8]
2ffeba1e:	68e3      	ldr	r3, [r4, #12]
2ffeba20:	4443      	add	r3, r8
2ffeba22:	60e3      	str	r3, [r4, #12]
2ffeba24:	6923      	ldr	r3, [r4, #16]
2ffeba26:	eba3 0308 	sub.w	r3, r3, r8
2ffeba2a:	6123      	str	r3, [r4, #16]
2ffeba2c:	e7d1      	b.n	2ffeb9d2 <stm32cubeprog_uart_load+0x272>
2ffeba2e:	bf00      	nop
2ffeba30:	2fff9a29 	.word	0x2fff9a29
2ffeba34:	2fff4558 	.word	0x2fff4558
2ffeba38:	2fff93e4 	.word	0x2fff93e4
2ffeba3c:	2fff5d97 	.word	0x2fff5d97
2ffeba40:	2fff5dc1 	.word	0x2fff5dc1
2ffeba44:	2fff5e95 	.word	0x2fff5e95
2ffeba48:	2fff5ead 	.word	0x2fff5ead
2ffeba4c:	2fff5eb3 	.word	0x2fff5eb3
2ffeba50:	2fff93f9 	.word	0x2fff93f9
2ffeba54:	2fff5dd3 	.word	0x2fff5dd3
2ffeba58:	2fff5de1 	.word	0x2fff5de1
2ffeba5c:	2fff5e14 	.word	0x2fff5e14
2ffeba60:	2fff5e15 	.word	0x2fff5e15
2ffeba64:	f88d 800c 	strb.w	r8, [sp, #12]
2ffeba68:	f04f 0904 	mov.w	r9, #4
2ffeba6c:	46c2      	mov	sl, r8
2ffeba6e:	a803      	add	r0, sp, #12
2ffeba70:	f7ff fe4c 	bl	2ffeb70c <uart_read_8>
2ffeba74:	2800      	cmp	r0, #0
2ffeba76:	f47f aea9 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeba7a:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeba7e:	f1b9 0901 	subs.w	r9, r9, #1
2ffeba82:	ea83 0a0a 	eor.w	sl, r3, sl
2ffeba86:	ea43 2808 	orr.w	r8, r3, r8, lsl #8
2ffeba8a:	d1f0      	bne.n	2ffeba6e <stm32cubeprog_uart_load+0x30e>
2ffeba8c:	a803      	add	r0, sp, #12
2ffeba8e:	f7ff fe3d 	bl	2ffeb70c <uart_read_8>
2ffeba92:	2800      	cmp	r0, #0
2ffeba94:	f47f ae9a 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffeba98:	f89d 300c 	ldrb.w	r3, [sp, #12]
2ffeba9c:	4553      	cmp	r3, sl
2ffeba9e:	f47f ae95 	bne.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffebaa2:	7d22      	ldrb	r2, [r4, #20]
2ffebaa4:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
2ffebaa8:	d01f      	beq.n	2ffebaea <stm32cubeprog_uart_load+0x38a>
2ffebaaa:	4823      	ldr	r0, [pc, #140]	@ (2ffebb38 <stm32cubeprog_uart_load+0x3d8>)
2ffebaac:	4641      	mov	r1, r8
2ffebaae:	f000 fe05 	bl	2ffec6bc <tf_log>
2ffebab2:	7d23      	ldrb	r3, [r4, #20]
2ffebab4:	2bff      	cmp	r3, #255	@ 0xff
2ffebab6:	d00f      	beq.n	2ffebad8 <stm32cubeprog_uart_load+0x378>
2ffebab8:	9300      	str	r3, [sp, #0]
2ffebaba:	2140      	movs	r1, #64	@ 0x40
2ffebabc:	4a1f      	ldr	r2, [pc, #124]	@ (2ffebb3c <stm32cubeprog_uart_load+0x3dc>)
2ffebabe:	4643      	mov	r3, r8
2ffebac0:	481f      	ldr	r0, [pc, #124]	@ (2ffebb40 <stm32cubeprog_uart_load+0x3e0>)
2ffebac2:	f008 fc3b 	bl	2fff433c <snprintf>
2ffebac6:	f8c4 9010 	str.w	r9, [r4, #16]
2ffebaca:	23ff      	movs	r3, #255	@ 0xff
2ffebacc:	7523      	strb	r3, [r4, #20]
2ffebace:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffebad2:	60e3      	str	r3, [r4, #12]
2ffebad4:	f8c4 9008 	str.w	r9, [r4, #8]
2ffebad8:	7d23      	ldrb	r3, [r4, #20]
2ffebada:	429e      	cmp	r6, r3
2ffebadc:	f47f af79 	bne.w	2ffeb9d2 <stm32cubeprog_uart_load+0x272>
2ffebae0:	4818      	ldr	r0, [pc, #96]	@ (2ffebb44 <stm32cubeprog_uart_load+0x3e4>)
2ffebae2:	4631      	mov	r1, r6
2ffebae4:	f000 fdea 	bl	2ffec6bc <tf_log>
2ffebae8:	e703      	b.n	2ffeb8f2 <stm32cubeprog_uart_load+0x192>
2ffebaea:	6829      	ldr	r1, [r5, #0]
2ffebaec:	4b16      	ldr	r3, [pc, #88]	@ (2ffebb48 <stm32cubeprog_uart_load+0x3e8>)
2ffebaee:	4299      	cmp	r1, r3
2ffebaf0:	d102      	bne.n	2ffebaf8 <stm32cubeprog_uart_load+0x398>
2ffebaf2:	686b      	ldr	r3, [r5, #4]
2ffebaf4:	2b00      	cmp	r3, #0
2ffebaf6:	d1ef      	bne.n	2ffebad8 <stm32cubeprog_uart_load+0x378>
2ffebaf8:	4814      	ldr	r0, [pc, #80]	@ (2ffebb4c <stm32cubeprog_uart_load+0x3ec>)
2ffebafa:	4629      	mov	r1, r5
2ffebafc:	f000 fdde 	bl	2ffec6bc <tf_log>
2ffebb00:	7d23      	ldrb	r3, [r4, #20]
2ffebb02:	2bff      	cmp	r3, #255	@ 0xff
2ffebb04:	f43f ae62 	beq.w	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffebb08:	9300      	str	r3, [sp, #0]
2ffebb0a:	2140      	movs	r1, #64	@ 0x40
2ffebb0c:	4a10      	ldr	r2, [pc, #64]	@ (2ffebb50 <stm32cubeprog_uart_load+0x3f0>)
2ffebb0e:	462b      	mov	r3, r5
2ffebb10:	480b      	ldr	r0, [pc, #44]	@ (2ffebb40 <stm32cubeprog_uart_load+0x3e0>)
2ffebb12:	f008 fc13 	bl	2fff433c <snprintf>
2ffebb16:	23ff      	movs	r3, #255	@ 0xff
2ffebb18:	7523      	strb	r3, [r4, #20]
2ffebb1a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2ffebb1e:	60e3      	str	r3, [r4, #12]
2ffebb20:	2300      	movs	r3, #0
2ffebb22:	6123      	str	r3, [r4, #16]
2ffebb24:	60a3      	str	r3, [r4, #8]
2ffebb26:	e651      	b.n	2ffeb7cc <stm32cubeprog_uart_load+0x6c>
2ffebb28:	480a      	ldr	r0, [pc, #40]	@ (2ffebb54 <stm32cubeprog_uart_load+0x3f4>)
2ffebb2a:	f007 f889 	bl	2fff2c40 <stm32_uart_flush>
2ffebb2e:	2000      	movs	r0, #0
2ffebb30:	e6e5      	b.n	2ffeb8fe <stm32cubeprog_uart_load+0x19e>
2ffebb32:	f06f 0004 	mvn.w	r0, #4
2ffebb36:	e6e2      	b.n	2ffeb8fe <stm32cubeprog_uart_load+0x19e>
2ffebb38:	2fff5e2e 	.word	0x2fff5e2e
2ffebb3c:	2fff5e2f 	.word	0x2fff5e2f
2ffebb40:	2fff93f9 	.word	0x2fff93f9
2ffebb44:	2fff5e7e 	.word	0x2fff5e7e
2ffebb48:	aa640001 	.word	0xaa640001
2ffebb4c:	2fff5e52 	.word	0x2fff5e52
2ffebb50:	2fff5e53 	.word	0x2fff5e53
2ffebb54:	2fff93e4 	.word	0x2fff93e4

2ffebb58 <fconf_populate_stm32mp_io_policies>:
2ffebb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffebb5c:	b089      	sub	sp, #36	@ 0x24
2ffebb5e:	4a2b      	ldr	r2, [pc, #172]	@ (2ffebc0c <fconf_populate_stm32mp_io_policies+0xb4>)
2ffebb60:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffebb64:	9002      	str	r0, [sp, #8]
2ffebb66:	f008 fabd 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffebb6a:	1e04      	subs	r4, r0, #0
2ffebb6c:	da07      	bge.n	2ffebb7e <fconf_populate_stm32mp_io_policies+0x26>
2ffebb6e:	4927      	ldr	r1, [pc, #156]	@ (2ffebc0c <fconf_populate_stm32mp_io_policies+0xb4>)
2ffebb70:	4827      	ldr	r0, [pc, #156]	@ (2ffebc10 <fconf_populate_stm32mp_io_policies+0xb8>)
2ffebb72:	f000 fda3 	bl	2ffec6bc <tf_log>
2ffebb76:	4620      	mov	r0, r4
2ffebb78:	b009      	add	sp, #36	@ 0x24
2ffebb7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffebb7e:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 2ffebc14 <fconf_populate_stm32mp_io_policies+0xbc>
2ffebb82:	2700      	movs	r7, #0
2ffebb84:	4d24      	ldr	r5, [pc, #144]	@ (2ffebc18 <fconf_populate_stm32mp_io_policies+0xc0>)
2ffebb86:	f8df 9094 	ldr.w	r9, [pc, #148]	@ 2ffebc1c <fconf_populate_stm32mp_io_policies+0xc4>
2ffebb8a:	68eb      	ldr	r3, [r5, #12]
2ffebb8c:	686a      	ldr	r2, [r5, #4]
2ffebb8e:	1c59      	adds	r1, r3, #1
2ffebb90:	4291      	cmp	r1, r2
2ffebb92:	d908      	bls.n	2ffebba6 <fconf_populate_stm32mp_io_policies+0x4e>
2ffebb94:	1ad2      	subs	r2, r2, r3
2ffebb96:	2101      	movs	r1, #1
2ffebb98:	4821      	ldr	r0, [pc, #132]	@ (2ffebc20 <fconf_populate_stm32mp_io_policies+0xc8>)
2ffebb9a:	f000 fd8f 	bl	2ffec6bc <tf_log>
2ffebb9e:	f000 fe29 	bl	2ffec7f4 <console_flush>
2ffebba2:	f7fd ec1c 	blx	2ffe93dc <do_panic>
2ffebba6:	682a      	ldr	r2, [r5, #0]
2ffebba8:	f10d 0a10 	add.w	sl, sp, #16
2ffebbac:	68ae      	ldr	r6, [r5, #8]
2ffebbae:	60e9      	str	r1, [r5, #12]
2ffebbb0:	4621      	mov	r1, r4
2ffebbb2:	fb02 6603 	mla	r6, r2, r3, r6
2ffebbb6:	f8d8 2004 	ldr.w	r2, [r8, #4]
2ffebbba:	2310      	movs	r3, #16
2ffebbbc:	9802      	ldr	r0, [sp, #8]
2ffebbbe:	f8cd a000 	str.w	sl, [sp]
2ffebbc2:	9203      	str	r2, [sp, #12]
2ffebbc4:	f7fe f9ec 	bl	2ffe9fa0 <fdtw_read_uuid>
2ffebbc8:	9a03      	ldr	r2, [sp, #12]
2ffebbca:	f1b0 0b00 	subs.w	fp, r0, #0
2ffebbce:	da05      	bge.n	2ffebbdc <fconf_populate_stm32mp_io_policies+0x84>
2ffebbd0:	4814      	ldr	r0, [pc, #80]	@ (2ffebc24 <fconf_populate_stm32mp_io_policies+0xcc>)
2ffebbd2:	4611      	mov	r1, r2
2ffebbd4:	465c      	mov	r4, fp
2ffebbd6:	f000 fd71 	bl	2ffec6bc <tf_log>
2ffebbda:	e7cc      	b.n	2ffebb76 <fconf_populate_stm32mp_io_policies+0x1e>
2ffebbdc:	2210      	movs	r2, #16
2ffebbde:	4651      	mov	r1, sl
2ffebbe0:	4630      	mov	r0, r6
2ffebbe2:	3701      	adds	r7, #1
2ffebbe4:	f008 fab5 	bl	2fff4152 <memcpy>
2ffebbe8:	f858 3b08 	ldr.w	r3, [r8], #8
2ffebbec:	221c      	movs	r2, #28
2ffebbee:	490e      	ldr	r1, [pc, #56]	@ (2ffebc28 <fconf_populate_stm32mp_io_policies+0xd0>)
2ffebbf0:	2f07      	cmp	r7, #7
2ffebbf2:	fb02 f303 	mul.w	r3, r2, r3
2ffebbf6:	eb09 0203 	add.w	r2, r9, r3
2ffebbfa:	f849 1003 	str.w	r1, [r9, r3]
2ffebbfe:	4b0b      	ldr	r3, [pc, #44]	@ (2ffebc2c <fconf_populate_stm32mp_io_policies+0xd4>)
2ffebc00:	6056      	str	r6, [r2, #4]
2ffebc02:	6193      	str	r3, [r2, #24]
2ffebc04:	d1c1      	bne.n	2ffebb8a <fconf_populate_stm32mp_io_policies+0x32>
2ffebc06:	2400      	movs	r4, #0
2ffebc08:	e7b5      	b.n	2ffebb76 <fconf_populate_stm32mp_io_policies+0x1e>
2ffebc0a:	bf00      	nop
2ffebc0c:	2fff5eb6 	.word	0x2fff5eb6
2ffebc10:	2fff5a53 	.word	0x2fff5a53
2ffebc14:	2fff4584 	.word	0x2fff4584
2ffebc18:	2fff8060 	.word	0x2fff8060
2ffebc1c:	2fff8070 	.word	0x2fff8070
2ffebc20:	2fff59fa 	.word	0x2fff59fa
2ffebc24:	2fff5ec7 	.word	0x2fff5ec7
2ffebc28:	2fff93e0 	.word	0x2fff93e0
2ffebc2c:	2ffeb4d5 	.word	0x2ffeb4d5

2ffebc30 <bl2_platform_setup>:
2ffebc30:	b500      	push	{lr}
2ffebc32:	b08b      	sub	sp, #44	@ 0x2c
2ffebc34:	f7ff f910 	bl	2ffeae58 <stm32mp1_ddr_probe>
2ffebc38:	1e01      	subs	r1, r0, #0
2ffebc3a:	da06      	bge.n	2ffebc4a <bl2_platform_setup+0x1a>
2ffebc3c:	4817      	ldr	r0, [pc, #92]	@ (2ffebc9c <bl2_platform_setup+0x6c>)
2ffebc3e:	f000 fd3d 	bl	2ffec6bc <tf_log>
2ffebc42:	f000 fdd7 	bl	2ffec7f4 <console_flush>
2ffebc46:	f7fd ebca 	blx	2ffe93dc <do_panic>
2ffebc4a:	f7ff f8ff 	bl	2ffeae4c <stm32mp1_ddr_is_restored>
2ffebc4e:	b990      	cbnz	r0, 2ffebc76 <bl2_platform_setup+0x46>
2ffebc50:	9003      	str	r0, [sp, #12]
2ffebc52:	a804      	add	r0, sp, #16
2ffebc54:	f000 ff22 	bl	2ffeca9c <stm32_get_magic_number_cell>
2ffebc58:	a807      	add	r0, sp, #28
2ffebc5a:	f000 ff37 	bl	2ffecacc <stm32_get_core1_branch_address_cell>
2ffebc5e:	2204      	movs	r2, #4
2ffebc60:	a903      	add	r1, sp, #12
2ffebc62:	a807      	add	r0, sp, #28
2ffebc64:	f007 fb45 	bl	2fff32f2 <nvmem_cell_write>
2ffebc68:	2204      	movs	r2, #4
2ffebc6a:	a903      	add	r1, sp, #12
2ffebc6c:	a804      	add	r0, sp, #16
2ffebc6e:	f007 fb40 	bl	2fff32f2 <nvmem_cell_write>
2ffebc72:	f007 fe2c 	bl	2fff38ce <stm32_clean_context>
2ffebc76:	230a      	movs	r3, #10
2ffebc78:	2100      	movs	r1, #0
2ffebc7a:	9300      	str	r3, [sp, #0]
2ffebc7c:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2ffebc80:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffebc84:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2ffebc88:	f001 f8a8 	bl	2ffecddc <mmap_add_dynamic_region>
2ffebc8c:	1e01      	subs	r1, r0, #0
2ffebc8e:	da01      	bge.n	2ffebc94 <bl2_platform_setup+0x64>
2ffebc90:	4803      	ldr	r0, [pc, #12]	@ (2ffebca0 <bl2_platform_setup+0x70>)
2ffebc92:	e7d4      	b.n	2ffebc3e <bl2_platform_setup+0xe>
2ffebc94:	b00b      	add	sp, #44	@ 0x2c
2ffebc96:	f85d fb04 	ldr.w	pc, [sp], #4
2ffebc9a:	bf00      	nop
2ffebc9c:	2fff5f4b 	.word	0x2fff5f4b
2ffebca0:	2fff5f68 	.word	0x2fff5f68

2ffebca4 <bl2_el3_plat_arch_setup>:
2ffebca4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
2ffebca8:	f000 fe68 	bl	2ffec97c <stm32mp_get_boot_ctx_address>
2ffebcac:	4604      	mov	r4, r0
2ffebcae:	f003 fc3d 	bl	2ffef52c <bsec_probe>
2ffebcb2:	4601      	mov	r1, r0
2ffebcb4:	b118      	cbz	r0, 2ffebcbe <bl2_el3_plat_arch_setup+0x1a>
2ffebcb6:	f000 fd9d 	bl	2ffec7f4 <console_flush>
2ffebcba:	f7fd eb90 	blx	2ffe93dc <do_panic>
2ffebcbe:	4aab      	ldr	r2, [pc, #684]	@ (2ffebf6c <bl2_el3_plat_arch_setup+0x2c8>)
2ffebcc0:	2302      	movs	r3, #2
2ffebcc2:	9300      	str	r3, [sp, #0]
2ffebcc4:	4baa      	ldr	r3, [pc, #680]	@ (2ffebf70 <bl2_el3_plat_arch_setup+0x2cc>)
2ffebcc6:	4610      	mov	r0, r2
2ffebcc8:	1a9b      	subs	r3, r3, r2
2ffebcca:	f001 f86d 	bl	2ffecda8 <mmap_add_region>
2ffebcce:	4aa9      	ldr	r2, [pc, #676]	@ (2ffebf74 <bl2_el3_plat_arch_setup+0x2d0>)
2ffebcd0:	2342      	movs	r3, #66	@ 0x42
2ffebcd2:	48a8      	ldr	r0, [pc, #672]	@ (2ffebf74 <bl2_el3_plat_arch_setup+0x2d0>)
2ffebcd4:	2100      	movs	r1, #0
2ffebcd6:	9300      	str	r3, [sp, #0]
2ffebcd8:	f44f 43e0 	mov.w	r3, #28672	@ 0x7000
2ffebcdc:	f001 f864 	bl	2ffecda8 <mmap_add_region>
2ffebce0:	f003 f8d0 	bl	2ffeee84 <configure_mmu>
2ffebce4:	48a3      	ldr	r0, [pc, #652]	@ (2ffebf74 <bl2_el3_plat_arch_setup+0x2d0>)
2ffebce6:	f002 fe33 	bl	2ffee950 <dt_open_and_check>
2ffebcea:	2800      	cmp	r0, #0
2ffebcec:	dbe3      	blt.n	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebcee:	f000 fe59 	bl	2ffec9a4 <stm32mp_pwr_base>
2ffebcf2:	4605      	mov	r5, r0
2ffebcf4:	f007 f914 	bl	2fff2f20 <stm32mp_rcc_base>
2ffebcf8:	682b      	ldr	r3, [r5, #0]
2ffebcfa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffebcfe:	602b      	str	r3, [r5, #0]
2ffebd00:	682b      	ldr	r3, [r5, #0]
2ffebd02:	05de      	lsls	r6, r3, #23
2ffebd04:	d5fc      	bpl.n	2ffebd00 <bl2_el3_plat_arch_setup+0x5c>
2ffebd06:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2ffebd0a:	f500 72a0 	add.w	r2, r0, #320	@ 0x140
2ffebd0e:	02d9      	lsls	r1, r3, #11
2ffebd10:	d40e      	bmi.n	2ffebd30 <bl2_el3_plat_arch_setup+0x8c>
2ffebd12:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2ffebd16:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffebd1a:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
2ffebd1e:	6813      	ldr	r3, [r2, #0]
2ffebd20:	2b00      	cmp	r3, #0
2ffebd22:	dafc      	bge.n	2ffebd1e <bl2_el3_plat_arch_setup+0x7a>
2ffebd24:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2ffebd28:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffebd2c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
2ffebd30:	4b91      	ldr	r3, [pc, #580]	@ (2ffebf78 <bl2_el3_plat_arch_setup+0x2d4>)
2ffebd32:	6b1d      	ldr	r5, [r3, #48]	@ 0x30
2ffebd34:	f415 2580 	ands.w	r5, r5, #262144	@ 0x40000
2ffebd38:	d014      	beq.n	2ffebd64 <bl2_el3_plat_arch_setup+0xc0>
2ffebd3a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
2ffebd3e:	2501      	movs	r5, #1
2ffebd40:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
2ffebd44:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
2ffebd48:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
2ffebd4c:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
2ffebd50:	f022 0201 	bic.w	r2, r2, #1
2ffebd54:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
2ffebd58:	f8d3 2418 	ldr.w	r2, [r3, #1048]	@ 0x418
2ffebd5c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
2ffebd60:	f8c3 2418 	str.w	r2, [r3, #1048]	@ 0x418
2ffebd64:	f004 fcc8 	bl	2fff06f8 <dt_pmic_status>
2ffebd68:	2800      	cmp	r0, #0
2ffebd6a:	dc07      	bgt.n	2ffebd7c <bl2_el3_plat_arch_setup+0xd8>
2ffebd6c:	f007 f8d8 	bl	2fff2f20 <stm32mp_rcc_base>
2ffebd70:	f8d0 3144 	ldr.w	r3, [r0, #324]	@ 0x144
2ffebd74:	f443 13f8 	orr.w	r3, r3, #2031616	@ 0x1f0000
2ffebd78:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
2ffebd7c:	f001 fd7c 	bl	2ffed878 <generic_delay_timer_init>
2ffebd80:	7823      	ldrb	r3, [r4, #0]
2ffebd82:	7862      	ldrb	r2, [r4, #1]
2ffebd84:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffebd88:	2b05      	cmp	r3, #5
2ffebd8a:	d107      	bne.n	2ffebd9c <bl2_el3_plat_arch_setup+0xf8>
2ffebd8c:	78a3      	ldrb	r3, [r4, #2]
2ffebd8e:	78e0      	ldrb	r0, [r4, #3]
2ffebd90:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffebd94:	f003 f8b8 	bl	2ffeef08 <get_uart_address>
2ffebd98:	f006 ff37 	bl	2fff2c0a <stm32_uart_stop>
2ffebd9c:	f006 f94e 	bl	2fff203c <stm32mp1_clk_probe>
2ffebda0:	2800      	cmp	r0, #0
2ffebda2:	db88      	blt.n	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebda4:	4875      	ldr	r0, [pc, #468]	@ (2ffebf7c <bl2_el3_plat_arch_setup+0x2d8>)
2ffebda6:	f005 fc81 	bl	2fff16ac <stm32mp1_clk_init>
2ffebdaa:	2800      	cmp	r0, #0
2ffebdac:	db83      	blt.n	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebdae:	f002 faad 	bl	2ffee30c <stm32_tamp_nvram_init>
2ffebdb2:	4620      	mov	r0, r4
2ffebdb4:	f007 f8d4 	bl	2fff2f60 <stm32_save_boot_info>
2ffebdb8:	f000 fede 	bl	2ffecb78 <stm32mp_uart_console_setup>
2ffebdbc:	bb10      	cbnz	r0, 2ffebe04 <bl2_el3_plat_arch_setup+0x160>
2ffebdbe:	f003 f98f 	bl	2ffef0e0 <stm32mp_print_cpuinfo>
2ffebdc2:	f002 ff1b 	bl	2ffeebfc <dt_get_board_model>
2ffebdc6:	4601      	mov	r1, r0
2ffebdc8:	b110      	cbz	r0, 2ffebdd0 <bl2_el3_plat_arch_setup+0x12c>
2ffebdca:	486d      	ldr	r0, [pc, #436]	@ (2ffebf80 <bl2_el3_plat_arch_setup+0x2dc>)
2ffebdcc:	f000 fc76 	bl	2ffec6bc <tf_log>
2ffebdd0:	f003 f994 	bl	2ffef0fc <stm32mp_print_boardinfo>
2ffebdd4:	f894 3059 	ldrb.w	r3, [r4, #89]	@ 0x59
2ffebdd8:	f894 1058 	ldrb.w	r1, [r4, #88]	@ 0x58
2ffebddc:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffebde0:	f894 305a 	ldrb.w	r3, [r4, #90]	@ 0x5a
2ffebde4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
2ffebde8:	f894 305b 	ldrb.w	r3, [r4, #91]	@ 0x5b
2ffebdec:	ea51 6103 	orrs.w	r1, r1, r3, lsl #24
2ffebdf0:	d008      	beq.n	2ffebe04 <bl2_el3_plat_arch_setup+0x160>
2ffebdf2:	4a64      	ldr	r2, [pc, #400]	@ (2ffebf84 <bl2_el3_plat_arch_setup+0x2e0>)
2ffebdf4:	4b64      	ldr	r3, [pc, #400]	@ (2ffebf88 <bl2_el3_plat_arch_setup+0x2e4>)
2ffebdf6:	4865      	ldr	r0, [pc, #404]	@ (2ffebf8c <bl2_el3_plat_arch_setup+0x2e8>)
2ffebdf8:	2901      	cmp	r1, #1
2ffebdfa:	bf14      	ite	ne
2ffebdfc:	4611      	movne	r1, r2
2ffebdfe:	4619      	moveq	r1, r3
2ffebe00:	f000 fc5c 	bl	2ffec6bc <tf_log>
2ffebe04:	4b5c      	ldr	r3, [pc, #368]	@ (2ffebf78 <bl2_el3_plat_arch_setup+0x2d4>)
2ffebe06:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
2ffebe08:	b1e4      	cbz	r4, 2ffebe44 <bl2_el3_plat_arch_setup+0x1a0>
2ffebe0a:	4861      	ldr	r0, [pc, #388]	@ (2ffebf90 <bl2_el3_plat_arch_setup+0x2ec>)
2ffebe0c:	f000 fc56 	bl	2ffec6bc <tf_log>
2ffebe10:	bb0d      	cbnz	r5, 2ffebe56 <bl2_el3_plat_arch_setup+0x1b2>
2ffebe12:	4f60      	ldr	r7, [pc, #384]	@ (2ffebf94 <bl2_el3_plat_arch_setup+0x2f0>)
2ffebe14:	f8df 8180 	ldr.w	r8, [pc, #384]	@ 2ffebf98 <bl2_el3_plat_arch_setup+0x2f4>
2ffebe18:	4e60      	ldr	r6, [pc, #384]	@ (2ffebf9c <bl2_el3_plat_arch_setup+0x2f8>)
2ffebe1a:	fa94 f5a4 	rbit	r5, r4
2ffebe1e:	4630      	mov	r0, r6
2ffebe20:	fab5 f585 	clz	r5, r5
2ffebe24:	2d0f      	cmp	r5, #15
2ffebe26:	bfc7      	ittee	gt
2ffebe28:	f1a5 020f 	subgt.w	r2, r5, #15
2ffebe2c:	4641      	movgt	r1, r8
2ffebe2e:	1c6a      	addle	r2, r5, #1
2ffebe30:	4639      	movle	r1, r7
2ffebe32:	f000 fc43 	bl	2ffec6bc <tf_log>
2ffebe36:	2301      	movs	r3, #1
2ffebe38:	40ab      	lsls	r3, r5
2ffebe3a:	439c      	bics	r4, r3
2ffebe3c:	d1ed      	bne.n	2ffebe1a <bl2_el3_plat_arch_setup+0x176>
2ffebe3e:	4854      	ldr	r0, [pc, #336]	@ (2ffebf90 <bl2_el3_plat_arch_setup+0x2ec>)
2ffebe40:	f000 fc3c 	bl	2ffec6bc <tf_log>
2ffebe44:	4d56      	ldr	r5, [pc, #344]	@ (2ffebfa0 <bl2_el3_plat_arch_setup+0x2fc>)
2ffebe46:	f003 f96b 	bl	2ffef120 <stm32mp_check_closed_device>
2ffebe4a:	42a8      	cmp	r0, r5
2ffebe4c:	d116      	bne.n	2ffebe7c <bl2_el3_plat_arch_setup+0x1d8>
2ffebe4e:	4855      	ldr	r0, [pc, #340]	@ (2ffebfa4 <bl2_el3_plat_arch_setup+0x300>)
2ffebe50:	f000 fc34 	bl	2ffec6bc <tf_log>
2ffebe54:	e72f      	b.n	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebe56:	4854      	ldr	r0, [pc, #336]	@ (2ffebfa8 <bl2_el3_plat_arch_setup+0x304>)
2ffebe58:	f000 fc30 	bl	2ffec6bc <tf_log>
2ffebe5c:	484c      	ldr	r0, [pc, #304]	@ (2ffebf90 <bl2_el3_plat_arch_setup+0x2ec>)
2ffebe5e:	f000 fc2d 	bl	2ffec6bc <tf_log>
2ffebe62:	4852      	ldr	r0, [pc, #328]	@ (2ffebfac <bl2_el3_plat_arch_setup+0x308>)
2ffebe64:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
2ffebe68:	f8d2 3140 	ldr.w	r3, [r2, #320]	@ 0x140
2ffebe6c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
2ffebe70:	f8c2 3140 	str.w	r3, [r2, #320]	@ 0x140
2ffebe74:	f000 fc22 	bl	2ffec6bc <tf_log>
2ffebe78:	f007 fd1f 	bl	2fff38ba <stm32mp_system_reset>
2ffebe7c:	f002 fcf2 	bl	2ffee864 <fixed_regulator_register>
2ffebe80:	2800      	cmp	r0, #0
2ffebe82:	f47f af18 	bne.w	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebe86:	f004 fc37 	bl	2fff06f8 <dt_pmic_status>
2ffebe8a:	2800      	cmp	r0, #0
2ffebe8c:	dd0b      	ble.n	2ffebea6 <bl2_el3_plat_arch_setup+0x202>
2ffebe8e:	f004 fcd3 	bl	2fff0838 <initialize_pmic>
2ffebe92:	f007 fa8b 	bl	2fff33ac <stm32mp_is_wakeup_from_standby>
2ffebe96:	b920      	cbnz	r0, 2ffebea2 <bl2_el3_plat_arch_setup+0x1fe>
2ffebe98:	f007 fc71 	bl	2fff377e <pmic_voltages_init>
2ffebe9c:	b108      	cbz	r0, 2ffebea2 <bl2_el3_plat_arch_setup+0x1fe>
2ffebe9e:	4844      	ldr	r0, [pc, #272]	@ (2ffebfb0 <bl2_el3_plat_arch_setup+0x30c>)
2ffebea0:	e7d6      	b.n	2ffebe50 <bl2_el3_plat_arch_setup+0x1ac>
2ffebea2:	f004 fd41 	bl	2fff0928 <print_pmic_info_and_debug>
2ffebea6:	f004 ffb9 	bl	2fff0e1c <stm32mp_syscfg_init>
2ffebeaa:	f004 fbbb 	bl	2fff0624 <stm32_iwdg_init>
2ffebeae:	2800      	cmp	r0, #0
2ffebeb0:	f6ff af01 	blt.w	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebeb4:	f004 fb96 	bl	2fff05e4 <stm32_iwdg_refresh>
2ffebeb8:	f003 fb56 	bl	2ffef568 <bsec_read_debug_conf>
2ffebebc:	b138      	cbz	r0, 2ffebece <bl2_el3_plat_arch_setup+0x22a>
2ffebebe:	f003 f92f 	bl	2ffef120 <stm32mp_check_closed_device>
2ffebec2:	42a8      	cmp	r0, r5
2ffebec4:	d103      	bne.n	2ffebece <bl2_el3_plat_arch_setup+0x22a>
2ffebec6:	493b      	ldr	r1, [pc, #236]	@ (2ffebfb4 <bl2_el3_plat_arch_setup+0x310>)
2ffebec8:	483b      	ldr	r0, [pc, #236]	@ (2ffebfb8 <bl2_el3_plat_arch_setup+0x314>)
2ffebeca:	f000 fbf7 	bl	2ffec6bc <tf_log>
2ffebece:	f000 fb05 	bl	2ffec4dc <stm32mp1_arch_security_setup>
2ffebed2:	f007 f825 	bl	2fff2f20 <stm32mp_rcc_base>
2ffebed6:	f8d0 4408 	ldr.w	r4, [r0, #1032]	@ 0x408
2ffebeda:	bb2c      	cbnz	r4, 2ffebf28 <bl2_el3_plat_arch_setup+0x284>
2ffebedc:	4837      	ldr	r0, [pc, #220]	@ (2ffebfbc <bl2_el3_plat_arch_setup+0x318>)
2ffebede:	f000 fbed 	bl	2ffec6bc <tf_log>
2ffebee2:	f003 f91d 	bl	2ffef120 <stm32mp_check_closed_device>
2ffebee6:	42a8      	cmp	r0, r5
2ffebee8:	f040 809e 	bne.w	2ffec028 <bl2_el3_plat_arch_setup+0x384>
2ffebeec:	4834      	ldr	r0, [pc, #208]	@ (2ffebfc0 <bl2_el3_plat_arch_setup+0x31c>)
2ffebeee:	2200      	movs	r2, #0
2ffebef0:	a903      	add	r1, sp, #12
2ffebef2:	f000 fd73 	bl	2ffec9dc <stm32_get_otp_index>
2ffebef6:	2800      	cmp	r0, #0
2ffebef8:	f47f aedd 	bne.w	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebefc:	9803      	ldr	r0, [sp, #12]
2ffebefe:	a902      	add	r1, sp, #8
2ffebf00:	f000 fd7c 	bl	2ffec9fc <stm32_get_otp_value_from_idx>
2ffebf04:	2800      	cmp	r0, #0
2ffebf06:	f47f aed6 	bne.w	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebf0a:	9a02      	ldr	r2, [sp, #8]
2ffebf0c:	3201      	adds	r2, #1
2ffebf0e:	f040 808b 	bne.w	2ffec028 <bl2_el3_plat_arch_setup+0x384>
2ffebf12:	9903      	ldr	r1, [sp, #12]
2ffebf14:	9002      	str	r0, [sp, #8]
2ffebf16:	f003 fba1 	bl	2ffef65c <bsec_program_otp>
2ffebf1a:	4601      	mov	r1, r0
2ffebf1c:	2800      	cmp	r0, #0
2ffebf1e:	d07f      	beq.n	2ffec020 <bl2_el3_plat_arch_setup+0x37c>
2ffebf20:	4828      	ldr	r0, [pc, #160]	@ (2ffebfc4 <bl2_el3_plat_arch_setup+0x320>)
2ffebf22:	f000 fbcb 	bl	2ffec6bc <tf_log>
2ffebf26:	e6c6      	b.n	2ffebcb6 <bl2_el3_plat_arch_setup+0x12>
2ffebf28:	4827      	ldr	r0, [pc, #156]	@ (2ffebfc8 <bl2_el3_plat_arch_setup+0x324>)
2ffebf2a:	4621      	mov	r1, r4
2ffebf2c:	f000 fbc6 	bl	2ffec6bc <tf_log>
2ffebf30:	f014 0304 	ands.w	r3, r4, #4
2ffebf34:	d107      	bne.n	2ffebf46 <bl2_el3_plat_arch_setup+0x2a2>
2ffebf36:	0522      	lsls	r2, r4, #20
2ffebf38:	d501      	bpl.n	2ffebf3e <bl2_el3_plat_arch_setup+0x29a>
2ffebf3a:	4824      	ldr	r0, [pc, #144]	@ (2ffebfcc <bl2_el3_plat_arch_setup+0x328>)
2ffebf3c:	e7cf      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf3e:	04e7      	lsls	r7, r4, #19
2ffebf40:	d501      	bpl.n	2ffebf46 <bl2_el3_plat_arch_setup+0x2a2>
2ffebf42:	4823      	ldr	r0, [pc, #140]	@ (2ffebfd0 <bl2_el3_plat_arch_setup+0x32c>)
2ffebf44:	e7cb      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf46:	07e6      	lsls	r6, r4, #31
2ffebf48:	d501      	bpl.n	2ffebf4e <bl2_el3_plat_arch_setup+0x2aa>
2ffebf4a:	4822      	ldr	r0, [pc, #136]	@ (2ffebfd4 <bl2_el3_plat_arch_setup+0x330>)
2ffebf4c:	e7c7      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf4e:	07a0      	lsls	r0, r4, #30
2ffebf50:	d501      	bpl.n	2ffebf56 <bl2_el3_plat_arch_setup+0x2b2>
2ffebf52:	4821      	ldr	r0, [pc, #132]	@ (2ffebfd8 <bl2_el3_plat_arch_setup+0x334>)
2ffebf54:	e7c3      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf56:	0621      	lsls	r1, r4, #24
2ffebf58:	d504      	bpl.n	2ffebf64 <bl2_el3_plat_arch_setup+0x2c0>
2ffebf5a:	b10b      	cbz	r3, 2ffebf60 <bl2_el3_plat_arch_setup+0x2bc>
2ffebf5c:	481f      	ldr	r0, [pc, #124]	@ (2ffebfdc <bl2_el3_plat_arch_setup+0x338>)
2ffebf5e:	e7be      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf60:	481f      	ldr	r0, [pc, #124]	@ (2ffebfe0 <bl2_el3_plat_arch_setup+0x33c>)
2ffebf62:	e7bc      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf64:	0662      	lsls	r2, r4, #25
2ffebf66:	d53f      	bpl.n	2ffebfe8 <bl2_el3_plat_arch_setup+0x344>
2ffebf68:	481e      	ldr	r0, [pc, #120]	@ (2ffebfe4 <bl2_el3_plat_arch_setup+0x340>)
2ffebf6a:	e7b8      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebf6c:	2ffe9000 	.word	0x2ffe9000
2ffebf70:	2fff8000 	.word	0x2fff8000
2ffebf74:	2ffe2000 	.word	0x2ffe2000
2ffebf78:	5c00a000 	.word	0x5c00a000
2ffebf7c:	0009eb10 	.word	0x0009eb10
2ffebf80:	2fff5fa3 	.word	0x2fff5fa3
2ffebf84:	2fff5f87 	.word	0x2fff5f87
2ffebf88:	2fff5f80 	.word	0x2fff5f80
2ffebf8c:	2fff5faf 	.word	0x2fff5faf
2ffebf90:	2fff6b94 	.word	0x2fff6b94
2ffebf94:	2fff5f9a 	.word	0x2fff5f9a
2ffebf98:	2fff5f91 	.word	0x2fff5f91
2ffebf9c:	2fff6018 	.word	0x2fff6018
2ffebfa0:	34d9ccc5 	.word	0x34d9ccc5
2ffebfa4:	2fff6047 	.word	0x2fff6047
2ffebfa8:	2fff5fcb 	.word	0x2fff5fcb
2ffebfac:	2fff6003 	.word	0x2fff6003
2ffebfb0:	2fff6079 	.word	0x2fff6079
2ffebfb4:	2fff6358 	.word	0x2fff6358
2ffebfb8:	2fff6095 	.word	0x2fff6095
2ffebfbc:	2fff609a 	.word	0x2fff609a
2ffebfc0:	2fff62af 	.word	0x2fff62af
2ffebfc4:	2fff62bd 	.word	0x2fff62bd
2ffebfc8:	2fff60b1 	.word	0x2fff60b1
2ffebfcc:	2fff60c8 	.word	0x2fff60c8
2ffebfd0:	2fff60e4 	.word	0x2fff60e4
2ffebfd4:	2fff60fe 	.word	0x2fff60fe
2ffebfd8:	2fff611b 	.word	0x2fff611b
2ffebfdc:	2fff6138 	.word	0x2fff6138
2ffebfe0:	2fff6165 	.word	0x2fff6165
2ffebfe4:	2fff6191 	.word	0x2fff6191
2ffebfe8:	0727      	lsls	r7, r4, #28
2ffebfea:	d501      	bpl.n	2ffebff0 <bl2_el3_plat_arch_setup+0x34c>
2ffebfec:	481d      	ldr	r0, [pc, #116]	@ (2ffec064 <bl2_el3_plat_arch_setup+0x3c0>)
2ffebfee:	e776      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebff0:	05e6      	lsls	r6, r4, #23
2ffebff2:	d501      	bpl.n	2ffebff8 <bl2_el3_plat_arch_setup+0x354>
2ffebff4:	481c      	ldr	r0, [pc, #112]	@ (2ffec068 <bl2_el3_plat_arch_setup+0x3c4>)
2ffebff6:	e772      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffebff8:	05a0      	lsls	r0, r4, #22
2ffebffa:	d501      	bpl.n	2ffec000 <bl2_el3_plat_arch_setup+0x35c>
2ffebffc:	481b      	ldr	r0, [pc, #108]	@ (2ffec06c <bl2_el3_plat_arch_setup+0x3c8>)
2ffebffe:	e76e      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffec000:	04a1      	lsls	r1, r4, #18
2ffec002:	d501      	bpl.n	2ffec008 <bl2_el3_plat_arch_setup+0x364>
2ffec004:	481a      	ldr	r0, [pc, #104]	@ (2ffec070 <bl2_el3_plat_arch_setup+0x3cc>)
2ffec006:	e76a      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffec008:	0462      	lsls	r2, r4, #17
2ffec00a:	d501      	bpl.n	2ffec010 <bl2_el3_plat_arch_setup+0x36c>
2ffec00c:	4819      	ldr	r0, [pc, #100]	@ (2ffec074 <bl2_el3_plat_arch_setup+0x3d0>)
2ffec00e:	e766      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffec010:	b10b      	cbz	r3, 2ffec016 <bl2_el3_plat_arch_setup+0x372>
2ffec012:	4819      	ldr	r0, [pc, #100]	@ (2ffec078 <bl2_el3_plat_arch_setup+0x3d4>)
2ffec014:	e763      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffec016:	06e3      	lsls	r3, r4, #27
2ffec018:	bf4c      	ite	mi
2ffec01a:	4818      	ldrmi	r0, [pc, #96]	@ (2ffec07c <bl2_el3_plat_arch_setup+0x3d8>)
2ffec01c:	4818      	ldrpl	r0, [pc, #96]	@ (2ffec080 <bl2_el3_plat_arch_setup+0x3dc>)
2ffec01e:	e75e      	b.n	2ffebede <bl2_el3_plat_arch_setup+0x23a>
2ffec020:	9902      	ldr	r1, [sp, #8]
2ffec022:	4818      	ldr	r0, [pc, #96]	@ (2ffec084 <bl2_el3_plat_arch_setup+0x3e0>)
2ffec024:	f000 fb4a 	bl	2ffec6bc <tf_log>
2ffec028:	f004 ff42 	bl	2fff0eb0 <stm32mp_syscfg_enable_io_compensation_finish>
2ffec02c:	4916      	ldr	r1, [pc, #88]	@ (2ffec088 <bl2_el3_plat_arch_setup+0x3e4>)
2ffec02e:	4817      	ldr	r0, [pc, #92]	@ (2ffec08c <bl2_el3_plat_arch_setup+0x3e8>)
2ffec030:	f7ff f876 	bl	2ffeb120 <fconf_populate>
2ffec034:	f007 f9bc 	bl	2fff33b0 <stm32mp_skip_boot_device_after_standby>
2ffec038:	b178      	cbz	r0, 2ffec05a <bl2_el3_plat_arch_setup+0x3b6>
2ffec03a:	2001      	movs	r0, #1
2ffec03c:	f7fd fe5e 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec040:	b920      	cbnz	r0, 2ffec04c <bl2_el3_plat_arch_setup+0x3a8>
2ffec042:	4813      	ldr	r0, [pc, #76]	@ (2ffec090 <bl2_el3_plat_arch_setup+0x3ec>)
2ffec044:	f240 2102 	movw	r1, #514	@ 0x202
2ffec048:	f006 fa66 	bl	2fff2518 <__assert>
2ffec04c:	6883      	ldr	r3, [r0, #8]
2ffec04e:	f043 0302 	orr.w	r3, r3, #2
2ffec052:	6083      	str	r3, [r0, #8]
2ffec054:	b004      	add	sp, #16
2ffec056:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffec05a:	b004      	add	sp, #16
2ffec05c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffec060:	f7ff ba48 	b.w	2ffeb4f4 <stm32mp_io_setup>
2ffec064:	2fff61be 	.word	0x2fff61be
2ffec068:	2fff61e6 	.word	0x2fff61e6
2ffec06c:	2fff6202 	.word	0x2fff6202
2ffec070:	2fff621e 	.word	0x2fff621e
2ffec074:	2fff6238 	.word	0x2fff6238
2ffec078:	2fff6252 	.word	0x2fff6252
2ffec07c:	2fff626a 	.word	0x2fff626a
2ffec080:	2fff6291 	.word	0x2fff6291
2ffec084:	2fff62e4 	.word	0x2fff62e4
2ffec088:	2ffe2000 	.word	0x2ffe2000
2ffec08c:	2fff5ee8 	.word	0x2fff5ee8
2ffec090:	2fff631a 	.word	0x2fff631a

2ffec094 <bl2_plat_handle_post_image_load>:
2ffec094:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffec098:	b085      	sub	sp, #20
2ffec09a:	4607      	mov	r7, r0
2ffec09c:	f7fd fe2e 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec0a0:	4b60      	ldr	r3, [pc, #384]	@ (2ffec224 <bl2_plat_handle_post_image_load+0x190>)
2ffec0a2:	4604      	mov	r4, r0
2ffec0a4:	466e      	mov	r6, sp
2ffec0a6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
2ffec0a8:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
2ffec0ac:	b924      	cbnz	r4, 2ffec0b8 <bl2_plat_handle_post_image_load+0x24>
2ffec0ae:	f240 2163 	movw	r1, #611	@ 0x263
2ffec0b2:	485d      	ldr	r0, [pc, #372]	@ (2ffec228 <bl2_plat_handle_post_image_load+0x194>)
2ffec0b4:	f006 fa30 	bl	2fff2518 <__assert>
2ffec0b8:	2f04      	cmp	r7, #4
2ffec0ba:	d06a      	beq.n	2ffec192 <bl2_plat_handle_post_image_load+0xfe>
2ffec0bc:	2f05      	cmp	r7, #5
2ffec0be:	f000 80a7 	beq.w	2ffec210 <bl2_plat_handle_post_image_load+0x17c>
2ffec0c2:	2f01      	cmp	r7, #1
2ffec0c4:	d146      	bne.n	2ffec154 <bl2_plat_handle_post_image_load+0xc0>
2ffec0c6:	f007 f973 	bl	2fff33b0 <stm32mp_skip_boot_device_after_standby>
2ffec0ca:	4605      	mov	r5, r0
2ffec0cc:	2800      	cmp	r0, #0
2ffec0ce:	d141      	bne.n	2ffec154 <bl2_plat_handle_post_image_load+0xc0>
2ffec0d0:	4856      	ldr	r0, [pc, #344]	@ (2ffec22c <bl2_plat_handle_post_image_load+0x198>)
2ffec0d2:	463b      	mov	r3, r7
2ffec0d4:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
2ffec0d8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffec0dc:	f7ff f864 	bl	2ffeb1a8 <set_config_info>
2ffec0e0:	4952      	ldr	r1, [pc, #328]	@ (2ffec22c <bl2_plat_handle_post_image_load+0x198>)
2ffec0e2:	4853      	ldr	r0, [pc, #332]	@ (2ffec230 <bl2_plat_handle_post_image_load+0x19c>)
2ffec0e4:	f7ff f81c 	bl	2ffeb120 <fconf_populate>
2ffec0e8:	2010      	movs	r0, #16
2ffec0ea:	f7ff f903 	bl	2ffeb2f4 <dyn_cfg_dtb_info_get_index>
2ffec0ee:	4681      	mov	r9, r0
2ffec0f0:	f856 8b04 	ldr.w	r8, [r6], #4
2ffec0f4:	f1b8 0f10 	cmp.w	r8, #16
2ffec0f8:	d102      	bne.n	2ffec100 <bl2_plat_handle_post_image_load+0x6c>
2ffec0fa:	f1b9 3fff 	cmp.w	r9, #4294967295	@ 0xffffffff
2ffec0fe:	d026      	beq.n	2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec100:	4640      	mov	r0, r8
2ffec102:	f7fd fdfb 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec106:	4604      	mov	r4, r0
2ffec108:	b910      	cbnz	r0, 2ffec110 <bl2_plat_handle_post_image_load+0x7c>
2ffec10a:	f240 217f 	movw	r1, #639	@ 0x27f
2ffec10e:	e7d0      	b.n	2ffec0b2 <bl2_plat_handle_post_image_load+0x1e>
2ffec110:	4640      	mov	r0, r8
2ffec112:	f7ff f8ff 	bl	2ffeb314 <dyn_cfg_dtb_info_getter>
2ffec116:	4607      	mov	r7, r0
2ffec118:	b1c8      	cbz	r0, 2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec11a:	6842      	ldr	r2, [r0, #4]
2ffec11c:	f1b8 0f05 	cmp.w	r8, #5
2ffec120:	6803      	ldr	r3, [r0, #0]
2ffec122:	6162      	str	r2, [r4, #20]
2ffec124:	68a2      	ldr	r2, [r4, #8]
2ffec126:	60e3      	str	r3, [r4, #12]
2ffec128:	f022 0202 	bic.w	r2, r2, #2
2ffec12c:	60a2      	str	r2, [r4, #8]
2ffec12e:	d02e      	beq.n	2ffec18e <bl2_plat_handle_post_image_load+0xfa>
2ffec130:	d80a      	bhi.n	2ffec148 <bl2_plat_handle_post_image_load+0xb4>
2ffec132:	f1b8 0f02 	cmp.w	r8, #2
2ffec136:	d00a      	beq.n	2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec138:	f1b8 0f04 	cmp.w	r8, #4
2ffec13c:	d00c      	beq.n	2ffec158 <bl2_plat_handle_post_image_load+0xc4>
2ffec13e:	f06f 0015 	mvn.w	r0, #21
2ffec142:	b005      	add	sp, #20
2ffec144:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffec148:	f1b8 0f10 	cmp.w	r8, #16
2ffec14c:	d1f7      	bne.n	2ffec13e <bl2_plat_handle_post_image_load+0xaa>
2ffec14e:	3501      	adds	r5, #1
2ffec150:	2d04      	cmp	r5, #4
2ffec152:	d1cd      	bne.n	2ffec0f0 <bl2_plat_handle_post_image_load+0x5c>
2ffec154:	2000      	movs	r0, #0
2ffec156:	e7f4      	b.n	2ffec142 <bl2_plat_handle_post_image_load+0xae>
2ffec158:	6223      	str	r3, [r4, #32]
2ffec15a:	2008      	movs	r0, #8
2ffec15c:	f7fd fdce 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec160:	b910      	cbnz	r0, 2ffec168 <bl2_plat_handle_post_image_load+0xd4>
2ffec162:	f240 2197 	movw	r1, #663	@ 0x297
2ffec166:	e7a4      	b.n	2ffec0b2 <bl2_plat_handle_post_image_load+0x1e>
2ffec168:	683b      	ldr	r3, [r7, #0]
2ffec16a:	60c3      	str	r3, [r0, #12]
2ffec16c:	687b      	ldr	r3, [r7, #4]
2ffec16e:	6143      	str	r3, [r0, #20]
2ffec170:	2009      	movs	r0, #9
2ffec172:	f7fd fdc3 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec176:	4604      	mov	r4, r0
2ffec178:	2800      	cmp	r0, #0
2ffec17a:	d0e8      	beq.n	2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec17c:	f002 fcfa 	bl	2ffeeb74 <dt_get_ddr_size>
2ffec180:	f100 403e 	add.w	r0, r0, #3187671040	@ 0xbe000000
2ffec184:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffec188:	60e0      	str	r0, [r4, #12]
2ffec18a:	6163      	str	r3, [r4, #20]
2ffec18c:	e7df      	b.n	2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec18e:	6223      	str	r3, [r4, #32]
2ffec190:	e7dd      	b.n	2ffec14e <bl2_plat_handle_post_image_load+0xba>
2ffec192:	68e0      	ldr	r0, [r4, #12]
2ffec194:	f7ff f902 	bl	2ffeb39c <optee_header_is_valid>
2ffec198:	68e3      	ldr	r3, [r4, #12]
2ffec19a:	4605      	mov	r5, r0
2ffec19c:	6223      	str	r3, [r4, #32]
2ffec19e:	b350      	cbz	r0, 2ffec1f6 <bl2_plat_handle_post_image_load+0x162>
2ffec1a0:	2008      	movs	r0, #8
2ffec1a2:	f7fd fdab 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec1a6:	4606      	mov	r6, r0
2ffec1a8:	b910      	cbnz	r0, 2ffec1b0 <bl2_plat_handle_post_image_load+0x11c>
2ffec1aa:	f240 21ce 	movw	r1, #718	@ 0x2ce
2ffec1ae:	e780      	b.n	2ffec0b2 <bl2_plat_handle_post_image_load+0x1e>
2ffec1b0:	2009      	movs	r0, #9
2ffec1b2:	f7fd fda3 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec1b6:	4605      	mov	r5, r0
2ffec1b8:	b168      	cbz	r0, 2ffec1d6 <bl2_plat_handle_post_image_load+0x142>
2ffec1ba:	1d02      	adds	r2, r0, #4
2ffec1bc:	1d31      	adds	r1, r6, #4
2ffec1be:	f104 0018 	add.w	r0, r4, #24
2ffec1c2:	f7ff f8fd 	bl	2ffeb3c0 <parse_optee_header>
2ffec1c6:	b140      	cbz	r0, 2ffec1da <bl2_plat_handle_post_image_load+0x146>
2ffec1c8:	481a      	ldr	r0, [pc, #104]	@ (2ffec234 <bl2_plat_handle_post_image_load+0x1a0>)
2ffec1ca:	f000 fa77 	bl	2ffec6bc <tf_log>
2ffec1ce:	f000 fb11 	bl	2ffec7f4 <console_flush>
2ffec1d2:	f7fd e904 	blx	2ffe93dc <do_panic>
2ffec1d6:	4602      	mov	r2, r0
2ffec1d8:	e7f0      	b.n	2ffec1bc <bl2_plat_handle_post_image_load+0x128>
2ffec1da:	b155      	cbz	r5, 2ffec1f2 <bl2_plat_handle_post_image_load+0x15e>
2ffec1dc:	68eb      	ldr	r3, [r5, #12]
2ffec1de:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffec1e0:	6320      	str	r0, [r4, #48]	@ 0x30
2ffec1e2:	6360      	str	r0, [r4, #52]	@ 0x34
2ffec1e4:	6a23      	ldr	r3, [r4, #32]
2ffec1e6:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
2ffec1ea:	d3b3      	bcc.n	2ffec154 <bl2_plat_handle_post_image_load+0xc0>
2ffec1ec:	f004 fd86 	bl	2fff0cfc <stm32_context_save_bl2_param>
2ffec1f0:	e7b0      	b.n	2ffec154 <bl2_plat_handle_post_image_load+0xc0>
2ffec1f2:	4603      	mov	r3, r0
2ffec1f4:	e7f3      	b.n	2ffec1de <bl2_plat_handle_post_image_load+0x14a>
2ffec1f6:	2010      	movs	r0, #16
2ffec1f8:	f7fd fd80 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec1fc:	b910      	cbnz	r0, 2ffec204 <bl2_plat_handle_post_image_load+0x170>
2ffec1fe:	f240 21ea 	movw	r1, #746	@ 0x2ea
2ffec202:	e756      	b.n	2ffec0b2 <bl2_plat_handle_post_image_load+0x1e>
2ffec204:	6942      	ldr	r2, [r0, #20]
2ffec206:	6963      	ldr	r3, [r4, #20]
2ffec208:	62e5      	str	r5, [r4, #44]	@ 0x2c
2ffec20a:	4413      	add	r3, r2
2ffec20c:	6163      	str	r3, [r4, #20]
2ffec20e:	e7e9      	b.n	2ffec1e4 <bl2_plat_handle_post_image_load+0x150>
2ffec210:	2004      	movs	r0, #4
2ffec212:	f7fd fd73 	bl	2ffe9cfc <get_bl_mem_params_node>
2ffec216:	b910      	cbnz	r0, 2ffec21e <bl2_plat_handle_post_image_load+0x18a>
2ffec218:	f240 21f7 	movw	r1, #759	@ 0x2f7
2ffec21c:	e749      	b.n	2ffec0b2 <bl2_plat_handle_post_image_load+0x1e>
2ffec21e:	6a23      	ldr	r3, [r4, #32]
2ffec220:	6283      	str	r3, [r0, #40]	@ 0x28
2ffec222:	e797      	b.n	2ffec154 <bl2_plat_handle_post_image_load+0xc0>
2ffec224:	2fff45bc 	.word	0x2fff45bc
2ffec228:	2fff631a 	.word	0x2fff631a
2ffec22c:	2ffff000 	.word	0x2ffff000
2ffec230:	2fff5b10 	.word	0x2fff5b10
2ffec234:	2fff633c 	.word	0x2fff633c

2ffec238 <bl2_el3_plat_prepare_exit>:
2ffec238:	b508      	push	{r3, lr}
2ffec23a:	f000 fba5 	bl	2ffec988 <stm32mp_get_boot_itf_selected>
2ffec23e:	3805      	subs	r0, #5
2ffec240:	b280      	uxth	r0, r0
2ffec242:	2801      	cmp	r0, #1
2ffec244:	d805      	bhi.n	2ffec252 <bl2_el3_plat_prepare_exit+0x1a>
2ffec246:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
2ffec24a:	f04f 4047 	mov.w	r0, #3338665984	@ 0xc7000000
2ffec24e:	f7fd e93a 	blx	2ffe94c4 <inv_dcache_range>
2ffec252:	4807      	ldr	r0, [pc, #28]	@ (2ffec270 <bl2_el3_plat_prepare_exit+0x38>)
2ffec254:	4907      	ldr	r1, [pc, #28]	@ (2ffec274 <bl2_el3_plat_prepare_exit+0x3c>)
2ffec256:	1a09      	subs	r1, r1, r0
2ffec258:	f7fd e8f8 	blx	2ffe944c <flush_dcache_range>
2ffec25c:	4806      	ldr	r0, [pc, #24]	@ (2ffec278 <bl2_el3_plat_prepare_exit+0x40>)
2ffec25e:	4907      	ldr	r1, [pc, #28]	@ (2ffec27c <bl2_el3_plat_prepare_exit+0x44>)
2ffec260:	1a09      	subs	r1, r1, r0
2ffec262:	f7fd e8f4 	blx	2ffe944c <flush_dcache_range>
2ffec266:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec26a:	f000 b951 	b.w	2ffec510 <stm32mp1_security_setup>
2ffec26e:	bf00      	nop
2ffec270:	2fff91c0 	.word	0x2fff91c0
2ffec274:	2fff9ae0 	.word	0x2fff9ae0
2ffec278:	2fff8000 	.word	0x2fff8000
2ffec27c:	2fff85a6 	.word	0x2fff85a6

2ffec280 <stm32mp_board_ddr_power_init>:
2ffec280:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffec282:	4607      	mov	r7, r0
2ffec284:	f004 fa38 	bl	2fff06f8 <dt_pmic_status>
2ffec288:	2800      	cmp	r0, #0
2ffec28a:	dd18      	ble.n	2ffec2be <stm32mp_board_ddr_power_init+0x3e>
2ffec28c:	4830      	ldr	r0, [pc, #192]	@ (2ffec350 <stm32mp_board_ddr_power_init+0xd0>)
2ffec28e:	f002 f89d 	bl	2ffee3cc <regulator_get_by_name>
2ffec292:	4606      	mov	r6, r0
2ffec294:	b918      	cbnz	r0, 2ffec29e <stm32mp_board_ddr_power_init+0x1e>
2ffec296:	f06f 0001 	mvn.w	r0, #1
2ffec29a:	b003      	add	sp, #12
2ffec29c:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffec29e:	482d      	ldr	r0, [pc, #180]	@ (2ffec354 <stm32mp_board_ddr_power_init+0xd4>)
2ffec2a0:	f002 f894 	bl	2ffee3cc <regulator_get_by_name>
2ffec2a4:	4605      	mov	r5, r0
2ffec2a6:	2800      	cmp	r0, #0
2ffec2a8:	d0f5      	beq.n	2ffec296 <stm32mp_board_ddr_power_init+0x16>
2ffec2aa:	482b      	ldr	r0, [pc, #172]	@ (2ffec358 <stm32mp_board_ddr_power_init+0xd8>)
2ffec2ac:	f002 f88e 	bl	2ffee3cc <regulator_get_by_name>
2ffec2b0:	4604      	mov	r4, r0
2ffec2b2:	2800      	cmp	r0, #0
2ffec2b4:	d0ef      	beq.n	2ffec296 <stm32mp_board_ddr_power_init+0x16>
2ffec2b6:	b127      	cbz	r7, 2ffec2c2 <stm32mp_board_ddr_power_init+0x42>
2ffec2b8:	3f01      	subs	r7, #1
2ffec2ba:	2f01      	cmp	r7, #1
2ffec2bc:	d91c      	bls.n	2ffec2f8 <stm32mp_board_ddr_power_init+0x78>
2ffec2be:	2000      	movs	r0, #0
2ffec2c0:	e7eb      	b.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec2c2:	2140      	movs	r1, #64	@ 0x40
2ffec2c4:	4628      	mov	r0, r5
2ffec2c6:	f002 f9d5 	bl	2ffee674 <regulator_set_flag>
2ffec2ca:	2800      	cmp	r0, #0
2ffec2cc:	d1e5      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec2ce:	4630      	mov	r0, r6
2ffec2d0:	f007 f852 	bl	2fff3378 <regulator_set_min_voltage>
2ffec2d4:	2800      	cmp	r0, #0
2ffec2d6:	d1e0      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec2d8:	4630      	mov	r0, r6
2ffec2da:	f002 f8d7 	bl	2ffee48c <regulator_enable>
2ffec2de:	2800      	cmp	r0, #0
2ffec2e0:	d1db      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec2e2:	4620      	mov	r0, r4
2ffec2e4:	f002 f8d2 	bl	2ffee48c <regulator_enable>
2ffec2e8:	2800      	cmp	r0, #0
2ffec2ea:	d1d6      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec2ec:	4628      	mov	r0, r5
2ffec2ee:	b003      	add	sp, #12
2ffec2f0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffec2f4:	f002 b8ca 	b.w	2ffee48c <regulator_enable>
2ffec2f8:	4818      	ldr	r0, [pc, #96]	@ (2ffec35c <stm32mp_board_ddr_power_init+0xdc>)
2ffec2fa:	f002 f867 	bl	2ffee3cc <regulator_get_by_name>
2ffec2fe:	2800      	cmp	r0, #0
2ffec300:	d0c9      	beq.n	2ffec296 <stm32mp_board_ddr_power_init+0x16>
2ffec302:	2200      	movs	r2, #0
2ffec304:	f10d 0106 	add.w	r1, sp, #6
2ffec308:	f002 f9a4 	bl	2ffee654 <regulator_get_range>
2ffec30c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
2ffec310:	f5b3 6fe1 	cmp.w	r3, #1800	@ 0x708
2ffec314:	d017      	beq.n	2ffec346 <stm32mp_board_ddr_power_init+0xc6>
2ffec316:	4628      	mov	r0, r5
2ffec318:	f007 f82e 	bl	2fff3378 <regulator_set_min_voltage>
2ffec31c:	2800      	cmp	r0, #0
2ffec31e:	d1bc      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec320:	4630      	mov	r0, r6
2ffec322:	f007 f829 	bl	2fff3378 <regulator_set_min_voltage>
2ffec326:	2800      	cmp	r0, #0
2ffec328:	d1b7      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec32a:	4628      	mov	r0, r5
2ffec32c:	f002 f8ae 	bl	2ffee48c <regulator_enable>
2ffec330:	2800      	cmp	r0, #0
2ffec332:	d1b2      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec334:	4630      	mov	r0, r6
2ffec336:	f002 f8a9 	bl	2ffee48c <regulator_enable>
2ffec33a:	2800      	cmp	r0, #0
2ffec33c:	d1ad      	bne.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec33e:	4620      	mov	r0, r4
2ffec340:	f002 f8a4 	bl	2ffee48c <regulator_enable>
2ffec344:	e7a9      	b.n	2ffec29a <stm32mp_board_ddr_power_init+0x1a>
2ffec346:	2180      	movs	r1, #128	@ 0x80
2ffec348:	4628      	mov	r0, r5
2ffec34a:	f002 f993 	bl	2ffee674 <regulator_set_flag>
2ffec34e:	e7e5      	b.n	2ffec31c <stm32mp_board_ddr_power_init+0x9c>
2ffec350:	2fff652d 	.word	0x2fff652d
2ffec354:	2fff6533 	.word	0x2fff6533
2ffec358:	2fff6538 	.word	0x2fff6538
2ffec35c:	2fff6541 	.word	0x2fff6541

2ffec360 <stm32_pwr_down_wfi_load>:
2ffec360:	2904      	cmp	r1, #4
2ffec362:	b538      	push	{r3, r4, r5, lr}
2ffec364:	4605      	mov	r5, r0
2ffec366:	460c      	mov	r4, r1
2ffec368:	d106      	bne.n	2ffec378 <stm32_pwr_down_wfi_load+0x18>
2ffec36a:	4827      	ldr	r0, [pc, #156]	@ (2ffec408 <stm32_pwr_down_wfi_load+0xa8>)
2ffec36c:	f000 f9a6 	bl	2ffec6bc <tf_log>
2ffec370:	f000 fa40 	bl	2ffec7f4 <console_flush>
2ffec374:	f7fd e832 	blx	2ffe93dc <do_panic>
2ffec378:	bb09      	cbnz	r1, 2ffec3be <stm32_pwr_down_wfi_load+0x5e>
2ffec37a:	2800      	cmp	r0, #0
2ffec37c:	d03b      	beq.n	2ffec3f6 <stm32_pwr_down_wfi_load+0x96>
2ffec37e:	f001 fa7b 	bl	2ffed878 <generic_delay_timer_init>
2ffec382:	2001      	movs	r0, #1
2ffec384:	f003 fb38 	bl	2ffef9f8 <ddr_set_sr_mode>
2ffec388:	f007 f843 	bl	2fff3412 <ddr_standby_sr_entry>
2ffec38c:	b330      	cbz	r0, 2ffec3dc <stm32_pwr_down_wfi_load+0x7c>
2ffec38e:	481f      	ldr	r0, [pc, #124]	@ (2ffec40c <stm32_pwr_down_wfi_load+0xac>)
2ffec390:	f000 f994 	bl	2ffec6bc <tf_log>
2ffec394:	2c07      	cmp	r4, #7
2ffec396:	d1eb      	bne.n	2ffec370 <stm32_pwr_down_wfi_load+0x10>
2ffec398:	f004 f9ae 	bl	2fff06f8 <dt_pmic_status>
2ffec39c:	2800      	cmp	r0, #0
2ffec39e:	dd05      	ble.n	2ffec3ac <stm32_pwr_down_wfi_load+0x4c>
2ffec3a0:	f004 f9c4 	bl	2fff072c <initialize_pmic_i2c>
2ffec3a4:	2800      	cmp	r0, #0
2ffec3a6:	d0e3      	beq.n	2ffec370 <stm32_pwr_down_wfi_load+0x10>
2ffec3a8:	f007 f9eb 	bl	2fff3782 <pmic_switch_off>
2ffec3ac:	f3bf 8f4f 	dsb	sy
2ffec3b0:	f3bf 8f6f 	isb	sy
2ffec3b4:	bf30      	wfi
2ffec3b6:	f004 f915 	bl	2fff05e4 <stm32_iwdg_refresh>
2ffec3ba:	b9b5      	cbnz	r5, 2ffec3ea <stm32_pwr_down_wfi_load+0x8a>
2ffec3bc:	bd38      	pop	{r3, r4, r5, pc}
2ffec3be:	2001      	movs	r0, #1
2ffec3c0:	f7fd e902 	blx	2ffe95c8 <dcsw_op_all>
2ffec3c4:	b1ad      	cbz	r5, 2ffec3f2 <stm32_pwr_down_wfi_load+0x92>
2ffec3c6:	f001 fa57 	bl	2ffed878 <generic_delay_timer_init>
2ffec3ca:	2001      	movs	r0, #1
2ffec3cc:	f003 fb14 	bl	2ffef9f8 <ddr_set_sr_mode>
2ffec3d0:	f007 f81f 	bl	2fff3412 <ddr_standby_sr_entry>
2ffec3d4:	2800      	cmp	r0, #0
2ffec3d6:	d1da      	bne.n	2ffec38e <stm32_pwr_down_wfi_load+0x2e>
2ffec3d8:	2c07      	cmp	r4, #7
2ffec3da:	d0dd      	beq.n	2ffec398 <stm32_pwr_down_wfi_load+0x38>
2ffec3dc:	f3bf 8f4f 	dsb	sy
2ffec3e0:	f3bf 8f6f 	isb	sy
2ffec3e4:	bf30      	wfi
2ffec3e6:	f004 f8fd 	bl	2fff05e4 <stm32_iwdg_refresh>
2ffec3ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec3ee:	f006 bc5d 	b.w	2fff2cac <stm32_pwr_cstop_critic_exit>
2ffec3f2:	2c07      	cmp	r4, #7
2ffec3f4:	d0d0      	beq.n	2ffec398 <stm32_pwr_down_wfi_load+0x38>
2ffec3f6:	f3bf 8f4f 	dsb	sy
2ffec3fa:	f3bf 8f6f 	isb	sy
2ffec3fe:	bf30      	wfi
2ffec400:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec404:	f004 b8ee 	b.w	2fff05e4 <stm32_iwdg_refresh>
2ffec408:	2fff6547 	.word	0x2fff6547
2ffec40c:	2fff6567 	.word	0x2fff6567

2ffec410 <fconf_populate_stm32mp1_firewall>:
2ffec410:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffec414:	b086      	sub	sp, #24
2ffec416:	4606      	mov	r6, r0
2ffec418:	f7fe fd18 	bl	2ffeae4c <stm32mp1_ddr_is_restored>
2ffec41c:	4605      	mov	r5, r0
2ffec41e:	bb08      	cbnz	r0, 2ffec464 <fconf_populate_stm32mp1_firewall+0x54>
2ffec420:	4a29      	ldr	r2, [pc, #164]	@ (2ffec4c8 <fconf_populate_stm32mp1_firewall+0xb8>)
2ffec422:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffec426:	4630      	mov	r0, r6
2ffec428:	f007 fe5c 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffec42c:	1e04      	subs	r4, r0, #0
2ffec42e:	da07      	bge.n	2ffec440 <fconf_populate_stm32mp1_firewall+0x30>
2ffec430:	4925      	ldr	r1, [pc, #148]	@ (2ffec4c8 <fconf_populate_stm32mp1_firewall+0xb8>)
2ffec432:	4826      	ldr	r0, [pc, #152]	@ (2ffec4cc <fconf_populate_stm32mp1_firewall+0xbc>)
2ffec434:	f000 f942 	bl	2ffec6bc <tf_log>
2ffec438:	4620      	mov	r0, r4
2ffec43a:	b006      	add	sp, #24
2ffec43c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffec440:	4a23      	ldr	r2, [pc, #140]	@ (2ffec4d0 <fconf_populate_stm32mp1_firewall+0xc0>)
2ffec442:	4621      	mov	r1, r4
2ffec444:	ab05      	add	r3, sp, #20
2ffec446:	4630      	mov	r0, r6
2ffec448:	f007 fd18 	bl	2fff3e7c <fdt_getprop>
2ffec44c:	4604      	mov	r4, r0
2ffec44e:	b158      	cbz	r0, 2ffec468 <fconf_populate_stm32mp1_firewall+0x58>
2ffec450:	4e20      	ldr	r6, [pc, #128]	@ (2ffec4d4 <fconf_populate_stm32mp1_firewall+0xc4>)
2ffec452:	462f      	mov	r7, r5
2ffec454:	9b05      	ldr	r3, [sp, #20]
2ffec456:	ebb5 1f13 	cmp.w	r5, r3, lsr #4
2ffec45a:	d30c      	bcc.n	2ffec476 <fconf_populate_stm32mp1_firewall+0x66>
2ffec45c:	481d      	ldr	r0, [pc, #116]	@ (2ffec4d4 <fconf_populate_stm32mp1_firewall+0xc4>)
2ffec45e:	2104      	movs	r1, #4
2ffec460:	f7fc eff4 	blx	2ffe944c <flush_dcache_range>
2ffec464:	2400      	movs	r4, #0
2ffec466:	e7e7      	b.n	2ffec438 <fconf_populate_stm32mp1_firewall+0x28>
2ffec468:	4919      	ldr	r1, [pc, #100]	@ (2ffec4d0 <fconf_populate_stm32mp1_firewall+0xc0>)
2ffec46a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffec46e:	481a      	ldr	r0, [pc, #104]	@ (2ffec4d8 <fconf_populate_stm32mp1_firewall+0xc8>)
2ffec470:	f000 f924 	bl	2ffec6bc <tf_log>
2ffec474:	e7e0      	b.n	2ffec438 <fconf_populate_stm32mp1_firewall+0x28>
2ffec476:	f854 0b10 	ldr.w	r0, [r4], #16
2ffec47a:	3501      	adds	r5, #1
2ffec47c:	f006 fc23 	bl	2fff2cc6 <fdt32_to_cpu>
2ffec480:	4602      	mov	r2, r0
2ffec482:	f854 0c0c 	ldr.w	r0, [r4, #-12]
2ffec486:	f006 fc1e 	bl	2fff2cc6 <fdt32_to_cpu>
2ffec48a:	4603      	mov	r3, r0
2ffec48c:	f854 0c08 	ldr.w	r0, [r4, #-8]
2ffec490:	f006 fc19 	bl	2fff2cc6 <fdt32_to_cpu>
2ffec494:	4680      	mov	r8, r0
2ffec496:	f854 0c04 	ldr.w	r0, [r4, #-4]
2ffec49a:	f006 fc14 	bl	2fff2cc6 <fdt32_to_cpu>
2ffec49e:	6831      	ldr	r1, [r6, #0]
2ffec4a0:	189b      	adds	r3, r3, r2
2ffec4a2:	f101 0101 	add.w	r1, r1, #1
2ffec4a6:	6031      	str	r1, [r6, #0]
2ffec4a8:	9003      	str	r0, [sp, #12]
2ffec4aa:	eb47 0007 	adc.w	r0, r7, r7
2ffec4ae:	3b01      	subs	r3, #1
2ffec4b0:	f140 30ff 	adc.w	r0, r0, #4294967295	@ 0xffffffff
2ffec4b4:	e9cd 3000 	strd	r3, r0, [sp]
2ffec4b8:	f8cd 8008 	str.w	r8, [sp, #8]
2ffec4bc:	2300      	movs	r3, #0
2ffec4be:	4618      	mov	r0, r3
2ffec4c0:	f002 fed6 	bl	2ffef270 <tzc400_configure_region>
2ffec4c4:	e7c6      	b.n	2ffec454 <fconf_populate_stm32mp1_firewall+0x44>
2ffec4c6:	bf00      	nop
2ffec4c8:	2fff6581 	.word	0x2fff6581
2ffec4cc:	2fff5a53 	.word	0x2fff5a53
2ffec4d0:	2fff6591 	.word	0x2fff6591
2ffec4d4:	2fff943c 	.word	0x2fff943c
2ffec4d8:	2fff5ec7 	.word	0x2fff5ec7

2ffec4dc <stm32mp1_arch_security_setup>:
2ffec4dc:	b508      	push	{r3, lr}
2ffec4de:	2042      	movs	r0, #66	@ 0x42
2ffec4e0:	f001 f912 	bl	2ffed708 <clk_enable>
2ffec4e4:	2071      	movs	r0, #113	@ 0x71
2ffec4e6:	f001 f90f 	bl	2ffed708 <clk_enable>
2ffec4ea:	4808      	ldr	r0, [pc, #32]	@ (2ffec50c <stm32mp1_arch_security_setup+0x30>)
2ffec4ec:	f002 fe7c 	bl	2ffef1e8 <tzc400_init>
2ffec4f0:	f002 ff76 	bl	2ffef3e0 <tzc400_disable_filters>
2ffec4f4:	2100      	movs	r1, #0
2ffec4f6:	2003      	movs	r0, #3
2ffec4f8:	f002 fea4 	bl	2ffef244 <tzc400_configure_region0>
2ffec4fc:	2001      	movs	r0, #1
2ffec4fe:	f002 fe61 	bl	2ffef1c4 <tzc400_set_action>
2ffec502:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec506:	f002 bf37 	b.w	2ffef378 <tzc400_enable_filters>
2ffec50a:	bf00      	nop
2ffec50c:	5c006000 	.word	0x5c006000

2ffec510 <stm32mp1_security_setup>:
2ffec510:	b538      	push	{r3, r4, r5, lr}
2ffec512:	f7fe fc9b 	bl	2ffeae4c <stm32mp1_ddr_is_restored>
2ffec516:	4604      	mov	r4, r0
2ffec518:	bb08      	cbnz	r0, 2ffec55e <stm32mp1_security_setup+0x4e>
2ffec51a:	4d11      	ldr	r5, [pc, #68]	@ (2ffec560 <stm32mp1_security_setup+0x50>)
2ffec51c:	682b      	ldr	r3, [r5, #0]
2ffec51e:	b91b      	cbnz	r3, 2ffec528 <stm32mp1_security_setup+0x18>
2ffec520:	4810      	ldr	r0, [pc, #64]	@ (2ffec564 <stm32mp1_security_setup+0x54>)
2ffec522:	2141      	movs	r1, #65	@ 0x41
2ffec524:	f005 fff8 	bl	2fff2518 <__assert>
2ffec528:	480f      	ldr	r0, [pc, #60]	@ (2ffec568 <stm32mp1_security_setup+0x58>)
2ffec52a:	f002 fe5d 	bl	2ffef1e8 <tzc400_init>
2ffec52e:	f002 ff57 	bl	2ffef3e0 <tzc400_disable_filters>
2ffec532:	4621      	mov	r1, r4
2ffec534:	4620      	mov	r0, r4
2ffec536:	2401      	movs	r4, #1
2ffec538:	f002 fe84 	bl	2ffef244 <tzc400_configure_region0>
2ffec53c:	682b      	ldr	r3, [r5, #0]
2ffec53e:	429c      	cmp	r4, r3
2ffec540:	d906      	bls.n	2ffec550 <stm32mp1_security_setup+0x40>
2ffec542:	2002      	movs	r0, #2
2ffec544:	f002 fe3e 	bl	2ffef1c4 <tzc400_set_action>
2ffec548:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec54c:	f002 bf14 	b.w	2ffef378 <tzc400_enable_filters>
2ffec550:	4620      	mov	r0, r4
2ffec552:	2103      	movs	r1, #3
2ffec554:	3401      	adds	r4, #1
2ffec556:	f002 feed 	bl	2ffef334 <tzc400_update_filters>
2ffec55a:	b2e4      	uxtb	r4, r4
2ffec55c:	e7ee      	b.n	2ffec53c <stm32mp1_security_setup+0x2c>
2ffec55e:	bd38      	pop	{r3, r4, r5, pc}
2ffec560:	2fff943c 	.word	0x2fff943c
2ffec564:	2fff659f 	.word	0x2fff659f
2ffec568:	5c006000 	.word	0x5c006000

2ffec56c <load_auth_image>:
2ffec56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffec570:	4605      	mov	r5, r0
2ffec572:	f8df 8108 	ldr.w	r8, [pc, #264]	@ 2ffec67c <load_auth_image+0x110>
2ffec576:	b086      	sub	sp, #24
2ffec578:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 2ffec680 <load_auth_image+0x114>
2ffec57c:	460e      	mov	r6, r1
2ffec57e:	f8df a104 	ldr.w	sl, [pc, #260]	@ 2ffec684 <load_auth_image+0x118>
2ffec582:	b91e      	cbnz	r6, 2ffec58c <load_auth_image+0x20>
2ffec584:	2150      	movs	r1, #80	@ 0x50
2ffec586:	4840      	ldr	r0, [pc, #256]	@ (2ffec688 <load_auth_image+0x11c>)
2ffec588:	f005 ffc6 	bl	2fff2518 <__assert>
2ffec58c:	7873      	ldrb	r3, [r6, #1]
2ffec58e:	2b01      	cmp	r3, #1
2ffec590:	d801      	bhi.n	2ffec596 <load_auth_image+0x2a>
2ffec592:	2151      	movs	r1, #81	@ 0x51
2ffec594:	e7f7      	b.n	2ffec586 <load_auth_image+0x1a>
2ffec596:	68b7      	ldr	r7, [r6, #8]
2ffec598:	aa03      	add	r2, sp, #12
2ffec59a:	a901      	add	r1, sp, #4
2ffec59c:	4628      	mov	r0, r5
2ffec59e:	f7ff f86f 	bl	2ffeb680 <plat_get_image_source>
2ffec5a2:	4604      	mov	r4, r0
2ffec5a4:	b188      	cbz	r0, 2ffec5ca <load_auth_image+0x5e>
2ffec5a6:	4602      	mov	r2, r0
2ffec5a8:	4629      	mov	r1, r5
2ffec5aa:	4838      	ldr	r0, [pc, #224]	@ (2ffec68c <load_auth_image+0x120>)
2ffec5ac:	f000 f886 	bl	2ffec6bc <tf_log>
2ffec5b0:	f006 fb98 	bl	2fff2ce4 <plat_try_next_boot_source>
2ffec5b4:	2800      	cmp	r0, #0
2ffec5b6:	d1e9      	bne.n	2ffec58c <load_auth_image+0x20>
2ffec5b8:	4628      	mov	r0, r5
2ffec5ba:	f006 fb67 	bl	2fff2c8c <plat_try_backup_partitions>
2ffec5be:	2800      	cmp	r0, #0
2ffec5c0:	d1df      	bne.n	2ffec582 <load_auth_image+0x16>
2ffec5c2:	4620      	mov	r0, r4
2ffec5c4:	b006      	add	sp, #24
2ffec5c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffec5ca:	9903      	ldr	r1, [sp, #12]
2ffec5cc:	aa02      	add	r2, sp, #8
2ffec5ce:	9801      	ldr	r0, [sp, #4]
2ffec5d0:	f7fe f852 	bl	2ffea678 <io_open>
2ffec5d4:	4604      	mov	r4, r0
2ffec5d6:	b118      	cbz	r0, 2ffec5e0 <load_auth_image+0x74>
2ffec5d8:	4602      	mov	r2, r0
2ffec5da:	4629      	mov	r1, r5
2ffec5dc:	4650      	mov	r0, sl
2ffec5de:	e7e5      	b.n	2ffec5ac <load_auth_image+0x40>
2ffec5e0:	463a      	mov	r2, r7
2ffec5e2:	4629      	mov	r1, r5
2ffec5e4:	4640      	mov	r0, r8
2ffec5e6:	f000 f869 	bl	2ffec6bc <tf_log>
2ffec5ea:	9802      	ldr	r0, [sp, #8]
2ffec5ec:	a904      	add	r1, sp, #16
2ffec5ee:	f7fe f8b3 	bl	2ffea758 <io_size>
2ffec5f2:	4604      	mov	r4, r0
2ffec5f4:	b908      	cbnz	r0, 2ffec5fa <load_auth_image+0x8e>
2ffec5f6:	9a04      	ldr	r2, [sp, #16]
2ffec5f8:	b992      	cbnz	r2, 2ffec620 <load_auth_image+0xb4>
2ffec5fa:	4622      	mov	r2, r4
2ffec5fc:	4629      	mov	r1, r5
2ffec5fe:	4648      	mov	r0, r9
2ffec600:	f000 f85c 	bl	2ffec6bc <tf_log>
2ffec604:	9802      	ldr	r0, [sp, #8]
2ffec606:	f7fe f8e5 	bl	2ffea7d4 <io_close>
2ffec60a:	9801      	ldr	r0, [sp, #4]
2ffec60c:	f7fe f81c 	bl	2ffea648 <io_dev_close>
2ffec610:	2c00      	cmp	r4, #0
2ffec612:	d1cd      	bne.n	2ffec5b0 <load_auth_image+0x44>
2ffec614:	68f1      	ldr	r1, [r6, #12]
2ffec616:	2400      	movs	r4, #0
2ffec618:	68b0      	ldr	r0, [r6, #8]
2ffec61a:	f7fc ef18 	blx	2ffe944c <flush_dcache_range>
2ffec61e:	e7d0      	b.n	2ffec5c2 <load_auth_image+0x56>
2ffec620:	6933      	ldr	r3, [r6, #16]
2ffec622:	429a      	cmp	r2, r3
2ffec624:	d90c      	bls.n	2ffec640 <load_auth_image+0xd4>
2ffec626:	481a      	ldr	r0, [pc, #104]	@ (2ffec690 <load_auth_image+0x124>)
2ffec628:	4629      	mov	r1, r5
2ffec62a:	f06f 041a 	mvn.w	r4, #26
2ffec62e:	f000 f845 	bl	2ffec6bc <tf_log>
2ffec632:	9802      	ldr	r0, [sp, #8]
2ffec634:	f7fe f8ce 	bl	2ffea7d4 <io_close>
2ffec638:	9801      	ldr	r0, [sp, #4]
2ffec63a:	f7fe f805 	bl	2ffea648 <io_dev_close>
2ffec63e:	e7b7      	b.n	2ffec5b0 <load_auth_image+0x44>
2ffec640:	9802      	ldr	r0, [sp, #8]
2ffec642:	ab05      	add	r3, sp, #20
2ffec644:	60f2      	str	r2, [r6, #12]
2ffec646:	4639      	mov	r1, r7
2ffec648:	f7fe f8a0 	bl	2ffea78c <io_read>
2ffec64c:	4604      	mov	r4, r0
2ffec64e:	b918      	cbnz	r0, 2ffec658 <load_auth_image+0xec>
2ffec650:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
2ffec654:	429a      	cmp	r2, r3
2ffec656:	d203      	bcs.n	2ffec660 <load_auth_image+0xf4>
2ffec658:	480e      	ldr	r0, [pc, #56]	@ (2ffec694 <load_auth_image+0x128>)
2ffec65a:	4622      	mov	r2, r4
2ffec65c:	4629      	mov	r1, r5
2ffec65e:	e7cf      	b.n	2ffec600 <load_auth_image+0x94>
2ffec660:	443b      	add	r3, r7
2ffec662:	463a      	mov	r2, r7
2ffec664:	480c      	ldr	r0, [pc, #48]	@ (2ffec698 <load_auth_image+0x12c>)
2ffec666:	4629      	mov	r1, r5
2ffec668:	f000 f828 	bl	2ffec6bc <tf_log>
2ffec66c:	9802      	ldr	r0, [sp, #8]
2ffec66e:	f7fe f8b1 	bl	2ffea7d4 <io_close>
2ffec672:	9801      	ldr	r0, [sp, #4]
2ffec674:	f7fd ffe8 	bl	2ffea648 <io_dev_close>
2ffec678:	e7cc      	b.n	2ffec614 <load_auth_image+0xa8>
2ffec67a:	bf00      	nop
2ffec67c:	2fff65ef 	.word	0x2fff65ef
2ffec680:	2fff6616 	.word	0x2fff6616
2ffec684:	2fff5514 	.word	0x2fff5514
2ffec688:	2fff65dc 	.word	0x2fff65dc
2ffec68c:	2fff54e3 	.word	0x2fff54e3
2ffec690:	2fff664d 	.word	0x2fff664d
2ffec694:	2fff666e 	.word	0x2fff666e
2ffec698:	2fff6690 	.word	0x2fff6690

2ffec69c <print_entry_point_info>:
2ffec69c:	b510      	push	{r4, lr}
2ffec69e:	4604      	mov	r4, r0
2ffec6a0:	6881      	ldr	r1, [r0, #8]
2ffec6a2:	4804      	ldr	r0, [pc, #16]	@ (2ffec6b4 <print_entry_point_info+0x18>)
2ffec6a4:	f000 f80a 	bl	2ffec6bc <tf_log>
2ffec6a8:	68e1      	ldr	r1, [r4, #12]
2ffec6aa:	4803      	ldr	r0, [pc, #12]	@ (2ffec6b8 <print_entry_point_info+0x1c>)
2ffec6ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffec6b0:	f000 b804 	b.w	2ffec6bc <tf_log>
2ffec6b4:	2fff66b4 	.word	0x2fff66b4
2ffec6b8:	2fff66d2 	.word	0x2fff66d2

2ffec6bc <tf_log>:
2ffec6bc:	b40f      	push	{r0, r1, r2, r3}
2ffec6be:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffec6c0:	9d06      	ldr	r5, [sp, #24]
2ffec6c2:	7828      	ldrb	r0, [r5, #0]
2ffec6c4:	1e43      	subs	r3, r0, #1
2ffec6c6:	2b31      	cmp	r3, #49	@ 0x31
2ffec6c8:	d903      	bls.n	2ffec6d2 <tf_log+0x16>
2ffec6ca:	2122      	movs	r1, #34	@ 0x22
2ffec6cc:	4810      	ldr	r0, [pc, #64]	@ (2ffec710 <tf_log+0x54>)
2ffec6ce:	f005 ff23 	bl	2fff2518 <__assert>
2ffec6d2:	220a      	movs	r2, #10
2ffec6d4:	fbb0 f3f2 	udiv	r3, r0, r2
2ffec6d8:	fb02 0313 	mls	r3, r2, r3, r0
2ffec6dc:	b10b      	cbz	r3, 2ffec6e2 <tf_log+0x26>
2ffec6de:	2123      	movs	r1, #35	@ 0x23
2ffec6e0:	e7f4      	b.n	2ffec6cc <tf_log+0x10>
2ffec6e2:	4b0c      	ldr	r3, [pc, #48]	@ (2ffec714 <tf_log+0x58>)
2ffec6e4:	681b      	ldr	r3, [r3, #0]
2ffec6e6:	4283      	cmp	r3, r0
2ffec6e8:	d30a      	bcc.n	2ffec700 <tf_log+0x44>
2ffec6ea:	f000 f897 	bl	2ffec81c <plat_log_get_prefix>
2ffec6ee:	1e44      	subs	r4, r0, #1
2ffec6f0:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2ffec6f4:	b948      	cbnz	r0, 2ffec70a <tf_log+0x4e>
2ffec6f6:	a907      	add	r1, sp, #28
2ffec6f8:	1c68      	adds	r0, r5, #1
2ffec6fa:	9101      	str	r1, [sp, #4]
2ffec6fc:	f005 ff18 	bl	2fff2530 <vprintf>
2ffec700:	b003      	add	sp, #12
2ffec702:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffec706:	b004      	add	sp, #16
2ffec708:	4770      	bx	lr
2ffec70a:	f006 fade 	bl	2fff2cca <putchar>
2ffec70e:	e7ef      	b.n	2ffec6f0 <tf_log+0x34>
2ffec710:	2fff66e0 	.word	0x2fff66e0
2ffec714:	2fff8510 	.word	0x2fff8510

2ffec718 <console_is_registered>:
2ffec718:	b508      	push	{r3, lr}
2ffec71a:	b918      	cbnz	r0, 2ffec724 <console_is_registered+0xc>
2ffec71c:	4806      	ldr	r0, [pc, #24]	@ (2ffec738 <console_is_registered+0x20>)
2ffec71e:	2136      	movs	r1, #54	@ 0x36
2ffec720:	f005 fefa 	bl	2fff2518 <__assert>
2ffec724:	4b05      	ldr	r3, [pc, #20]	@ (2ffec73c <console_is_registered+0x24>)
2ffec726:	681b      	ldr	r3, [r3, #0]
2ffec728:	b90b      	cbnz	r3, 2ffec72e <console_is_registered+0x16>
2ffec72a:	4618      	mov	r0, r3
2ffec72c:	bd08      	pop	{r3, pc}
2ffec72e:	4283      	cmp	r3, r0
2ffec730:	d1f9      	bne.n	2ffec726 <console_is_registered+0xe>
2ffec732:	2001      	movs	r0, #1
2ffec734:	e7fa      	b.n	2ffec72c <console_is_registered+0x14>
2ffec736:	bf00      	nop
2ffec738:	2fff66f0 	.word	0x2fff66f0
2ffec73c:	2fff9440 	.word	0x2fff9440

2ffec740 <console_register>:
2ffec740:	4b0b      	ldr	r3, [pc, #44]	@ (2ffec770 <console_register+0x30>)
2ffec742:	b510      	push	{r4, lr}
2ffec744:	4604      	mov	r4, r0
2ffec746:	4298      	cmp	r0, r3
2ffec748:	d306      	bcc.n	2ffec758 <console_register+0x18>
2ffec74a:	4b0a      	ldr	r3, [pc, #40]	@ (2ffec774 <console_register+0x34>)
2ffec74c:	4298      	cmp	r0, r3
2ffec74e:	d203      	bcs.n	2ffec758 <console_register+0x18>
2ffec750:	4809      	ldr	r0, [pc, #36]	@ (2ffec778 <console_register+0x38>)
2ffec752:	2116      	movs	r1, #22
2ffec754:	f005 fee0 	bl	2fff2518 <__assert>
2ffec758:	4620      	mov	r0, r4
2ffec75a:	f7ff ffdd 	bl	2ffec718 <console_is_registered>
2ffec75e:	2801      	cmp	r0, #1
2ffec760:	f04f 0001 	mov.w	r0, #1
2ffec764:	bf1f      	itttt	ne
2ffec766:	4b05      	ldrne	r3, [pc, #20]	@ (2ffec77c <console_register+0x3c>)
2ffec768:	681a      	ldrne	r2, [r3, #0]
2ffec76a:	6022      	strne	r2, [r4, #0]
2ffec76c:	601c      	strne	r4, [r3, #0]
2ffec76e:	bd10      	pop	{r4, pc}
2ffec770:	2fff85c0 	.word	0x2fff85c0
2ffec774:	2fff91c0 	.word	0x2fff91c0
2ffec778:	2fff66f0 	.word	0x2fff66f0
2ffec77c:	2fff9440 	.word	0x2fff9440

2ffec780 <console_set_scope>:
2ffec780:	b508      	push	{r3, lr}
2ffec782:	b918      	cbnz	r0, 2ffec78c <console_set_scope+0xc>
2ffec784:	4804      	ldr	r0, [pc, #16]	@ (2ffec798 <console_set_scope+0x18>)
2ffec786:	2146      	movs	r1, #70	@ 0x46
2ffec788:	f005 fec6 	bl	2fff2518 <__assert>
2ffec78c:	6843      	ldr	r3, [r0, #4]
2ffec78e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
2ffec792:	4319      	orrs	r1, r3
2ffec794:	6041      	str	r1, [r0, #4]
2ffec796:	bd08      	pop	{r3, pc}
2ffec798:	2fff66f0 	.word	0x2fff66f0

2ffec79c <console_putc>:
2ffec79c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffec79e:	4606      	mov	r6, r0
2ffec7a0:	4b12      	ldr	r3, [pc, #72]	@ (2ffec7ec <console_putc+0x50>)
2ffec7a2:	f06f 057f 	mvn.w	r5, #127	@ 0x7f
2ffec7a6:	4f12      	ldr	r7, [pc, #72]	@ (2ffec7f0 <console_putc+0x54>)
2ffec7a8:	681c      	ldr	r4, [r3, #0]
2ffec7aa:	b90c      	cbnz	r4, 2ffec7b0 <console_putc+0x14>
2ffec7ac:	4628      	mov	r0, r5
2ffec7ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffec7b0:	6862      	ldr	r2, [r4, #4]
2ffec7b2:	783b      	ldrb	r3, [r7, #0]
2ffec7b4:	4213      	tst	r3, r2
2ffec7b6:	d00d      	beq.n	2ffec7d4 <console_putc+0x38>
2ffec7b8:	68a3      	ldr	r3, [r4, #8]
2ffec7ba:	b15b      	cbz	r3, 2ffec7d4 <console_putc+0x38>
2ffec7bc:	2e0a      	cmp	r6, #10
2ffec7be:	d00b      	beq.n	2ffec7d8 <console_putc+0x3c>
2ffec7c0:	68a3      	ldr	r3, [r4, #8]
2ffec7c2:	4621      	mov	r1, r4
2ffec7c4:	4630      	mov	r0, r6
2ffec7c6:	4798      	blx	r3
2ffec7c8:	f115 0f80 	cmn.w	r5, #128	@ 0x80
2ffec7cc:	d00c      	beq.n	2ffec7e8 <console_putc+0x4c>
2ffec7ce:	4285      	cmp	r5, r0
2ffec7d0:	bfa8      	it	ge
2ffec7d2:	4605      	movge	r5, r0
2ffec7d4:	6824      	ldr	r4, [r4, #0]
2ffec7d6:	e7e8      	b.n	2ffec7aa <console_putc+0xe>
2ffec7d8:	05d2      	lsls	r2, r2, #23
2ffec7da:	d5f1      	bpl.n	2ffec7c0 <console_putc+0x24>
2ffec7dc:	4621      	mov	r1, r4
2ffec7de:	200d      	movs	r0, #13
2ffec7e0:	4798      	blx	r3
2ffec7e2:	2800      	cmp	r0, #0
2ffec7e4:	daec      	bge.n	2ffec7c0 <console_putc+0x24>
2ffec7e6:	e7ef      	b.n	2ffec7c8 <console_putc+0x2c>
2ffec7e8:	4605      	mov	r5, r0
2ffec7ea:	e7f3      	b.n	2ffec7d4 <console_putc+0x38>
2ffec7ec:	2fff9440 	.word	0x2fff9440
2ffec7f0:	2fff85a4 	.word	0x2fff85a4

2ffec7f4 <console_flush>:
2ffec7f4:	b538      	push	{r3, r4, r5, lr}
2ffec7f6:	4b07      	ldr	r3, [pc, #28]	@ (2ffec814 <console_flush+0x20>)
2ffec7f8:	4d07      	ldr	r5, [pc, #28]	@ (2ffec818 <console_flush+0x24>)
2ffec7fa:	681c      	ldr	r4, [r3, #0]
2ffec7fc:	b904      	cbnz	r4, 2ffec800 <console_flush+0xc>
2ffec7fe:	bd38      	pop	{r3, r4, r5, pc}
2ffec800:	782a      	ldrb	r2, [r5, #0]
2ffec802:	6863      	ldr	r3, [r4, #4]
2ffec804:	421a      	tst	r2, r3
2ffec806:	d003      	beq.n	2ffec810 <console_flush+0x1c>
2ffec808:	6923      	ldr	r3, [r4, #16]
2ffec80a:	b10b      	cbz	r3, 2ffec810 <console_flush+0x1c>
2ffec80c:	4620      	mov	r0, r4
2ffec80e:	4798      	blx	r3
2ffec810:	6824      	ldr	r4, [r4, #0]
2ffec812:	e7f3      	b.n	2ffec7fc <console_flush+0x8>
2ffec814:	2fff9440 	.word	0x2fff9440
2ffec818:	2fff85a4 	.word	0x2fff85a4

2ffec81c <plat_log_get_prefix>:
2ffec81c:	2832      	cmp	r0, #50	@ 0x32
2ffec81e:	f04f 030a 	mov.w	r3, #10
2ffec822:	bf28      	it	cs
2ffec824:	2032      	movcs	r0, #50	@ 0x32
2ffec826:	280a      	cmp	r0, #10
2ffec828:	bf38      	it	cc
2ffec82a:	200a      	movcc	r0, #10
2ffec82c:	fbb0 f0f3 	udiv	r0, r0, r3
2ffec830:	4b02      	ldr	r3, [pc, #8]	@ (2ffec83c <plat_log_get_prefix+0x20>)
2ffec832:	3801      	subs	r0, #1
2ffec834:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffec838:	4770      	bx	lr
2ffec83a:	bf00      	nop
2ffec83c:	2fff45cc 	.word	0x2fff45cc

2ffec840 <read_uuid>:
2ffec840:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffec844:	460e      	mov	r6, r1
2ffec846:	4605      	mov	r5, r0
2ffec848:	2124      	movs	r1, #36	@ 0x24
2ffec84a:	4630      	mov	r0, r6
2ffec84c:	f007 fdca 	bl	2fff43e4 <strnlen>
2ffec850:	2824      	cmp	r0, #36	@ 0x24
2ffec852:	d006      	beq.n	2ffec862 <read_uuid+0x22>
2ffec854:	482a      	ldr	r0, [pc, #168]	@ (2ffec900 <read_uuid+0xc0>)
2ffec856:	f7ff ff31 	bl	2ffec6bc <tf_log>
2ffec85a:	f06f 0015 	mvn.w	r0, #21
2ffec85e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffec862:	2208      	movs	r2, #8
2ffec864:	4631      	mov	r1, r6
2ffec866:	4628      	mov	r0, r5
2ffec868:	f006 fb3a 	bl	2fff2ee0 <read_hex.part.0>
2ffec86c:	7a37      	ldrb	r7, [r6, #8]
2ffec86e:	2204      	movs	r2, #4
2ffec870:	4682      	mov	sl, r0
2ffec872:	f106 0109 	add.w	r1, r6, #9
2ffec876:	3f2d      	subs	r7, #45	@ 0x2d
2ffec878:	eb05 0002 	add.w	r0, r5, r2
2ffec87c:	bf18      	it	ne
2ffec87e:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
2ffec882:	f006 fb2d 	bl	2fff2ee0 <read_hex.part.0>
2ffec886:	7b74      	ldrb	r4, [r6, #13]
2ffec888:	4681      	mov	r9, r0
2ffec88a:	2204      	movs	r2, #4
2ffec88c:	f106 010e 	add.w	r1, r6, #14
2ffec890:	3c2d      	subs	r4, #45	@ 0x2d
2ffec892:	f105 0006 	add.w	r0, r5, #6
2ffec896:	bf18      	it	ne
2ffec898:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
2ffec89c:	f006 fb20 	bl	2fff2ee0 <read_hex.part.0>
2ffec8a0:	433c      	orrs	r4, r7
2ffec8a2:	4680      	mov	r8, r0
2ffec8a4:	7cb7      	ldrb	r7, [r6, #18]
2ffec8a6:	2204      	movs	r2, #4
2ffec8a8:	f106 0113 	add.w	r1, r6, #19
2ffec8ac:	f105 0008 	add.w	r0, r5, #8
2ffec8b0:	3f2d      	subs	r7, #45	@ 0x2d
2ffec8b2:	bf18      	it	ne
2ffec8b4:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
2ffec8b8:	f006 fb12 	bl	2fff2ee0 <read_hex.part.0>
2ffec8bc:	4327      	orrs	r7, r4
2ffec8be:	220c      	movs	r2, #12
2ffec8c0:	7df4      	ldrb	r4, [r6, #23]
2ffec8c2:	f106 0118 	add.w	r1, r6, #24
2ffec8c6:	3c2d      	subs	r4, #45	@ 0x2d
2ffec8c8:	bf18      	it	ne
2ffec8ca:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
2ffec8ce:	433c      	orrs	r4, r7
2ffec8d0:	ea44 040a 	orr.w	r4, r4, sl
2ffec8d4:	ea44 0409 	orr.w	r4, r4, r9
2ffec8d8:	ea44 0408 	orr.w	r4, r4, r8
2ffec8dc:	4304      	orrs	r4, r0
2ffec8de:	f105 000a 	add.w	r0, r5, #10
2ffec8e2:	f006 fafd 	bl	2fff2ee0 <read_hex.part.0>
2ffec8e6:	4304      	orrs	r4, r0
2ffec8e8:	d508      	bpl.n	2ffec8fc <read_uuid+0xbc>
2ffec8ea:	4806      	ldr	r0, [pc, #24]	@ (2ffec904 <read_uuid+0xc4>)
2ffec8ec:	f7ff fee6 	bl	2ffec6bc <tf_log>
2ffec8f0:	2210      	movs	r2, #16
2ffec8f2:	2100      	movs	r1, #0
2ffec8f4:	4628      	mov	r0, r5
2ffec8f6:	f007 fc4d 	bl	2fff4194 <memset>
2ffec8fa:	e7ae      	b.n	2ffec85a <read_uuid+0x1a>
2ffec8fc:	2000      	movs	r0, #0
2ffec8fe:	e7ae      	b.n	2ffec85e <read_uuid+0x1e>
2ffec900:	2fff6742 	.word	0x2fff6742
2ffec904:	2fff675d 	.word	0x2fff675d

2ffec908 <stm32_get_bootinfo_cell.isra.0>:
2ffec908:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffec90a:	2300      	movs	r3, #0
2ffec90c:	9301      	str	r3, [sp, #4]
2ffec90e:	4604      	mov	r4, r0
2ffec910:	a801      	add	r0, sp, #4
2ffec912:	460d      	mov	r5, r1
2ffec914:	f002 f826 	bl	2ffee964 <fdt_get_address>
2ffec918:	b160      	cbz	r0, 2ffec934 <stm32_get_bootinfo_cell.isra.0+0x2c>
2ffec91a:	4a07      	ldr	r2, [pc, #28]	@ (2ffec938 <stm32_get_bootinfo_cell.isra.0+0x30>)
2ffec91c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffec920:	9801      	ldr	r0, [sp, #4]
2ffec922:	f007 fbdf 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffec926:	1e01      	subs	r1, r0, #0
2ffec928:	db04      	blt.n	2ffec934 <stm32_get_bootinfo_cell.isra.0+0x2c>
2ffec92a:	9801      	ldr	r0, [sp, #4]
2ffec92c:	462b      	mov	r3, r5
2ffec92e:	4622      	mov	r2, r4
2ffec930:	f001 fb5c 	bl	2ffedfec <nvmem_get_cell_by_name>
2ffec934:	b003      	add	sp, #12
2ffec936:	bd30      	pop	{r4, r5, pc}
2ffec938:	2fff6772 	.word	0x2fff6772

2ffec93c <stm32mp_save_boot_ctx_address>:
2ffec93c:	4b0c      	ldr	r3, [pc, #48]	@ (2ffec970 <stm32mp_save_boot_ctx_address+0x34>)
2ffec93e:	7842      	ldrb	r2, [r0, #1]
2ffec940:	6018      	str	r0, [r3, #0]
2ffec942:	7803      	ldrb	r3, [r0, #0]
2ffec944:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffec948:	4a0a      	ldr	r2, [pc, #40]	@ (2ffec974 <stm32mp_save_boot_ctx_address+0x38>)
2ffec94a:	8013      	strh	r3, [r2, #0]
2ffec94c:	f890 204d 	ldrb.w	r2, [r0, #77]	@ 0x4d
2ffec950:	f890 304c 	ldrb.w	r3, [r0, #76]	@ 0x4c
2ffec954:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffec958:	f890 204e 	ldrb.w	r2, [r0, #78]	@ 0x4e
2ffec95c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffec960:	f890 204f 	ldrb.w	r2, [r0, #79]	@ 0x4f
2ffec964:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffec968:	4a03      	ldr	r2, [pc, #12]	@ (2ffec978 <stm32mp_save_boot_ctx_address+0x3c>)
2ffec96a:	6013      	str	r3, [r2, #0]
2ffec96c:	4770      	bx	lr
2ffec96e:	bf00      	nop
2ffec970:	2fff9470 	.word	0x2fff9470
2ffec974:	2fff9a24 	.word	0x2fff9a24
2ffec978:	2fff946c 	.word	0x2fff946c

2ffec97c <stm32mp_get_boot_ctx_address>:
2ffec97c:	4b01      	ldr	r3, [pc, #4]	@ (2ffec984 <stm32mp_get_boot_ctx_address+0x8>)
2ffec97e:	6818      	ldr	r0, [r3, #0]
2ffec980:	4770      	bx	lr
2ffec982:	bf00      	nop
2ffec984:	2fff9470 	.word	0x2fff9470

2ffec988 <stm32mp_get_boot_itf_selected>:
2ffec988:	4b01      	ldr	r3, [pc, #4]	@ (2ffec990 <stm32mp_get_boot_itf_selected+0x8>)
2ffec98a:	8818      	ldrh	r0, [r3, #0]
2ffec98c:	4770      	bx	lr
2ffec98e:	bf00      	nop
2ffec990:	2fff9a24 	.word	0x2fff9a24

2ffec994 <stm32mp_ddrctrl_base>:
2ffec994:	4800      	ldr	r0, [pc, #0]	@ (2ffec998 <stm32mp_ddrctrl_base+0x4>)
2ffec996:	4770      	bx	lr
2ffec998:	5a003000 	.word	0x5a003000

2ffec99c <stm32mp_ddrphyc_base>:
2ffec99c:	4800      	ldr	r0, [pc, #0]	@ (2ffec9a0 <stm32mp_ddrphyc_base+0x4>)
2ffec99e:	4770      	bx	lr
2ffec9a0:	5a004000 	.word	0x5a004000

2ffec9a4 <stm32mp_pwr_base>:
2ffec9a4:	4800      	ldr	r0, [pc, #0]	@ (2ffec9a8 <stm32mp_pwr_base+0x4>)
2ffec9a6:	4770      	bx	lr
2ffec9a8:	50001000 	.word	0x50001000

2ffec9ac <stm32mp_pwr_regs_lock>:
2ffec9ac:	b508      	push	{r3, lr}
2ffec9ae:	f006 faba 	bl	2fff2f26 <stm32mp_lock_available>
2ffec9b2:	b120      	cbz	r0, 2ffec9be <stm32mp_pwr_regs_lock+0x12>
2ffec9b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec9b8:	4801      	ldr	r0, [pc, #4]	@ (2ffec9c0 <stm32mp_pwr_regs_lock+0x14>)
2ffec9ba:	f00b b931 	b.w	2fff7c20 <__spin_lock_from_thumb>
2ffec9be:	bd08      	pop	{r3, pc}
2ffec9c0:	2fff9474 	.word	0x2fff9474

2ffec9c4 <stm32mp_pwr_regs_unlock>:
2ffec9c4:	b508      	push	{r3, lr}
2ffec9c6:	f006 faae 	bl	2fff2f26 <stm32mp_lock_available>
2ffec9ca:	b120      	cbz	r0, 2ffec9d6 <stm32mp_pwr_regs_unlock+0x12>
2ffec9cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec9d0:	4801      	ldr	r0, [pc, #4]	@ (2ffec9d8 <stm32mp_pwr_regs_unlock+0x14>)
2ffec9d2:	f00b b91d 	b.w	2fff7c10 <__spin_unlock_from_thumb>
2ffec9d6:	bd08      	pop	{r3, pc}
2ffec9d8:	2fff9474 	.word	0x2fff9474

2ffec9dc <stm32_get_otp_index>:
2ffec9dc:	b508      	push	{r3, lr}
2ffec9de:	b918      	cbnz	r0, 2ffec9e8 <stm32_get_otp_index+0xc>
2ffec9e0:	21af      	movs	r1, #175	@ 0xaf
2ffec9e2:	4805      	ldr	r0, [pc, #20]	@ (2ffec9f8 <stm32_get_otp_index+0x1c>)
2ffec9e4:	f005 fd98 	bl	2fff2518 <__assert>
2ffec9e8:	b909      	cbnz	r1, 2ffec9ee <stm32_get_otp_index+0x12>
2ffec9ea:	21b0      	movs	r1, #176	@ 0xb0
2ffec9ec:	e7f9      	b.n	2ffec9e2 <stm32_get_otp_index+0x6>
2ffec9ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec9f2:	f002 b91b 	b.w	2ffeec2c <dt_find_otp_name>
2ffec9f6:	bf00      	nop
2ffec9f8:	2fff6786 	.word	0x2fff6786

2ffec9fc <stm32_get_otp_value_from_idx>:
2ffec9fc:	b510      	push	{r4, lr}
2ffec9fe:	4604      	mov	r4, r0
2ffeca00:	4608      	mov	r0, r1
2ffeca02:	b919      	cbnz	r1, 2ffeca0c <stm32_get_otp_value_from_idx+0x10>
2ffeca04:	4807      	ldr	r0, [pc, #28]	@ (2ffeca24 <stm32_get_otp_value_from_idx+0x28>)
2ffeca06:	21cc      	movs	r1, #204	@ 0xcc
2ffeca08:	f005 fd86 	bl	2fff2518 <__assert>
2ffeca0c:	4621      	mov	r1, r4
2ffeca0e:	f002 fe9d 	bl	2ffef74c <bsec_shadow_read_otp>
2ffeca12:	b128      	cbz	r0, 2ffeca20 <stm32_get_otp_value_from_idx+0x24>
2ffeca14:	4804      	ldr	r0, [pc, #16]	@ (2ffeca28 <stm32_get_otp_value_from_idx+0x2c>)
2ffeca16:	4621      	mov	r1, r4
2ffeca18:	f7ff fe50 	bl	2ffec6bc <tf_log>
2ffeca1c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeca20:	bd10      	pop	{r4, pc}
2ffeca22:	bf00      	nop
2ffeca24:	2fff6786 	.word	0x2fff6786
2ffeca28:	2fff67a6 	.word	0x2fff67a6

2ffeca2c <stm32_get_otp_value>:
2ffeca2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffeca2e:	460d      	mov	r5, r1
2ffeca30:	4604      	mov	r4, r0
2ffeca32:	b918      	cbnz	r0, 2ffeca3c <stm32_get_otp_value+0x10>
2ffeca34:	21b9      	movs	r1, #185	@ 0xb9
2ffeca36:	480c      	ldr	r0, [pc, #48]	@ (2ffeca68 <stm32_get_otp_value+0x3c>)
2ffeca38:	f005 fd6e 	bl	2fff2518 <__assert>
2ffeca3c:	b909      	cbnz	r1, 2ffeca42 <stm32_get_otp_value+0x16>
2ffeca3e:	21ba      	movs	r1, #186	@ 0xba
2ffeca40:	e7f9      	b.n	2ffeca36 <stm32_get_otp_value+0xa>
2ffeca42:	2200      	movs	r2, #0
2ffeca44:	a901      	add	r1, sp, #4
2ffeca46:	f7ff ffc9 	bl	2ffec9dc <stm32_get_otp_index>
2ffeca4a:	b940      	cbnz	r0, 2ffeca5e <stm32_get_otp_value+0x32>
2ffeca4c:	9801      	ldr	r0, [sp, #4]
2ffeca4e:	4629      	mov	r1, r5
2ffeca50:	f7ff ffd4 	bl	2ffec9fc <stm32_get_otp_value_from_idx>
2ffeca54:	b128      	cbz	r0, 2ffeca62 <stm32_get_otp_value+0x36>
2ffeca56:	4805      	ldr	r0, [pc, #20]	@ (2ffeca6c <stm32_get_otp_value+0x40>)
2ffeca58:	4621      	mov	r1, r4
2ffeca5a:	f7ff fe2f 	bl	2ffec6bc <tf_log>
2ffeca5e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeca62:	b003      	add	sp, #12
2ffeca64:	bd30      	pop	{r4, r5, pc}
2ffeca66:	bf00      	nop
2ffeca68:	2fff6786 	.word	0x2fff6786
2ffeca6c:	2fff67c0 	.word	0x2fff67c0

2ffeca70 <stm32_display_board_info>:
2ffeca70:	f000 030f 	and.w	r3, r0, #15
2ffeca74:	b507      	push	{r0, r1, r2, lr}
2ffeca76:	9301      	str	r3, [sp, #4]
2ffeca78:	f3c0 2303 	ubfx	r3, r0, #8, #4
2ffeca7c:	f3c0 3203 	ubfx	r2, r0, #12, #4
2ffeca80:	3340      	adds	r3, #64	@ 0x40
2ffeca82:	0c01      	lsrs	r1, r0, #16
2ffeca84:	9300      	str	r3, [sp, #0]
2ffeca86:	f3c0 1303 	ubfx	r3, r0, #4, #4
2ffeca8a:	4803      	ldr	r0, [pc, #12]	@ (2ffeca98 <stm32_display_board_info+0x28>)
2ffeca8c:	f7ff fe16 	bl	2ffec6bc <tf_log>
2ffeca90:	b003      	add	sp, #12
2ffeca92:	f85d fb04 	ldr.w	pc, [sp], #4
2ffeca96:	bf00      	nop
2ffeca98:	2fff67d6 	.word	0x2fff67d6

2ffeca9c <stm32_get_magic_number_cell>:
2ffeca9c:	b538      	push	{r3, r4, r5, lr}
2ffeca9e:	4604      	mov	r4, r0
2ffecaa0:	4d07      	ldr	r5, [pc, #28]	@ (2ffecac0 <stm32_get_magic_number_cell+0x24>)
2ffecaa2:	782b      	ldrb	r3, [r5, #0]
2ffecaa4:	b92b      	cbnz	r3, 2ffecab2 <stm32_get_magic_number_cell+0x16>
2ffecaa6:	4907      	ldr	r1, [pc, #28]	@ (2ffecac4 <stm32_get_magic_number_cell+0x28>)
2ffecaa8:	4807      	ldr	r0, [pc, #28]	@ (2ffecac8 <stm32_get_magic_number_cell+0x2c>)
2ffecaaa:	f7ff ff2d 	bl	2ffec908 <stm32_get_bootinfo_cell.isra.0>
2ffecaae:	2301      	movs	r3, #1
2ffecab0:	702b      	strb	r3, [r5, #0]
2ffecab2:	4904      	ldr	r1, [pc, #16]	@ (2ffecac4 <stm32_get_magic_number_cell+0x28>)
2ffecab4:	220c      	movs	r2, #12
2ffecab6:	4620      	mov	r0, r4
2ffecab8:	f007 fb4b 	bl	2fff4152 <memcpy>
2ffecabc:	2000      	movs	r0, #0
2ffecabe:	bd38      	pop	{r3, r4, r5, pc}
2ffecac0:	2fff9a9c 	.word	0x2fff9a9c
2ffecac4:	2fff945c 	.word	0x2fff945c
2ffecac8:	2fff67fb 	.word	0x2fff67fb

2ffecacc <stm32_get_core1_branch_address_cell>:
2ffecacc:	b538      	push	{r3, r4, r5, lr}
2ffecace:	4604      	mov	r4, r0
2ffecad0:	4d07      	ldr	r5, [pc, #28]	@ (2ffecaf0 <stm32_get_core1_branch_address_cell+0x24>)
2ffecad2:	782b      	ldrb	r3, [r5, #0]
2ffecad4:	b92b      	cbnz	r3, 2ffecae2 <stm32_get_core1_branch_address_cell+0x16>
2ffecad6:	4907      	ldr	r1, [pc, #28]	@ (2ffecaf4 <stm32_get_core1_branch_address_cell+0x28>)
2ffecad8:	4807      	ldr	r0, [pc, #28]	@ (2ffecaf8 <stm32_get_core1_branch_address_cell+0x2c>)
2ffecada:	f7ff ff15 	bl	2ffec908 <stm32_get_bootinfo_cell.isra.0>
2ffecade:	2301      	movs	r3, #1
2ffecae0:	702b      	strb	r3, [r5, #0]
2ffecae2:	4904      	ldr	r1, [pc, #16]	@ (2ffecaf4 <stm32_get_core1_branch_address_cell+0x28>)
2ffecae4:	220c      	movs	r2, #12
2ffecae6:	4620      	mov	r0, r4
2ffecae8:	f007 fb33 	bl	2fff4152 <memcpy>
2ffecaec:	2000      	movs	r0, #0
2ffecaee:	bd38      	pop	{r3, r4, r5, pc}
2ffecaf0:	2fff9a9b 	.word	0x2fff9a9b
2ffecaf4:	2fff9450 	.word	0x2fff9450
2ffecaf8:	2fff6808 	.word	0x2fff6808

2ffecafc <stm32_get_boot_mode_cell>:
2ffecafc:	b538      	push	{r3, r4, r5, lr}
2ffecafe:	4604      	mov	r4, r0
2ffecb00:	4d07      	ldr	r5, [pc, #28]	@ (2ffecb20 <stm32_get_boot_mode_cell+0x24>)
2ffecb02:	782b      	ldrb	r3, [r5, #0]
2ffecb04:	b92b      	cbnz	r3, 2ffecb12 <stm32_get_boot_mode_cell+0x16>
2ffecb06:	4907      	ldr	r1, [pc, #28]	@ (2ffecb24 <stm32_get_boot_mode_cell+0x28>)
2ffecb08:	4807      	ldr	r0, [pc, #28]	@ (2ffecb28 <stm32_get_boot_mode_cell+0x2c>)
2ffecb0a:	f7ff fefd 	bl	2ffec908 <stm32_get_bootinfo_cell.isra.0>
2ffecb0e:	2301      	movs	r3, #1
2ffecb10:	702b      	strb	r3, [r5, #0]
2ffecb12:	4904      	ldr	r1, [pc, #16]	@ (2ffecb24 <stm32_get_boot_mode_cell+0x28>)
2ffecb14:	220c      	movs	r2, #12
2ffecb16:	4620      	mov	r0, r4
2ffecb18:	f007 fb1b 	bl	2fff4152 <memcpy>
2ffecb1c:	2000      	movs	r0, #0
2ffecb1e:	bd38      	pop	{r3, r4, r5, pc}
2ffecb20:	2fff9a9a 	.word	0x2fff9a9a
2ffecb24:	2fff9444 	.word	0x2fff9444
2ffecb28:	2fff681d 	.word	0x2fff681d

2ffecb2c <stm32_get_boot_interface>:
2ffecb2c:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffecb2e:	b085      	sub	sp, #20
2ffecb30:	4e10      	ldr	r6, [pc, #64]	@ (2ffecb74 <stm32_get_boot_interface+0x48>)
2ffecb32:	2300      	movs	r3, #0
2ffecb34:	9301      	str	r3, [sp, #4]
2ffecb36:	4605      	mov	r5, r0
2ffecb38:	6837      	ldr	r7, [r6, #0]
2ffecb3a:	460c      	mov	r4, r1
2ffecb3c:	9302      	str	r3, [sp, #8]
2ffecb3e:	9303      	str	r3, [sp, #12]
2ffecb40:	9300      	str	r3, [sp, #0]
2ffecb42:	b96f      	cbnz	r7, 2ffecb60 <stm32_get_boot_interface+0x34>
2ffecb44:	a801      	add	r0, sp, #4
2ffecb46:	f7ff ffd9 	bl	2ffecafc <stm32_get_boot_mode_cell>
2ffecb4a:	2204      	movs	r2, #4
2ffecb4c:	463b      	mov	r3, r7
2ffecb4e:	eb0d 0002 	add.w	r0, sp, r2
2ffecb52:	4669      	mov	r1, sp
2ffecb54:	f006 fbc1 	bl	2fff32da <nvmem_cell_read>
2ffecb58:	9b00      	ldr	r3, [sp, #0]
2ffecb5a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
2ffecb5e:	6033      	str	r3, [r6, #0]
2ffecb60:	6833      	ldr	r3, [r6, #0]
2ffecb62:	f3c3 3203 	ubfx	r2, r3, #12, #4
2ffecb66:	f3c3 2303 	ubfx	r3, r3, #8, #4
2ffecb6a:	602a      	str	r2, [r5, #0]
2ffecb6c:	6023      	str	r3, [r4, #0]
2ffecb6e:	b005      	add	sp, #20
2ffecb70:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffecb72:	bf00      	nop
2ffecb74:	2fff9468 	.word	0x2fff9468

2ffecb78 <stm32mp_uart_console_setup>:
2ffecb78:	b510      	push	{r4, lr}
2ffecb7a:	b086      	sub	sp, #24
2ffecb7c:	a802      	add	r0, sp, #8
2ffecb7e:	f001 ffad 	bl	2ffeeadc <dt_get_stdout_uart_info>
2ffecb82:	2800      	cmp	r0, #0
2ffecb84:	dc04      	bgt.n	2ffecb90 <stm32mp_uart_console_setup+0x18>
2ffecb86:	f06f 0412 	mvn.w	r4, #18
2ffecb8a:	4620      	mov	r0, r4
2ffecb8c:	b006      	add	sp, #24
2ffecb8e:	bd10      	pop	{r4, pc}
2ffecb90:	9b05      	ldr	r3, [sp, #20]
2ffecb92:	2b00      	cmp	r3, #0
2ffecb94:	d0f7      	beq.n	2ffecb86 <stm32mp_uart_console_setup+0xe>
2ffecb96:	9b03      	ldr	r3, [sp, #12]
2ffecb98:	9a04      	ldr	r2, [sp, #16]
2ffecb9a:	4313      	orrs	r3, r2
2ffecb9c:	d4f3      	bmi.n	2ffecb86 <stm32mp_uart_console_setup+0xe>
2ffecb9e:	a901      	add	r1, sp, #4
2ffecba0:	4668      	mov	r0, sp
2ffecba2:	f7ff ffc3 	bl	2ffecb2c <stm32_get_boot_interface>
2ffecba6:	9b00      	ldr	r3, [sp, #0]
2ffecba8:	2b05      	cmp	r3, #5
2ffecbaa:	d011      	beq.n	2ffecbd0 <stm32mp_uart_console_setup+0x58>
2ffecbac:	f001 ff2e 	bl	2ffeea0c <dt_set_stdout_pinctrl>
2ffecbb0:	2800      	cmp	r0, #0
2ffecbb2:	d1e8      	bne.n	2ffecb86 <stm32mp_uart_console_setup+0xe>
2ffecbb4:	9803      	ldr	r0, [sp, #12]
2ffecbb6:	f000 fda7 	bl	2ffed708 <clk_enable>
2ffecbba:	9c04      	ldr	r4, [sp, #16]
2ffecbbc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffecbc0:	4620      	mov	r0, r4
2ffecbc2:	f004 f83b 	bl	2fff0c3c <stm32mp_reset_assert>
2ffecbc6:	b160      	cbz	r0, 2ffecbe2 <stm32mp_uart_console_setup+0x6a>
2ffecbc8:	f7ff fe14 	bl	2ffec7f4 <console_flush>
2ffecbcc:	f7fc ec06 	blx	2ffe93dc <do_panic>
2ffecbd0:	9801      	ldr	r0, [sp, #4]
2ffecbd2:	f002 f999 	bl	2ffeef08 <get_uart_address>
2ffecbd6:	9b02      	ldr	r3, [sp, #8]
2ffecbd8:	4298      	cmp	r0, r3
2ffecbda:	d1e7      	bne.n	2ffecbac <stm32mp_uart_console_setup+0x34>
2ffecbdc:	f06f 040c 	mvn.w	r4, #12
2ffecbe0:	e7d3      	b.n	2ffecb8a <stm32mp_uart_console_setup+0x12>
2ffecbe2:	2002      	movs	r0, #2
2ffecbe4:	f000 fdf0 	bl	2ffed7c8 <udelay>
2ffecbe8:	4620      	mov	r0, r4
2ffecbea:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
2ffecbee:	f004 f855 	bl	2fff0c9c <stm32mp_reset_deassert>
2ffecbf2:	4604      	mov	r4, r0
2ffecbf4:	2800      	cmp	r0, #0
2ffecbf6:	d1e7      	bne.n	2ffecbc8 <stm32mp_uart_console_setup+0x50>
2ffecbf8:	2001      	movs	r0, #1
2ffecbfa:	f006 fab8 	bl	2fff316e <mdelay>
2ffecbfe:	9803      	ldr	r0, [sp, #12]
2ffecc00:	f000 fda6 	bl	2ffed750 <clk_get_rate>
2ffecc04:	4b07      	ldr	r3, [pc, #28]	@ (2ffecc24 <stm32mp_uart_console_setup+0xac>)
2ffecc06:	4601      	mov	r1, r0
2ffecc08:	9802      	ldr	r0, [sp, #8]
2ffecc0a:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
2ffecc0e:	f7fc edc2 	blx	2ffe9794 <console_stm32_register>
2ffecc12:	2800      	cmp	r0, #0
2ffecc14:	d0d8      	beq.n	2ffecbc8 <stm32mp_uart_console_setup+0x50>
2ffecc16:	4803      	ldr	r0, [pc, #12]	@ (2ffecc24 <stm32mp_uart_console_setup+0xac>)
2ffecc18:	f240 1105 	movw	r1, #261	@ 0x105
2ffecc1c:	f7ff fdb0 	bl	2ffec780 <console_set_scope>
2ffecc20:	e7b3      	b.n	2ffecb8a <stm32mp_uart_console_setup+0x12>
2ffecc22:	bf00      	nop
2ffecc24:	2fff9478 	.word	0x2fff9478

2ffecc28 <xlat_arch_regime_get_xn_desc>:
2ffecc28:	2801      	cmp	r0, #1
2ffecc2a:	b508      	push	{r3, lr}
2ffecc2c:	d005      	beq.n	2ffecc3a <xlat_arch_regime_get_xn_desc+0x12>
2ffecc2e:	2802      	cmp	r0, #2
2ffecc30:	d007      	beq.n	2ffecc42 <xlat_arch_regime_get_xn_desc+0x1a>
2ffecc32:	4806      	ldr	r0, [pc, #24]	@ (2ffecc4c <xlat_arch_regime_get_xn_desc+0x24>)
2ffecc34:	2165      	movs	r1, #101	@ 0x65
2ffecc36:	f005 fc6f 	bl	2fff2518 <__assert>
2ffecc3a:	2000      	movs	r0, #0
2ffecc3c:	f44f 01c0 	mov.w	r1, #6291456	@ 0x600000
2ffecc40:	bd08      	pop	{r3, pc}
2ffecc42:	2000      	movs	r0, #0
2ffecc44:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
2ffecc48:	e7fa      	b.n	2ffecc40 <xlat_arch_regime_get_xn_desc+0x18>
2ffecc4a:	bf00      	nop
2ffecc4c:	2fff6827 	.word	0x2fff6827

2ffecc50 <xlat_arch_tlbi_va>:
2ffecc50:	b508      	push	{r3, lr}
2ffecc52:	f3bf 8f4a 	dsb	ishst
2ffecc56:	f420 607f 	bic.w	r0, r0, #4080	@ 0xff0
2ffecc5a:	2901      	cmp	r1, #1
2ffecc5c:	f020 000f 	bic.w	r0, r0, #15
2ffecc60:	d102      	bne.n	2ffecc68 <xlat_arch_tlbi_va+0x18>
2ffecc62:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2ffecc66:	bd08      	pop	{r3, pc}
2ffecc68:	2902      	cmp	r1, #2
2ffecc6a:	d003      	beq.n	2ffecc74 <xlat_arch_tlbi_va+0x24>
2ffecc6c:	4803      	ldr	r0, [pc, #12]	@ (2ffecc7c <xlat_arch_tlbi_va+0x2c>)
2ffecc6e:	2175      	movs	r1, #117	@ 0x75
2ffecc70:	f005 fc52 	bl	2fff2518 <__assert>
2ffecc74:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2ffecc78:	e7f5      	b.n	2ffecc66 <xlat_arch_tlbi_va+0x16>
2ffecc7a:	bf00      	nop
2ffecc7c:	2fff6827 	.word	0x2fff6827

2ffecc80 <xlat_arch_current_el>:
2ffecc80:	b508      	push	{r3, lr}
2ffecc82:	f3ef 8300 	mrs	r3, CPSR
2ffecc86:	f003 031f 	and.w	r3, r3, #31
2ffecc8a:	2b1a      	cmp	r3, #26
2ffecc8c:	d00f      	beq.n	2ffeccae <xlat_arch_current_el+0x2e>
2ffecc8e:	f3ef 8300 	mrs	r3, CPSR
2ffecc92:	f003 031f 	and.w	r3, r3, #31
2ffecc96:	2b13      	cmp	r3, #19
2ffecc98:	d00b      	beq.n	2ffeccb2 <xlat_arch_current_el+0x32>
2ffecc9a:	f3ef 8300 	mrs	r3, CPSR
2ffecc9e:	f003 031f 	and.w	r3, r3, #31
2ffecca2:	2b16      	cmp	r3, #22
2ffecca4:	d005      	beq.n	2ffeccb2 <xlat_arch_current_el+0x32>
2ffecca6:	4804      	ldr	r0, [pc, #16]	@ (2ffeccb8 <xlat_arch_current_el+0x38>)
2ffecca8:	2199      	movs	r1, #153	@ 0x99
2ffeccaa:	f005 fc35 	bl	2fff2518 <__assert>
2ffeccae:	2002      	movs	r0, #2
2ffeccb0:	bd08      	pop	{r3, pc}
2ffeccb2:	2001      	movs	r0, #1
2ffeccb4:	e7fc      	b.n	2ffeccb0 <xlat_arch_current_el+0x30>
2ffeccb6:	bf00      	nop
2ffeccb8:	2fff6827 	.word	0x2fff6827

2ffeccbc <is_mmu_enabled_ctx>:
2ffeccbc:	b508      	push	{r3, lr}
2ffeccbe:	6c43      	ldr	r3, [r0, #68]	@ 0x44
2ffeccc0:	2b01      	cmp	r3, #1
2ffeccc2:	d10c      	bne.n	2ffeccde <is_mmu_enabled_ctx+0x22>
2ffeccc4:	f7ff ffdc 	bl	2ffecc80 <xlat_arch_current_el>
2ffeccc8:	2801      	cmp	r0, #1
2ffeccca:	d003      	beq.n	2ffeccd4 <is_mmu_enabled_ctx+0x18>
2ffecccc:	214e      	movs	r1, #78	@ 0x4e
2ffeccce:	480a      	ldr	r0, [pc, #40]	@ (2ffeccf8 <is_mmu_enabled_ctx+0x3c>)
2ffeccd0:	f005 fc22 	bl	2fff2518 <__assert>
2ffeccd4:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffeccd8:	f000 0001 	and.w	r0, r0, #1
2ffeccdc:	bd08      	pop	{r3, pc}
2ffeccde:	2b02      	cmp	r3, #2
2ffecce0:	d001      	beq.n	2ffecce6 <is_mmu_enabled_ctx+0x2a>
2ffecce2:	2151      	movs	r1, #81	@ 0x51
2ffecce4:	e7f3      	b.n	2ffeccce <is_mmu_enabled_ctx+0x12>
2ffecce6:	f7ff ffcb 	bl	2ffecc80 <xlat_arch_current_el>
2ffeccea:	2802      	cmp	r0, #2
2ffeccec:	d001      	beq.n	2ffeccf2 <is_mmu_enabled_ctx+0x36>
2ffeccee:	2152      	movs	r1, #82	@ 0x52
2ffeccf0:	e7ed      	b.n	2ffeccce <is_mmu_enabled_ctx+0x12>
2ffeccf2:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2ffeccf6:	e7ef      	b.n	2ffeccd8 <is_mmu_enabled_ctx+0x1c>
2ffeccf8:	2fff6827 	.word	0x2fff6827

2ffeccfc <setup_mmu_cfg>:
2ffeccfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeccfe:	460f      	mov	r7, r1
2ffecd00:	4616      	mov	r6, r2
2ffecd02:	4604      	mov	r4, r0
2ffecd04:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
2ffecd08:	2a01      	cmp	r2, #1
2ffecd0a:	d10f      	bne.n	2ffecd2c <setup_mmu_cfg+0x30>
2ffecd0c:	f3ef 8200 	mrs	r2, CPSR
2ffecd10:	f002 021f 	and.w	r2, r2, #31
2ffecd14:	2a13      	cmp	r2, #19
2ffecd16:	d015      	beq.n	2ffecd44 <setup_mmu_cfg+0x48>
2ffecd18:	f3ef 8200 	mrs	r2, CPSR
2ffecd1c:	f002 021f 	and.w	r2, r2, #31
2ffecd20:	2a16      	cmp	r2, #22
2ffecd22:	d00f      	beq.n	2ffecd44 <setup_mmu_cfg+0x48>
2ffecd24:	21c2      	movs	r1, #194	@ 0xc2
2ffecd26:	481c      	ldr	r0, [pc, #112]	@ (2ffecd98 <setup_mmu_cfg+0x9c>)
2ffecd28:	f005 fbf6 	bl	2fff2518 <__assert>
2ffecd2c:	2a02      	cmp	r2, #2
2ffecd2e:	d001      	beq.n	2ffecd34 <setup_mmu_cfg+0x38>
2ffecd30:	21c9      	movs	r1, #201	@ 0xc9
2ffecd32:	e7f8      	b.n	2ffecd26 <setup_mmu_cfg+0x2a>
2ffecd34:	f3ef 8200 	mrs	r2, CPSR
2ffecd38:	f002 021f 	and.w	r2, r2, #31
2ffecd3c:	2a1a      	cmp	r2, #26
2ffecd3e:	d00a      	beq.n	2ffecd56 <setup_mmu_cfg+0x5a>
2ffecd40:	21ca      	movs	r1, #202	@ 0xca
2ffecd42:	e7f0      	b.n	2ffecd26 <setup_mmu_cfg+0x2a>
2ffecd44:	4d15      	ldr	r5, [pc, #84]	@ (2ffecd9c <setup_mmu_cfg+0xa0>)
2ffecd46:	1c4a      	adds	r2, r1, #1
2ffecd48:	d010      	beq.n	2ffecd6c <setup_mmu_cfg+0x70>
2ffecd4a:	1c48      	adds	r0, r1, #1
2ffecd4c:	f1b0 7f00 	cmp.w	r0, #33554432	@ 0x2000000
2ffecd50:	d203      	bcs.n	2ffecd5a <setup_mmu_cfg+0x5e>
2ffecd52:	21dd      	movs	r1, #221	@ 0xdd
2ffecd54:	e7e7      	b.n	2ffecd26 <setup_mmu_cfg+0x2a>
2ffecd56:	4d12      	ldr	r5, [pc, #72]	@ (2ffecda0 <setup_mmu_cfg+0xa4>)
2ffecd58:	e7f5      	b.n	2ffecd46 <setup_mmu_cfg+0x4a>
2ffecd5a:	4001      	ands	r1, r0
2ffecd5c:	d001      	beq.n	2ffecd62 <setup_mmu_cfg+0x66>
2ffecd5e:	21df      	movs	r1, #223	@ 0xdf
2ffecd60:	e7e1      	b.n	2ffecd26 <setup_mmu_cfg+0x2a>
2ffecd62:	f005 ffd6 	bl	2fff2d12 <__ctzdi2>
2ffecd66:	f1c0 0020 	rsb	r0, r0, #32
2ffecd6a:	4305      	orrs	r5, r0
2ffecd6c:	07bb      	lsls	r3, r7, #30
2ffecd6e:	bf58      	it	pl
2ffecd70:	f445 5554 	orrpl.w	r5, r5, #13568	@ 0x3500
2ffecd74:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2ffecd78:	480a      	ldr	r0, [pc, #40]	@ (2ffecda4 <setup_mmu_cfg+0xa8>)
2ffecd7a:	f413 4f70 	tst.w	r3, #61440	@ 0xf000
2ffecd7e:	bf18      	it	ne
2ffecd80:	f046 0601 	orrne.w	r6, r6, #1
2ffecd84:	2300      	movs	r3, #0
2ffecd86:	2100      	movs	r1, #0
2ffecd88:	e9c4 0100 	strd	r0, r1, [r4]
2ffecd8c:	e9c4 5302 	strd	r5, r3, [r4, #8]
2ffecd90:	e9c4 6304 	strd	r6, r3, [r4, #16]
2ffecd94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffecd96:	bf00      	nop
2ffecd98:	2fff6827 	.word	0x2fff6827
2ffecd9c:	80800000 	.word	0x80800000
2ffecda0:	80803500 	.word	0x80803500
2ffecda4:	004404ff 	.word	0x004404ff

2ffecda8 <mmap_add_region>:
2ffecda8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffecdaa:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffecdae:	9b08      	ldr	r3, [sp, #32]
2ffecdb0:	e9cd 0100 	strd	r0, r1, [sp]
2ffecdb4:	9304      	str	r3, [sp, #16]
2ffecdb6:	4669      	mov	r1, sp
2ffecdb8:	4804      	ldr	r0, [pc, #16]	@ (2ffecdcc <mmap_add_region+0x24>)
2ffecdba:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffecdbe:	9305      	str	r3, [sp, #20]
2ffecdc0:	f000 fa60 	bl	2ffed284 <mmap_add_region_ctx>
2ffecdc4:	b007      	add	sp, #28
2ffecdc6:	f85d fb04 	ldr.w	pc, [sp], #4
2ffecdca:	bf00      	nop
2ffecdcc:	2fff8000 	.word	0x2fff8000

2ffecdd0 <mmap_add>:
2ffecdd0:	4601      	mov	r1, r0
2ffecdd2:	4801      	ldr	r0, [pc, #4]	@ (2ffecdd8 <mmap_add+0x8>)
2ffecdd4:	f006 b9bd 	b.w	2fff3152 <mmap_add_ctx>
2ffecdd8:	2fff8000 	.word	0x2fff8000

2ffecddc <mmap_add_dynamic_region>:
2ffecddc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffecdde:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffecde2:	9b08      	ldr	r3, [sp, #32]
2ffecde4:	e9cd 0100 	strd	r0, r1, [sp]
2ffecde8:	9304      	str	r3, [sp, #16]
2ffecdea:	4669      	mov	r1, sp
2ffecdec:	4804      	ldr	r0, [pc, #16]	@ (2ffece00 <mmap_add_dynamic_region+0x24>)
2ffecdee:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2ffecdf2:	9305      	str	r3, [sp, #20]
2ffecdf4:	f000 fabc 	bl	2ffed370 <mmap_add_dynamic_region_ctx>
2ffecdf8:	b007      	add	sp, #28
2ffecdfa:	f85d fb04 	ldr.w	pc, [sp], #4
2ffecdfe:	bf00      	nop
2ffece00:	2fff8000 	.word	0x2fff8000

2ffece04 <mmap_remove_dynamic_region>:
2ffece04:	460a      	mov	r2, r1
2ffece06:	4601      	mov	r1, r0
2ffece08:	4801      	ldr	r0, [pc, #4]	@ (2ffece10 <mmap_remove_dynamic_region+0xc>)
2ffece0a:	f000 bb5b 	b.w	2ffed4c4 <mmap_remove_dynamic_region_ctx>
2ffece0e:	bf00      	nop
2ffece10:	2fff8000 	.word	0x2fff8000

2ffece14 <init_xlat_tables>:
2ffece14:	b510      	push	{r4, lr}
2ffece16:	4c0c      	ldr	r4, [pc, #48]	@ (2ffece48 <init_xlat_tables+0x34>)
2ffece18:	6c63      	ldr	r3, [r4, #68]	@ 0x44
2ffece1a:	3301      	adds	r3, #1
2ffece1c:	d003      	beq.n	2ffece26 <init_xlat_tables+0x12>
2ffece1e:	2161      	movs	r1, #97	@ 0x61
2ffece20:	480a      	ldr	r0, [pc, #40]	@ (2ffece4c <init_xlat_tables+0x38>)
2ffece22:	f005 fb79 	bl	2fff2518 <__assert>
2ffece26:	f7ff ff2b 	bl	2ffecc80 <xlat_arch_current_el>
2ffece2a:	2801      	cmp	r0, #1
2ffece2c:	d005      	beq.n	2ffece3a <init_xlat_tables+0x26>
2ffece2e:	2802      	cmp	r0, #2
2ffece30:	d003      	beq.n	2ffece3a <init_xlat_tables+0x26>
2ffece32:	2803      	cmp	r0, #3
2ffece34:	d001      	beq.n	2ffece3a <init_xlat_tables+0x26>
2ffece36:	216a      	movs	r1, #106	@ 0x6a
2ffece38:	e7f2      	b.n	2ffece20 <init_xlat_tables+0xc>
2ffece3a:	6460      	str	r0, [r4, #68]	@ 0x44
2ffece3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffece40:	4801      	ldr	r0, [pc, #4]	@ (2ffece48 <init_xlat_tables+0x34>)
2ffece42:	f000 bbc1 	b.w	2ffed5c8 <init_xlat_tables_ctx>
2ffece46:	bf00      	nop
2ffece48:	2fff8000 	.word	0x2fff8000
2ffece4c:	2fff6855 	.word	0x2fff6855

2ffece50 <enable_mmu_svc_mon>:
2ffece50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffece52:	2201      	movs	r2, #1
2ffece54:	4b09      	ldr	r3, [pc, #36]	@ (2ffece7c <enable_mmu_svc_mon+0x2c>)
2ffece56:	4604      	mov	r4, r0
2ffece58:	9203      	str	r2, [sp, #12]
2ffece5a:	689a      	ldr	r2, [r3, #8]
2ffece5c:	9202      	str	r2, [sp, #8]
2ffece5e:	e9d3 0100 	ldrd	r0, r1, [r3]
2ffece62:	e9cd 0100 	strd	r0, r1, [sp]
2ffece66:	4806      	ldr	r0, [pc, #24]	@ (2ffece80 <enable_mmu_svc_mon+0x30>)
2ffece68:	4621      	mov	r1, r4
2ffece6a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2ffece6c:	f7ff ff46 	bl	2ffeccfc <setup_mmu_cfg>
2ffece70:	4620      	mov	r0, r4
2ffece72:	b004      	add	sp, #16
2ffece74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffece78:	f00a bec2 	b.w	2fff7c00 <__enable_mmu_direct_svc_mon_from_thumb>
2ffece7c:	2fff8000 	.word	0x2fff8000
2ffece80:	2fff92e8 	.word	0x2fff92e8

2ffece84 <xlat_table_get_index>:
2ffece84:	4603      	mov	r3, r0
2ffece86:	b510      	push	{r4, lr}
2ffece88:	6984      	ldr	r4, [r0, #24]
2ffece8a:	2000      	movs	r0, #0
2ffece8c:	4284      	cmp	r4, r0
2ffece8e:	dc03      	bgt.n	2ffece98 <xlat_table_get_index+0x14>
2ffece90:	4805      	ldr	r0, [pc, #20]	@ (2ffecea8 <xlat_table_get_index+0x24>)
2ffece92:	2135      	movs	r1, #53	@ 0x35
2ffece94:	f005 fb40 	bl	2fff2518 <__assert>
2ffece98:	695a      	ldr	r2, [r3, #20]
2ffece9a:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2ffece9e:	4291      	cmp	r1, r2
2ffecea0:	d001      	beq.n	2ffecea6 <xlat_table_get_index+0x22>
2ffecea2:	3001      	adds	r0, #1
2ffecea4:	e7f2      	b.n	2ffece8c <xlat_table_get_index+0x8>
2ffecea6:	bd10      	pop	{r4, pc}
2ffecea8:	2fff687e 	.word	0x2fff687e

2ffeceac <xlat_tables_unmap_region>:
2ffeceac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeceb0:	b087      	sub	sp, #28
2ffeceb2:	4605      	mov	r5, r0
2ffeceb4:	4688      	mov	r8, r1
2ffeceb6:	9f11      	ldr	r7, [sp, #68]	@ 0x44
2ffeceb8:	9303      	str	r3, [sp, #12]
2ffeceba:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
2ffecebc:	42bb      	cmp	r3, r7
2ffecebe:	d801      	bhi.n	2ffecec4 <xlat_tables_unmap_region+0x18>
2ffecec0:	2f03      	cmp	r7, #3
2ffecec2:	d904      	bls.n	2ffecece <xlat_tables_unmap_region+0x22>
2ffecec4:	f240 116b 	movw	r1, #363	@ 0x16b
2ffecec8:	4846      	ldr	r0, [pc, #280]	@ (2ffecfe4 <xlat_tables_unmap_region+0x138>)
2ffececa:	f005 fb25 	bl	2fff2518 <__assert>
2ffecece:	e9d1 1302 	ldrd	r1, r3, [r1, #8]
2ffeced2:	2001      	movs	r0, #1
2ffeced4:	440b      	add	r3, r1
2ffeced6:	4291      	cmp	r1, r2
2ffeced8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
2ffecedc:	9304      	str	r3, [sp, #16]
2ffecede:	f06f 0308 	mvn.w	r3, #8
2ffecee2:	fb07 f303 	mul.w	r3, r7, r3
2ffecee6:	bf98      	it	ls
2ffecee8:	4616      	movls	r6, r2
2ffeceea:	f103 0327 	add.w	r3, r3, #39	@ 0x27
2ffeceee:	fa00 f003 	lsl.w	r0, r0, r3
2ffecef2:	9002      	str	r0, [sp, #8]
2ffecef4:	bf84      	itt	hi
2ffecef6:	4246      	neghi	r6, r0
2ffecef8:	400e      	andhi	r6, r1
2ffecefa:	1ab4      	subs	r4, r6, r2
2ffecefc:	40dc      	lsrs	r4, r3
2ffecefe:	9b03      	ldr	r3, [sp, #12]
2ffecf00:	eb03 09c4 	add.w	r9, r3, r4, lsl #3
2ffecf04:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffecf06:	429c      	cmp	r4, r3
2ffecf08:	d259      	bcs.n	2ffecfbe <xlat_tables_unmap_region+0x112>
2ffecf0a:	9b02      	ldr	r3, [sp, #8]
2ffecf0c:	e9d8 0202 	ldrd	r0, r2, [r8, #8]
2ffecf10:	eb06 0b03 	add.w	fp, r6, r3
2ffecf14:	4286      	cmp	r6, r0
2ffecf16:	f10b 3cff 	add.w	ip, fp, #4294967295	@ 0xffffffff
2ffecf1a:	f8d9 3000 	ldr.w	r3, [r9]
2ffecf1e:	4402      	add	r2, r0
2ffecf20:	f003 0103 	and.w	r1, r3, #3
2ffecf24:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
2ffecf28:	d30f      	bcc.n	2ffecf4a <xlat_tables_unmap_region+0x9e>
2ffecf2a:	4562      	cmp	r2, ip
2ffecf2c:	d30d      	bcc.n	2ffecf4a <xlat_tables_unmap_region+0x9e>
2ffecf2e:	2f03      	cmp	r7, #3
2ffecf30:	f1a1 0203 	sub.w	r2, r1, #3
2ffecf34:	d103      	bne.n	2ffecf3e <xlat_tables_unmap_region+0x92>
2ffecf36:	b3a2      	cbz	r2, 2ffecfa2 <xlat_tables_unmap_region+0xf6>
2ffecf38:	f44f 719c 	mov.w	r1, #312	@ 0x138
2ffecf3c:	e7c4      	b.n	2ffecec8 <xlat_tables_unmap_region+0x1c>
2ffecf3e:	b192      	cbz	r2, 2ffecf66 <xlat_tables_unmap_region+0xba>
2ffecf40:	2901      	cmp	r1, #1
2ffecf42:	d02e      	beq.n	2ffecfa2 <xlat_tables_unmap_region+0xf6>
2ffecf44:	f240 1147 	movw	r1, #327	@ 0x147
2ffecf48:	e7be      	b.n	2ffecec8 <xlat_tables_unmap_region+0x1c>
2ffecf4a:	4584      	cmp	ip, r0
2ffecf4c:	d201      	bcs.n	2ffecf52 <xlat_tables_unmap_region+0xa6>
2ffecf4e:	4296      	cmp	r6, r2
2ffecf50:	d82f      	bhi.n	2ffecfb2 <xlat_tables_unmap_region+0x106>
2ffecf52:	2f03      	cmp	r7, #3
2ffecf54:	d102      	bne.n	2ffecf5c <xlat_tables_unmap_region+0xb0>
2ffecf56:	f44f 71ab 	mov.w	r1, #342	@ 0x156
2ffecf5a:	e7b5      	b.n	2ffecec8 <xlat_tables_unmap_region+0x1c>
2ffecf5c:	2903      	cmp	r1, #3
2ffecf5e:	d002      	beq.n	2ffecf66 <xlat_tables_unmap_region+0xba>
2ffecf60:	f240 1157 	movw	r1, #343	@ 0x157
2ffecf64:	e7b0      	b.n	2ffecec8 <xlat_tables_unmap_region+0x1c>
2ffecf66:	f423 6a7f 	bic.w	sl, r3, #4080	@ 0xff0
2ffecf6a:	1c7a      	adds	r2, r7, #1
2ffecf6c:	f02a 0a0f 	bic.w	sl, sl, #15
2ffecf70:	4641      	mov	r1, r8
2ffecf72:	9201      	str	r2, [sp, #4]
2ffecf74:	f44f 7200 	mov.w	r2, #512	@ 0x200
2ffecf78:	9200      	str	r2, [sp, #0]
2ffecf7a:	4653      	mov	r3, sl
2ffecf7c:	4632      	mov	r2, r6
2ffecf7e:	4628      	mov	r0, r5
2ffecf80:	f7ff ff94 	bl	2ffeceac <xlat_tables_unmap_region>
2ffecf84:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffecf88:	4650      	mov	r0, sl
2ffecf8a:	f006 f8d5 	bl	2fff3138 <xlat_clean_dcache_range>
2ffecf8e:	69ea      	ldr	r2, [r5, #28]
2ffecf90:	4651      	mov	r1, sl
2ffecf92:	4628      	mov	r0, r5
2ffecf94:	9205      	str	r2, [sp, #20]
2ffecf96:	f7ff ff75 	bl	2ffece84 <xlat_table_get_index>
2ffecf9a:	9a05      	ldr	r2, [sp, #20]
2ffecf9c:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffecfa0:	b93b      	cbnz	r3, 2ffecfb2 <xlat_tables_unmap_region+0x106>
2ffecfa2:	6c69      	ldr	r1, [r5, #68]	@ 0x44
2ffecfa4:	2200      	movs	r2, #0
2ffecfa6:	2300      	movs	r3, #0
2ffecfa8:	4630      	mov	r0, r6
2ffecfaa:	e9c9 2300 	strd	r2, r3, [r9]
2ffecfae:	f7ff fe4f 	bl	2ffecc50 <xlat_arch_tlbi_va>
2ffecfb2:	9b04      	ldr	r3, [sp, #16]
2ffecfb4:	3401      	adds	r4, #1
2ffecfb6:	f109 0908 	add.w	r9, r9, #8
2ffecfba:	459b      	cmp	fp, r3
2ffecfbc:	d30f      	bcc.n	2ffecfde <xlat_tables_unmap_region+0x132>
2ffecfbe:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
2ffecfc0:	42bb      	cmp	r3, r7
2ffecfc2:	d209      	bcs.n	2ffecfd8 <xlat_tables_unmap_region+0x12c>
2ffecfc4:	9903      	ldr	r1, [sp, #12]
2ffecfc6:	4628      	mov	r0, r5
2ffecfc8:	f7ff ff5c 	bl	2ffece84 <xlat_table_get_index>
2ffecfcc:	69ea      	ldr	r2, [r5, #28]
2ffecfce:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffecfd2:	3b01      	subs	r3, #1
2ffecfd4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2ffecfd8:	b007      	add	sp, #28
2ffecfda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffecfde:	465e      	mov	r6, fp
2ffecfe0:	e790      	b.n	2ffecf04 <xlat_tables_unmap_region+0x58>
2ffecfe2:	bf00      	nop
2ffecfe4:	2fff687e 	.word	0x2fff687e

2ffecfe8 <xlat_desc>:
2ffecfe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffecfec:	461e      	mov	r6, r3
2ffecfee:	9b06      	ldr	r3, [sp, #24]
2ffecff0:	460d      	mov	r5, r1
2ffecff2:	f06f 0108 	mvn.w	r1, #8
2ffecff6:	4614      	mov	r4, r2
2ffecff8:	4359      	muls	r1, r3
2ffecffa:	2201      	movs	r2, #1
2ffecffc:	4607      	mov	r7, r0
2ffecffe:	3127      	adds	r1, #39	@ 0x27
2ffed000:	408a      	lsls	r2, r1
2ffed002:	3a01      	subs	r2, #1
2ffed004:	4222      	tst	r2, r4
2ffed006:	d003      	beq.n	2ffed010 <xlat_desc+0x28>
2ffed008:	2173      	movs	r1, #115	@ 0x73
2ffed00a:	4827      	ldr	r0, [pc, #156]	@ (2ffed0a8 <xlat_desc+0xc0>)
2ffed00c:	f005 fa84 	bl	2fff2518 <__assert>
2ffed010:	2b03      	cmp	r3, #3
2ffed012:	4628      	mov	r0, r5
2ffed014:	bf14      	ite	ne
2ffed016:	f04f 0801 	movne.w	r8, #1
2ffed01a:	f04f 0803 	moveq.w	r8, #3
2ffed01e:	f005 ffd4 	bl	2fff2fca <xlat_arch_get_pas>
2ffed022:	f085 0308 	eor.w	r3, r5, #8
2ffed026:	f3c3 03c0 	ubfx	r3, r3, #3, #1
2ffed02a:	ea44 14c3 	orr.w	r4, r4, r3, lsl #7
2ffed02e:	ea44 0408 	orr.w	r4, r4, r8
2ffed032:	4304      	orrs	r4, r0
2ffed034:	6c78      	ldr	r0, [r7, #68]	@ 0x44
2ffed036:	2801      	cmp	r0, #1
2ffed038:	d110      	bne.n	2ffed05c <xlat_desc+0x74>
2ffed03a:	062b      	lsls	r3, r5, #24
2ffed03c:	d413      	bmi.n	2ffed066 <xlat_desc+0x7e>
2ffed03e:	f444 6480 	orr.w	r4, r4, #1024	@ 0x400
2ffed042:	f015 0707 	ands.w	r7, r5, #7
2ffed046:	4631      	mov	r1, r6
2ffed048:	d110      	bne.n	2ffed06c <xlat_desc+0x84>
2ffed04a:	f7ff fded 	bl	2ffecc28 <xlat_arch_regime_get_xn_desc>
2ffed04e:	4320      	orrs	r0, r4
2ffed050:	4331      	orrs	r1, r6
2ffed052:	f440 7401 	orr.w	r4, r0, #516	@ 0x204
2ffed056:	4620      	mov	r0, r4
2ffed058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed05c:	1e83      	subs	r3, r0, #2
2ffed05e:	2b01      	cmp	r3, #1
2ffed060:	d901      	bls.n	2ffed066 <xlat_desc+0x7e>
2ffed062:	2198      	movs	r1, #152	@ 0x98
2ffed064:	e7d1      	b.n	2ffed00a <xlat_desc+0x22>
2ffed066:	f444 6488 	orr.w	r4, r4, #1088	@ 0x440
2ffed06a:	e7ea      	b.n	2ffed042 <xlat_desc+0x5a>
2ffed06c:	f015 0f48 	tst.w	r5, #72	@ 0x48
2ffed070:	d003      	beq.n	2ffed07a <xlat_desc+0x92>
2ffed072:	f7ff fdd9 	bl	2ffecc28 <xlat_arch_regime_get_xn_desc>
2ffed076:	4304      	orrs	r4, r0
2ffed078:	4331      	orrs	r1, r6
2ffed07a:	2f02      	cmp	r7, #2
2ffed07c:	d10c      	bne.n	2ffed098 <xlat_desc+0xb0>
2ffed07e:	f405 7040 	and.w	r0, r5, #768	@ 0x300
2ffed082:	f5b0 7f40 	cmp.w	r0, #768	@ 0x300
2ffed086:	d0e6      	beq.n	2ffed056 <xlat_desc+0x6e>
2ffed088:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
2ffed08c:	bf0c      	ite	eq
2ffed08e:	f444 7400 	orreq.w	r4, r4, #512	@ 0x200
2ffed092:	f444 7440 	orrne.w	r4, r4, #768	@ 0x300
2ffed096:	e7de      	b.n	2ffed056 <xlat_desc+0x6e>
2ffed098:	2f01      	cmp	r7, #1
2ffed09a:	d001      	beq.n	2ffed0a0 <xlat_desc+0xb8>
2ffed09c:	21e0      	movs	r1, #224	@ 0xe0
2ffed09e:	e7b4      	b.n	2ffed00a <xlat_desc+0x22>
2ffed0a0:	f444 7402 	orr.w	r4, r4, #520	@ 0x208
2ffed0a4:	e7d7      	b.n	2ffed056 <xlat_desc+0x6e>
2ffed0a6:	bf00      	nop
2ffed0a8:	2fff687e 	.word	0x2fff687e

2ffed0ac <xlat_tables_map_region>:
2ffed0ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed0b0:	b087      	sub	sp, #28
2ffed0b2:	460d      	mov	r5, r1
2ffed0b4:	4607      	mov	r7, r0
2ffed0b6:	f8dd 8044 	ldr.w	r8, [sp, #68]	@ 0x44
2ffed0ba:	4614      	mov	r4, r2
2ffed0bc:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
2ffed0be:	461e      	mov	r6, r3
2ffed0c0:	4541      	cmp	r1, r8
2ffed0c2:	d802      	bhi.n	2ffed0ca <xlat_tables_map_region+0x1e>
2ffed0c4:	f1b8 0f03 	cmp.w	r8, #3
2ffed0c8:	d904      	bls.n	2ffed0d4 <xlat_tables_map_region+0x28>
2ffed0ca:	f44f 7110 	mov.w	r1, #576	@ 0x240
2ffed0ce:	486c      	ldr	r0, [pc, #432]	@ (2ffed280 <xlat_tables_map_region+0x1d4>)
2ffed0d0:	f005 fa22 	bl	2fff2518 <__assert>
2ffed0d4:	e9d5 0302 	ldrd	r0, r3, [r5, #8]
2ffed0d8:	f06f 0908 	mvn.w	r9, #8
2ffed0dc:	f04f 0b01 	mov.w	fp, #1
2ffed0e0:	fb09 f908 	mul.w	r9, r9, r8
2ffed0e4:	4403      	add	r3, r0
2ffed0e6:	4290      	cmp	r0, r2
2ffed0e8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
2ffed0ec:	9304      	str	r3, [sp, #16]
2ffed0ee:	f109 0327 	add.w	r3, r9, #39	@ 0x27
2ffed0f2:	9303      	str	r3, [sp, #12]
2ffed0f4:	bf98      	it	ls
2ffed0f6:	46a1      	movls	r9, r4
2ffed0f8:	fa0b fb03 	lsl.w	fp, fp, r3
2ffed0fc:	9b03      	ldr	r3, [sp, #12]
2ffed0fe:	bf84      	itt	hi
2ffed100:	f1cb 0200 	rsbhi	r2, fp, #0
2ffed104:	ea02 0900 	andhi.w	r9, r2, r0
2ffed108:	eba9 0404 	sub.w	r4, r9, r4
2ffed10c:	4541      	cmp	r1, r8
2ffed10e:	fa24 f403 	lsr.w	r4, r4, r3
2ffed112:	d209      	bcs.n	2ffed128 <xlat_tables_map_region+0x7c>
2ffed114:	4631      	mov	r1, r6
2ffed116:	4638      	mov	r0, r7
2ffed118:	f7ff feb4 	bl	2ffece84 <xlat_table_get_index>
2ffed11c:	69f9      	ldr	r1, [r7, #28]
2ffed11e:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
2ffed122:	3301      	adds	r3, #1
2ffed124:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
2ffed128:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
2ffed12c:	e069      	b.n	2ffed202 <xlat_tables_map_region+0x156>
2ffed12e:	e9d5 3200 	ldrd	r3, r2, [r5]
2ffed132:	f8d5 c008 	ldr.w	ip, [r5, #8]
2ffed136:	68e8      	ldr	r0, [r5, #12]
2ffed138:	9205      	str	r2, [sp, #20]
2ffed13a:	45cc      	cmp	ip, r9
2ffed13c:	6832      	ldr	r2, [r6, #0]
2ffed13e:	4460      	add	r0, ip
2ffed140:	eb09 0a0b 	add.w	sl, r9, fp
2ffed144:	f002 0103 	and.w	r1, r2, #3
2ffed148:	f100 30ff 	add.w	r0, r0, #4294967295	@ 0xffffffff
2ffed14c:	f10a 3eff 	add.w	lr, sl, #4294967295	@ 0xffffffff
2ffed150:	d837      	bhi.n	2ffed1c2 <xlat_tables_map_region+0x116>
2ffed152:	4570      	cmp	r0, lr
2ffed154:	d335      	bcc.n	2ffed1c2 <xlat_tables_map_region+0x116>
2ffed156:	9805      	ldr	r0, [sp, #20]
2ffed158:	ebb3 030c 	subs.w	r3, r3, ip
2ffed15c:	f160 0c00 	sbc.w	ip, r0, #0
2ffed160:	eb13 0009 	adds.w	r0, r3, r9
2ffed164:	f14c 0300 	adc.w	r3, ip, #0
2ffed168:	f1b8 0f03 	cmp.w	r8, #3
2ffed16c:	d106      	bne.n	2ffed17c <xlat_tables_map_region+0xd0>
2ffed16e:	2903      	cmp	r1, #3
2ffed170:	d041      	beq.n	2ffed1f6 <xlat_tables_map_region+0x14a>
2ffed172:	2900      	cmp	r1, #0
2ffed174:	d036      	beq.n	2ffed1e4 <xlat_tables_map_region+0x138>
2ffed176:	f240 11d7 	movw	r1, #471	@ 0x1d7
2ffed17a:	e7a8      	b.n	2ffed0ce <xlat_tables_map_region+0x22>
2ffed17c:	2903      	cmp	r1, #3
2ffed17e:	d064      	beq.n	2ffed24a <xlat_tables_map_region+0x19e>
2ffed180:	b9d1      	cbnz	r1, 2ffed1b8 <xlat_tables_map_region+0x10c>
2ffed182:	f10b 31ff 	add.w	r1, fp, #4294967295	@ 0xffffffff
2ffed186:	4201      	tst	r1, r0
2ffed188:	d106      	bne.n	2ffed198 <xlat_tables_map_region+0xec>
2ffed18a:	f1b8 0f00 	cmp.w	r8, #0
2ffed18e:	d003      	beq.n	2ffed198 <xlat_tables_map_region+0xec>
2ffed190:	6969      	ldr	r1, [r5, #20]
2ffed192:	9a03      	ldr	r2, [sp, #12]
2ffed194:	40d1      	lsrs	r1, r2
2ffed196:	d125      	bne.n	2ffed1e4 <xlat_tables_map_region+0x138>
2ffed198:	69b8      	ldr	r0, [r7, #24]
2ffed19a:	2300      	movs	r3, #0
2ffed19c:	4283      	cmp	r3, r0
2ffed19e:	da07      	bge.n	2ffed1b0 <xlat_tables_map_region+0x104>
2ffed1a0:	69f9      	ldr	r1, [r7, #28]
2ffed1a2:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
2ffed1a6:	bb91      	cbnz	r1, 2ffed20e <xlat_tables_map_region+0x162>
2ffed1a8:	6978      	ldr	r0, [r7, #20]
2ffed1aa:	eb10 3303 	adds.w	r3, r0, r3, lsl #12
2ffed1ae:	d130      	bne.n	2ffed212 <xlat_tables_map_region+0x166>
2ffed1b0:	4648      	mov	r0, r9
2ffed1b2:	b007      	add	sp, #28
2ffed1b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed1b8:	2901      	cmp	r1, #1
2ffed1ba:	d01c      	beq.n	2ffed1f6 <xlat_tables_map_region+0x14a>
2ffed1bc:	f44f 71ff 	mov.w	r1, #510	@ 0x1fe
2ffed1c0:	e785      	b.n	2ffed0ce <xlat_tables_map_region+0x22>
2ffed1c2:	45f4      	cmp	ip, lr
2ffed1c4:	d901      	bls.n	2ffed1ca <xlat_tables_map_region+0x11e>
2ffed1c6:	4581      	cmp	r9, r0
2ffed1c8:	d815      	bhi.n	2ffed1f6 <xlat_tables_map_region+0x14a>
2ffed1ca:	f1b8 0f03 	cmp.w	r8, #3
2ffed1ce:	d102      	bne.n	2ffed1d6 <xlat_tables_map_region+0x12a>
2ffed1d0:	f240 2113 	movw	r1, #531	@ 0x213
2ffed1d4:	e77b      	b.n	2ffed0ce <xlat_tables_map_region+0x22>
2ffed1d6:	2900      	cmp	r1, #0
2ffed1d8:	d0de      	beq.n	2ffed198 <xlat_tables_map_region+0xec>
2ffed1da:	2903      	cmp	r1, #3
2ffed1dc:	d035      	beq.n	2ffed24a <xlat_tables_map_region+0x19e>
2ffed1de:	f240 211e 	movw	r1, #542	@ 0x21e
2ffed1e2:	e774      	b.n	2ffed0ce <xlat_tables_map_region+0x22>
2ffed1e4:	f8cd 8000 	str.w	r8, [sp]
2ffed1e8:	4602      	mov	r2, r0
2ffed1ea:	6929      	ldr	r1, [r5, #16]
2ffed1ec:	4638      	mov	r0, r7
2ffed1ee:	f7ff fefb 	bl	2ffecfe8 <xlat_desc>
2ffed1f2:	e9c6 0100 	strd	r0, r1, [r6]
2ffed1f6:	9b04      	ldr	r3, [sp, #16]
2ffed1f8:	3401      	adds	r4, #1
2ffed1fa:	3608      	adds	r6, #8
2ffed1fc:	46d1      	mov	r9, sl
2ffed1fe:	4553      	cmp	r3, sl
2ffed200:	d902      	bls.n	2ffed208 <xlat_tables_map_region+0x15c>
2ffed202:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffed204:	429c      	cmp	r4, r3
2ffed206:	d392      	bcc.n	2ffed12e <xlat_tables_map_region+0x82>
2ffed208:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
2ffed20c:	e7d0      	b.n	2ffed1b0 <xlat_tables_map_region+0x104>
2ffed20e:	3301      	adds	r3, #1
2ffed210:	e7c4      	b.n	2ffed19c <xlat_tables_map_region+0xf0>
2ffed212:	9305      	str	r3, [sp, #20]
2ffed214:	f043 0003 	orr.w	r0, r3, #3
2ffed218:	e9c6 0100 	strd	r0, r1, [r6]
2ffed21c:	f108 0101 	add.w	r1, r8, #1
2ffed220:	464a      	mov	r2, r9
2ffed222:	9101      	str	r1, [sp, #4]
2ffed224:	f44f 7100 	mov.w	r1, #512	@ 0x200
2ffed228:	9100      	str	r1, [sp, #0]
2ffed22a:	4638      	mov	r0, r7
2ffed22c:	4629      	mov	r1, r5
2ffed22e:	f7ff ff3d 	bl	2ffed0ac <xlat_tables_map_region>
2ffed232:	9b05      	ldr	r3, [sp, #20]
2ffed234:	4681      	mov	r9, r0
2ffed236:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffed23a:	4618      	mov	r0, r3
2ffed23c:	f005 ff7c 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed240:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
2ffed244:	454b      	cmp	r3, r9
2ffed246:	d0d6      	beq.n	2ffed1f6 <xlat_tables_map_region+0x14a>
2ffed248:	e7b2      	b.n	2ffed1b0 <xlat_tables_map_region+0x104>
2ffed24a:	f422 637f 	bic.w	r3, r2, #4080	@ 0xff0
2ffed24e:	f108 0101 	add.w	r1, r8, #1
2ffed252:	9101      	str	r1, [sp, #4]
2ffed254:	f44f 7100 	mov.w	r1, #512	@ 0x200
2ffed258:	f023 030f 	bic.w	r3, r3, #15
2ffed25c:	464a      	mov	r2, r9
2ffed25e:	9100      	str	r1, [sp, #0]
2ffed260:	4638      	mov	r0, r7
2ffed262:	9305      	str	r3, [sp, #20]
2ffed264:	4629      	mov	r1, r5
2ffed266:	f7ff ff21 	bl	2ffed0ac <xlat_tables_map_region>
2ffed26a:	9b05      	ldr	r3, [sp, #20]
2ffed26c:	4681      	mov	r9, r0
2ffed26e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
2ffed272:	4618      	mov	r0, r3
2ffed274:	f005 ff60 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed278:	f10a 33ff 	add.w	r3, sl, #4294967295	@ 0xffffffff
2ffed27c:	4599      	cmp	r9, r3
2ffed27e:	e7e2      	b.n	2ffed246 <xlat_tables_map_region+0x19a>
2ffed280:	2fff687e 	.word	0x2fff687e

2ffed284 <mmap_add_region_ctx>:
2ffed284:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed288:	4606      	mov	r6, r0
2ffed28a:	680b      	ldr	r3, [r1, #0]
2ffed28c:	460d      	mov	r5, r1
2ffed28e:	e9d1 4902 	ldrd	r4, r9, [r1, #8]
2ffed292:	68c7      	ldr	r7, [r0, #12]
2ffed294:	f8d0 b010 	ldr.w	fp, [r0, #16]
2ffed298:	f8d1 8004 	ldr.w	r8, [r1, #4]
2ffed29c:	9301      	str	r3, [sp, #4]
2ffed29e:	f1b9 0f00 	cmp.w	r9, #0
2ffed2a2:	d050      	beq.n	2ffed346 <mmap_add_region_ctx+0xc2>
2ffed2a4:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
2ffed2a8:	b123      	cbz	r3, 2ffed2b4 <mmap_add_region_ctx+0x30>
2ffed2aa:	f44f 7145 	mov.w	r1, #788	@ 0x314
2ffed2ae:	482e      	ldr	r0, [pc, #184]	@ (2ffed368 <mmap_add_region_ctx+0xe4>)
2ffed2b0:	f005 f932 	bl	2fff2518 <__assert>
2ffed2b4:	f005 feae 	bl	2fff3014 <mmap_add_region_check>
2ffed2b8:	4601      	mov	r1, r0
2ffed2ba:	b9d0      	cbnz	r0, 2ffed2f2 <mmap_add_region_ctx+0x6e>
2ffed2bc:	eb09 0204 	add.w	r2, r9, r4
2ffed2c0:	463c      	mov	r4, r7
2ffed2c2:	f102 3aff 	add.w	sl, r2, #4294967295	@ 0xffffffff
2ffed2c6:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2ffed2ca:	440b      	add	r3, r1
2ffed2cc:	3b01      	subs	r3, #1
2ffed2ce:	4553      	cmp	r3, sl
2ffed2d0:	d200      	bcs.n	2ffed2d4 <mmap_add_region_ctx+0x50>
2ffed2d2:	b9a1      	cbnz	r1, 2ffed2fe <mmap_add_region_ctx+0x7a>
2ffed2d4:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2ffed2d8:	440b      	add	r3, r1
2ffed2da:	429a      	cmp	r2, r3
2ffed2dc:	d011      	beq.n	2ffed302 <mmap_add_region_ctx+0x7e>
2ffed2de:	2318      	movs	r3, #24
2ffed2e0:	fb03 7b0b 	mla	fp, r3, fp, r7
2ffed2e4:	68fb      	ldr	r3, [r7, #12]
2ffed2e6:	b38b      	cbz	r3, 2ffed34c <mmap_add_region_ctx+0xc8>
2ffed2e8:	455f      	cmp	r7, fp
2ffed2ea:	d310      	bcc.n	2ffed30e <mmap_add_region_ctx+0x8a>
2ffed2ec:	f44f 7153 	mov.w	r1, #844	@ 0x34c
2ffed2f0:	e7dd      	b.n	2ffed2ae <mmap_add_region_ctx+0x2a>
2ffed2f2:	481e      	ldr	r0, [pc, #120]	@ (2ffed36c <mmap_add_region_ctx+0xe8>)
2ffed2f4:	f7ff f9e2 	bl	2ffec6bc <tf_log>
2ffed2f8:	f240 3119 	movw	r1, #793	@ 0x319
2ffed2fc:	e7d7      	b.n	2ffed2ae <mmap_add_region_ctx+0x2a>
2ffed2fe:	3418      	adds	r4, #24
2ffed300:	e7e1      	b.n	2ffed2c6 <mmap_add_region_ctx+0x42>
2ffed302:	2900      	cmp	r1, #0
2ffed304:	d0eb      	beq.n	2ffed2de <mmap_add_region_ctx+0x5a>
2ffed306:	4589      	cmp	r9, r1
2ffed308:	d9e9      	bls.n	2ffed2de <mmap_add_region_ctx+0x5a>
2ffed30a:	3418      	adds	r4, #24
2ffed30c:	e7e2      	b.n	2ffed2d4 <mmap_add_region_ctx+0x50>
2ffed30e:	3718      	adds	r7, #24
2ffed310:	e7e8      	b.n	2ffed2e4 <mmap_add_region_ctx+0x60>
2ffed312:	9b01      	ldr	r3, [sp, #4]
2ffed314:	3b01      	subs	r3, #1
2ffed316:	f148 38ff 	adc.w	r8, r8, #4294967295	@ 0xffffffff
2ffed31a:	eb13 0909 	adds.w	r9, r3, r9
2ffed31e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffed320:	f148 0700 	adc.w	r7, r8, #0
2ffed324:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffed326:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	@ 0x30
2ffed32a:	e895 0003 	ldmia.w	r5, {r0, r1}
2ffed32e:	454a      	cmp	r2, r9
2ffed330:	41bb      	sbcs	r3, r7
2ffed332:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
2ffed334:	e884 0003 	stmia.w	r4, {r0, r1}
2ffed338:	bf38      	it	cc
2ffed33a:	e9c6 970c 	strdcc	r9, r7, [r6, #48]	@ 0x30
2ffed33e:	4553      	cmp	r3, sl
2ffed340:	d201      	bcs.n	2ffed346 <mmap_add_region_ctx+0xc2>
2ffed342:	f8c6 a038 	str.w	sl, [r6, #56]	@ 0x38
2ffed346:	b003      	add	sp, #12
2ffed348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed34c:	1b3a      	subs	r2, r7, r4
2ffed34e:	4621      	mov	r1, r4
2ffed350:	f104 0018 	add.w	r0, r4, #24
2ffed354:	f006 ff08 	bl	2fff4168 <memmove>
2ffed358:	f8db 300c 	ldr.w	r3, [fp, #12]
2ffed35c:	2b00      	cmp	r3, #0
2ffed35e:	d0d8      	beq.n	2ffed312 <mmap_add_region_ctx+0x8e>
2ffed360:	f44f 7156 	mov.w	r1, #856	@ 0x358
2ffed364:	e7a3      	b.n	2ffed2ae <mmap_add_region_ctx+0x2a>
2ffed366:	bf00      	nop
2ffed368:	2fff687e 	.word	0x2fff687e
2ffed36c:	2fff68a4 	.word	0x2fff68a4

2ffed370 <mmap_add_dynamic_region_ctx>:
2ffed370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed374:	b08b      	sub	sp, #44	@ 0x2c
2ffed376:	680b      	ldr	r3, [r1, #0]
2ffed378:	4604      	mov	r4, r0
2ffed37a:	e9d1 6902 	ldrd	r6, r9, [r1, #8]
2ffed37e:	9302      	str	r3, [sp, #8]
2ffed380:	460d      	mov	r5, r1
2ffed382:	684b      	ldr	r3, [r1, #4]
2ffed384:	f8d0 a00c 	ldr.w	sl, [r0, #12]
2ffed388:	f8d0 b010 	ldr.w	fp, [r0, #16]
2ffed38c:	9303      	str	r3, [sp, #12]
2ffed38e:	f1b9 0f00 	cmp.w	r9, #0
2ffed392:	f000 8093 	beq.w	2ffed4bc <mmap_add_dynamic_region_ctx+0x14c>
2ffed396:	690b      	ldr	r3, [r1, #16]
2ffed398:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2ffed39c:	610b      	str	r3, [r1, #16]
2ffed39e:	f005 fe39 	bl	2fff3014 <mmap_add_region_check>
2ffed3a2:	2800      	cmp	r0, #0
2ffed3a4:	d171      	bne.n	2ffed48a <mmap_add_dynamic_region_ctx+0x11a>
2ffed3a6:	eb09 0106 	add.w	r1, r9, r6
2ffed3aa:	4653      	mov	r3, sl
2ffed3ac:	1e4e      	subs	r6, r1, #1
2ffed3ae:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2ffed3b2:	4698      	mov	r8, r3
2ffed3b4:	3318      	adds	r3, #24
2ffed3b6:	4402      	add	r2, r0
2ffed3b8:	3a01      	subs	r2, #1
2ffed3ba:	42b2      	cmp	r2, r6
2ffed3bc:	d201      	bcs.n	2ffed3c2 <mmap_add_dynamic_region_ctx+0x52>
2ffed3be:	2800      	cmp	r0, #0
2ffed3c0:	d1f5      	bne.n	2ffed3ae <mmap_add_dynamic_region_ctx+0x3e>
2ffed3c2:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2ffed3c6:	4647      	mov	r7, r8
2ffed3c8:	f108 0818 	add.w	r8, r8, #24
2ffed3cc:	4413      	add	r3, r2
2ffed3ce:	4299      	cmp	r1, r3
2ffed3d0:	d102      	bne.n	2ffed3d8 <mmap_add_dynamic_region_ctx+0x68>
2ffed3d2:	b10a      	cbz	r2, 2ffed3d8 <mmap_add_dynamic_region_ctx+0x68>
2ffed3d4:	4591      	cmp	r9, r2
2ffed3d6:	d8f4      	bhi.n	2ffed3c2 <mmap_add_dynamic_region_ctx+0x52>
2ffed3d8:	2318      	movs	r3, #24
2ffed3da:	4639      	mov	r1, r7
2ffed3dc:	fb03 aa0b 	mla	sl, r3, fp, sl
2ffed3e0:	4640      	mov	r0, r8
2ffed3e2:	ebaa 0b07 	sub.w	fp, sl, r7
2ffed3e6:	465a      	mov	r2, fp
2ffed3e8:	f006 febe 	bl	2fff4168 <memmove>
2ffed3ec:	f8da a00c 	ldr.w	sl, [sl, #12]
2ffed3f0:	f1ba 0f00 	cmp.w	sl, #0
2ffed3f4:	d004      	beq.n	2ffed400 <mmap_add_dynamic_region_ctx+0x90>
2ffed3f6:	4832      	ldr	r0, [pc, #200]	@ (2ffed4c0 <mmap_add_dynamic_region_ctx+0x150>)
2ffed3f8:	f240 31e3 	movw	r1, #995	@ 0x3e3
2ffed3fc:	f005 f88c 	bl	2fff2518 <__assert>
2ffed400:	46ae      	mov	lr, r5
2ffed402:	46bc      	mov	ip, r7
2ffed404:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2ffed408:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2ffed40c:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
2ffed410:	e89e 0003 	ldmia.w	lr, {r0, r1}
2ffed414:	e88c 0003 	stmia.w	ip, {r0, r1}
2ffed418:	2b00      	cmp	r3, #0
2ffed41a:	d03b      	beq.n	2ffed494 <mmap_add_dynamic_region_ctx+0x124>
2ffed41c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffed41e:	4652      	mov	r2, sl
2ffed420:	4639      	mov	r1, r7
2ffed422:	4620      	mov	r0, r4
2ffed424:	9301      	str	r3, [sp, #4]
2ffed426:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffed428:	9300      	str	r3, [sp, #0]
2ffed42a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed42c:	f7ff fe3e 	bl	2ffed0ac <xlat_tables_map_region>
2ffed430:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffed432:	4606      	mov	r6, r0
2ffed434:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffed436:	00c9      	lsls	r1, r1, #3
2ffed438:	f005 fe7e 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed43c:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2ffed440:	4413      	add	r3, r2
2ffed442:	3b01      	subs	r3, #1
2ffed444:	42b3      	cmp	r3, r6
2ffed446:	d023      	beq.n	2ffed490 <mmap_add_dynamic_region_ctx+0x120>
2ffed448:	465a      	mov	r2, fp
2ffed44a:	4641      	mov	r1, r8
2ffed44c:	4638      	mov	r0, r7
2ffed44e:	f006 fe8b 	bl	2fff4168 <memmove>
2ffed452:	68ad      	ldr	r5, [r5, #8]
2ffed454:	42b5      	cmp	r5, r6
2ffed456:	d216      	bcs.n	2ffed486 <mmap_add_dynamic_region_ctx+0x116>
2ffed458:	2218      	movs	r2, #24
2ffed45a:	4651      	mov	r1, sl
2ffed45c:	a804      	add	r0, sp, #16
2ffed45e:	f006 fe99 	bl	2fff4194 <memset>
2ffed462:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffed464:	a904      	add	r1, sp, #16
2ffed466:	9506      	str	r5, [sp, #24]
2ffed468:	4620      	mov	r0, r4
2ffed46a:	9301      	str	r3, [sp, #4]
2ffed46c:	4652      	mov	r2, sl
2ffed46e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffed470:	1b75      	subs	r5, r6, r5
2ffed472:	9300      	str	r3, [sp, #0]
2ffed474:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed476:	9507      	str	r5, [sp, #28]
2ffed478:	f7ff fd18 	bl	2ffeceac <xlat_tables_unmap_region>
2ffed47c:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffed47e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffed480:	00c9      	lsls	r1, r1, #3
2ffed482:	f005 fe59 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed486:	f06f 000b 	mvn.w	r0, #11
2ffed48a:	b00b      	add	sp, #44	@ 0x2c
2ffed48c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed490:	f3bf 8f4a 	dsb	ishst
2ffed494:	9b02      	ldr	r3, [sp, #8]
2ffed496:	9a03      	ldr	r2, [sp, #12]
2ffed498:	e9d4 010c 	ldrd	r0, r1, [r4, #48]	@ 0x30
2ffed49c:	3b01      	subs	r3, #1
2ffed49e:	f142 32ff 	adc.w	r2, r2, #4294967295	@ 0xffffffff
2ffed4a2:	eb13 0309 	adds.w	r3, r3, r9
2ffed4a6:	f142 0200 	adc.w	r2, r2, #0
2ffed4aa:	4298      	cmp	r0, r3
2ffed4ac:	4191      	sbcs	r1, r2
2ffed4ae:	bf38      	it	cc
2ffed4b0:	e9c4 320c 	strdcc	r3, r2, [r4, #48]	@ 0x30
2ffed4b4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2ffed4b6:	42b3      	cmp	r3, r6
2ffed4b8:	bf38      	it	cc
2ffed4ba:	63a6      	strcc	r6, [r4, #56]	@ 0x38
2ffed4bc:	2000      	movs	r0, #0
2ffed4be:	e7e4      	b.n	2ffed48a <mmap_add_dynamic_region_ctx+0x11a>
2ffed4c0:	2fff687e 	.word	0x2fff687e

2ffed4c4 <mmap_remove_dynamic_region_ctx>:
2ffed4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed4c8:	2318      	movs	r3, #24
2ffed4ca:	68c5      	ldr	r5, [r0, #12]
2ffed4cc:	b085      	sub	sp, #20
2ffed4ce:	6907      	ldr	r7, [r0, #16]
2ffed4d0:	4604      	mov	r4, r0
2ffed4d2:	fb03 5707 	mla	r7, r3, r7, r5
2ffed4d6:	68fb      	ldr	r3, [r7, #12]
2ffed4d8:	b153      	cbz	r3, 2ffed4f0 <mmap_remove_dynamic_region_ctx+0x2c>
2ffed4da:	483a      	ldr	r0, [pc, #232]	@ (2ffed5c4 <mmap_remove_dynamic_region_ctx+0x100>)
2ffed4dc:	f240 4147 	movw	r1, #1095	@ 0x447
2ffed4e0:	f005 f81a 	bl	2fff2518 <__assert>
2ffed4e4:	68a8      	ldr	r0, [r5, #8]
2ffed4e6:	4288      	cmp	r0, r1
2ffed4e8:	d101      	bne.n	2ffed4ee <mmap_remove_dynamic_region_ctx+0x2a>
2ffed4ea:	4293      	cmp	r3, r2
2ffed4ec:	d008      	beq.n	2ffed500 <mmap_remove_dynamic_region_ctx+0x3c>
2ffed4ee:	3518      	adds	r5, #24
2ffed4f0:	68eb      	ldr	r3, [r5, #12]
2ffed4f2:	2b00      	cmp	r3, #0
2ffed4f4:	d1f6      	bne.n	2ffed4e4 <mmap_remove_dynamic_region_ctx+0x20>
2ffed4f6:	f06f 0015 	mvn.w	r0, #21
2ffed4fa:	b005      	add	sp, #20
2ffed4fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed500:	692b      	ldr	r3, [r5, #16]
2ffed502:	2b00      	cmp	r3, #0
2ffed504:	da5b      	bge.n	2ffed5be <mmap_remove_dynamic_region_ctx+0xfa>
2ffed506:	e9d5 3600 	ldrd	r3, r6, [r5]
2ffed50a:	f8d4 b038 	ldr.w	fp, [r4, #56]	@ 0x38
2ffed50e:	f102 38ff 	add.w	r8, r2, #4294967295	@ 0xffffffff
2ffed512:	18d2      	adds	r2, r2, r3
2ffed514:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffed516:	f146 0600 	adc.w	r6, r6, #0
2ffed51a:	f112 39ff 	adds.w	r9, r2, #4294967295	@ 0xffffffff
2ffed51e:	9303      	str	r3, [sp, #12]
2ffed520:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
2ffed524:	4488      	add	r8, r1
2ffed526:	f146 36ff 	adc.w	r6, r6, #4294967295	@ 0xffffffff
2ffed52a:	f8d4 a034 	ldr.w	sl, [r4, #52]	@ 0x34
2ffed52e:	b183      	cbz	r3, 2ffed552 <mmap_remove_dynamic_region_ctx+0x8e>
2ffed530:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffed532:	2200      	movs	r2, #0
2ffed534:	4629      	mov	r1, r5
2ffed536:	4620      	mov	r0, r4
2ffed538:	9301      	str	r3, [sp, #4]
2ffed53a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffed53c:	9300      	str	r3, [sp, #0]
2ffed53e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed540:	f7ff fcb4 	bl	2ffeceac <xlat_tables_unmap_region>
2ffed544:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffed546:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffed548:	00c9      	lsls	r1, r1, #3
2ffed54a:	f005 fdf5 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed54e:	f005 fd59 	bl	2fff3004 <xlat_arch_tlbi_va_sync>
2ffed552:	1b7a      	subs	r2, r7, r5
2ffed554:	f105 0118 	add.w	r1, r5, #24
2ffed558:	4628      	mov	r0, r5
2ffed55a:	f006 fe05 	bl	2fff4168 <memmove>
2ffed55e:	45d8      	cmp	r8, fp
2ffed560:	d00e      	beq.n	2ffed580 <mmap_remove_dynamic_region_ctx+0xbc>
2ffed562:	9b03      	ldr	r3, [sp, #12]
2ffed564:	4556      	cmp	r6, sl
2ffed566:	bf08      	it	eq
2ffed568:	4599      	cmpeq	r9, r3
2ffed56a:	d107      	bne.n	2ffed57c <mmap_remove_dynamic_region_ctx+0xb8>
2ffed56c:	2200      	movs	r2, #0
2ffed56e:	2300      	movs	r3, #0
2ffed570:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
2ffed574:	68e2      	ldr	r2, [r4, #12]
2ffed576:	68d0      	ldr	r0, [r2, #12]
2ffed578:	3218      	adds	r2, #24
2ffed57a:	b980      	cbnz	r0, 2ffed59e <mmap_remove_dynamic_region_ctx+0xda>
2ffed57c:	2000      	movs	r0, #0
2ffed57e:	e7bc      	b.n	2ffed4fa <mmap_remove_dynamic_region_ctx+0x36>
2ffed580:	68e2      	ldr	r2, [r4, #12]
2ffed582:	2300      	movs	r3, #0
2ffed584:	63a3      	str	r3, [r4, #56]	@ 0x38
2ffed586:	68d3      	ldr	r3, [r2, #12]
2ffed588:	2b00      	cmp	r3, #0
2ffed58a:	d0ea      	beq.n	2ffed562 <mmap_remove_dynamic_region_ctx+0x9e>
2ffed58c:	6891      	ldr	r1, [r2, #8]
2ffed58e:	3218      	adds	r2, #24
2ffed590:	440b      	add	r3, r1
2ffed592:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
2ffed594:	3b01      	subs	r3, #1
2ffed596:	428b      	cmp	r3, r1
2ffed598:	bf88      	it	hi
2ffed59a:	63a3      	strhi	r3, [r4, #56]	@ 0x38
2ffed59c:	e7f3      	b.n	2ffed586 <mmap_remove_dynamic_region_ctx+0xc2>
2ffed59e:	e952 3106 	ldrd	r3, r1, [r2, #-24]
2ffed5a2:	3b01      	subs	r3, #1
2ffed5a4:	f141 31ff 	adc.w	r1, r1, #4294967295	@ 0xffffffff
2ffed5a8:	181b      	adds	r3, r3, r0
2ffed5aa:	e9d4 500c 	ldrd	r5, r0, [r4, #48]	@ 0x30
2ffed5ae:	f141 0100 	adc.w	r1, r1, #0
2ffed5b2:	429d      	cmp	r5, r3
2ffed5b4:	4188      	sbcs	r0, r1
2ffed5b6:	bf38      	it	cc
2ffed5b8:	e9c4 310c 	strdcc	r3, r1, [r4, #48]	@ 0x30
2ffed5bc:	e7db      	b.n	2ffed576 <mmap_remove_dynamic_region_ctx+0xb2>
2ffed5be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffed5c2:	e79a      	b.n	2ffed4fa <mmap_remove_dynamic_region_ctx+0x36>
2ffed5c4:	2fff687e 	.word	0x2fff687e

2ffed5c8 <init_xlat_tables_ctx>:
2ffed5c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffed5ca:	4604      	mov	r4, r0
2ffed5cc:	b920      	cbnz	r0, 2ffed5d8 <init_xlat_tables_ctx+0x10>
2ffed5ce:	f240 41a6 	movw	r1, #1190	@ 0x4a6
2ffed5d2:	484b      	ldr	r0, [pc, #300]	@ (2ffed700 <init_xlat_tables_ctx+0x138>)
2ffed5d4:	f004 ffa0 	bl	2fff2518 <__assert>
2ffed5d8:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
2ffed5dc:	b113      	cbz	r3, 2ffed5e4 <init_xlat_tables_ctx+0x1c>
2ffed5de:	f240 41a7 	movw	r1, #1191	@ 0x4a7
2ffed5e2:	e7f6      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed5e4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
2ffed5e6:	3b01      	subs	r3, #1
2ffed5e8:	2b02      	cmp	r3, #2
2ffed5ea:	d902      	bls.n	2ffed5f2 <init_xlat_tables_ctx+0x2a>
2ffed5ec:	f44f 6195 	mov.w	r1, #1192	@ 0x4a8
2ffed5f0:	e7ef      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed5f2:	f7ff fb63 	bl	2ffeccbc <is_mmu_enabled_ctx>
2ffed5f6:	b110      	cbz	r0, 2ffed5fe <init_xlat_tables_ctx+0x36>
2ffed5f8:	f240 41ab 	movw	r1, #1195	@ 0x4ab
2ffed5fc:	e7e9      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed5fe:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2ffed602:	f005 fcee 	bl	2fff2fe2 <xlat_get_min_virt_addr_space_size>
2ffed606:	3801      	subs	r0, #1
2ffed608:	4286      	cmp	r6, r0
2ffed60a:	d202      	bcs.n	2ffed612 <init_xlat_tables_ctx+0x4a>
2ffed60c:	f240 41af 	movw	r1, #1199	@ 0x4af
2ffed610:	e7df      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed612:	68a3      	ldr	r3, [r4, #8]
2ffed614:	1c5e      	adds	r6, r3, #1
2ffed616:	401e      	ands	r6, r3
2ffed618:	d002      	beq.n	2ffed620 <init_xlat_tables_ctx+0x58>
2ffed61a:	f240 41b2 	movw	r1, #1202	@ 0x4b2
2ffed61e:	e7d8      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed620:	4628      	mov	r0, r5
2ffed622:	f005 fda2 	bl	2fff316a <xlat_mmap_print>
2ffed626:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
2ffed628:	2000      	movs	r0, #0
2ffed62a:	2100      	movs	r1, #0
2ffed62c:	42b2      	cmp	r2, r6
2ffed62e:	d112      	bne.n	2ffed656 <init_xlat_tables_ctx+0x8e>
2ffed630:	2300      	movs	r3, #0
2ffed632:	2000      	movs	r0, #0
2ffed634:	461f      	mov	r7, r3
2ffed636:	2100      	movs	r1, #0
2ffed638:	69a2      	ldr	r2, [r4, #24]
2ffed63a:	429a      	cmp	r2, r3
2ffed63c:	dc12      	bgt.n	2ffed664 <init_xlat_tables_ctx+0x9c>
2ffed63e:	68eb      	ldr	r3, [r5, #12]
2ffed640:	bb03      	cbnz	r3, 2ffed684 <init_xlat_tables_ctx+0xbc>
2ffed642:	e9d4 6500 	ldrd	r6, r5, [r4]
2ffed646:	f005 fcc8 	bl	2fff2fda <xlat_arch_get_max_supported_pa>
2ffed64a:	42b0      	cmp	r0, r6
2ffed64c:	41a9      	sbcs	r1, r5
2ffed64e:	d23d      	bcs.n	2ffed6cc <init_xlat_tables_ctx+0x104>
2ffed650:	f240 41d5 	movw	r1, #1237	@ 0x4d5
2ffed654:	e7bd      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed656:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed658:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2ffed65c:	3601      	adds	r6, #1
2ffed65e:	e9c3 0100 	strd	r0, r1, [r3]
2ffed662:	e7e3      	b.n	2ffed62c <init_xlat_tables_ctx+0x64>
2ffed664:	69e2      	ldr	r2, [r4, #28]
2ffed666:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2ffed66a:	6962      	ldr	r2, [r4, #20]
2ffed66c:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2ffed670:	f1a2 0608 	sub.w	r6, r2, #8
2ffed674:	f602 72f8 	addw	r2, r2, #4088	@ 0xff8
2ffed678:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2ffed67c:	4296      	cmp	r6, r2
2ffed67e:	d1fb      	bne.n	2ffed678 <init_xlat_tables_ctx+0xb0>
2ffed680:	3301      	adds	r3, #1
2ffed682:	e7d9      	b.n	2ffed638 <init_xlat_tables_ctx+0x70>
2ffed684:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
2ffed686:	2200      	movs	r2, #0
2ffed688:	4629      	mov	r1, r5
2ffed68a:	4620      	mov	r0, r4
2ffed68c:	9301      	str	r3, [sp, #4]
2ffed68e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffed690:	9300      	str	r3, [sp, #0]
2ffed692:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffed694:	f7ff fd0a 	bl	2ffed0ac <xlat_tables_map_region>
2ffed698:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
2ffed69a:	4606      	mov	r6, r0
2ffed69c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
2ffed69e:	00c9      	lsls	r1, r1, #3
2ffed6a0:	f005 fd4a 	bl	2fff3138 <xlat_clean_dcache_range>
2ffed6a4:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2ffed6a8:	188b      	adds	r3, r1, r2
2ffed6aa:	3b01      	subs	r3, #1
2ffed6ac:	42b3      	cmp	r3, r6
2ffed6ae:	d00b      	beq.n	2ffed6c8 <init_xlat_tables_ctx+0x100>
2ffed6b0:	692b      	ldr	r3, [r5, #16]
2ffed6b2:	4814      	ldr	r0, [pc, #80]	@ (2ffed704 <init_xlat_tables_ctx+0x13c>)
2ffed6b4:	e9cd 2300 	strd	r2, r3, [sp]
2ffed6b8:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffed6bc:	f7fe fffe 	bl	2ffec6bc <tf_log>
2ffed6c0:	f7ff f898 	bl	2ffec7f4 <console_flush>
2ffed6c4:	f7fb ee8a 	blx	2ffe93dc <do_panic>
2ffed6c8:	3518      	adds	r5, #24
2ffed6ca:	e7b8      	b.n	2ffed63e <init_xlat_tables_ctx+0x76>
2ffed6cc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
2ffed6ce:	68a3      	ldr	r3, [r4, #8]
2ffed6d0:	429a      	cmp	r2, r3
2ffed6d2:	d902      	bls.n	2ffed6da <init_xlat_tables_ctx+0x112>
2ffed6d4:	f240 41d6 	movw	r1, #1238	@ 0x4d6
2ffed6d8:	e77b      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed6da:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	@ 0x30
2ffed6de:	e9d4 0300 	ldrd	r0, r3, [r4]
2ffed6e2:	4288      	cmp	r0, r1
2ffed6e4:	4193      	sbcs	r3, r2
2ffed6e6:	d202      	bcs.n	2ffed6ee <init_xlat_tables_ctx+0x126>
2ffed6e8:	f240 41d7 	movw	r1, #1239	@ 0x4d7
2ffed6ec:	e771      	b.n	2ffed5d2 <init_xlat_tables_ctx+0xa>
2ffed6ee:	2301      	movs	r3, #1
2ffed6f0:	4620      	mov	r0, r4
2ffed6f2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
2ffed6f6:	b003      	add	sp, #12
2ffed6f8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffed6fc:	f005 bd36 	b.w	2fff316c <xlat_tables_print>
2ffed700:	2fff687e 	.word	0x2fff687e
2ffed704:	2fff68cf 	.word	0x2fff68cf

2ffed708 <clk_enable>:
2ffed708:	4b06      	ldr	r3, [pc, #24]	@ (2ffed724 <clk_enable+0x1c>)
2ffed70a:	b510      	push	{r4, lr}
2ffed70c:	681b      	ldr	r3, [r3, #0]
2ffed70e:	b10b      	cbz	r3, 2ffed714 <clk_enable+0xc>
2ffed710:	681b      	ldr	r3, [r3, #0]
2ffed712:	b91b      	cbnz	r3, 2ffed71c <clk_enable+0x14>
2ffed714:	4804      	ldr	r0, [pc, #16]	@ (2ffed728 <clk_enable+0x20>)
2ffed716:	2112      	movs	r1, #18
2ffed718:	f004 fefe 	bl	2fff2518 <__assert>
2ffed71c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed720:	4718      	bx	r3
2ffed722:	bf00      	nop
2ffed724:	2fff9498 	.word	0x2fff9498
2ffed728:	2fff691e 	.word	0x2fff691e

2ffed72c <clk_disable>:
2ffed72c:	4b06      	ldr	r3, [pc, #24]	@ (2ffed748 <clk_disable+0x1c>)
2ffed72e:	b510      	push	{r4, lr}
2ffed730:	681b      	ldr	r3, [r3, #0]
2ffed732:	b10b      	cbz	r3, 2ffed738 <clk_disable+0xc>
2ffed734:	685b      	ldr	r3, [r3, #4]
2ffed736:	b91b      	cbnz	r3, 2ffed740 <clk_disable+0x14>
2ffed738:	4804      	ldr	r0, [pc, #16]	@ (2ffed74c <clk_disable+0x20>)
2ffed73a:	2119      	movs	r1, #25
2ffed73c:	f004 feec 	bl	2fff2518 <__assert>
2ffed740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed744:	4718      	bx	r3
2ffed746:	bf00      	nop
2ffed748:	2fff9498 	.word	0x2fff9498
2ffed74c:	2fff691e 	.word	0x2fff691e

2ffed750 <clk_get_rate>:
2ffed750:	4b06      	ldr	r3, [pc, #24]	@ (2ffed76c <clk_get_rate+0x1c>)
2ffed752:	b510      	push	{r4, lr}
2ffed754:	681b      	ldr	r3, [r3, #0]
2ffed756:	b10b      	cbz	r3, 2ffed75c <clk_get_rate+0xc>
2ffed758:	689b      	ldr	r3, [r3, #8]
2ffed75a:	b91b      	cbnz	r3, 2ffed764 <clk_get_rate+0x14>
2ffed75c:	4804      	ldr	r0, [pc, #16]	@ (2ffed770 <clk_get_rate+0x20>)
2ffed75e:	2120      	movs	r1, #32
2ffed760:	f004 feda 	bl	2fff2518 <__assert>
2ffed764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed768:	4718      	bx	r3
2ffed76a:	bf00      	nop
2ffed76c:	2fff9498 	.word	0x2fff9498
2ffed770:	2fff691e 	.word	0x2fff691e

2ffed774 <clk_is_enabled>:
2ffed774:	4b06      	ldr	r3, [pc, #24]	@ (2ffed790 <clk_is_enabled+0x1c>)
2ffed776:	b510      	push	{r4, lr}
2ffed778:	681b      	ldr	r3, [r3, #0]
2ffed77a:	b10b      	cbz	r3, 2ffed780 <clk_is_enabled+0xc>
2ffed77c:	691b      	ldr	r3, [r3, #16]
2ffed77e:	b91b      	cbnz	r3, 2ffed788 <clk_is_enabled+0x14>
2ffed780:	4804      	ldr	r0, [pc, #16]	@ (2ffed794 <clk_is_enabled+0x20>)
2ffed782:	212e      	movs	r1, #46	@ 0x2e
2ffed784:	f004 fec8 	bl	2fff2518 <__assert>
2ffed788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed78c:	4718      	bx	r3
2ffed78e:	bf00      	nop
2ffed790:	2fff9498 	.word	0x2fff9498
2ffed794:	2fff691e 	.word	0x2fff691e

2ffed798 <clk_register>:
2ffed798:	b508      	push	{r3, lr}
2ffed79a:	b148      	cbz	r0, 2ffed7b0 <clk_register+0x18>
2ffed79c:	6803      	ldr	r3, [r0, #0]
2ffed79e:	b13b      	cbz	r3, 2ffed7b0 <clk_register+0x18>
2ffed7a0:	6843      	ldr	r3, [r0, #4]
2ffed7a2:	b12b      	cbz	r3, 2ffed7b0 <clk_register+0x18>
2ffed7a4:	6883      	ldr	r3, [r0, #8]
2ffed7a6:	b11b      	cbz	r3, 2ffed7b0 <clk_register+0x18>
2ffed7a8:	68c3      	ldr	r3, [r0, #12]
2ffed7aa:	b10b      	cbz	r3, 2ffed7b0 <clk_register+0x18>
2ffed7ac:	6903      	ldr	r3, [r0, #16]
2ffed7ae:	b91b      	cbnz	r3, 2ffed7b8 <clk_register+0x20>
2ffed7b0:	4803      	ldr	r0, [pc, #12]	@ (2ffed7c0 <clk_register+0x28>)
2ffed7b2:	2139      	movs	r1, #57	@ 0x39
2ffed7b4:	f004 feb0 	bl	2fff2518 <__assert>
2ffed7b8:	4b02      	ldr	r3, [pc, #8]	@ (2ffed7c4 <clk_register+0x2c>)
2ffed7ba:	6018      	str	r0, [r3, #0]
2ffed7bc:	bd08      	pop	{r3, pc}
2ffed7be:	bf00      	nop
2ffed7c0:	2fff691e 	.word	0x2fff691e
2ffed7c4:	2fff9498 	.word	0x2fff9498

2ffed7c8 <udelay>:
2ffed7c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffed7cc:	4604      	mov	r4, r0
2ffed7ce:	4f18      	ldr	r7, [pc, #96]	@ (2ffed830 <udelay+0x68>)
2ffed7d0:	683b      	ldr	r3, [r7, #0]
2ffed7d2:	b12b      	cbz	r3, 2ffed7e0 <udelay+0x18>
2ffed7d4:	685a      	ldr	r2, [r3, #4]
2ffed7d6:	b11a      	cbz	r2, 2ffed7e0 <udelay+0x18>
2ffed7d8:	689a      	ldr	r2, [r3, #8]
2ffed7da:	b10a      	cbz	r2, 2ffed7e0 <udelay+0x18>
2ffed7dc:	681b      	ldr	r3, [r3, #0]
2ffed7de:	b91b      	cbnz	r3, 2ffed7e8 <udelay+0x20>
2ffed7e0:	2119      	movs	r1, #25
2ffed7e2:	4814      	ldr	r0, [pc, #80]	@ (2ffed834 <udelay+0x6c>)
2ffed7e4:	f004 fe98 	bl	2fff2518 <__assert>
2ffed7e8:	2600      	movs	r6, #0
2ffed7ea:	4798      	blx	r3
2ffed7ec:	683b      	ldr	r3, [r7, #0]
2ffed7ee:	4680      	mov	r8, r0
2ffed7f0:	685a      	ldr	r2, [r3, #4]
2ffed7f2:	689d      	ldr	r5, [r3, #8]
2ffed7f4:	4633      	mov	r3, r6
2ffed7f6:	1e50      	subs	r0, r2, #1
2ffed7f8:	f146 31ff 	adc.w	r1, r6, #4294967295	@ 0xffffffff
2ffed7fc:	fbe4 0105 	umlal	r0, r1, r4, r5
2ffed800:	f004 ed26 	blx	2fff2250 <__aeabi_uldivmod>
2ffed804:	1c44      	adds	r4, r0, #1
2ffed806:	f46f 737a 	mvn.w	r3, #1000	@ 0x3e8
2ffed80a:	f141 0500 	adc.w	r5, r1, #0
2ffed80e:	429c      	cmp	r4, r3
2ffed810:	f175 0300 	sbcs.w	r3, r5, #0
2ffed814:	d301      	bcc.n	2ffed81a <udelay+0x52>
2ffed816:	212f      	movs	r1, #47	@ 0x2f
2ffed818:	e7e3      	b.n	2ffed7e2 <udelay+0x1a>
2ffed81a:	683b      	ldr	r3, [r7, #0]
2ffed81c:	681b      	ldr	r3, [r3, #0]
2ffed81e:	4798      	blx	r3
2ffed820:	eba8 0300 	sub.w	r3, r8, r0
2ffed824:	42a3      	cmp	r3, r4
2ffed826:	eb76 0305 	sbcs.w	r3, r6, r5
2ffed82a:	d3f6      	bcc.n	2ffed81a <udelay+0x52>
2ffed82c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed830:	2fff949c 	.word	0x2fff949c
2ffed834:	2fff6930 	.word	0x2fff6930

2ffed838 <timer_init>:
2ffed838:	b508      	push	{r3, lr}
2ffed83a:	b128      	cbz	r0, 2ffed848 <timer_init+0x10>
2ffed83c:	6843      	ldr	r3, [r0, #4]
2ffed83e:	b11b      	cbz	r3, 2ffed848 <timer_init+0x10>
2ffed840:	6883      	ldr	r3, [r0, #8]
2ffed842:	b10b      	cbz	r3, 2ffed848 <timer_init+0x10>
2ffed844:	6803      	ldr	r3, [r0, #0]
2ffed846:	b91b      	cbnz	r3, 2ffed850 <timer_init+0x18>
2ffed848:	4803      	ldr	r0, [pc, #12]	@ (2ffed858 <timer_init+0x20>)
2ffed84a:	214c      	movs	r1, #76	@ 0x4c
2ffed84c:	f004 fe64 	bl	2fff2518 <__assert>
2ffed850:	4b02      	ldr	r3, [pc, #8]	@ (2ffed85c <timer_init+0x24>)
2ffed852:	6018      	str	r0, [r3, #0]
2ffed854:	bd08      	pop	{r3, pc}
2ffed856:	bf00      	nop
2ffed858:	2fff6930 	.word	0x2fff6930
2ffed85c:	2fff949c 	.word	0x2fff949c

2ffed860 <generic_delay_timer_init_args>:
2ffed860:	4b03      	ldr	r3, [pc, #12]	@ (2ffed870 <generic_delay_timer_init_args+0x10>)
2ffed862:	4a04      	ldr	r2, [pc, #16]	@ (2ffed874 <generic_delay_timer_init_args+0x14>)
2ffed864:	6058      	str	r0, [r3, #4]
2ffed866:	4618      	mov	r0, r3
2ffed868:	601a      	str	r2, [r3, #0]
2ffed86a:	6099      	str	r1, [r3, #8]
2ffed86c:	f7ff bfe4 	b.w	2ffed838 <timer_init>
2ffed870:	2fff94a0 	.word	0x2fff94a0
2ffed874:	2fff3179 	.word	0x2fff3179

2ffed878 <generic_delay_timer_init>:
2ffed878:	b510      	push	{r4, lr}
2ffed87a:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2ffed87e:	f413 2f70 	tst.w	r3, #983040	@ 0xf0000
2ffed882:	d103      	bne.n	2ffed88c <generic_delay_timer_init+0x14>
2ffed884:	480f      	ldr	r0, [pc, #60]	@ (2ffed8c4 <generic_delay_timer_init+0x4c>)
2ffed886:	212e      	movs	r1, #46	@ 0x2e
2ffed888:	f004 fe46 	bl	2fff2518 <__assert>
2ffed88c:	f005 fb45 	bl	2fff2f1a <plat_get_syscnt_freq2>
2ffed890:	230a      	movs	r3, #10
2ffed892:	4601      	mov	r1, r0
2ffed894:	fbb0 f2f3 	udiv	r2, r0, r3
2ffed898:	fb03 0212 	mls	r2, r3, r2, r0
2ffed89c:	480a      	ldr	r0, [pc, #40]	@ (2ffed8c8 <generic_delay_timer_init+0x50>)
2ffed89e:	b96a      	cbnz	r2, 2ffed8bc <generic_delay_timer_init+0x44>
2ffed8a0:	fbb0 f0f3 	udiv	r0, r0, r3
2ffed8a4:	fbb1 f1f3 	udiv	r1, r1, r3
2ffed8a8:	fbb0 f2f3 	udiv	r2, r0, r3
2ffed8ac:	fbb1 f4f3 	udiv	r4, r1, r3
2ffed8b0:	fb03 0212 	mls	r2, r3, r2, r0
2ffed8b4:	fb03 1414 	mls	r4, r3, r4, r1
2ffed8b8:	4322      	orrs	r2, r4
2ffed8ba:	d0f1      	beq.n	2ffed8a0 <generic_delay_timer_init+0x28>
2ffed8bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8c0:	f7ff bfce 	b.w	2ffed860 <generic_delay_timer_init_args>
2ffed8c4:	2fff6952 	.word	0x2fff6952
2ffed8c8:	000f4240 	.word	0x000f4240

2ffed8cc <fdt_osc_read_freq>:
2ffed8cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffed8ce:	4607      	mov	r7, r0
2ffed8d0:	4668      	mov	r0, sp
2ffed8d2:	460e      	mov	r6, r1
2ffed8d4:	f001 f846 	bl	2ffee964 <fdt_get_address>
2ffed8d8:	2800      	cmp	r0, #0
2ffed8da:	d033      	beq.n	2ffed944 <fdt_osc_read_freq+0x78>
2ffed8dc:	491c      	ldr	r1, [pc, #112]	@ (2ffed950 <fdt_osc_read_freq+0x84>)
2ffed8de:	9800      	ldr	r0, [sp, #0]
2ffed8e0:	f006 fb27 	bl	2fff3f32 <fdt_path_offset>
2ffed8e4:	1e01      	subs	r1, r0, #0
2ffed8e6:	db30      	blt.n	2ffed94a <fdt_osc_read_freq+0x7e>
2ffed8e8:	9800      	ldr	r0, [sp, #0]
2ffed8ea:	f006 f956 	bl	2fff3b9a <fdt_first_subnode>
2ffed8ee:	2800      	cmp	r0, #0
2ffed8f0:	4605      	mov	r5, r0
2ffed8f2:	da02      	bge.n	2ffed8fa <fdt_osc_read_freq+0x2e>
2ffed8f4:	2400      	movs	r4, #0
2ffed8f6:	6034      	str	r4, [r6, #0]
2ffed8f8:	e006      	b.n	2ffed908 <fdt_osc_read_freq+0x3c>
2ffed8fa:	9800      	ldr	r0, [sp, #0]
2ffed8fc:	aa01      	add	r2, sp, #4
2ffed8fe:	4629      	mov	r1, r5
2ffed900:	f006 f9c9 	bl	2fff3c96 <fdt_get_name>
2ffed904:	b918      	cbnz	r0, 2ffed90e <fdt_osc_read_freq+0x42>
2ffed906:	9c01      	ldr	r4, [sp, #4]
2ffed908:	4620      	mov	r0, r4
2ffed90a:	b003      	add	sp, #12
2ffed90c:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffed90e:	9a01      	ldr	r2, [sp, #4]
2ffed910:	4639      	mov	r1, r7
2ffed912:	f006 fd53 	bl	2fff43bc <strncmp>
2ffed916:	4604      	mov	r4, r0
2ffed918:	b978      	cbnz	r0, 2ffed93a <fdt_osc_read_freq+0x6e>
2ffed91a:	4628      	mov	r0, r5
2ffed91c:	f001 f83c 	bl	2ffee998 <fdt_get_status>
2ffed920:	b158      	cbz	r0, 2ffed93a <fdt_osc_read_freq+0x6e>
2ffed922:	4a0c      	ldr	r2, [pc, #48]	@ (2ffed954 <fdt_osc_read_freq+0x88>)
2ffed924:	ab01      	add	r3, sp, #4
2ffed926:	9800      	ldr	r0, [sp, #0]
2ffed928:	4629      	mov	r1, r5
2ffed92a:	f006 faa7 	bl	2fff3e7c <fdt_getprop>
2ffed92e:	2800      	cmp	r0, #0
2ffed930:	d0e9      	beq.n	2ffed906 <fdt_osc_read_freq+0x3a>
2ffed932:	6803      	ldr	r3, [r0, #0]
2ffed934:	ba1b      	rev	r3, r3
2ffed936:	6033      	str	r3, [r6, #0]
2ffed938:	e7e6      	b.n	2ffed908 <fdt_osc_read_freq+0x3c>
2ffed93a:	9800      	ldr	r0, [sp, #0]
2ffed93c:	4629      	mov	r1, r5
2ffed93e:	f006 f93f 	bl	2fff3bc0 <fdt_next_subnode>
2ffed942:	e7d4      	b.n	2ffed8ee <fdt_osc_read_freq+0x22>
2ffed944:	f06f 0401 	mvn.w	r4, #1
2ffed948:	e7de      	b.n	2ffed908 <fdt_osc_read_freq+0x3c>
2ffed94a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffed94e:	e7db      	b.n	2ffed908 <fdt_osc_read_freq+0x3c>
2ffed950:	2fff697c 	.word	0x2fff697c
2ffed954:	2fff6984 	.word	0x2fff6984

2ffed958 <fdt_clk_read_bool>:
2ffed958:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffed95a:	4605      	mov	r5, r0
2ffed95c:	4668      	mov	r0, sp
2ffed95e:	460e      	mov	r6, r1
2ffed960:	f001 f800 	bl	2ffee964 <fdt_get_address>
2ffed964:	b910      	cbnz	r0, 2ffed96c <fdt_clk_read_bool+0x14>
2ffed966:	2000      	movs	r0, #0
2ffed968:	b002      	add	sp, #8
2ffed96a:	bd70      	pop	{r4, r5, r6, pc}
2ffed96c:	4913      	ldr	r1, [pc, #76]	@ (2ffed9bc <fdt_clk_read_bool+0x64>)
2ffed96e:	9800      	ldr	r0, [sp, #0]
2ffed970:	f006 fadf 	bl	2fff3f32 <fdt_path_offset>
2ffed974:	1e01      	subs	r1, r0, #0
2ffed976:	dbf6      	blt.n	2ffed966 <fdt_clk_read_bool+0xe>
2ffed978:	9800      	ldr	r0, [sp, #0]
2ffed97a:	f006 f90e 	bl	2fff3b9a <fdt_first_subnode>
2ffed97e:	2800      	cmp	r0, #0
2ffed980:	4604      	mov	r4, r0
2ffed982:	dbf0      	blt.n	2ffed966 <fdt_clk_read_bool+0xe>
2ffed984:	9800      	ldr	r0, [sp, #0]
2ffed986:	aa01      	add	r2, sp, #4
2ffed988:	4621      	mov	r1, r4
2ffed98a:	f006 f984 	bl	2fff3c96 <fdt_get_name>
2ffed98e:	2800      	cmp	r0, #0
2ffed990:	d0e9      	beq.n	2ffed966 <fdt_clk_read_bool+0xe>
2ffed992:	9a01      	ldr	r2, [sp, #4]
2ffed994:	4629      	mov	r1, r5
2ffed996:	f006 fd11 	bl	2fff43bc <strncmp>
2ffed99a:	4603      	mov	r3, r0
2ffed99c:	b120      	cbz	r0, 2ffed9a8 <fdt_clk_read_bool+0x50>
2ffed99e:	9800      	ldr	r0, [sp, #0]
2ffed9a0:	4621      	mov	r1, r4
2ffed9a2:	f006 f90d 	bl	2fff3bc0 <fdt_next_subnode>
2ffed9a6:	e7ea      	b.n	2ffed97e <fdt_clk_read_bool+0x26>
2ffed9a8:	9800      	ldr	r0, [sp, #0]
2ffed9aa:	4632      	mov	r2, r6
2ffed9ac:	4621      	mov	r1, r4
2ffed9ae:	f006 fa65 	bl	2fff3e7c <fdt_getprop>
2ffed9b2:	2800      	cmp	r0, #0
2ffed9b4:	d0f3      	beq.n	2ffed99e <fdt_clk_read_bool+0x46>
2ffed9b6:	2001      	movs	r0, #1
2ffed9b8:	e7d6      	b.n	2ffed968 <fdt_clk_read_bool+0x10>
2ffed9ba:	bf00      	nop
2ffed9bc:	2fff697c 	.word	0x2fff697c

2ffed9c0 <fdt_clk_read_uint32_default>:
2ffed9c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffed9c2:	4606      	mov	r6, r0
2ffed9c4:	4668      	mov	r0, sp
2ffed9c6:	460f      	mov	r7, r1
2ffed9c8:	4615      	mov	r5, r2
2ffed9ca:	f000 ffcb 	bl	2ffee964 <fdt_get_address>
2ffed9ce:	b158      	cbz	r0, 2ffed9e8 <fdt_clk_read_uint32_default+0x28>
2ffed9d0:	4913      	ldr	r1, [pc, #76]	@ (2ffeda20 <fdt_clk_read_uint32_default+0x60>)
2ffed9d2:	9800      	ldr	r0, [sp, #0]
2ffed9d4:	f006 faad 	bl	2fff3f32 <fdt_path_offset>
2ffed9d8:	1e01      	subs	r1, r0, #0
2ffed9da:	db05      	blt.n	2ffed9e8 <fdt_clk_read_uint32_default+0x28>
2ffed9dc:	9800      	ldr	r0, [sp, #0]
2ffed9de:	f006 f8dc 	bl	2fff3b9a <fdt_first_subnode>
2ffed9e2:	2800      	cmp	r0, #0
2ffed9e4:	4604      	mov	r4, r0
2ffed9e6:	da02      	bge.n	2ffed9ee <fdt_clk_read_uint32_default+0x2e>
2ffed9e8:	4628      	mov	r0, r5
2ffed9ea:	b003      	add	sp, #12
2ffed9ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffed9ee:	9800      	ldr	r0, [sp, #0]
2ffed9f0:	aa01      	add	r2, sp, #4
2ffed9f2:	4621      	mov	r1, r4
2ffed9f4:	f006 f94f 	bl	2fff3c96 <fdt_get_name>
2ffed9f8:	2800      	cmp	r0, #0
2ffed9fa:	d0f5      	beq.n	2ffed9e8 <fdt_clk_read_uint32_default+0x28>
2ffed9fc:	9a01      	ldr	r2, [sp, #4]
2ffed9fe:	4631      	mov	r1, r6
2ffeda00:	f006 fcdc 	bl	2fff43bc <strncmp>
2ffeda04:	b120      	cbz	r0, 2ffeda10 <fdt_clk_read_uint32_default+0x50>
2ffeda06:	9800      	ldr	r0, [sp, #0]
2ffeda08:	4621      	mov	r1, r4
2ffeda0a:	f006 f8d9 	bl	2fff3bc0 <fdt_next_subnode>
2ffeda0e:	e7e8      	b.n	2ffed9e2 <fdt_clk_read_uint32_default+0x22>
2ffeda10:	9800      	ldr	r0, [sp, #0]
2ffeda12:	462b      	mov	r3, r5
2ffeda14:	463a      	mov	r2, r7
2ffeda16:	4621      	mov	r1, r4
2ffeda18:	f004 ffda 	bl	2fff29d0 <fdt_read_uint32_default>
2ffeda1c:	4605      	mov	r5, r0
2ffeda1e:	e7e3      	b.n	2ffed9e8 <fdt_clk_read_uint32_default+0x28>
2ffeda20:	2fff697c 	.word	0x2fff697c

2ffeda24 <fdt_get_clock_id>:
2ffeda24:	b513      	push	{r0, r1, r4, lr}
2ffeda26:	4604      	mov	r4, r0
2ffeda28:	a801      	add	r0, sp, #4
2ffeda2a:	f000 ff9b 	bl	2ffee964 <fdt_get_address>
2ffeda2e:	b150      	cbz	r0, 2ffeda46 <fdt_get_clock_id+0x22>
2ffeda30:	4a08      	ldr	r2, [pc, #32]	@ (2ffeda54 <fdt_get_clock_id+0x30>)
2ffeda32:	2300      	movs	r3, #0
2ffeda34:	9801      	ldr	r0, [sp, #4]
2ffeda36:	4621      	mov	r1, r4
2ffeda38:	f006 fa20 	bl	2fff3e7c <fdt_getprop>
2ffeda3c:	b130      	cbz	r0, 2ffeda4c <fdt_get_clock_id+0x28>
2ffeda3e:	6840      	ldr	r0, [r0, #4]
2ffeda40:	ba00      	rev	r0, r0
2ffeda42:	b002      	add	sp, #8
2ffeda44:	bd10      	pop	{r4, pc}
2ffeda46:	f06f 0001 	mvn.w	r0, #1
2ffeda4a:	e7fa      	b.n	2ffeda42 <fdt_get_clock_id+0x1e>
2ffeda4c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeda50:	e7f7      	b.n	2ffeda42 <fdt_get_clock_id+0x1e>
2ffeda52:	bf00      	nop
2ffeda54:	2fff697d 	.word	0x2fff697d

2ffeda58 <fdt_get_uart_clock_freq>:
2ffeda58:	b513      	push	{r0, r1, r4, lr}
2ffeda5a:	4604      	mov	r4, r0
2ffeda5c:	a801      	add	r0, sp, #4
2ffeda5e:	f000 ff81 	bl	2ffee964 <fdt_get_address>
2ffeda62:	b910      	cbnz	r0, 2ffeda6a <fdt_get_uart_clock_freq+0x12>
2ffeda64:	2000      	movs	r0, #0
2ffeda66:	b002      	add	sp, #8
2ffeda68:	bd10      	pop	{r4, pc}
2ffeda6a:	4806      	ldr	r0, [pc, #24]	@ (2ffeda84 <fdt_get_uart_clock_freq+0x2c>)
2ffeda6c:	4621      	mov	r1, r4
2ffeda6e:	f001 f849 	bl	2ffeeb04 <dt_match_instance_by_compatible>
2ffeda72:	2800      	cmp	r0, #0
2ffeda74:	dbf6      	blt.n	2ffeda64 <fdt_get_uart_clock_freq+0xc>
2ffeda76:	f7ff ffd5 	bl	2ffeda24 <fdt_get_clock_id>
2ffeda7a:	2800      	cmp	r0, #0
2ffeda7c:	dbf2      	blt.n	2ffeda64 <fdt_get_uart_clock_freq+0xc>
2ffeda7e:	f7ff fe67 	bl	2ffed750 <clk_get_rate>
2ffeda82:	e7f0      	b.n	2ffeda66 <fdt_get_uart_clock_freq+0xe>
2ffeda84:	2fff58db 	.word	0x2fff58db

2ffeda88 <stm32mp_stgen_config>:
2ffeda88:	b570      	push	{r4, r5, r6, lr}
2ffeda8a:	4604      	mov	r4, r0
2ffeda8c:	4d10      	ldr	r5, [pc, #64]	@ (2ffedad0 <stm32mp_stgen_config+0x48>)
2ffeda8e:	6a2a      	ldr	r2, [r5, #32]
2ffeda90:	4290      	cmp	r0, r2
2ffeda92:	d01b      	beq.n	2ffedacc <stm32mp_stgen_config+0x44>
2ffeda94:	682b      	ldr	r3, [r5, #0]
2ffeda96:	f023 0301 	bic.w	r3, r3, #1
2ffeda9a:	602b      	str	r3, [r5, #0]
2ffeda9c:	b152      	cbz	r2, 2ffedab4 <stm32mp_stgen_config+0x2c>
2ffeda9e:	68ee      	ldr	r6, [r5, #12]
2ffedaa0:	2300      	movs	r3, #0
2ffedaa2:	68a8      	ldr	r0, [r5, #8]
2ffedaa4:	fba0 0104 	umull	r0, r1, r0, r4
2ffedaa8:	fb04 1106 	mla	r1, r4, r6, r1
2ffedaac:	f004 ebd0 	blx	2fff2250 <__aeabi_uldivmod>
2ffedab0:	60a8      	str	r0, [r5, #8]
2ffedab2:	60e9      	str	r1, [r5, #12]
2ffedab4:	4b06      	ldr	r3, [pc, #24]	@ (2ffedad0 <stm32mp_stgen_config+0x48>)
2ffedab6:	621c      	str	r4, [r3, #32]
2ffedab8:	681a      	ldr	r2, [r3, #0]
2ffedaba:	f042 0201 	orr.w	r2, r2, #1
2ffedabe:	601a      	str	r2, [r3, #0]
2ffedac0:	ee0e 4f10 	mcr	15, 0, r4, cr14, cr0, {0}
2ffedac4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffedac8:	f7ff bed6 	b.w	2ffed878 <generic_delay_timer_init>
2ffedacc:	bd70      	pop	{r4, r5, r6, pc}
2ffedace:	bf00      	nop
2ffedad0:	5c008000 	.word	0x5c008000

2ffedad4 <stm32mp_stgen_restore_rate>:
2ffedad4:	4b02      	ldr	r3, [pc, #8]	@ (2ffedae0 <stm32mp_stgen_restore_rate+0xc>)
2ffedad6:	6a1b      	ldr	r3, [r3, #32]
2ffedad8:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2ffedadc:	4770      	bx	lr
2ffedade:	bf00      	nop
2ffedae0:	5c008000 	.word	0x5c008000

2ffedae4 <stm32mp_ddr_set_reg>:
2ffedae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffedae6:	eb03 1301 	add.w	r3, r3, r1, lsl #4
2ffedaea:	68d9      	ldr	r1, [r3, #12]
2ffedaec:	7a1d      	ldrb	r5, [r3, #8]
2ffedaee:	2901      	cmp	r1, #1
2ffedaf0:	6859      	ldr	r1, [r3, #4]
2ffedaf2:	f04f 0300 	mov.w	r3, #0
2ffedaf6:	bf0c      	ite	eq
2ffedaf8:	6940      	ldreq	r0, [r0, #20]
2ffedafa:	6900      	ldrne	r0, [r0, #16]
2ffedafc:	1c8e      	adds	r6, r1, #2
2ffedafe:	42ab      	cmp	r3, r5
2ffedb00:	d300      	bcc.n	2ffedb04 <stm32mp_ddr_set_reg+0x20>
2ffedb02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffedb04:	f816 4023 	ldrb.w	r4, [r6, r3, lsl #2]
2ffedb08:	f831 7023 	ldrh.w	r7, [r1, r3, lsl #2]
2ffedb0c:	2cff      	cmp	r4, #255	@ 0xff
2ffedb0e:	d106      	bne.n	2ffedb1e <stm32mp_ddr_set_reg+0x3a>
2ffedb10:	4805      	ldr	r0, [pc, #20]	@ (2ffedb28 <stm32mp_ddr_set_reg+0x44>)
2ffedb12:	f7fe fdd3 	bl	2ffec6bc <tf_log>
2ffedb16:	f7fe fe6d 	bl	2ffec7f4 <console_flush>
2ffedb1a:	f7fb ec60 	blx	2ffe93dc <do_panic>
2ffedb1e:	5914      	ldr	r4, [r2, r4]
2ffedb20:	3301      	adds	r3, #1
2ffedb22:	503c      	str	r4, [r7, r0]
2ffedb24:	e7eb      	b.n	2ffedafe <stm32mp_ddr_set_reg+0x1a>
2ffedb26:	bf00      	nop
2ffedb28:	2fff6994 	.word	0x2fff6994

2ffedb2c <stm32mp_ddr_sw_selfref_entry>:
2ffedb2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffedb2e:	4604      	mov	r4, r0
2ffedb30:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffedb32:	f043 0320 	orr.w	r3, r3, #32
2ffedb36:	6303      	str	r3, [r0, #48]	@ 0x30
2ffedb38:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffedb3c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffedb40:	4a0f      	ldr	r2, [pc, #60]	@ (2ffedb80 <stm32mp_ddr_sw_selfref_entry+0x54>)
2ffedb42:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffedb46:	2300      	movs	r3, #0
2ffedb48:	fba1 0100 	umull	r0, r1, r1, r0
2ffedb4c:	f004 eb80 	blx	2fff2250 <__aeabi_uldivmod>
2ffedb50:	1983      	adds	r3, r0, r6
2ffedb52:	eb41 0107 	adc.w	r1, r1, r7
2ffedb56:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffedb5a:	42b3      	cmp	r3, r6
2ffedb5c:	eb71 0207 	sbcs.w	r2, r1, r7
2ffedb60:	d202      	bcs.n	2ffedb68 <stm32mp_ddr_sw_selfref_entry+0x3c>
2ffedb62:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffedb66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffedb68:	6862      	ldr	r2, [r4, #4]
2ffedb6a:	f002 0007 	and.w	r0, r2, #7
2ffedb6e:	2803      	cmp	r0, #3
2ffedb70:	d1f1      	bne.n	2ffedb56 <stm32mp_ddr_sw_selfref_entry+0x2a>
2ffedb72:	f002 0230 	and.w	r2, r2, #48	@ 0x30
2ffedb76:	2a20      	cmp	r2, #32
2ffedb78:	d1ed      	bne.n	2ffedb56 <stm32mp_ddr_sw_selfref_entry+0x2a>
2ffedb7a:	2000      	movs	r0, #0
2ffedb7c:	e7f3      	b.n	2ffedb66 <stm32mp_ddr_sw_selfref_entry+0x3a>
2ffedb7e:	bf00      	nop
2ffedb80:	000f4240 	.word	0x000f4240

2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>:
2ffedb84:	f8d0 3490 	ldr.w	r3, [r0, #1168]	@ 0x490
2ffedb88:	b510      	push	{r4, lr}
2ffedb8a:	4604      	mov	r4, r0
2ffedb8c:	07da      	lsls	r2, r3, #31
2ffedb8e:	d509      	bpl.n	2ffedba4 <stm32mp_ddr_set_qd3_update_conditions+0x20>
2ffedb90:	f005 fb27 	bl	2fff31e2 <stm32mp_ddr_disable_axi_port>
2ffedb94:	b118      	cbz	r0, 2ffedb9e <stm32mp_ddr_set_qd3_update_conditions+0x1a>
2ffedb96:	f7fe fe2d 	bl	2ffec7f4 <console_flush>
2ffedb9a:	f7fb ec20 	blx	2ffe93dc <do_panic>
2ffedb9e:	4b0a      	ldr	r3, [pc, #40]	@ (2ffedbc8 <stm32mp_ddr_set_qd3_update_conditions+0x44>)
2ffedba0:	2201      	movs	r2, #1
2ffedba2:	701a      	strb	r2, [r3, #0]
2ffedba4:	f8d4 3304 	ldr.w	r3, [r4, #772]	@ 0x304
2ffedba8:	079b      	lsls	r3, r3, #30
2ffedbaa:	d405      	bmi.n	2ffedbb8 <stm32mp_ddr_set_qd3_update_conditions+0x34>
2ffedbac:	4620      	mov	r0, r4
2ffedbae:	f005 fb42 	bl	2fff3236 <stm32mp_ddr_disable_host_interface>
2ffedbb2:	4b06      	ldr	r3, [pc, #24]	@ (2ffedbcc <stm32mp_ddr_set_qd3_update_conditions+0x48>)
2ffedbb4:	2201      	movs	r2, #1
2ffedbb6:	701a      	strb	r2, [r3, #0]
2ffedbb8:	f8d4 3320 	ldr.w	r3, [r4, #800]	@ 0x320
2ffedbbc:	f023 0301 	bic.w	r3, r3, #1
2ffedbc0:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
2ffedbc4:	bd10      	pop	{r4, pc}
2ffedbc6:	bf00      	nop
2ffedbc8:	2fff9a9e 	.word	0x2fff9a9e
2ffedbcc:	2fff9a9d 	.word	0x2fff9a9d

2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>:
2ffedbd0:	b510      	push	{r4, lr}
2ffedbd2:	4604      	mov	r4, r0
2ffedbd4:	f005 fadb 	bl	2fff318e <stm32mp_ddr_wait_sw_done_ack>
2ffedbd8:	4a09      	ldr	r2, [pc, #36]	@ (2ffedc00 <stm32mp_ddr_unset_qd3_update_conditions+0x30>)
2ffedbda:	7813      	ldrb	r3, [r2, #0]
2ffedbdc:	b13b      	cbz	r3, 2ffedbee <stm32mp_ddr_unset_qd3_update_conditions+0x1e>
2ffedbde:	f8d4 3304 	ldr.w	r3, [r4, #772]	@ 0x304
2ffedbe2:	f023 0302 	bic.w	r3, r3, #2
2ffedbe6:	f8c4 3304 	str.w	r3, [r4, #772]	@ 0x304
2ffedbea:	2300      	movs	r3, #0
2ffedbec:	7013      	strb	r3, [r2, #0]
2ffedbee:	4a05      	ldr	r2, [pc, #20]	@ (2ffedc04 <stm32mp_ddr_unset_qd3_update_conditions+0x34>)
2ffedbf0:	7813      	ldrb	r3, [r2, #0]
2ffedbf2:	b123      	cbz	r3, 2ffedbfe <stm32mp_ddr_unset_qd3_update_conditions+0x2e>
2ffedbf4:	4620      	mov	r0, r4
2ffedbf6:	f005 fae7 	bl	2fff31c8 <stm32mp_ddr_enable_axi_port>
2ffedbfa:	2300      	movs	r3, #0
2ffedbfc:	7013      	strb	r3, [r2, #0]
2ffedbfe:	bd10      	pop	{r4, pc}
2ffedc00:	2fff9a9d 	.word	0x2fff9a9d
2ffedc04:	2fff9a9e 	.word	0x2fff9a9e

2ffedc08 <set_gpio.constprop.0>:
2ffedc08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedc0c:	460c      	mov	r4, r1
2ffedc0e:	9001      	str	r0, [sp, #4]
2ffedc10:	4616      	mov	r6, r2
2ffedc12:	461d      	mov	r5, r3
2ffedc14:	e9dd 980c 	ldrd	r9, r8, [sp, #48]	@ 0x30
2ffedc18:	e9dd 7a0e 	ldrd	r7, sl, [sp, #56]	@ 0x38
2ffedc1c:	f001 f940 	bl	2ffeeea0 <stm32_get_gpio_bank_base>
2ffedc20:	4683      	mov	fp, r0
2ffedc22:	9801      	ldr	r0, [sp, #4]
2ffedc24:	f001 f960 	bl	2ffeeee8 <stm32_get_gpio_bank_clock>
2ffedc28:	9001      	str	r0, [sp, #4]
2ffedc2a:	2c0f      	cmp	r4, #15
2ffedc2c:	d903      	bls.n	2ffedc36 <set_gpio.constprop.0+0x2e>
2ffedc2e:	4831      	ldr	r0, [pc, #196]	@ (2ffedcf4 <set_gpio.constprop.0+0xec>)
2ffedc30:	21ea      	movs	r1, #234	@ 0xea
2ffedc32:	f004 fc71 	bl	2fff2518 <__assert>
2ffedc36:	40a5      	lsls	r5, r4
2ffedc38:	f7ff fd66 	bl	2ffed708 <clk_enable>
2ffedc3c:	ea4f 0c44 	mov.w	ip, r4, lsl #1
2ffedc40:	2203      	movs	r2, #3
2ffedc42:	f8db 1000 	ldr.w	r1, [fp]
2ffedc46:	2001      	movs	r0, #1
2ffedc48:	fa02 f20c 	lsl.w	r2, r2, ip
2ffedc4c:	2c07      	cmp	r4, #7
2ffedc4e:	ea21 0102 	bic.w	r1, r1, r2
2ffedc52:	fa06 f60c 	lsl.w	r6, r6, ip
2ffedc56:	ea46 0601 	orr.w	r6, r6, r1
2ffedc5a:	f8cb 6000 	str.w	r6, [fp]
2ffedc5e:	f8db 6004 	ldr.w	r6, [fp, #4]
2ffedc62:	fa00 f004 	lsl.w	r0, r0, r4
2ffedc66:	ea26 0600 	bic.w	r6, r6, r0
2ffedc6a:	ea45 0506 	orr.w	r5, r5, r6
2ffedc6e:	f8cb 5004 	str.w	r5, [fp, #4]
2ffedc72:	ea6f 0100 	mvn.w	r1, r0
2ffedc76:	f8db 0008 	ldr.w	r0, [fp, #8]
2ffedc7a:	fa09 f90c 	lsl.w	r9, r9, ip
2ffedc7e:	ea20 0002 	bic.w	r0, r0, r2
2ffedc82:	ea49 0000 	orr.w	r0, r9, r0
2ffedc86:	f8cb 0008 	str.w	r0, [fp, #8]
2ffedc8a:	f8db 000c 	ldr.w	r0, [fp, #12]
2ffedc8e:	fa08 f80c 	lsl.w	r8, r8, ip
2ffedc92:	ea20 0202 	bic.w	r2, r0, r2
2ffedc96:	ea48 0202 	orr.w	r2, r8, r2
2ffedc9a:	f8cb 200c 	str.w	r2, [fp, #12]
2ffedc9e:	f04f 020f 	mov.w	r2, #15
2ffedca2:	d817      	bhi.n	2ffedcd4 <set_gpio.constprop.0+0xcc>
2ffedca4:	00a5      	lsls	r5, r4, #2
2ffedca6:	f8db 0020 	ldr.w	r0, [fp, #32]
2ffedcaa:	40aa      	lsls	r2, r5
2ffedcac:	ea20 0202 	bic.w	r2, r0, r2
2ffedcb0:	fa0a f505 	lsl.w	r5, sl, r5
2ffedcb4:	432a      	orrs	r2, r5
2ffedcb6:	f8cb 2020 	str.w	r2, [fp, #32]
2ffedcba:	f8db 2014 	ldr.w	r2, [fp, #20]
2ffedcbe:	40a7      	lsls	r7, r4
2ffedcc0:	9801      	ldr	r0, [sp, #4]
2ffedcc2:	4011      	ands	r1, r2
2ffedcc4:	430f      	orrs	r7, r1
2ffedcc6:	f8cb 7014 	str.w	r7, [fp, #20]
2ffedcca:	b003      	add	sp, #12
2ffedccc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedcd0:	f7ff bd2c 	b.w	2ffed72c <clk_disable>
2ffedcd4:	f8db 0024 	ldr.w	r0, [fp, #36]	@ 0x24
2ffedcd8:	f1a4 0508 	sub.w	r5, r4, #8
2ffedcdc:	00ad      	lsls	r5, r5, #2
2ffedcde:	40aa      	lsls	r2, r5
2ffedce0:	ea20 0202 	bic.w	r2, r0, r2
2ffedce4:	fa0a fa05 	lsl.w	sl, sl, r5
2ffedce8:	ea42 020a 	orr.w	r2, r2, sl
2ffedcec:	f8cb 2024 	str.w	r2, [fp, #36]	@ 0x24
2ffedcf0:	e7e3      	b.n	2ffedcba <set_gpio.constprop.0+0xb2>
2ffedcf2:	bf00      	nop
2ffedcf4:	2fff69af 	.word	0x2fff69af

2ffedcf8 <dt_set_pinctrl_config>:
2ffedcf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedcfc:	b093      	sub	sp, #76	@ 0x4c
2ffedcfe:	4604      	mov	r4, r0
2ffedd00:	a810      	add	r0, sp, #64	@ 0x40
2ffedd02:	f000 fe2f 	bl	2ffee964 <fdt_get_address>
2ffedd06:	b920      	cbnz	r0, 2ffedd12 <dt_set_pinctrl_config+0x1a>
2ffedd08:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffedd0c:	b013      	add	sp, #76	@ 0x4c
2ffedd0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffedd12:	4620      	mov	r0, r4
2ffedd14:	f000 fe40 	bl	2ffee998 <fdt_get_status>
2ffedd18:	2800      	cmp	r0, #0
2ffedd1a:	d0f5      	beq.n	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffedd1c:	4a7a      	ldr	r2, [pc, #488]	@ (2ffedf08 <dt_set_pinctrl_config+0x210>)
2ffedd1e:	ab0f      	add	r3, sp, #60	@ 0x3c
2ffedd20:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffedd22:	4621      	mov	r1, r4
2ffedd24:	f006 f8aa 	bl	2fff3e7c <fdt_getprop>
2ffedd28:	9006      	str	r0, [sp, #24]
2ffedd2a:	2800      	cmp	r0, #0
2ffedd2c:	d0ec      	beq.n	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffedd2e:	f04f 0a00 	mov.w	sl, #0
2ffedd32:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
2ffedd34:	ebba 0f93 	cmp.w	sl, r3, lsr #2
2ffedd38:	d301      	bcc.n	2ffedd3e <dt_set_pinctrl_config+0x46>
2ffedd3a:	2000      	movs	r0, #0
2ffedd3c:	e7e6      	b.n	2ffedd0c <dt_set_pinctrl_config+0x14>
2ffedd3e:	9b06      	ldr	r3, [sp, #24]
2ffedd40:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
2ffedd44:	f005 fac7 	bl	2fff32d6 <fdt32_to_cpu>
2ffedd48:	4601      	mov	r1, r0
2ffedd4a:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffedd4c:	f006 f953 	bl	2fff3ff6 <fdt_node_offset_by_phandle>
2ffedd50:	1e01      	subs	r1, r0, #0
2ffedd52:	dbd9      	blt.n	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffedd54:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffedd56:	f005 ff20 	bl	2fff3b9a <fdt_first_subnode>
2ffedd5a:	2800      	cmp	r0, #0
2ffedd5c:	4605      	mov	r5, r0
2ffedd5e:	da02      	bge.n	2ffedd66 <dt_set_pinctrl_config+0x6e>
2ffedd60:	f10a 0a01 	add.w	sl, sl, #1
2ffedd64:	e7e5      	b.n	2ffedd32 <dt_set_pinctrl_config+0x3a>
2ffedd66:	9e10      	ldr	r6, [sp, #64]	@ 0x40
2ffedd68:	ab11      	add	r3, sp, #68	@ 0x44
2ffedd6a:	4a68      	ldr	r2, [pc, #416]	@ (2ffedf0c <dt_set_pinctrl_config+0x214>)
2ffedd6c:	4629      	mov	r1, r5
2ffedd6e:	4630      	mov	r0, r6
2ffedd70:	f006 f884 	bl	2fff3e7c <fdt_getprop>
2ffedd74:	9007      	str	r0, [sp, #28]
2ffedd76:	2800      	cmp	r0, #0
2ffedd78:	d0c6      	beq.n	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffedd7a:	4629      	mov	r1, r5
2ffedd7c:	4630      	mov	r0, r6
2ffedd7e:	f006 f92a 	bl	2fff3fd6 <fdt_parent_offset>
2ffedd82:	4601      	mov	r1, r0
2ffedd84:	4630      	mov	r0, r6
2ffedd86:	f006 f926 	bl	2fff3fd6 <fdt_parent_offset>
2ffedd8a:	1e03      	subs	r3, r0, #0
2ffedd8c:	930a      	str	r3, [sp, #40]	@ 0x28
2ffedd8e:	dbbb      	blt.n	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffedd90:	4a5f      	ldr	r2, [pc, #380]	@ (2ffedf10 <dt_set_pinctrl_config+0x218>)
2ffedd92:	2300      	movs	r3, #0
2ffedd94:	4629      	mov	r1, r5
2ffedd96:	4630      	mov	r0, r6
2ffedd98:	f006 f870 	bl	2fff3e7c <fdt_getprop>
2ffedd9c:	b110      	cbz	r0, 2ffedda4 <dt_set_pinctrl_config+0xac>
2ffedd9e:	6800      	ldr	r0, [r0, #0]
2ffedda0:	f005 fa99 	bl	2fff32d6 <fdt32_to_cpu>
2ffedda4:	9008      	str	r0, [sp, #32]
2ffedda6:	2300      	movs	r3, #0
2ffedda8:	4a5a      	ldr	r2, [pc, #360]	@ (2ffedf14 <dt_set_pinctrl_config+0x21c>)
2ffeddaa:	4629      	mov	r1, r5
2ffeddac:	4630      	mov	r0, r6
2ffeddae:	f006 f865 	bl	2fff3e7c <fdt_getprop>
2ffeddb2:	4603      	mov	r3, r0
2ffeddb4:	b9a0      	cbnz	r0, 2ffedde0 <dt_set_pinctrl_config+0xe8>
2ffeddb6:	4a58      	ldr	r2, [pc, #352]	@ (2ffedf18 <dt_set_pinctrl_config+0x220>)
2ffeddb8:	4629      	mov	r1, r5
2ffeddba:	4630      	mov	r0, r6
2ffeddbc:	f006 f85e 	bl	2fff3e7c <fdt_getprop>
2ffeddc0:	3800      	subs	r0, #0
2ffeddc2:	bf18      	it	ne
2ffeddc4:	2001      	movne	r0, #1
2ffeddc6:	0043      	lsls	r3, r0, #1
2ffeddc8:	9309      	str	r3, [sp, #36]	@ 0x24
2ffeddca:	f04f 0b00 	mov.w	fp, #0
2ffeddce:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffeddd0:	ebbb 0f93 	cmp.w	fp, r3, lsr #2
2ffeddd4:	d306      	bcc.n	2ffedde4 <dt_set_pinctrl_config+0xec>
2ffeddd6:	9810      	ldr	r0, [sp, #64]	@ 0x40
2ffeddd8:	4629      	mov	r1, r5
2ffeddda:	f005 fef1 	bl	2fff3bc0 <fdt_next_subnode>
2ffeddde:	e7bc      	b.n	2ffedd5a <dt_set_pinctrl_config+0x62>
2ffedde0:	2301      	movs	r3, #1
2ffedde2:	e7f1      	b.n	2ffeddc8 <dt_set_pinctrl_config+0xd0>
2ffedde4:	9b07      	ldr	r3, [sp, #28]
2ffedde6:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
2ffeddea:	f005 fa74 	bl	2fff32d6 <fdt32_to_cpu>
2ffeddee:	f3c0 3304 	ubfx	r3, r0, #12, #5
2ffeddf2:	b2c4      	uxtb	r4, r0
2ffeddf4:	9305      	str	r3, [sp, #20]
2ffeddf6:	2c10      	cmp	r4, #16
2ffeddf8:	f3c0 2303 	ubfx	r3, r0, #8, #4
2ffeddfc:	930b      	str	r3, [sp, #44]	@ 0x2c
2ffeddfe:	d833      	bhi.n	2ffede68 <dt_set_pinctrl_config+0x170>
2ffede00:	2c00      	cmp	r4, #0
2ffede02:	d137      	bne.n	2ffede74 <dt_set_pinctrl_config+0x17c>
2ffede04:	46a0      	mov	r8, r4
2ffede06:	4a45      	ldr	r2, [pc, #276]	@ (2ffedf1c <dt_set_pinctrl_config+0x224>)
2ffede08:	2300      	movs	r3, #0
2ffede0a:	4629      	mov	r1, r5
2ffede0c:	4630      	mov	r0, r6
2ffede0e:	f006 f835 	bl	2fff3e7c <fdt_getprop>
2ffede12:	1e03      	subs	r3, r0, #0
2ffede14:	4629      	mov	r1, r5
2ffede16:	4a42      	ldr	r2, [pc, #264]	@ (2ffedf20 <dt_set_pinctrl_config+0x228>)
2ffede18:	bf18      	it	ne
2ffede1a:	2301      	movne	r3, #1
2ffede1c:	930d      	str	r3, [sp, #52]	@ 0x34
2ffede1e:	4630      	mov	r0, r6
2ffede20:	2300      	movs	r3, #0
2ffede22:	f006 f82b 	bl	2fff3e7c <fdt_getprop>
2ffede26:	4607      	mov	r7, r0
2ffede28:	b110      	cbz	r0, 2ffede30 <dt_set_pinctrl_config+0x138>
2ffede2a:	bb4c      	cbnz	r4, 2ffede80 <dt_set_pinctrl_config+0x188>
2ffede2c:	2401      	movs	r4, #1
2ffede2e:	4627      	mov	r7, r4
2ffede30:	4a3c      	ldr	r2, [pc, #240]	@ (2ffedf24 <dt_set_pinctrl_config+0x22c>)
2ffede32:	2300      	movs	r3, #0
2ffede34:	4629      	mov	r1, r5
2ffede36:	4630      	mov	r0, r6
2ffede38:	f006 f820 	bl	2fff3e7c <fdt_getprop>
2ffede3c:	b110      	cbz	r0, 2ffede44 <dt_set_pinctrl_config+0x14c>
2ffede3e:	b90c      	cbnz	r4, 2ffede44 <dt_set_pinctrl_config+0x14c>
2ffede40:	4627      	mov	r7, r4
2ffede42:	2401      	movs	r4, #1
2ffede44:	9805      	ldr	r0, [sp, #20]
2ffede46:	f001 f83f 	bl	2ffeeec8 <stm32_get_gpio_bank_offset>
2ffede4a:	900c      	str	r0, [sp, #48]	@ 0x30
2ffede4c:	4630      	mov	r0, r6
2ffede4e:	990a      	ldr	r1, [sp, #40]	@ 0x28
2ffede50:	f005 fea3 	bl	2fff3b9a <fdt_first_subnode>
2ffede54:	2800      	cmp	r0, #0
2ffede56:	4681      	mov	r9, r0
2ffede58:	da14      	bge.n	2ffede84 <dt_set_pinctrl_config+0x18c>
2ffede5a:	4833      	ldr	r0, [pc, #204]	@ (2ffedf28 <dt_set_pinctrl_config+0x230>)
2ffede5c:	f7fe fc2e 	bl	2ffec6bc <tf_log>
2ffede60:	f7fe fcc8 	bl	2ffec7f4 <console_flush>
2ffede64:	f7fb eaba 	blx	2ffe93dc <do_panic>
2ffede68:	2c11      	cmp	r4, #17
2ffede6a:	f04f 0800 	mov.w	r8, #0
2ffede6e:	d005      	beq.n	2ffede7c <dt_set_pinctrl_config+0x184>
2ffede70:	2401      	movs	r4, #1
2ffede72:	e7c8      	b.n	2ffede06 <dt_set_pinctrl_config+0x10e>
2ffede74:	f104 38ff 	add.w	r8, r4, #4294967295	@ 0xffffffff
2ffede78:	2402      	movs	r4, #2
2ffede7a:	e7c4      	b.n	2ffede06 <dt_set_pinctrl_config+0x10e>
2ffede7c:	2403      	movs	r4, #3
2ffede7e:	e7c2      	b.n	2ffede06 <dt_set_pinctrl_config+0x10e>
2ffede80:	2700      	movs	r7, #0
2ffede82:	e7d5      	b.n	2ffede30 <dt_set_pinctrl_config+0x138>
2ffede84:	4a29      	ldr	r2, [pc, #164]	@ (2ffedf2c <dt_set_pinctrl_config+0x234>)
2ffede86:	2300      	movs	r3, #0
2ffede88:	4649      	mov	r1, r9
2ffede8a:	4630      	mov	r0, r6
2ffede8c:	f005 fff6 	bl	2fff3e7c <fdt_getprop>
2ffede90:	b920      	cbnz	r0, 2ffede9c <dt_set_pinctrl_config+0x1a4>
2ffede92:	4649      	mov	r1, r9
2ffede94:	4630      	mov	r0, r6
2ffede96:	f005 fe93 	bl	2fff3bc0 <fdt_next_subnode>
2ffede9a:	e7db      	b.n	2ffede54 <dt_set_pinctrl_config+0x15c>
2ffede9c:	4a24      	ldr	r2, [pc, #144]	@ (2ffedf30 <dt_set_pinctrl_config+0x238>)
2ffede9e:	2300      	movs	r3, #0
2ffedea0:	4649      	mov	r1, r9
2ffedea2:	4630      	mov	r0, r6
2ffedea4:	f005 ffea 	bl	2fff3e7c <fdt_getprop>
2ffedea8:	2800      	cmp	r0, #0
2ffedeaa:	d0f2      	beq.n	2ffede92 <dt_set_pinctrl_config+0x19a>
2ffedeac:	6800      	ldr	r0, [r0, #0]
2ffedeae:	f005 fa12 	bl	2fff32d6 <fdt32_to_cpu>
2ffedeb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
2ffedeb4:	4283      	cmp	r3, r0
2ffedeb6:	d1ec      	bne.n	2ffede92 <dt_set_pinctrl_config+0x19a>
2ffedeb8:	4648      	mov	r0, r9
2ffedeba:	f000 fd6d 	bl	2ffee998 <fdt_get_status>
2ffedebe:	2800      	cmp	r0, #0
2ffedec0:	d0e7      	beq.n	2ffede92 <dt_set_pinctrl_config+0x19a>
2ffedec2:	f1b9 0f00 	cmp.w	r9, #0
2ffedec6:	d0c8      	beq.n	2ffede5a <dt_set_pinctrl_config+0x162>
2ffedec8:	4648      	mov	r0, r9
2ffedeca:	f7ff fdab 	bl	2ffeda24 <fdt_get_clock_id>
2ffedece:	f1b0 0900 	subs.w	r9, r0, #0
2ffeded2:	f6ff af19 	blt.w	2ffedd08 <dt_set_pinctrl_config+0x10>
2ffeded6:	9805      	ldr	r0, [sp, #20]
2ffeded8:	f001 f806 	bl	2ffeeee8 <stm32_get_gpio_bank_clock>
2ffededc:	4548      	cmp	r0, r9
2ffedede:	d003      	beq.n	2ffedee8 <dt_set_pinctrl_config+0x1f0>
2ffedee0:	4814      	ldr	r0, [pc, #80]	@ (2ffedf34 <dt_set_pinctrl_config+0x23c>)
2ffedee2:	21aa      	movs	r1, #170	@ 0xaa
2ffedee4:	f004 fb18 	bl	2fff2518 <__assert>
2ffedee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2ffedeea:	4622      	mov	r2, r4
2ffedeec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
2ffedeee:	f10b 0b01 	add.w	fp, fp, #1
2ffedef2:	9301      	str	r3, [sp, #4]
2ffedef4:	9b08      	ldr	r3, [sp, #32]
2ffedef6:	9805      	ldr	r0, [sp, #20]
2ffedef8:	9300      	str	r3, [sp, #0]
2ffedefa:	f8cd 800c 	str.w	r8, [sp, #12]
2ffedefe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
2ffedf00:	9702      	str	r7, [sp, #8]
2ffedf02:	f7ff fe81 	bl	2ffedc08 <set_gpio.constprop.0>
2ffedf06:	e762      	b.n	2ffeddce <dt_set_pinctrl_config+0xd6>
2ffedf08:	2fff69cc 	.word	0x2fff69cc
2ffedf0c:	2fff69d6 	.word	0x2fff69d6
2ffedf10:	2fff69dd 	.word	0x2fff69dd
2ffedf14:	2fff69e7 	.word	0x2fff69e7
2ffedf18:	2fff69f4 	.word	0x2fff69f4
2ffedf1c:	2fff6a03 	.word	0x2fff6a03
2ffedf20:	2fff6a14 	.word	0x2fff6a14
2ffedf24:	2fff6a20 	.word	0x2fff6a20
2ffedf28:	2fff6a3b 	.word	0x2fff6a3b
2ffedf2c:	2fff6a2b 	.word	0x2fff6a2b
2ffedf30:	2fff583e 	.word	0x2fff583e
2ffedf34:	2fff69af 	.word	0x2fff69af

2ffedf38 <nvmem_driver_register>:
2ffedf38:	4b06      	ldr	r3, [pc, #24]	@ (2ffedf54 <nvmem_driver_register+0x1c>)
2ffedf3a:	b510      	push	{r4, lr}
2ffedf3c:	4604      	mov	r4, r0
2ffedf3e:	6858      	ldr	r0, [r3, #4]
2ffedf40:	b128      	cbz	r0, 2ffedf4e <nvmem_driver_register+0x16>
2ffedf42:	4805      	ldr	r0, [pc, #20]	@ (2ffedf58 <nvmem_driver_register+0x20>)
2ffedf44:	f7fe fbba 	bl	2ffec6bc <tf_log>
2ffedf48:	f06f 000b 	mvn.w	r0, #11
2ffedf4c:	bd10      	pop	{r4, pc}
2ffedf4e:	e883 0016 	stmia.w	r3, {r1, r2, r4}
2ffedf52:	e7fb      	b.n	2ffedf4c <nvmem_driver_register+0x14>
2ffedf54:	2fff94ac 	.word	0x2fff94ac
2ffedf58:	2fff6a58 	.word	0x2fff6a58

2ffedf5c <nvmem_get_cell_by_index>:
2ffedf5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffedf5e:	4617      	mov	r7, r2
2ffedf60:	4a1c      	ldr	r2, [pc, #112]	@ (2ffedfd4 <nvmem_get_cell_by_index+0x78>)
2ffedf62:	461d      	mov	r5, r3
2ffedf64:	2400      	movs	r4, #0
2ffedf66:	ab01      	add	r3, sp, #4
2ffedf68:	9401      	str	r4, [sp, #4]
2ffedf6a:	4606      	mov	r6, r0
2ffedf6c:	f005 ff86 	bl	2fff3e7c <fdt_getprop>
2ffedf70:	b928      	cbnz	r0, 2ffedf7e <nvmem_get_cell_by_index+0x22>
2ffedf72:	4819      	ldr	r0, [pc, #100]	@ (2ffedfd8 <nvmem_get_cell_by_index+0x7c>)
2ffedf74:	f7fe fba2 	bl	2ffec6bc <tf_log>
2ffedf78:	9801      	ldr	r0, [sp, #4]
2ffedf7a:	b003      	add	sp, #12
2ffedf7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffedf7e:	f850 1027 	ldr.w	r1, [r0, r7, lsl #2]
2ffedf82:	4630      	mov	r0, r6
2ffedf84:	ba09      	rev	r1, r1
2ffedf86:	f006 f836 	bl	2fff3ff6 <fdt_node_offset_by_phandle>
2ffedf8a:	4a14      	ldr	r2, [pc, #80]	@ (2ffedfdc <nvmem_get_cell_by_index+0x80>)
2ffedf8c:	4607      	mov	r7, r0
2ffedf8e:	4601      	mov	r1, r0
2ffedf90:	ab01      	add	r3, sp, #4
2ffedf92:	4630      	mov	r0, r6
2ffedf94:	f005 ff72 	bl	2fff3e7c <fdt_getprop>
2ffedf98:	b1c0      	cbz	r0, 2ffedfcc <nvmem_get_cell_by_index+0x70>
2ffedf9a:	9b01      	ldr	r3, [sp, #4]
2ffedf9c:	2b08      	cmp	r3, #8
2ffedf9e:	d115      	bne.n	2ffedfcc <nvmem_get_cell_by_index+0x70>
2ffedfa0:	6803      	ldr	r3, [r0, #0]
2ffedfa2:	4639      	mov	r1, r7
2ffedfa4:	ba1b      	rev	r3, r3
2ffedfa6:	602b      	str	r3, [r5, #0]
2ffedfa8:	6843      	ldr	r3, [r0, #4]
2ffedfaa:	4630      	mov	r0, r6
2ffedfac:	ba1b      	rev	r3, r3
2ffedfae:	606b      	str	r3, [r5, #4]
2ffedfb0:	f006 f811 	bl	2fff3fd6 <fdt_parent_offset>
2ffedfb4:	4b0a      	ldr	r3, [pc, #40]	@ (2ffedfe0 <nvmem_get_cell_by_index+0x84>)
2ffedfb6:	4602      	mov	r2, r0
2ffedfb8:	6899      	ldr	r1, [r3, #8]
2ffedfba:	4281      	cmp	r1, r0
2ffedfbc:	d102      	bne.n	2ffedfc4 <nvmem_get_cell_by_index+0x68>
2ffedfbe:	60ab      	str	r3, [r5, #8]
2ffedfc0:	4620      	mov	r0, r4
2ffedfc2:	e7da      	b.n	2ffedf7a <nvmem_get_cell_by_index+0x1e>
2ffedfc4:	4907      	ldr	r1, [pc, #28]	@ (2ffedfe4 <nvmem_get_cell_by_index+0x88>)
2ffedfc6:	4808      	ldr	r0, [pc, #32]	@ (2ffedfe8 <nvmem_get_cell_by_index+0x8c>)
2ffedfc8:	f7fe fb78 	bl	2ffec6bc <tf_log>
2ffedfcc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffedfd0:	e7d3      	b.n	2ffedf7a <nvmem_get_cell_by_index+0x1e>
2ffedfd2:	bf00      	nop
2ffedfd4:	2fff6aa2 	.word	0x2fff6aa2
2ffedfd8:	2fff6aae 	.word	0x2fff6aae
2ffedfdc:	2fff583e 	.word	0x2fff583e
2ffedfe0:	2fff94ac 	.word	0x2fff94ac
2ffedfe4:	2fff6aee 	.word	0x2fff6aee
2ffedfe8:	2fff6ac5 	.word	0x2fff6ac5

2ffedfec <nvmem_get_cell_by_name>:
2ffedfec:	b570      	push	{r4, r5, r6, lr}
2ffedfee:	461e      	mov	r6, r3
2ffedff0:	4613      	mov	r3, r2
2ffedff2:	4604      	mov	r4, r0
2ffedff4:	4a07      	ldr	r2, [pc, #28]	@ (2ffee014 <nvmem_get_cell_by_name+0x28>)
2ffedff6:	460d      	mov	r5, r1
2ffedff8:	f006 f841 	bl	2fff407e <fdt_stringlist_search>
2ffedffc:	1e02      	subs	r2, r0, #0
2ffedffe:	db06      	blt.n	2ffee00e <nvmem_get_cell_by_name+0x22>
2ffee000:	4633      	mov	r3, r6
2ffee002:	4629      	mov	r1, r5
2ffee004:	4620      	mov	r0, r4
2ffee006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffee00a:	f7ff bfa7 	b.w	2ffedf5c <nvmem_get_cell_by_index>
2ffee00e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee012:	bd70      	pop	{r4, r5, r6, pc}
2ffee014:	2fff6add 	.word	0x2fff6add

2ffee018 <stm32_tamp_nvram_write_bkp>:
2ffee018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee01c:	460d      	mov	r5, r1
2ffee01e:	ea4f 0891 	mov.w	r8, r1, lsr #2
2ffee022:	4606      	mov	r6, r0
2ffee024:	4641      	mov	r1, r8
2ffee026:	4617      	mov	r7, r2
2ffee028:	f005 f96d 	bl	2fff3306 <stm32_tamp_nvram_reg_get_zone>
2ffee02c:	1e04      	subs	r4, r0, #0
2ffee02e:	db1f      	blt.n	2ffee070 <stm32_tamp_nvram_write_bkp+0x58>
2ffee030:	2041      	movs	r0, #65	@ 0x41
2ffee032:	f7ff fb9f 	bl	2ffed774 <clk_is_enabled>
2ffee036:	6a33      	ldr	r3, [r6, #32]
2ffee038:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
2ffee03c:	2b03      	cmp	r3, #3
2ffee03e:	d804      	bhi.n	2ffee04a <stm32_tamp_nvram_write_bkp+0x32>
2ffee040:	b12b      	cbz	r3, 2ffee04e <stm32_tamp_nvram_write_bkp+0x36>
2ffee042:	b138      	cbz	r0, 2ffee054 <stm32_tamp_nvram_write_bkp+0x3c>
2ffee044:	6833      	ldr	r3, [r6, #0]
2ffee046:	50ef      	str	r7, [r5, r3]
2ffee048:	e001      	b.n	2ffee04e <stm32_tamp_nvram_write_bkp+0x36>
2ffee04a:	2b04      	cmp	r3, #4
2ffee04c:	d10b      	bne.n	2ffee066 <stm32_tamp_nvram_write_bkp+0x4e>
2ffee04e:	2000      	movs	r0, #0
2ffee050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee054:	2041      	movs	r0, #65	@ 0x41
2ffee056:	f7ff fb57 	bl	2ffed708 <clk_enable>
2ffee05a:	6833      	ldr	r3, [r6, #0]
2ffee05c:	2041      	movs	r0, #65	@ 0x41
2ffee05e:	50ef      	str	r7, [r5, r3]
2ffee060:	f7ff fb64 	bl	2ffed72c <clk_disable>
2ffee064:	e7f3      	b.n	2ffee04e <stm32_tamp_nvram_write_bkp+0x36>
2ffee066:	4804      	ldr	r0, [pc, #16]	@ (2ffee078 <stm32_tamp_nvram_write_bkp+0x60>)
2ffee068:	4642      	mov	r2, r8
2ffee06a:	4621      	mov	r1, r4
2ffee06c:	f7fe fb26 	bl	2ffec6bc <tf_log>
2ffee070:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee074:	e7ec      	b.n	2ffee050 <stm32_tamp_nvram_write_bkp+0x38>
2ffee076:	bf00      	nop
2ffee078:	2fff6b00 	.word	0x2fff6b00

2ffee07c <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>:
2ffee07c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee080:	460e      	mov	r6, r1
2ffee082:	ea4f 0891 	mov.w	r8, r1, lsr #2
2ffee086:	4607      	mov	r7, r0
2ffee088:	4641      	mov	r1, r8
2ffee08a:	4615      	mov	r5, r2
2ffee08c:	f005 f93b 	bl	2fff3306 <stm32_tamp_nvram_reg_get_zone>
2ffee090:	1e04      	subs	r4, r0, #0
2ffee092:	db14      	blt.n	2ffee0be <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x42>
2ffee094:	2041      	movs	r0, #65	@ 0x41
2ffee096:	f7ff fb6d 	bl	2ffed774 <clk_is_enabled>
2ffee09a:	6a3b      	ldr	r3, [r7, #32]
2ffee09c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
2ffee0a0:	2b03      	cmp	r3, #3
2ffee0a2:	d908      	bls.n	2ffee0b6 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x3a>
2ffee0a4:	2b04      	cmp	r3, #4
2ffee0a6:	d017      	beq.n	2ffee0d8 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x5c>
2ffee0a8:	480c      	ldr	r0, [pc, #48]	@ (2ffee0dc <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x60>)
2ffee0aa:	4642      	mov	r2, r8
2ffee0ac:	4621      	mov	r1, r4
2ffee0ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffee0b2:	f7fe bb03 	b.w	2ffec6bc <tf_log>
2ffee0b6:	b120      	cbz	r0, 2ffee0c2 <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x46>
2ffee0b8:	683b      	ldr	r3, [r7, #0]
2ffee0ba:	58f3      	ldr	r3, [r6, r3]
2ffee0bc:	602b      	str	r3, [r5, #0]
2ffee0be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee0c2:	2041      	movs	r0, #65	@ 0x41
2ffee0c4:	f7ff fb20 	bl	2ffed708 <clk_enable>
2ffee0c8:	683b      	ldr	r3, [r7, #0]
2ffee0ca:	2041      	movs	r0, #65	@ 0x41
2ffee0cc:	58f3      	ldr	r3, [r6, r3]
2ffee0ce:	602b      	str	r3, [r5, #0]
2ffee0d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffee0d4:	f7ff bb2a 	b.w	2ffed72c <clk_disable>
2ffee0d8:	2300      	movs	r3, #0
2ffee0da:	e7ef      	b.n	2ffee0bc <stm32_tamp_nvram_read_bkp.constprop.0.isra.0+0x40>
2ffee0dc:	2fff6b00 	.word	0x2fff6b00

2ffee0e0 <stm32_tamp_nvram_read_cell>:
2ffee0e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee0e4:	460e      	mov	r6, r1
2ffee0e6:	6881      	ldr	r1, [r0, #8]
2ffee0e8:	f8d1 8004 	ldr.w	r8, [r1, #4]
2ffee0ec:	6841      	ldr	r1, [r0, #4]
2ffee0ee:	4291      	cmp	r1, r2
2ffee0f0:	d904      	bls.n	2ffee0fc <stm32_tamp_nvram_read_cell+0x1c>
2ffee0f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee0f6:	b003      	add	sp, #12
2ffee0f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee0fc:	b103      	cbz	r3, 2ffee100 <stm32_tamp_nvram_read_cell+0x20>
2ffee0fe:	6019      	str	r1, [r3, #0]
2ffee100:	6807      	ldr	r7, [r0, #0]
2ffee102:	f04f 0900 	mov.w	r9, #0
2ffee106:	6845      	ldr	r5, [r0, #4]
2ffee108:	463c      	mov	r4, r7
2ffee10a:	443d      	add	r5, r7
2ffee10c:	42a5      	cmp	r5, r4
2ffee10e:	d801      	bhi.n	2ffee114 <stm32_tamp_nvram_read_cell+0x34>
2ffee110:	2000      	movs	r0, #0
2ffee112:	e7f0      	b.n	2ffee0f6 <stm32_tamp_nvram_read_cell+0x16>
2ffee114:	f024 0103 	bic.w	r1, r4, #3
2ffee118:	f104 0a04 	add.w	sl, r4, #4
2ffee11c:	4555      	cmp	r5, sl
2ffee11e:	d31c      	bcc.n	2ffee15a <stm32_tamp_nvram_read_cell+0x7a>
2ffee120:	1e63      	subs	r3, r4, #1
2ffee122:	f043 0303 	orr.w	r3, r3, #3
2ffee126:	3301      	adds	r3, #1
2ffee128:	428b      	cmp	r3, r1
2ffee12a:	d116      	bne.n	2ffee15a <stm32_tamp_nvram_read_cell+0x7a>
2ffee12c:	eba4 0b07 	sub.w	fp, r4, r7
2ffee130:	aa01      	add	r2, sp, #4
2ffee132:	44b3      	add	fp, r6
2ffee134:	4621      	mov	r1, r4
2ffee136:	f8cd 9004 	str.w	r9, [sp, #4]
2ffee13a:	4640      	mov	r0, r8
2ffee13c:	f7ff ff9e 	bl	2ffee07c <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffee140:	2204      	movs	r2, #4
2ffee142:	4658      	mov	r0, fp
2ffee144:	eb0d 0102 	add.w	r1, sp, r2
2ffee148:	f006 f803 	bl	2fff4152 <memcpy>
2ffee14c:	4583      	cmp	fp, r0
2ffee14e:	d014      	beq.n	2ffee17a <stm32_tamp_nvram_read_cell+0x9a>
2ffee150:	08a1      	lsrs	r1, r4, #2
2ffee152:	480b      	ldr	r0, [pc, #44]	@ (2ffee180 <stm32_tamp_nvram_read_cell+0xa0>)
2ffee154:	f7fe fab2 	bl	2ffec6bc <tf_log>
2ffee158:	e7cb      	b.n	2ffee0f2 <stm32_tamp_nvram_read_cell+0x12>
2ffee15a:	eba4 0a01 	sub.w	sl, r4, r1
2ffee15e:	aa01      	add	r2, sp, #4
2ffee160:	f8cd 9004 	str.w	r9, [sp, #4]
2ffee164:	4640      	mov	r0, r8
2ffee166:	ea4f 0aca 	mov.w	sl, sl, lsl #3
2ffee16a:	f7ff ff87 	bl	2ffee07c <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffee16e:	9b01      	ldr	r3, [sp, #4]
2ffee170:	fa23 f30a 	lsr.w	r3, r3, sl
2ffee174:	f104 0a01 	add.w	sl, r4, #1
2ffee178:	5533      	strb	r3, [r6, r4]
2ffee17a:	4654      	mov	r4, sl
2ffee17c:	e7c6      	b.n	2ffee10c <stm32_tamp_nvram_read_cell+0x2c>
2ffee17e:	bf00      	nop
2ffee180:	2fff6b27 	.word	0x2fff6b27

2ffee184 <stm32_tamp_nvram_write_cell>:
2ffee184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee188:	460e      	mov	r6, r1
2ffee18a:	6845      	ldr	r5, [r0, #4]
2ffee18c:	b085      	sub	sp, #20
2ffee18e:	6883      	ldr	r3, [r0, #8]
2ffee190:	4295      	cmp	r5, r2
2ffee192:	f8d3 9004 	ldr.w	r9, [r3, #4]
2ffee196:	d327      	bcc.n	2ffee1e8 <stm32_tamp_nvram_write_cell+0x64>
2ffee198:	f8d0 8000 	ldr.w	r8, [r0]
2ffee19c:	f10d 0a0c 	add.w	sl, sp, #12
2ffee1a0:	4445      	add	r5, r8
2ffee1a2:	4644      	mov	r4, r8
2ffee1a4:	42a5      	cmp	r5, r4
2ffee1a6:	d801      	bhi.n	2ffee1ac <stm32_tamp_nvram_write_cell+0x28>
2ffee1a8:	2400      	movs	r4, #0
2ffee1aa:	e02b      	b.n	2ffee204 <stm32_tamp_nvram_write_cell+0x80>
2ffee1ac:	eba4 0708 	sub.w	r7, r4, r8
2ffee1b0:	f104 0b04 	add.w	fp, r4, #4
2ffee1b4:	455d      	cmp	r5, fp
2ffee1b6:	f024 0103 	bic.w	r1, r4, #3
2ffee1ba:	eb06 0007 	add.w	r0, r6, r7
2ffee1be:	d325      	bcc.n	2ffee20c <stm32_tamp_nvram_write_cell+0x88>
2ffee1c0:	1e62      	subs	r2, r4, #1
2ffee1c2:	f042 0203 	orr.w	r2, r2, #3
2ffee1c6:	3201      	adds	r2, #1
2ffee1c8:	428a      	cmp	r2, r1
2ffee1ca:	d11f      	bne.n	2ffee20c <stm32_tamp_nvram_write_cell+0x88>
2ffee1cc:	2300      	movs	r3, #0
2ffee1ce:	4601      	mov	r1, r0
2ffee1d0:	9303      	str	r3, [sp, #12]
2ffee1d2:	2204      	movs	r2, #4
2ffee1d4:	08a7      	lsrs	r7, r4, #2
2ffee1d6:	4650      	mov	r0, sl
2ffee1d8:	f005 ffbb 	bl	2fff4152 <memcpy>
2ffee1dc:	4582      	cmp	sl, r0
2ffee1de:	d006      	beq.n	2ffee1ee <stm32_tamp_nvram_write_cell+0x6a>
2ffee1e0:	4818      	ldr	r0, [pc, #96]	@ (2ffee244 <stm32_tamp_nvram_write_cell+0xc0>)
2ffee1e2:	4639      	mov	r1, r7
2ffee1e4:	f7fe fa6a 	bl	2ffec6bc <tf_log>
2ffee1e8:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffee1ec:	e00a      	b.n	2ffee204 <stm32_tamp_nvram_write_cell+0x80>
2ffee1ee:	9a03      	ldr	r2, [sp, #12]
2ffee1f0:	4621      	mov	r1, r4
2ffee1f2:	4648      	mov	r0, r9
2ffee1f4:	f7ff ff10 	bl	2ffee018 <stm32_tamp_nvram_write_bkp>
2ffee1f8:	4604      	mov	r4, r0
2ffee1fa:	b308      	cbz	r0, 2ffee240 <stm32_tamp_nvram_write_cell+0xbc>
2ffee1fc:	4811      	ldr	r0, [pc, #68]	@ (2ffee244 <stm32_tamp_nvram_write_cell+0xc0>)
2ffee1fe:	4639      	mov	r1, r7
2ffee200:	f7fe fa5c 	bl	2ffec6bc <tf_log>
2ffee204:	4620      	mov	r0, r4
2ffee206:	b005      	add	sp, #20
2ffee208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee20c:	f816 b007 	ldrb.w	fp, [r6, r7]
2ffee210:	2300      	movs	r3, #0
2ffee212:	1a67      	subs	r7, r4, r1
2ffee214:	4652      	mov	r2, sl
2ffee216:	9303      	str	r3, [sp, #12]
2ffee218:	4648      	mov	r0, r9
2ffee21a:	00ff      	lsls	r7, r7, #3
2ffee21c:	9101      	str	r1, [sp, #4]
2ffee21e:	f7ff ff2d 	bl	2ffee07c <stm32_tamp_nvram_read_bkp.constprop.0.isra.0>
2ffee222:	9a03      	ldr	r2, [sp, #12]
2ffee224:	23ff      	movs	r3, #255	@ 0xff
2ffee226:	9901      	ldr	r1, [sp, #4]
2ffee228:	fa03 f007 	lsl.w	r0, r3, r7
2ffee22c:	ea22 0200 	bic.w	r2, r2, r0
2ffee230:	4648      	mov	r0, r9
2ffee232:	fa0b f307 	lsl.w	r3, fp, r7
2ffee236:	f104 0b01 	add.w	fp, r4, #1
2ffee23a:	431a      	orrs	r2, r3
2ffee23c:	f7ff feec 	bl	2ffee018 <stm32_tamp_nvram_write_bkp>
2ffee240:	465c      	mov	r4, fp
2ffee242:	e7af      	b.n	2ffee1a4 <stm32_tamp_nvram_write_cell+0x20>
2ffee244:	2fff6b27 	.word	0x2fff6b27

2ffee248 <stm32_tamp_nvram_update_rights>:
2ffee248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee24c:	2041      	movs	r0, #65	@ 0x41
2ffee24e:	b089      	sub	sp, #36	@ 0x24
2ffee250:	f7ff fa90 	bl	2ffed774 <clk_is_enabled>
2ffee254:	f080 0001 	eor.w	r0, r0, #1
2ffee258:	f010 03ff 	ands.w	r3, r0, #255	@ 0xff
2ffee25c:	9303      	str	r3, [sp, #12]
2ffee25e:	d002      	beq.n	2ffee266 <stm32_tamp_nvram_update_rights+0x1e>
2ffee260:	2041      	movs	r0, #65	@ 0x41
2ffee262:	f7ff fa51 	bl	2ffed708 <clk_enable>
2ffee266:	4d24      	ldr	r5, [pc, #144]	@ (2ffee2f8 <stm32_tamp_nvram_update_rights+0xb0>)
2ffee268:	f04f 0b0c 	mov.w	fp, #12
2ffee26c:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 2ffee2fc <stm32_tamp_nvram_update_rights+0xb4>
2ffee270:	ae05      	add	r6, sp, #20
2ffee272:	f8d5 a024 	ldr.w	sl, [r5, #36]	@ 0x24
2ffee276:	2400      	movs	r4, #0
2ffee278:	9404      	str	r4, [sp, #16]
2ffee27a:	46c1      	mov	r9, r8
2ffee27c:	f8da 7000 	ldr.w	r7, [sl]
2ffee280:	3f01      	subs	r7, #1
2ffee282:	42bc      	cmp	r4, r7
2ffee284:	d30c      	bcc.n	2ffee2a0 <stm32_tamp_nvram_update_rights+0x58>
2ffee286:	69ab      	ldr	r3, [r5, #24]
2ffee288:	481b      	ldr	r0, [pc, #108]	@ (2ffee2f8 <stm32_tamp_nvram_update_rights+0xb0>)
2ffee28a:	f8c5 901c 	str.w	r9, [r5, #28]
2ffee28e:	3b01      	subs	r3, #1
2ffee290:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
2ffee294:	f002 fe38 	bl	2fff0f08 <stm32_tamp_nvram_get_access_rights>
2ffee298:	6228      	str	r0, [r5, #32]
2ffee29a:	bb20      	cbnz	r0, 2ffee2e6 <stm32_tamp_nvram_update_rights+0x9e>
2ffee29c:	4818      	ldr	r0, [pc, #96]	@ (2ffee300 <stm32_tamp_nvram_update_rights+0xb8>)
2ffee29e:	e015      	b.n	2ffee2cc <stm32_tamp_nvram_update_rights+0x84>
2ffee2a0:	f8da 3004 	ldr.w	r3, [sl, #4]
2ffee2a4:	fb0b 3304 	mla	r3, fp, r4, r3
2ffee2a8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
2ffee2ac:	ab04      	add	r3, sp, #16
2ffee2ae:	e886 0007 	stmia.w	r6, {r0, r1, r2}
2ffee2b2:	9300      	str	r3, [sp, #0]
2ffee2b4:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
2ffee2b8:	6868      	ldr	r0, [r5, #4]
2ffee2ba:	f005 f839 	bl	2fff3330 <stm32_tamp_nvram_reg_field_read>
2ffee2be:	b160      	cbz	r0, 2ffee2da <stm32_tamp_nvram_update_rights+0x92>
2ffee2c0:	4810      	ldr	r0, [pc, #64]	@ (2ffee304 <stm32_tamp_nvram_update_rights+0xbc>)
2ffee2c2:	f7fe f9fb 	bl	2ffec6bc <tf_log>
2ffee2c6:	4810      	ldr	r0, [pc, #64]	@ (2ffee308 <stm32_tamp_nvram_update_rights+0xc0>)
2ffee2c8:	2300      	movs	r3, #0
2ffee2ca:	61eb      	str	r3, [r5, #28]
2ffee2cc:	f7fe f9f6 	bl	2ffec6bc <tf_log>
2ffee2d0:	f06f 000b 	mvn.w	r0, #11
2ffee2d4:	b009      	add	sp, #36	@ 0x24
2ffee2d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee2da:	9b04      	ldr	r3, [sp, #16]
2ffee2dc:	3401      	adds	r4, #1
2ffee2de:	3b01      	subs	r3, #1
2ffee2e0:	f848 3b04 	str.w	r3, [r8], #4
2ffee2e4:	e7cd      	b.n	2ffee282 <stm32_tamp_nvram_update_rights+0x3a>
2ffee2e6:	9b03      	ldr	r3, [sp, #12]
2ffee2e8:	b90b      	cbnz	r3, 2ffee2ee <stm32_tamp_nvram_update_rights+0xa6>
2ffee2ea:	2000      	movs	r0, #0
2ffee2ec:	e7f2      	b.n	2ffee2d4 <stm32_tamp_nvram_update_rights+0x8c>
2ffee2ee:	2041      	movs	r0, #65	@ 0x41
2ffee2f0:	f7ff fa1c 	bl	2ffed72c <clk_disable>
2ffee2f4:	e7f9      	b.n	2ffee2ea <stm32_tamp_nvram_update_rights+0xa2>
2ffee2f6:	bf00      	nop
2ffee2f8:	2fff94c4 	.word	0x2fff94c4
2ffee2fc:	2fff94b8 	.word	0x2fff94b8
2ffee300:	2fff6b97 	.word	0x2fff6b97
2ffee304:	2fff6b40 	.word	0x2fff6b40
2ffee308:	2fff6b67 	.word	0x2fff6b67

2ffee30c <stm32_tamp_nvram_init>:
2ffee30c:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffee30e:	2600      	movs	r6, #0
2ffee310:	4668      	mov	r0, sp
2ffee312:	e9cd 6600 	strd	r6, r6, [sp]
2ffee316:	f000 fb25 	bl	2ffee964 <fdt_get_address>
2ffee31a:	b918      	cbnz	r0, 2ffee324 <stm32_tamp_nvram_init+0x18>
2ffee31c:	f7fe fa6a 	bl	2ffec7f4 <console_flush>
2ffee320:	f7fb e85c 	blx	2ffe93dc <do_panic>
2ffee324:	4a25      	ldr	r2, [pc, #148]	@ (2ffee3bc <stm32_tamp_nvram_init+0xb0>)
2ffee326:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffee32a:	9800      	ldr	r0, [sp, #0]
2ffee32c:	f005 feda 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffee330:	1e05      	subs	r5, r0, #0
2ffee332:	da03      	bge.n	2ffee33c <stm32_tamp_nvram_init+0x30>
2ffee334:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee338:	b002      	add	sp, #8
2ffee33a:	bd70      	pop	{r4, r5, r6, pc}
2ffee33c:	4c20      	ldr	r4, [pc, #128]	@ (2ffee3c0 <stm32_tamp_nvram_init+0xb4>)
2ffee33e:	f002 fddf 	bl	2fff0f00 <stm32_tamp_nvram_get_cdata>
2ffee342:	4a20      	ldr	r2, [pc, #128]	@ (2ffee3c4 <stm32_tamp_nvram_init+0xb8>)
2ffee344:	ab01      	add	r3, sp, #4
2ffee346:	6260      	str	r0, [r4, #36]	@ 0x24
2ffee348:	4629      	mov	r1, r5
2ffee34a:	9800      	ldr	r0, [sp, #0]
2ffee34c:	f005 fd96 	bl	2fff3e7c <fdt_getprop>
2ffee350:	4603      	mov	r3, r0
2ffee352:	2800      	cmp	r0, #0
2ffee354:	d0ee      	beq.n	2ffee334 <stm32_tamp_nvram_init+0x28>
2ffee356:	9a01      	ldr	r2, [sp, #4]
2ffee358:	2a08      	cmp	r2, #8
2ffee35a:	d1eb      	bne.n	2ffee334 <stm32_tamp_nvram_init+0x28>
2ffee35c:	6800      	ldr	r0, [r0, #0]
2ffee35e:	4629      	mov	r1, r5
2ffee360:	f004 ffcf 	bl	2fff3302 <fdt32_to_cpu>
2ffee364:	6020      	str	r0, [r4, #0]
2ffee366:	6858      	ldr	r0, [r3, #4]
2ffee368:	f004 ffcb 	bl	2fff3302 <fdt32_to_cpu>
2ffee36c:	60a0      	str	r0, [r4, #8]
2ffee36e:	9800      	ldr	r0, [sp, #0]
2ffee370:	f005 fe31 	bl	2fff3fd6 <fdt_parent_offset>
2ffee374:	1e01      	subs	r1, r0, #0
2ffee376:	dbdd      	blt.n	2ffee334 <stm32_tamp_nvram_init+0x28>
2ffee378:	4a12      	ldr	r2, [pc, #72]	@ (2ffee3c4 <stm32_tamp_nvram_init+0xb8>)
2ffee37a:	ab01      	add	r3, sp, #4
2ffee37c:	9800      	ldr	r0, [sp, #0]
2ffee37e:	f005 fd7d 	bl	2fff3e7c <fdt_getprop>
2ffee382:	4603      	mov	r3, r0
2ffee384:	2800      	cmp	r0, #0
2ffee386:	d0d5      	beq.n	2ffee334 <stm32_tamp_nvram_init+0x28>
2ffee388:	9a01      	ldr	r2, [sp, #4]
2ffee38a:	2a08      	cmp	r2, #8
2ffee38c:	d1d2      	bne.n	2ffee334 <stm32_tamp_nvram_init+0x28>
2ffee38e:	6800      	ldr	r0, [r0, #0]
2ffee390:	f004 ffb7 	bl	2fff3302 <fdt32_to_cpu>
2ffee394:	6060      	str	r0, [r4, #4]
2ffee396:	6858      	ldr	r0, [r3, #4]
2ffee398:	f004 ffb3 	bl	2fff3302 <fdt32_to_cpu>
2ffee39c:	68a3      	ldr	r3, [r4, #8]
2ffee39e:	60e0      	str	r0, [r4, #12]
2ffee3a0:	089b      	lsrs	r3, r3, #2
2ffee3a2:	61a3      	str	r3, [r4, #24]
2ffee3a4:	f7ff ff50 	bl	2ffee248 <stm32_tamp_nvram_update_rights>
2ffee3a8:	9b00      	ldr	r3, [sp, #0]
2ffee3aa:	4622      	mov	r2, r4
2ffee3ac:	4906      	ldr	r1, [pc, #24]	@ (2ffee3c8 <stm32_tamp_nvram_init+0xbc>)
2ffee3ae:	4628      	mov	r0, r5
2ffee3b0:	6165      	str	r5, [r4, #20]
2ffee3b2:	6123      	str	r3, [r4, #16]
2ffee3b4:	f7ff fdc0 	bl	2ffedf38 <nvmem_driver_register>
2ffee3b8:	4630      	mov	r0, r6
2ffee3ba:	e7bd      	b.n	2ffee338 <stm32_tamp_nvram_init+0x2c>
2ffee3bc:	2fff6bc6 	.word	0x2fff6bc6
2ffee3c0:	2fff94c4 	.word	0x2fff94c4
2ffee3c4:	2fff583e 	.word	0x2fff583e
2ffee3c8:	2fff45e0 	.word	0x2fff45e0

2ffee3cc <regulator_get_by_name>:
2ffee3cc:	b570      	push	{r4, r5, r6, lr}
2ffee3ce:	4605      	mov	r5, r0
2ffee3d0:	b9b0      	cbnz	r0, 2ffee400 <regulator_get_by_name+0x34>
2ffee3d2:	480d      	ldr	r0, [pc, #52]	@ (2ffee408 <regulator_get_by_name+0x3c>)
2ffee3d4:	2146      	movs	r1, #70	@ 0x46
2ffee3d6:	f004 f89f 	bl	2fff2518 <__assert>
2ffee3da:	6818      	ldr	r0, [r3, #0]
2ffee3dc:	4629      	mov	r1, r5
2ffee3de:	f005 ffc5 	bl	2fff436c <strcmp>
2ffee3e2:	b158      	cbz	r0, 2ffee3fc <regulator_get_by_name+0x30>
2ffee3e4:	3414      	adds	r4, #20
2ffee3e6:	3e01      	subs	r6, #1
2ffee3e8:	d002      	beq.n	2ffee3f0 <regulator_get_by_name+0x24>
2ffee3ea:	6823      	ldr	r3, [r4, #0]
2ffee3ec:	2b00      	cmp	r3, #0
2ffee3ee:	d1f4      	bne.n	2ffee3da <regulator_get_by_name+0xe>
2ffee3f0:	4906      	ldr	r1, [pc, #24]	@ (2ffee40c <regulator_get_by_name+0x40>)
2ffee3f2:	462a      	mov	r2, r5
2ffee3f4:	4806      	ldr	r0, [pc, #24]	@ (2ffee410 <regulator_get_by_name+0x44>)
2ffee3f6:	2400      	movs	r4, #0
2ffee3f8:	f7fe f960 	bl	2ffec6bc <tf_log>
2ffee3fc:	4620      	mov	r0, r4
2ffee3fe:	bd70      	pop	{r4, r5, r6, pc}
2ffee400:	4c04      	ldr	r4, [pc, #16]	@ (2ffee414 <regulator_get_by_name+0x48>)
2ffee402:	2614      	movs	r6, #20
2ffee404:	e7ef      	b.n	2ffee3e6 <regulator_get_by_name+0x1a>
2ffee406:	bf00      	nop
2ffee408:	2fff6bde 	.word	0x2fff6bde
2ffee40c:	2fff6e74 	.word	0x2fff6e74
2ffee410:	2fff6c04 	.word	0x2fff6c04
2ffee414:	2fff94f0 	.word	0x2fff94f0

2ffee418 <regulator_get_by_supply_name>:
2ffee418:	b530      	push	{r4, r5, lr}
2ffee41a:	b091      	sub	sp, #68	@ 0x44
2ffee41c:	4613      	mov	r3, r2
2ffee41e:	4604      	mov	r4, r0
2ffee420:	4a15      	ldr	r2, [pc, #84]	@ (2ffee478 <regulator_get_by_supply_name+0x60>)
2ffee422:	460d      	mov	r5, r1
2ffee424:	4668      	mov	r0, sp
2ffee426:	213f      	movs	r1, #63	@ 0x3f
2ffee428:	f005 ff88 	bl	2fff433c <snprintf>
2ffee42c:	283e      	cmp	r0, #62	@ 0x3e
2ffee42e:	d903      	bls.n	2ffee438 <regulator_get_by_supply_name+0x20>
2ffee430:	4812      	ldr	r0, [pc, #72]	@ (2ffee47c <regulator_get_by_supply_name+0x64>)
2ffee432:	215b      	movs	r1, #91	@ 0x5b
2ffee434:	f004 f870 	bl	2fff2518 <__assert>
2ffee438:	2300      	movs	r3, #0
2ffee43a:	466a      	mov	r2, sp
2ffee43c:	4629      	mov	r1, r5
2ffee43e:	4620      	mov	r0, r4
2ffee440:	f005 fd1c 	bl	2fff3e7c <fdt_getprop>
2ffee444:	b120      	cbz	r0, 2ffee450 <regulator_get_by_supply_name+0x38>
2ffee446:	6800      	ldr	r0, [r0, #0]
2ffee448:	f004 ff8a 	bl	2fff3360 <fdt32_to_cpu>
2ffee44c:	1e02      	subs	r2, r0, #0
2ffee44e:	da10      	bge.n	2ffee472 <regulator_get_by_supply_name+0x5a>
2ffee450:	2000      	movs	r0, #0
2ffee452:	b011      	add	sp, #68	@ 0x44
2ffee454:	bd30      	pop	{r4, r5, pc}
2ffee456:	6841      	ldr	r1, [r0, #4]
2ffee458:	428a      	cmp	r2, r1
2ffee45a:	d0fa      	beq.n	2ffee452 <regulator_get_by_supply_name+0x3a>
2ffee45c:	3014      	adds	r0, #20
2ffee45e:	3b01      	subs	r3, #1
2ffee460:	d002      	beq.n	2ffee468 <regulator_get_by_supply_name+0x50>
2ffee462:	6801      	ldr	r1, [r0, #0]
2ffee464:	2900      	cmp	r1, #0
2ffee466:	d1f6      	bne.n	2ffee456 <regulator_get_by_supply_name+0x3e>
2ffee468:	4905      	ldr	r1, [pc, #20]	@ (2ffee480 <regulator_get_by_supply_name+0x68>)
2ffee46a:	4806      	ldr	r0, [pc, #24]	@ (2ffee484 <regulator_get_by_supply_name+0x6c>)
2ffee46c:	f7fe f926 	bl	2ffec6bc <tf_log>
2ffee470:	e7ee      	b.n	2ffee450 <regulator_get_by_supply_name+0x38>
2ffee472:	4805      	ldr	r0, [pc, #20]	@ (2ffee488 <regulator_get_by_supply_name+0x70>)
2ffee474:	2314      	movs	r3, #20
2ffee476:	e7f2      	b.n	2ffee45e <regulator_get_by_supply_name+0x46>
2ffee478:	2fff6c17 	.word	0x2fff6c17
2ffee47c:	2fff6bde 	.word	0x2fff6bde
2ffee480:	2fff6e5b 	.word	0x2fff6e5b
2ffee484:	2fff6c21 	.word	0x2fff6c21
2ffee488:	2fff94f0 	.word	0x2fff94f0

2ffee48c <regulator_enable>:
2ffee48c:	b538      	push	{r3, r4, r5, lr}
2ffee48e:	4604      	mov	r4, r0
2ffee490:	b918      	cbnz	r0, 2ffee49a <regulator_enable+0xe>
2ffee492:	4809      	ldr	r0, [pc, #36]	@ (2ffee4b8 <regulator_enable+0x2c>)
2ffee494:	218c      	movs	r1, #140	@ 0x8c
2ffee496:	f004 f83f 	bl	2fff2518 <__assert>
2ffee49a:	6800      	ldr	r0, [r0, #0]
2ffee49c:	6843      	ldr	r3, [r0, #4]
2ffee49e:	681b      	ldr	r3, [r3, #0]
2ffee4a0:	b13b      	cbz	r3, 2ffee4b2 <regulator_enable+0x26>
2ffee4a2:	2101      	movs	r1, #1
2ffee4a4:	4798      	blx	r3
2ffee4a6:	4605      	mov	r5, r0
2ffee4a8:	6920      	ldr	r0, [r4, #16]
2ffee4aa:	f7ff f98d 	bl	2ffed7c8 <udelay>
2ffee4ae:	4628      	mov	r0, r5
2ffee4b0:	bd38      	pop	{r3, r4, r5, pc}
2ffee4b2:	f06f 0512 	mvn.w	r5, #18
2ffee4b6:	e7f7      	b.n	2ffee4a8 <regulator_enable+0x1c>
2ffee4b8:	2fff6bde 	.word	0x2fff6bde

2ffee4bc <regulator_get_voltage>:
2ffee4bc:	b538      	push	{r3, r4, r5, lr}
2ffee4be:	4604      	mov	r4, r0
2ffee4c0:	b920      	cbnz	r0, 2ffee4cc <regulator_get_voltage+0x10>
2ffee4c2:	480f      	ldr	r0, [pc, #60]	@ (2ffee500 <regulator_get_voltage+0x44>)
2ffee4c4:	f44f 7184 	mov.w	r1, #264	@ 0x108
2ffee4c8:	f004 f826 	bl	2fff2518 <__assert>
2ffee4cc:	6800      	ldr	r0, [r0, #0]
2ffee4ce:	6843      	ldr	r3, [r0, #4]
2ffee4d0:	68db      	ldr	r3, [r3, #12]
2ffee4d2:	b913      	cbnz	r3, 2ffee4da <regulator_get_voltage+0x1e>
2ffee4d4:	8925      	ldrh	r5, [r4, #8]
2ffee4d6:	4628      	mov	r0, r5
2ffee4d8:	bd38      	pop	{r3, r4, r5, pc}
2ffee4da:	f004 ff48 	bl	2fff336e <lock_driver.isra.0>
2ffee4de:	6820      	ldr	r0, [r4, #0]
2ffee4e0:	6843      	ldr	r3, [r0, #4]
2ffee4e2:	68db      	ldr	r3, [r3, #12]
2ffee4e4:	4798      	blx	r3
2ffee4e6:	1e05      	subs	r5, r0, #0
2ffee4e8:	da05      	bge.n	2ffee4f6 <regulator_get_voltage+0x3a>
2ffee4ea:	6823      	ldr	r3, [r4, #0]
2ffee4ec:	462a      	mov	r2, r5
2ffee4ee:	4805      	ldr	r0, [pc, #20]	@ (2ffee504 <regulator_get_voltage+0x48>)
2ffee4f0:	6819      	ldr	r1, [r3, #0]
2ffee4f2:	f7fe f8e3 	bl	2ffec6bc <tf_log>
2ffee4f6:	6820      	ldr	r0, [r4, #0]
2ffee4f8:	f004 ff34 	bl	2fff3364 <unlock_driver.isra.0>
2ffee4fc:	e7eb      	b.n	2ffee4d6 <regulator_get_voltage+0x1a>
2ffee4fe:	bf00      	nop
2ffee500:	2fff6bde 	.word	0x2fff6bde
2ffee504:	2fff6c3c 	.word	0x2fff6c3c

2ffee508 <regulator_set_voltage>:
2ffee508:	b538      	push	{r3, r4, r5, lr}
2ffee50a:	460c      	mov	r4, r1
2ffee50c:	4605      	mov	r5, r0
2ffee50e:	b918      	cbnz	r0, 2ffee518 <regulator_set_voltage+0x10>
2ffee510:	4816      	ldr	r0, [pc, #88]	@ (2ffee56c <regulator_set_voltage+0x64>)
2ffee512:	21d6      	movs	r1, #214	@ 0xd6
2ffee514:	f004 f800 	bl	2fff2518 <__assert>
2ffee518:	8903      	ldrh	r3, [r0, #8]
2ffee51a:	428b      	cmp	r3, r1
2ffee51c:	d81e      	bhi.n	2ffee55c <regulator_set_voltage+0x54>
2ffee51e:	8943      	ldrh	r3, [r0, #10]
2ffee520:	428b      	cmp	r3, r1
2ffee522:	d31b      	bcc.n	2ffee55c <regulator_set_voltage+0x54>
2ffee524:	f7ff ffca 	bl	2ffee4bc <regulator_get_voltage>
2ffee528:	42a0      	cmp	r0, r4
2ffee52a:	d01a      	beq.n	2ffee562 <regulator_set_voltage+0x5a>
2ffee52c:	6828      	ldr	r0, [r5, #0]
2ffee52e:	6843      	ldr	r3, [r0, #4]
2ffee530:	689b      	ldr	r3, [r3, #8]
2ffee532:	b1c3      	cbz	r3, 2ffee566 <regulator_set_voltage+0x5e>
2ffee534:	f004 ff1b 	bl	2fff336e <lock_driver.isra.0>
2ffee538:	6828      	ldr	r0, [r5, #0]
2ffee53a:	4621      	mov	r1, r4
2ffee53c:	6843      	ldr	r3, [r0, #4]
2ffee53e:	689b      	ldr	r3, [r3, #8]
2ffee540:	4798      	blx	r3
2ffee542:	1e04      	subs	r4, r0, #0
2ffee544:	da05      	bge.n	2ffee552 <regulator_set_voltage+0x4a>
2ffee546:	682b      	ldr	r3, [r5, #0]
2ffee548:	4622      	mov	r2, r4
2ffee54a:	4809      	ldr	r0, [pc, #36]	@ (2ffee570 <regulator_set_voltage+0x68>)
2ffee54c:	6819      	ldr	r1, [r3, #0]
2ffee54e:	f7fe f8b5 	bl	2ffec6bc <tf_log>
2ffee552:	6828      	ldr	r0, [r5, #0]
2ffee554:	f004 ff06 	bl	2fff3364 <unlock_driver.isra.0>
2ffee558:	4620      	mov	r0, r4
2ffee55a:	bd38      	pop	{r3, r4, r5, pc}
2ffee55c:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffee560:	e7fa      	b.n	2ffee558 <regulator_set_voltage+0x50>
2ffee562:	2400      	movs	r4, #0
2ffee564:	e7f8      	b.n	2ffee558 <regulator_set_voltage+0x50>
2ffee566:	f06f 0412 	mvn.w	r4, #18
2ffee56a:	e7f5      	b.n	2ffee558 <regulator_set_voltage+0x50>
2ffee56c:	2fff6bde 	.word	0x2fff6bde
2ffee570:	2fff6c62 	.word	0x2fff6c62

2ffee574 <regulator_list_voltages>:
2ffee574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee576:	460e      	mov	r6, r1
2ffee578:	4617      	mov	r7, r2
2ffee57a:	4604      	mov	r4, r0
2ffee57c:	b920      	cbnz	r0, 2ffee588 <regulator_list_voltages+0x14>
2ffee57e:	f44f 7195 	mov.w	r1, #298	@ 0x12a
2ffee582:	482f      	ldr	r0, [pc, #188]	@ (2ffee640 <regulator_list_voltages+0xcc>)
2ffee584:	f003 ffc8 	bl	2fff2518 <__assert>
2ffee588:	b911      	cbnz	r1, 2ffee590 <regulator_list_voltages+0x1c>
2ffee58a:	f240 112b 	movw	r1, #299	@ 0x12b
2ffee58e:	e7f8      	b.n	2ffee582 <regulator_list_voltages+0xe>
2ffee590:	b912      	cbnz	r2, 2ffee598 <regulator_list_voltages+0x24>
2ffee592:	f44f 7196 	mov.w	r1, #300	@ 0x12c
2ffee596:	e7f4      	b.n	2ffee582 <regulator_list_voltages+0xe>
2ffee598:	6800      	ldr	r0, [r0, #0]
2ffee59a:	6843      	ldr	r3, [r0, #4]
2ffee59c:	691b      	ldr	r3, [r3, #16]
2ffee59e:	2b00      	cmp	r3, #0
2ffee5a0:	d03f      	beq.n	2ffee622 <regulator_list_voltages+0xae>
2ffee5a2:	f004 fee4 	bl	2fff336e <lock_driver.isra.0>
2ffee5a6:	6820      	ldr	r0, [r4, #0]
2ffee5a8:	463a      	mov	r2, r7
2ffee5aa:	4631      	mov	r1, r6
2ffee5ac:	6843      	ldr	r3, [r0, #4]
2ffee5ae:	691b      	ldr	r3, [r3, #16]
2ffee5b0:	4798      	blx	r3
2ffee5b2:	4605      	mov	r5, r0
2ffee5b4:	6820      	ldr	r0, [r4, #0]
2ffee5b6:	f004 fed5 	bl	2fff3364 <unlock_driver.isra.0>
2ffee5ba:	2d00      	cmp	r5, #0
2ffee5bc:	da07      	bge.n	2ffee5ce <regulator_list_voltages+0x5a>
2ffee5be:	6823      	ldr	r3, [r4, #0]
2ffee5c0:	462a      	mov	r2, r5
2ffee5c2:	4820      	ldr	r0, [pc, #128]	@ (2ffee644 <regulator_list_voltages+0xd0>)
2ffee5c4:	6819      	ldr	r1, [r3, #0]
2ffee5c6:	f7fe f879 	bl	2ffec6bc <tf_log>
2ffee5ca:	4628      	mov	r0, r5
2ffee5cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee5ce:	683b      	ldr	r3, [r7, #0]
2ffee5d0:	6830      	ldr	r0, [r6, #0]
2ffee5d2:	8962      	ldrh	r2, [r4, #10]
2ffee5d4:	eb00 0143 	add.w	r1, r0, r3, lsl #1
2ffee5d8:	2b01      	cmp	r3, #1
2ffee5da:	f831 1c02 	ldrh.w	r1, [r1, #-2]
2ffee5de:	d923      	bls.n	2ffee628 <regulator_list_voltages+0xb4>
2ffee5e0:	428a      	cmp	r2, r1
2ffee5e2:	d306      	bcc.n	2ffee5f2 <regulator_list_voltages+0x7e>
2ffee5e4:	d00a      	beq.n	2ffee5fc <regulator_list_voltages+0x88>
2ffee5e6:	6823      	ldr	r3, [r4, #0]
2ffee5e8:	4817      	ldr	r0, [pc, #92]	@ (2ffee648 <regulator_list_voltages+0xd4>)
2ffee5ea:	6819      	ldr	r1, [r3, #0]
2ffee5ec:	f7fe f866 	bl	2ffec6bc <tf_log>
2ffee5f0:	e023      	b.n	2ffee63a <regulator_list_voltages+0xc6>
2ffee5f2:	3b01      	subs	r3, #1
2ffee5f4:	e7ee      	b.n	2ffee5d4 <regulator_list_voltages+0x60>
2ffee5f6:	3b01      	subs	r3, #1
2ffee5f8:	3202      	adds	r2, #2
2ffee5fa:	6032      	str	r2, [r6, #0]
2ffee5fc:	2b01      	cmp	r3, #1
2ffee5fe:	d004      	beq.n	2ffee60a <regulator_list_voltages+0x96>
2ffee600:	6832      	ldr	r2, [r6, #0]
2ffee602:	8921      	ldrh	r1, [r4, #8]
2ffee604:	8810      	ldrh	r0, [r2, #0]
2ffee606:	4288      	cmp	r0, r1
2ffee608:	d3f5      	bcc.n	2ffee5f6 <regulator_list_voltages+0x82>
2ffee60a:	6831      	ldr	r1, [r6, #0]
2ffee60c:	8922      	ldrh	r2, [r4, #8]
2ffee60e:	8809      	ldrh	r1, [r1, #0]
2ffee610:	4291      	cmp	r1, r2
2ffee612:	d003      	beq.n	2ffee61c <regulator_list_voltages+0xa8>
2ffee614:	6823      	ldr	r3, [r4, #0]
2ffee616:	480d      	ldr	r0, [pc, #52]	@ (2ffee64c <regulator_list_voltages+0xd8>)
2ffee618:	6819      	ldr	r1, [r3, #0]
2ffee61a:	e7e7      	b.n	2ffee5ec <regulator_list_voltages+0x78>
2ffee61c:	603b      	str	r3, [r7, #0]
2ffee61e:	2500      	movs	r5, #0
2ffee620:	e7d3      	b.n	2ffee5ca <regulator_list_voltages+0x56>
2ffee622:	f06f 0512 	mvn.w	r5, #18
2ffee626:	e7d0      	b.n	2ffee5ca <regulator_list_voltages+0x56>
2ffee628:	428a      	cmp	r2, r1
2ffee62a:	d1dc      	bne.n	2ffee5e6 <regulator_list_voltages+0x72>
2ffee62c:	2b00      	cmp	r3, #0
2ffee62e:	d1ec      	bne.n	2ffee60a <regulator_list_voltages+0x96>
2ffee630:	6823      	ldr	r3, [r4, #0]
2ffee632:	4807      	ldr	r0, [pc, #28]	@ (2ffee650 <regulator_list_voltages+0xdc>)
2ffee634:	6819      	ldr	r1, [r3, #0]
2ffee636:	f7fe f841 	bl	2ffec6bc <tf_log>
2ffee63a:	f06f 0515 	mvn.w	r5, #21
2ffee63e:	e7c4      	b.n	2ffee5ca <regulator_list_voltages+0x56>
2ffee640:	2fff6bde 	.word	0x2fff6bde
2ffee644:	2fff6c85 	.word	0x2fff6c85
2ffee648:	2fff6cae 	.word	0x2fff6cae
2ffee64c:	2fff6cf9 	.word	0x2fff6cf9
2ffee650:	2fff6cd2 	.word	0x2fff6cd2

2ffee654 <regulator_get_range>:
2ffee654:	b508      	push	{r3, lr}
2ffee656:	b920      	cbnz	r0, 2ffee662 <regulator_get_range+0xe>
2ffee658:	4805      	ldr	r0, [pc, #20]	@ (2ffee670 <regulator_get_range+0x1c>)
2ffee65a:	f240 1173 	movw	r1, #371	@ 0x173
2ffee65e:	f003 ff5b 	bl	2fff2518 <__assert>
2ffee662:	b109      	cbz	r1, 2ffee668 <regulator_get_range+0x14>
2ffee664:	8903      	ldrh	r3, [r0, #8]
2ffee666:	800b      	strh	r3, [r1, #0]
2ffee668:	b10a      	cbz	r2, 2ffee66e <regulator_get_range+0x1a>
2ffee66a:	8943      	ldrh	r3, [r0, #10]
2ffee66c:	8013      	strh	r3, [r2, #0]
2ffee66e:	bd08      	pop	{r3, pc}
2ffee670:	2fff6bde 	.word	0x2fff6bde

2ffee674 <regulator_set_flag>:
2ffee674:	b570      	push	{r4, r5, r6, lr}
2ffee676:	4605      	mov	r5, r0
2ffee678:	4608      	mov	r0, r1
2ffee67a:	460c      	mov	r4, r1
2ffee67c:	f004 fb34 	bl	2fff2ce8 <__popcountsi2>
2ffee680:	2801      	cmp	r0, #1
2ffee682:	d128      	bne.n	2ffee6d6 <regulator_set_flag+0x62>
2ffee684:	1e63      	subs	r3, r4, #1
2ffee686:	2b01      	cmp	r3, #1
2ffee688:	d804      	bhi.n	2ffee694 <regulator_set_flag+0x20>
2ffee68a:	89ab      	ldrh	r3, [r5, #12]
2ffee68c:	2600      	movs	r6, #0
2ffee68e:	431c      	orrs	r4, r3
2ffee690:	81ac      	strh	r4, [r5, #12]
2ffee692:	e009      	b.n	2ffee6a8 <regulator_set_flag+0x34>
2ffee694:	6828      	ldr	r0, [r5, #0]
2ffee696:	6843      	ldr	r3, [r0, #4]
2ffee698:	695b      	ldr	r3, [r3, #20]
2ffee69a:	b93b      	cbnz	r3, 2ffee6ac <regulator_set_flag+0x38>
2ffee69c:	6801      	ldr	r1, [r0, #0]
2ffee69e:	f06f 0612 	mvn.w	r6, #18
2ffee6a2:	480e      	ldr	r0, [pc, #56]	@ (2ffee6dc <regulator_set_flag+0x68>)
2ffee6a4:	f7fe f80a 	bl	2ffec6bc <tf_log>
2ffee6a8:	4630      	mov	r0, r6
2ffee6aa:	bd70      	pop	{r4, r5, r6, pc}
2ffee6ac:	f004 fe5f 	bl	2fff336e <lock_driver.isra.0>
2ffee6b0:	6828      	ldr	r0, [r5, #0]
2ffee6b2:	4621      	mov	r1, r4
2ffee6b4:	6843      	ldr	r3, [r0, #4]
2ffee6b6:	695b      	ldr	r3, [r3, #20]
2ffee6b8:	4798      	blx	r3
2ffee6ba:	4606      	mov	r6, r0
2ffee6bc:	6828      	ldr	r0, [r5, #0]
2ffee6be:	f004 fe51 	bl	2fff3364 <unlock_driver.isra.0>
2ffee6c2:	2e00      	cmp	r6, #0
2ffee6c4:	d0e1      	beq.n	2ffee68a <regulator_set_flag+0x16>
2ffee6c6:	6829      	ldr	r1, [r5, #0]
2ffee6c8:	4633      	mov	r3, r6
2ffee6ca:	4805      	ldr	r0, [pc, #20]	@ (2ffee6e0 <regulator_set_flag+0x6c>)
2ffee6cc:	4622      	mov	r2, r4
2ffee6ce:	6809      	ldr	r1, [r1, #0]
2ffee6d0:	f7fd fff4 	bl	2ffec6bc <tf_log>
2ffee6d4:	e7e8      	b.n	2ffee6a8 <regulator_set_flag+0x34>
2ffee6d6:	f06f 0615 	mvn.w	r6, #21
2ffee6da:	e7e5      	b.n	2ffee6a8 <regulator_set_flag+0x34>
2ffee6dc:	2fff6d1d 	.word	0x2fff6d1d
2ffee6e0:	2fff6d37 	.word	0x2fff6d37

2ffee6e4 <regulator_register>:
2ffee6e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffee6e6:	460e      	mov	r6, r1
2ffee6e8:	b9a8      	cbnz	r0, 2ffee716 <regulator_register+0x32>
2ffee6ea:	4853      	ldr	r0, [pc, #332]	@ (2ffee838 <regulator_register+0x154>)
2ffee6ec:	f44f 7105 	mov.w	r1, #532	@ 0x214
2ffee6f0:	f003 ff12 	bl	2fff2518 <__assert>
2ffee6f4:	3414      	adds	r4, #20
2ffee6f6:	3b01      	subs	r3, #1
2ffee6f8:	d002      	beq.n	2ffee700 <regulator_register+0x1c>
2ffee6fa:	6822      	ldr	r2, [r4, #0]
2ffee6fc:	2a00      	cmp	r2, #0
2ffee6fe:	d1f9      	bne.n	2ffee6f4 <regulator_register+0x10>
2ffee700:	4b4e      	ldr	r3, [pc, #312]	@ (2ffee83c <regulator_register+0x158>)
2ffee702:	429c      	cmp	r4, r3
2ffee704:	d90a      	bls.n	2ffee71c <regulator_register+0x38>
2ffee706:	484e      	ldr	r0, [pc, #312]	@ (2ffee840 <regulator_register+0x15c>)
2ffee708:	f06f 050b 	mvn.w	r5, #11
2ffee70c:	f7fd ffd6 	bl	2ffec6bc <tf_log>
2ffee710:	4628      	mov	r0, r5
2ffee712:	b004      	add	sp, #16
2ffee714:	bd70      	pop	{r4, r5, r6, pc}
2ffee716:	4c4b      	ldr	r4, [pc, #300]	@ (2ffee844 <regulator_register+0x160>)
2ffee718:	2314      	movs	r3, #20
2ffee71a:	e7ec      	b.n	2ffee6f6 <regulator_register+0x12>
2ffee71c:	6903      	ldr	r3, [r0, #16]
2ffee71e:	6020      	str	r0, [r4, #0]
2ffee720:	6123      	str	r3, [r4, #16]
2ffee722:	6843      	ldr	r3, [r0, #4]
2ffee724:	691b      	ldr	r3, [r3, #16]
2ffee726:	2b00      	cmp	r3, #0
2ffee728:	d071      	beq.n	2ffee80e <regulator_register+0x12a>
2ffee72a:	f004 fe20 	bl	2fff336e <lock_driver.isra.0>
2ffee72e:	6820      	ldr	r0, [r4, #0]
2ffee730:	aa03      	add	r2, sp, #12
2ffee732:	a902      	add	r1, sp, #8
2ffee734:	6843      	ldr	r3, [r0, #4]
2ffee736:	691b      	ldr	r3, [r3, #16]
2ffee738:	4798      	blx	r3
2ffee73a:	4605      	mov	r5, r0
2ffee73c:	6820      	ldr	r0, [r4, #0]
2ffee73e:	f004 fe11 	bl	2fff3364 <unlock_driver.isra.0>
2ffee742:	2d00      	cmp	r5, #0
2ffee744:	da06      	bge.n	2ffee754 <regulator_register+0x70>
2ffee746:	6823      	ldr	r3, [r4, #0]
2ffee748:	462a      	mov	r2, r5
2ffee74a:	483f      	ldr	r0, [pc, #252]	@ (2ffee848 <regulator_register+0x164>)
2ffee74c:	6819      	ldr	r1, [r3, #0]
2ffee74e:	f7fd ffb5 	bl	2ffec6bc <tf_log>
2ffee752:	e7dd      	b.n	2ffee710 <regulator_register+0x2c>
2ffee754:	9a02      	ldr	r2, [sp, #8]
2ffee756:	8813      	ldrh	r3, [r2, #0]
2ffee758:	8123      	strh	r3, [r4, #8]
2ffee75a:	9b03      	ldr	r3, [sp, #12]
2ffee75c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
2ffee760:	3b01      	subs	r3, #1
2ffee762:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
2ffee766:	8163      	strh	r3, [r4, #10]
2ffee768:	a801      	add	r0, sp, #4
2ffee76a:	f000 f8fb 	bl	2ffee964 <fdt_get_address>
2ffee76e:	2800      	cmp	r0, #0
2ffee770:	d05e      	beq.n	2ffee830 <regulator_register+0x14c>
2ffee772:	9801      	ldr	r0, [sp, #4]
2ffee774:	4631      	mov	r1, r6
2ffee776:	f003 fe83 	bl	2fff2480 <fdt_get_phandle>
2ffee77a:	6060      	str	r0, [r4, #4]
2ffee77c:	2300      	movs	r3, #0
2ffee77e:	4a33      	ldr	r2, [pc, #204]	@ (2ffee84c <regulator_register+0x168>)
2ffee780:	4631      	mov	r1, r6
2ffee782:	9801      	ldr	r0, [sp, #4]
2ffee784:	f005 fb7a 	bl	2fff3e7c <fdt_getprop>
2ffee788:	b158      	cbz	r0, 2ffee7a2 <regulator_register+0xbe>
2ffee78a:	6800      	ldr	r0, [r0, #0]
2ffee78c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffee790:	f004 fde6 	bl	2fff3360 <fdt32_to_cpu>
2ffee794:	fbb0 f2f3 	udiv	r2, r0, r3
2ffee798:	8961      	ldrh	r1, [r4, #10]
2ffee79a:	b293      	uxth	r3, r2
2ffee79c:	4299      	cmp	r1, r3
2ffee79e:	d339      	bcc.n	2ffee814 <regulator_register+0x130>
2ffee7a0:	8123      	strh	r3, [r4, #8]
2ffee7a2:	4a2b      	ldr	r2, [pc, #172]	@ (2ffee850 <regulator_register+0x16c>)
2ffee7a4:	2300      	movs	r3, #0
2ffee7a6:	9801      	ldr	r0, [sp, #4]
2ffee7a8:	4631      	mov	r1, r6
2ffee7aa:	f005 fb67 	bl	2fff3e7c <fdt_getprop>
2ffee7ae:	b158      	cbz	r0, 2ffee7c8 <regulator_register+0xe4>
2ffee7b0:	6800      	ldr	r0, [r0, #0]
2ffee7b2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffee7b6:	f004 fdd3 	bl	2fff3360 <fdt32_to_cpu>
2ffee7ba:	fbb0 f2f3 	udiv	r2, r0, r3
2ffee7be:	8921      	ldrh	r1, [r4, #8]
2ffee7c0:	b293      	uxth	r3, r2
2ffee7c2:	4299      	cmp	r1, r3
2ffee7c4:	d82f      	bhi.n	2ffee826 <regulator_register+0x142>
2ffee7c6:	8163      	strh	r3, [r4, #10]
2ffee7c8:	aa03      	add	r2, sp, #12
2ffee7ca:	a902      	add	r1, sp, #8
2ffee7cc:	4620      	mov	r0, r4
2ffee7ce:	f7ff fed1 	bl	2ffee574 <regulator_list_voltages>
2ffee7d2:	4605      	mov	r5, r0
2ffee7d4:	b110      	cbz	r0, 2ffee7dc <regulator_register+0xf8>
2ffee7d6:	f110 0f13 	cmn.w	r0, #19
2ffee7da:	d199      	bne.n	2ffee710 <regulator_register+0x2c>
2ffee7dc:	9d01      	ldr	r5, [sp, #4]
2ffee7de:	2300      	movs	r3, #0
2ffee7e0:	4a1c      	ldr	r2, [pc, #112]	@ (2ffee854 <regulator_register+0x170>)
2ffee7e2:	4631      	mov	r1, r6
2ffee7e4:	4628      	mov	r0, r5
2ffee7e6:	f005 fb49 	bl	2fff3e7c <fdt_getprop>
2ffee7ea:	b118      	cbz	r0, 2ffee7f4 <regulator_register+0x110>
2ffee7ec:	89a3      	ldrh	r3, [r4, #12]
2ffee7ee:	f043 0301 	orr.w	r3, r3, #1
2ffee7f2:	81a3      	strh	r3, [r4, #12]
2ffee7f4:	4a18      	ldr	r2, [pc, #96]	@ (2ffee858 <regulator_register+0x174>)
2ffee7f6:	2300      	movs	r3, #0
2ffee7f8:	4631      	mov	r1, r6
2ffee7fa:	4628      	mov	r0, r5
2ffee7fc:	f005 fb3e 	bl	2fff3e7c <fdt_getprop>
2ffee800:	b118      	cbz	r0, 2ffee80a <regulator_register+0x126>
2ffee802:	6800      	ldr	r0, [r0, #0]
2ffee804:	f004 fdac 	bl	2fff3360 <fdt32_to_cpu>
2ffee808:	6120      	str	r0, [r4, #16]
2ffee80a:	2500      	movs	r5, #0
2ffee80c:	e780      	b.n	2ffee710 <regulator_register+0x2c>
2ffee80e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
2ffee812:	e7a8      	b.n	2ffee766 <regulator_register+0x82>
2ffee814:	6823      	ldr	r3, [r4, #0]
2ffee816:	b292      	uxth	r2, r2
2ffee818:	4810      	ldr	r0, [pc, #64]	@ (2ffee85c <regulator_register+0x178>)
2ffee81a:	6819      	ldr	r1, [r3, #0]
2ffee81c:	f06f 0515 	mvn.w	r5, #21
2ffee820:	f7fd ff4c 	bl	2ffec6bc <tf_log>
2ffee824:	e774      	b.n	2ffee710 <regulator_register+0x2c>
2ffee826:	6823      	ldr	r3, [r4, #0]
2ffee828:	b292      	uxth	r2, r2
2ffee82a:	480d      	ldr	r0, [pc, #52]	@ (2ffee860 <regulator_register+0x17c>)
2ffee82c:	6819      	ldr	r1, [r3, #0]
2ffee82e:	e7f5      	b.n	2ffee81c <regulator_register+0x138>
2ffee830:	f06f 0501 	mvn.w	r5, #1
2ffee834:	e76c      	b.n	2ffee710 <regulator_register+0x2c>
2ffee836:	bf00      	nop
2ffee838:	2fff6bde 	.word	0x2fff6bde
2ffee83c:	2fff9658 	.word	0x2fff9658
2ffee840:	2fff6d5a 	.word	0x2fff6d5a
2ffee844:	2fff94f0 	.word	0x2fff94f0
2ffee848:	2fff6da0 	.word	0x2fff6da0
2ffee84c:	2fff6dc4 	.word	0x2fff6dc4
2ffee850:	2fff6df8 	.word	0x2fff6df8
2ffee854:	2fff6e2b 	.word	0x2fff6e2b
2ffee858:	2fff6e3f 	.word	0x2fff6e3f
2ffee85c:	2fff6ddc 	.word	0x2fff6ddc
2ffee860:	2fff6e10 	.word	0x2fff6e10

2ffee864 <fixed_regulator_register>:
2ffee864:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee868:	a801      	add	r0, sp, #4
2ffee86a:	f000 f87b 	bl	2ffee964 <fdt_get_address>
2ffee86e:	2800      	cmp	r0, #0
2ffee870:	d04a      	beq.n	2ffee908 <fixed_regulator_register+0xa4>
2ffee872:	4a27      	ldr	r2, [pc, #156]	@ (2ffee910 <fixed_regulator_register+0xac>)
2ffee874:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffee878:	9801      	ldr	r0, [sp, #4]
2ffee87a:	f04f 0800 	mov.w	r8, #0
2ffee87e:	4d25      	ldr	r5, [pc, #148]	@ (2ffee914 <fixed_regulator_register+0xb0>)
2ffee880:	f005 fc30 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffee884:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 2ffee918 <fixed_regulator_register+0xb4>
2ffee888:	4604      	mov	r4, r0
2ffee88a:	f8df a090 	ldr.w	sl, [pc, #144]	@ 2ffee91c <fixed_regulator_register+0xb8>
2ffee88e:	f8df b080 	ldr.w	fp, [pc, #128]	@ 2ffee910 <fixed_regulator_register+0xac>
2ffee892:	2c00      	cmp	r4, #0
2ffee894:	da01      	bge.n	2ffee89a <fixed_regulator_register+0x36>
2ffee896:	2600      	movs	r6, #0
2ffee898:	e023      	b.n	2ffee8e2 <fixed_regulator_register+0x7e>
2ffee89a:	9801      	ldr	r0, [sp, #4]
2ffee89c:	2200      	movs	r2, #0
2ffee89e:	4621      	mov	r1, r4
2ffee8a0:	f005 f9f9 	bl	2fff3c96 <fdt_get_name>
2ffee8a4:	4603      	mov	r3, r0
2ffee8a6:	4607      	mov	r7, r0
2ffee8a8:	464a      	mov	r2, r9
2ffee8aa:	211f      	movs	r1, #31
2ffee8ac:	4628      	mov	r0, r5
2ffee8ae:	f005 fd45 	bl	2fff433c <snprintf>
2ffee8b2:	3801      	subs	r0, #1
2ffee8b4:	281d      	cmp	r0, #29
2ffee8b6:	d903      	bls.n	2ffee8c0 <fixed_regulator_register+0x5c>
2ffee8b8:	2143      	movs	r1, #67	@ 0x43
2ffee8ba:	4819      	ldr	r0, [pc, #100]	@ (2ffee920 <fixed_regulator_register+0xbc>)
2ffee8bc:	f003 fe2c 	bl	2fff2518 <__assert>
2ffee8c0:	622d      	str	r5, [r5, #32]
2ffee8c2:	4621      	mov	r1, r4
2ffee8c4:	62ad      	str	r5, [r5, #40]	@ 0x28
2ffee8c6:	f105 0020 	add.w	r0, r5, #32
2ffee8ca:	f8c5 a024 	str.w	sl, [r5, #36]	@ 0x24
2ffee8ce:	f7ff ff09 	bl	2ffee6e4 <regulator_register>
2ffee8d2:	4606      	mov	r6, r0
2ffee8d4:	b148      	cbz	r0, 2ffee8ea <fixed_regulator_register+0x86>
2ffee8d6:	4913      	ldr	r1, [pc, #76]	@ (2ffee924 <fixed_regulator_register+0xc0>)
2ffee8d8:	463b      	mov	r3, r7
2ffee8da:	4813      	ldr	r0, [pc, #76]	@ (2ffee928 <fixed_regulator_register+0xc4>)
2ffee8dc:	224c      	movs	r2, #76	@ 0x4c
2ffee8de:	f7fd feed 	bl	2ffec6bc <tf_log>
2ffee8e2:	4630      	mov	r0, r6
2ffee8e4:	b003      	add	sp, #12
2ffee8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee8ea:	f108 0801 	add.w	r8, r8, #1
2ffee8ee:	f1b8 0f03 	cmp.w	r8, #3
2ffee8f2:	d101      	bne.n	2ffee8f8 <fixed_regulator_register+0x94>
2ffee8f4:	2151      	movs	r1, #81	@ 0x51
2ffee8f6:	e7e0      	b.n	2ffee8ba <fixed_regulator_register+0x56>
2ffee8f8:	9801      	ldr	r0, [sp, #4]
2ffee8fa:	4621      	mov	r1, r4
2ffee8fc:	465a      	mov	r2, fp
2ffee8fe:	3534      	adds	r5, #52	@ 0x34
2ffee900:	f005 fbf0 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffee904:	4604      	mov	r4, r0
2ffee906:	e7c4      	b.n	2ffee892 <fixed_regulator_register+0x2e>
2ffee908:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
2ffee90c:	e7e9      	b.n	2ffee8e2 <fixed_regulator_register+0x7e>
2ffee90e:	bf00      	nop
2ffee910:	2fff6e8a 	.word	0x2fff6e8a
2ffee914:	2fff966c 	.word	0x2fff966c
2ffee918:	2fff6097 	.word	0x2fff6097
2ffee91c:	2fff8514 	.word	0x2fff8514
2ffee920:	2fff6e9a 	.word	0x2fff6e9a
2ffee924:	2fff6edf 	.word	0x2fff6edf
2ffee928:	2fff6ec1 	.word	0x2fff6ec1

2ffee92c <fdt_get_node_parent_address_cells>:
2ffee92c:	b510      	push	{r4, lr}
2ffee92e:	4601      	mov	r1, r0
2ffee930:	4c06      	ldr	r4, [pc, #24]	@ (2ffee94c <fdt_get_node_parent_address_cells+0x20>)
2ffee932:	6820      	ldr	r0, [r4, #0]
2ffee934:	f005 fb4f 	bl	2fff3fd6 <fdt_parent_offset>
2ffee938:	1e01      	subs	r1, r0, #0
2ffee93a:	db04      	blt.n	2ffee946 <fdt_get_node_parent_address_cells+0x1a>
2ffee93c:	6820      	ldr	r0, [r4, #0]
2ffee93e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffee942:	f003 bd37 	b.w	2fff23b4 <fdt_address_cells>
2ffee946:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffee94a:	bd10      	pop	{r4, pc}
2ffee94c:	2fff96d8 	.word	0x2fff96d8

2ffee950 <dt_open_and_check>:
2ffee950:	b510      	push	{r4, lr}
2ffee952:	4604      	mov	r4, r0
2ffee954:	f003 fcc8 	bl	2fff22e8 <fdt_check_header>
2ffee958:	b908      	cbnz	r0, 2ffee95e <dt_open_and_check+0xe>
2ffee95a:	4b01      	ldr	r3, [pc, #4]	@ (2ffee960 <dt_open_and_check+0x10>)
2ffee95c:	601c      	str	r4, [r3, #0]
2ffee95e:	bd10      	pop	{r4, pc}
2ffee960:	2fff96d8 	.word	0x2fff96d8

2ffee964 <fdt_get_address>:
2ffee964:	4b03      	ldr	r3, [pc, #12]	@ (2ffee974 <fdt_get_address+0x10>)
2ffee966:	681b      	ldr	r3, [r3, #0]
2ffee968:	b113      	cbz	r3, 2ffee970 <fdt_get_address+0xc>
2ffee96a:	6003      	str	r3, [r0, #0]
2ffee96c:	2001      	movs	r0, #1
2ffee96e:	4770      	bx	lr
2ffee970:	4618      	mov	r0, r3
2ffee972:	4770      	bx	lr
2ffee974:	2fff96d8 	.word	0x2fff96d8

2ffee978 <fdt_check_node>:
2ffee978:	4b06      	ldr	r3, [pc, #24]	@ (2ffee994 <fdt_check_node+0x1c>)
2ffee97a:	b507      	push	{r0, r1, r2, lr}
2ffee97c:	4601      	mov	r1, r0
2ffee97e:	6818      	ldr	r0, [r3, #0]
2ffee980:	aa01      	add	r2, sp, #4
2ffee982:	f005 f988 	bl	2fff3c96 <fdt_get_name>
2ffee986:	b110      	cbz	r0, 2ffee98e <fdt_check_node+0x16>
2ffee988:	9801      	ldr	r0, [sp, #4]
2ffee98a:	43c0      	mvns	r0, r0
2ffee98c:	0fc0      	lsrs	r0, r0, #31
2ffee98e:	b003      	add	sp, #12
2ffee990:	f85d fb04 	ldr.w	pc, [sp], #4
2ffee994:	2fff96d8 	.word	0x2fff96d8

2ffee998 <fdt_get_status>:
2ffee998:	b570      	push	{r4, r5, r6, lr}
2ffee99a:	4601      	mov	r1, r0
2ffee99c:	4e17      	ldr	r6, [pc, #92]	@ (2ffee9fc <fdt_get_status+0x64>)
2ffee99e:	4605      	mov	r5, r0
2ffee9a0:	4a17      	ldr	r2, [pc, #92]	@ (2ffeea00 <fdt_get_status+0x68>)
2ffee9a2:	2300      	movs	r3, #0
2ffee9a4:	6830      	ldr	r0, [r6, #0]
2ffee9a6:	f005 fa69 	bl	2fff3e7c <fdt_getprop>
2ffee9aa:	4604      	mov	r4, r0
2ffee9ac:	b1c0      	cbz	r0, 2ffee9e0 <fdt_get_status+0x48>
2ffee9ae:	4815      	ldr	r0, [pc, #84]	@ (2ffeea04 <fdt_get_status+0x6c>)
2ffee9b0:	f005 fcfc 	bl	2fff43ac <strlen>
2ffee9b4:	4913      	ldr	r1, [pc, #76]	@ (2ffeea04 <fdt_get_status+0x6c>)
2ffee9b6:	4602      	mov	r2, r0
2ffee9b8:	4620      	mov	r0, r4
2ffee9ba:	f005 fcff 	bl	2fff43bc <strncmp>
2ffee9be:	fab0 f480 	clz	r4, r0
2ffee9c2:	0964      	lsrs	r4, r4, #5
2ffee9c4:	4a10      	ldr	r2, [pc, #64]	@ (2ffeea08 <fdt_get_status+0x70>)
2ffee9c6:	4629      	mov	r1, r5
2ffee9c8:	6830      	ldr	r0, [r6, #0]
2ffee9ca:	2300      	movs	r3, #0
2ffee9cc:	f005 fa56 	bl	2fff3e7c <fdt_getprop>
2ffee9d0:	4605      	mov	r5, r0
2ffee9d2:	b938      	cbnz	r0, 2ffee9e4 <fdt_get_status+0x4c>
2ffee9d4:	2c01      	cmp	r4, #1
2ffee9d6:	d101      	bne.n	2ffee9dc <fdt_get_status+0x44>
2ffee9d8:	f044 0402 	orr.w	r4, r4, #2
2ffee9dc:	4620      	mov	r0, r4
2ffee9de:	bd70      	pop	{r4, r5, r6, pc}
2ffee9e0:	2401      	movs	r4, #1
2ffee9e2:	e7ef      	b.n	2ffee9c4 <fdt_get_status+0x2c>
2ffee9e4:	4807      	ldr	r0, [pc, #28]	@ (2ffeea04 <fdt_get_status+0x6c>)
2ffee9e6:	f005 fce1 	bl	2fff43ac <strlen>
2ffee9ea:	4906      	ldr	r1, [pc, #24]	@ (2ffeea04 <fdt_get_status+0x6c>)
2ffee9ec:	4602      	mov	r2, r0
2ffee9ee:	4628      	mov	r0, r5
2ffee9f0:	f005 fce4 	bl	2fff43bc <strncmp>
2ffee9f4:	2800      	cmp	r0, #0
2ffee9f6:	d0ef      	beq.n	2ffee9d8 <fdt_get_status+0x40>
2ffee9f8:	e7f0      	b.n	2ffee9dc <fdt_get_status+0x44>
2ffee9fa:	bf00      	nop
2ffee9fc:	2fff96d8 	.word	0x2fff96d8
2ffeea00:	2fff6f04 	.word	0x2fff6f04
2ffeea04:	2fff6ef8 	.word	0x2fff6ef8
2ffeea08:	2fff6efd 	.word	0x2fff6efd

2ffeea0c <dt_set_stdout_pinctrl>:
2ffeea0c:	b508      	push	{r3, lr}
2ffeea0e:	4b06      	ldr	r3, [pc, #24]	@ (2ffeea28 <dt_set_stdout_pinctrl+0x1c>)
2ffeea10:	6818      	ldr	r0, [r3, #0]
2ffeea12:	f7fb faef 	bl	2ffe9ff4 <fdt_get_stdout_node_offset>
2ffeea16:	2800      	cmp	r0, #0
2ffeea18:	db03      	blt.n	2ffeea22 <dt_set_stdout_pinctrl+0x16>
2ffeea1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeea1e:	f7ff b96b 	b.w	2ffedcf8 <dt_set_pinctrl_config>
2ffeea22:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeea26:	bd08      	pop	{r3, pc}
2ffeea28:	2fff96d8 	.word	0x2fff96d8

2ffeea2c <dt_fill_device_info>:
2ffeea2c:	b570      	push	{r4, r5, r6, lr}
2ffeea2e:	4605      	mov	r5, r0
2ffeea30:	4608      	mov	r0, r1
2ffeea32:	460c      	mov	r4, r1
2ffeea34:	f7ff ff7a 	bl	2ffee92c <fdt_get_node_parent_address_cells>
2ffeea38:	2801      	cmp	r0, #1
2ffeea3a:	d003      	beq.n	2ffeea44 <dt_fill_device_info+0x18>
2ffeea3c:	4818      	ldr	r0, [pc, #96]	@ (2ffeeaa0 <dt_fill_device_info+0x74>)
2ffeea3e:	2188      	movs	r1, #136	@ 0x88
2ffeea40:	f003 fd6a 	bl	2fff2518 <__assert>
2ffeea44:	4e17      	ldr	r6, [pc, #92]	@ (2ffeeaa4 <dt_fill_device_info+0x78>)
2ffeea46:	2300      	movs	r3, #0
2ffeea48:	4a17      	ldr	r2, [pc, #92]	@ (2ffeeaa8 <dt_fill_device_info+0x7c>)
2ffeea4a:	4621      	mov	r1, r4
2ffeea4c:	6830      	ldr	r0, [r6, #0]
2ffeea4e:	f005 fa15 	bl	2fff3e7c <fdt_getprop>
2ffeea52:	b110      	cbz	r0, 2ffeea5a <dt_fill_device_info+0x2e>
2ffeea54:	6800      	ldr	r0, [r0, #0]
2ffeea56:	f004 fc96 	bl	2fff3386 <fdt32_to_cpu>
2ffeea5a:	6028      	str	r0, [r5, #0]
2ffeea5c:	2300      	movs	r3, #0
2ffeea5e:	4a13      	ldr	r2, [pc, #76]	@ (2ffeeaac <dt_fill_device_info+0x80>)
2ffeea60:	4621      	mov	r1, r4
2ffeea62:	6830      	ldr	r0, [r6, #0]
2ffeea64:	f005 fa0a 	bl	2fff3e7c <fdt_getprop>
2ffeea68:	b198      	cbz	r0, 2ffeea92 <dt_fill_device_info+0x66>
2ffeea6a:	6840      	ldr	r0, [r0, #4]
2ffeea6c:	f004 fc8b 	bl	2fff3386 <fdt32_to_cpu>
2ffeea70:	6068      	str	r0, [r5, #4]
2ffeea72:	2300      	movs	r3, #0
2ffeea74:	4a0e      	ldr	r2, [pc, #56]	@ (2ffeeab0 <dt_fill_device_info+0x84>)
2ffeea76:	4621      	mov	r1, r4
2ffeea78:	6830      	ldr	r0, [r6, #0]
2ffeea7a:	f005 f9ff 	bl	2fff3e7c <fdt_getprop>
2ffeea7e:	b158      	cbz	r0, 2ffeea98 <dt_fill_device_info+0x6c>
2ffeea80:	6840      	ldr	r0, [r0, #4]
2ffeea82:	f004 fc80 	bl	2fff3386 <fdt32_to_cpu>
2ffeea86:	60a8      	str	r0, [r5, #8]
2ffeea88:	4620      	mov	r0, r4
2ffeea8a:	f7ff ff85 	bl	2ffee998 <fdt_get_status>
2ffeea8e:	60e8      	str	r0, [r5, #12]
2ffeea90:	bd70      	pop	{r4, r5, r6, pc}
2ffeea92:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeea96:	e7eb      	b.n	2ffeea70 <dt_fill_device_info+0x44>
2ffeea98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeea9c:	e7f3      	b.n	2ffeea86 <dt_fill_device_info+0x5a>
2ffeea9e:	bf00      	nop
2ffeeaa0:	2fff6f0b 	.word	0x2fff6f0b
2ffeeaa4:	2fff96d8 	.word	0x2fff96d8
2ffeeaa8:	2fff583e 	.word	0x2fff583e
2ffeeaac:	2fff697d 	.word	0x2fff697d
2ffeeab0:	2fff6f27 	.word	0x2fff6f27

2ffeeab4 <dt_get_node>:
2ffeeab4:	b538      	push	{r3, r4, r5, lr}
2ffeeab6:	4605      	mov	r5, r0
2ffeeab8:	4b07      	ldr	r3, [pc, #28]	@ (2ffeead8 <dt_get_node+0x24>)
2ffeeaba:	6818      	ldr	r0, [r3, #0]
2ffeeabc:	f005 fb12 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeeac0:	1e04      	subs	r4, r0, #0
2ffeeac2:	db05      	blt.n	2ffeead0 <dt_get_node+0x1c>
2ffeeac4:	4621      	mov	r1, r4
2ffeeac6:	4628      	mov	r0, r5
2ffeeac8:	f7ff ffb0 	bl	2ffeea2c <dt_fill_device_info>
2ffeeacc:	4620      	mov	r0, r4
2ffeeace:	bd38      	pop	{r3, r4, r5, pc}
2ffeead0:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffeead4:	e7fa      	b.n	2ffeeacc <dt_get_node+0x18>
2ffeead6:	bf00      	nop
2ffeead8:	2fff96d8 	.word	0x2fff96d8

2ffeeadc <dt_get_stdout_uart_info>:
2ffeeadc:	b538      	push	{r3, r4, r5, lr}
2ffeeade:	4605      	mov	r5, r0
2ffeeae0:	4b07      	ldr	r3, [pc, #28]	@ (2ffeeb00 <dt_get_stdout_uart_info+0x24>)
2ffeeae2:	6818      	ldr	r0, [r3, #0]
2ffeeae4:	f7fb fa86 	bl	2ffe9ff4 <fdt_get_stdout_node_offset>
2ffeeae8:	1e04      	subs	r4, r0, #0
2ffeeaea:	db05      	blt.n	2ffeeaf8 <dt_get_stdout_uart_info+0x1c>
2ffeeaec:	4621      	mov	r1, r4
2ffeeaee:	4628      	mov	r0, r5
2ffeeaf0:	f7ff ff9c 	bl	2ffeea2c <dt_fill_device_info>
2ffeeaf4:	4620      	mov	r0, r4
2ffeeaf6:	bd38      	pop	{r3, r4, r5, pc}
2ffeeaf8:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffeeafc:	e7fa      	b.n	2ffeeaf4 <dt_get_stdout_uart_info+0x18>
2ffeeafe:	bf00      	nop
2ffeeb00:	2fff96d8 	.word	0x2fff96d8

2ffeeb04 <dt_match_instance_by_compatible>:
2ffeeb04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeeb08:	4602      	mov	r2, r0
2ffeeb0a:	4f17      	ldr	r7, [pc, #92]	@ (2ffeeb68 <dt_match_instance_by_compatible+0x64>)
2ffeeb0c:	4605      	mov	r5, r0
2ffeeb0e:	f8df 805c 	ldr.w	r8, [pc, #92]	@ 2ffeeb6c <dt_match_instance_by_compatible+0x68>
2ffeeb12:	460e      	mov	r6, r1
2ffeeb14:	6838      	ldr	r0, [r7, #0]
2ffeeb16:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeeb1a:	f005 fae3 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeeb1e:	4604      	mov	r4, r0
2ffeeb20:	2c00      	cmp	r4, #0
2ffeeb22:	da04      	bge.n	2ffeeb2e <dt_match_instance_by_compatible+0x2a>
2ffeeb24:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffeeb28:	4620      	mov	r0, r4
2ffeeb2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeeb2e:	4620      	mov	r0, r4
2ffeeb30:	f7ff fefc 	bl	2ffee92c <fdt_get_node_parent_address_cells>
2ffeeb34:	2801      	cmp	r0, #1
2ffeeb36:	d003      	beq.n	2ffeeb40 <dt_match_instance_by_compatible+0x3c>
2ffeeb38:	480d      	ldr	r0, [pc, #52]	@ (2ffeeb70 <dt_match_instance_by_compatible+0x6c>)
2ffeeb3a:	21d4      	movs	r1, #212	@ 0xd4
2ffeeb3c:	f003 fcec 	bl	2fff2518 <__assert>
2ffeeb40:	6838      	ldr	r0, [r7, #0]
2ffeeb42:	2300      	movs	r3, #0
2ffeeb44:	4642      	mov	r2, r8
2ffeeb46:	4621      	mov	r1, r4
2ffeeb48:	f005 f998 	bl	2fff3e7c <fdt_getprop>
2ffeeb4c:	b120      	cbz	r0, 2ffeeb58 <dt_match_instance_by_compatible+0x54>
2ffeeb4e:	6800      	ldr	r0, [r0, #0]
2ffeeb50:	f004 fc19 	bl	2fff3386 <fdt32_to_cpu>
2ffeeb54:	42b0      	cmp	r0, r6
2ffeeb56:	d0e7      	beq.n	2ffeeb28 <dt_match_instance_by_compatible+0x24>
2ffeeb58:	6838      	ldr	r0, [r7, #0]
2ffeeb5a:	4621      	mov	r1, r4
2ffeeb5c:	462a      	mov	r2, r5
2ffeeb5e:	f005 fac1 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeeb62:	4604      	mov	r4, r0
2ffeeb64:	e7dc      	b.n	2ffeeb20 <dt_match_instance_by_compatible+0x1c>
2ffeeb66:	bf00      	nop
2ffeeb68:	2fff96d8 	.word	0x2fff96d8
2ffeeb6c:	2fff583e 	.word	0x2fff583e
2ffeeb70:	2fff6f0b 	.word	0x2fff6f0b

2ffeeb74 <dt_get_ddr_size>:
2ffeeb74:	b570      	push	{r4, r5, r6, lr}
2ffeeb76:	4d0f      	ldr	r5, [pc, #60]	@ (2ffeebb4 <dt_get_ddr_size+0x40>)
2ffeeb78:	682c      	ldr	r4, [r5, #0]
2ffeeb7a:	b964      	cbnz	r4, 2ffeeb96 <dt_get_ddr_size+0x22>
2ffeeb7c:	4e0e      	ldr	r6, [pc, #56]	@ (2ffeebb8 <dt_get_ddr_size+0x44>)
2ffeeb7e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeeb82:	4a0e      	ldr	r2, [pc, #56]	@ (2ffeebbc <dt_get_ddr_size+0x48>)
2ffeeb84:	6830      	ldr	r0, [r6, #0]
2ffeeb86:	f005 faad 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeeb8a:	1e01      	subs	r1, r0, #0
2ffeeb8c:	da05      	bge.n	2ffeeb9a <dt_get_ddr_size+0x26>
2ffeeb8e:	490c      	ldr	r1, [pc, #48]	@ (2ffeebc0 <dt_get_ddr_size+0x4c>)
2ffeeb90:	480c      	ldr	r0, [pc, #48]	@ (2ffeebc4 <dt_get_ddr_size+0x50>)
2ffeeb92:	f7fd fd93 	bl	2ffec6bc <tf_log>
2ffeeb96:	4620      	mov	r0, r4
2ffeeb98:	bd70      	pop	{r4, r5, r6, pc}
2ffeeb9a:	4a0b      	ldr	r2, [pc, #44]	@ (2ffeebc8 <dt_get_ddr_size+0x54>)
2ffeeb9c:	4623      	mov	r3, r4
2ffeeb9e:	6830      	ldr	r0, [r6, #0]
2ffeeba0:	f003 ff16 	bl	2fff29d0 <fdt_read_uint32_default>
2ffeeba4:	6028      	str	r0, [r5, #0]
2ffeeba6:	2104      	movs	r1, #4
2ffeeba8:	4628      	mov	r0, r5
2ffeebaa:	f7fa ec50 	blx	2ffe944c <flush_dcache_range>
2ffeebae:	682c      	ldr	r4, [r5, #0]
2ffeebb0:	e7f1      	b.n	2ffeeb96 <dt_get_ddr_size+0x22>
2ffeebb2:	bf00      	nop
2ffeebb4:	2fff96d4 	.word	0x2fff96d4
2ffeebb8:	2fff96d8 	.word	0x2fff96d8
2ffeebbc:	2fff56e6 	.word	0x2fff56e6
2ffeebc0:	2fff6ff1 	.word	0x2fff6ff1
2ffeebc4:	2fff6f2e 	.word	0x2fff6f2e
2ffeebc8:	2fff6f4f 	.word	0x2fff6f4f

2ffeebcc <dt_get_vdd_regulator>:
2ffeebcc:	b510      	push	{r4, lr}
2ffeebce:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeebd2:	4c07      	ldr	r4, [pc, #28]	@ (2ffeebf0 <dt_get_vdd_regulator+0x24>)
2ffeebd4:	4a07      	ldr	r2, [pc, #28]	@ (2ffeebf4 <dt_get_vdd_regulator+0x28>)
2ffeebd6:	6820      	ldr	r0, [r4, #0]
2ffeebd8:	f005 fa84 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeebdc:	1e01      	subs	r1, r0, #0
2ffeebde:	db05      	blt.n	2ffeebec <dt_get_vdd_regulator+0x20>
2ffeebe0:	6820      	ldr	r0, [r4, #0]
2ffeebe2:	4a05      	ldr	r2, [pc, #20]	@ (2ffeebf8 <dt_get_vdd_regulator+0x2c>)
2ffeebe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeebe8:	f7ff bc16 	b.w	2ffee418 <regulator_get_by_supply_name>
2ffeebec:	2000      	movs	r0, #0
2ffeebee:	bd10      	pop	{r4, pc}
2ffeebf0:	2fff96d8 	.word	0x2fff96d8
2ffeebf4:	2fff6f5b 	.word	0x2fff6f5b
2ffeebf8:	2fff6f6f 	.word	0x2fff6f6f

2ffeebfc <dt_get_board_model>:
2ffeebfc:	b510      	push	{r4, lr}
2ffeebfe:	4c08      	ldr	r4, [pc, #32]	@ (2ffeec20 <dt_get_board_model+0x24>)
2ffeec00:	4908      	ldr	r1, [pc, #32]	@ (2ffeec24 <dt_get_board_model+0x28>)
2ffeec02:	6820      	ldr	r0, [r4, #0]
2ffeec04:	f005 f995 	bl	2fff3f32 <fdt_path_offset>
2ffeec08:	1e01      	subs	r1, r0, #0
2ffeec0a:	db06      	blt.n	2ffeec1a <dt_get_board_model+0x1e>
2ffeec0c:	6820      	ldr	r0, [r4, #0]
2ffeec0e:	2300      	movs	r3, #0
2ffeec10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeec14:	4a04      	ldr	r2, [pc, #16]	@ (2ffeec28 <dt_get_board_model+0x2c>)
2ffeec16:	f005 b931 	b.w	2fff3e7c <fdt_getprop>
2ffeec1a:	2000      	movs	r0, #0
2ffeec1c:	bd10      	pop	{r4, pc}
2ffeec1e:	bf00      	nop
2ffeec20:	2fff96d8 	.word	0x2fff96d8
2ffeec24:	2fff6f73 	.word	0x2fff6f73
2ffeec28:	2fff6f75 	.word	0x2fff6f75

2ffeec2c <dt_find_otp_name>:
2ffeec2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffeec30:	460f      	mov	r7, r1
2ffeec32:	4616      	mov	r6, r2
2ffeec34:	4605      	mov	r5, r0
2ffeec36:	b358      	cbz	r0, 2ffeec90 <dt_find_otp_name+0x64>
2ffeec38:	b351      	cbz	r1, 2ffeec90 <dt_find_otp_name+0x64>
2ffeec3a:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 2ffeecbc <dt_find_otp_name+0x90>
2ffeec3e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeec42:	4a1f      	ldr	r2, [pc, #124]	@ (2ffeecc0 <dt_find_otp_name+0x94>)
2ffeec44:	f8d8 0000 	ldr.w	r0, [r8]
2ffeec48:	f005 fa4c 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeec4c:	1e04      	subs	r4, r0, #0
2ffeec4e:	db0b      	blt.n	2ffeec68 <dt_find_otp_name+0x3c>
2ffeec50:	f8d8 0000 	ldr.w	r0, [r8]
2ffeec54:	4621      	mov	r1, r4
2ffeec56:	462a      	mov	r2, r5
2ffeec58:	f005 f88b 	bl	2fff3d72 <fdt_subnode_offset>
2ffeec5c:	1e04      	subs	r4, r0, #0
2ffeec5e:	da07      	bge.n	2ffeec70 <dt_find_otp_name+0x44>
2ffeec60:	4818      	ldr	r0, [pc, #96]	@ (2ffeecc4 <dt_find_otp_name+0x98>)
2ffeec62:	4629      	mov	r1, r5
2ffeec64:	f7fd fd2a 	bl	2ffec6bc <tf_log>
2ffeec68:	4620      	mov	r0, r4
2ffeec6a:	b002      	add	sp, #8
2ffeec6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeec70:	4a15      	ldr	r2, [pc, #84]	@ (2ffeecc8 <dt_find_otp_name+0x9c>)
2ffeec72:	ab01      	add	r3, sp, #4
2ffeec74:	f8d8 0000 	ldr.w	r0, [r8]
2ffeec78:	4621      	mov	r1, r4
2ffeec7a:	f005 f8ff 	bl	2fff3e7c <fdt_getprop>
2ffeec7e:	4602      	mov	r2, r0
2ffeec80:	b110      	cbz	r0, 2ffeec88 <dt_find_otp_name+0x5c>
2ffeec82:	9b01      	ldr	r3, [sp, #4]
2ffeec84:	2b08      	cmp	r3, #8
2ffeec86:	d006      	beq.n	2ffeec96 <dt_find_otp_name+0x6a>
2ffeec88:	4810      	ldr	r0, [pc, #64]	@ (2ffeeccc <dt_find_otp_name+0xa0>)
2ffeec8a:	4629      	mov	r1, r5
2ffeec8c:	f7fd fd16 	bl	2ffec6bc <tf_log>
2ffeec90:	f06f 040e 	mvn.w	r4, #14
2ffeec94:	e7e8      	b.n	2ffeec68 <dt_find_otp_name+0x3c>
2ffeec96:	6800      	ldr	r0, [r0, #0]
2ffeec98:	f004 fb75 	bl	2fff3386 <fdt32_to_cpu>
2ffeec9c:	0783      	lsls	r3, r0, #30
2ffeec9e:	d002      	beq.n	2ffeeca6 <dt_find_otp_name+0x7a>
2ffeeca0:	480b      	ldr	r0, [pc, #44]	@ (2ffeecd0 <dt_find_otp_name+0xa4>)
2ffeeca2:	4629      	mov	r1, r5
2ffeeca4:	e7f2      	b.n	2ffeec8c <dt_find_otp_name+0x60>
2ffeeca6:	0880      	lsrs	r0, r0, #2
2ffeeca8:	6038      	str	r0, [r7, #0]
2ffeecaa:	b90e      	cbnz	r6, 2ffeecb0 <dt_find_otp_name+0x84>
2ffeecac:	2400      	movs	r4, #0
2ffeecae:	e7db      	b.n	2ffeec68 <dt_find_otp_name+0x3c>
2ffeecb0:	6850      	ldr	r0, [r2, #4]
2ffeecb2:	f004 fb68 	bl	2fff3386 <fdt32_to_cpu>
2ffeecb6:	00c0      	lsls	r0, r0, #3
2ffeecb8:	6030      	str	r0, [r6, #0]
2ffeecba:	e7f7      	b.n	2ffeecac <dt_find_otp_name+0x80>
2ffeecbc:	2fff96d8 	.word	0x2fff96d8
2ffeecc0:	2fff6f7b 	.word	0x2fff6f7b
2ffeecc4:	2fff6f8d 	.word	0x2fff6f8d
2ffeecc8:	2fff583e 	.word	0x2fff583e
2ffeeccc:	2fff6fa7 	.word	0x2fff6fa7
2ffeecd0:	2fff6fca 	.word	0x2fff6fca

2ffeecd4 <dt_get_otp_by_phandle>:
2ffeecd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeecd8:	4680      	mov	r8, r0
2ffeecda:	4d1d      	ldr	r5, [pc, #116]	@ (2ffeed50 <dt_get_otp_by_phandle+0x7c>)
2ffeecdc:	460e      	mov	r6, r1
2ffeecde:	4617      	mov	r7, r2
2ffeece0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeece4:	4a1b      	ldr	r2, [pc, #108]	@ (2ffeed54 <dt_get_otp_by_phandle+0x80>)
2ffeece6:	6828      	ldr	r0, [r5, #0]
2ffeece8:	f005 f9fc 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeecec:	2800      	cmp	r0, #0
2ffeecee:	db08      	blt.n	2ffeed02 <dt_get_otp_by_phandle+0x2e>
2ffeecf0:	4601      	mov	r1, r0
2ffeecf2:	6828      	ldr	r0, [r5, #0]
2ffeecf4:	f004 ff51 	bl	2fff3b9a <fdt_first_subnode>
2ffeecf8:	2800      	cmp	r0, #0
2ffeecfa:	4604      	mov	r4, r0
2ffeecfc:	da03      	bge.n	2ffeed06 <dt_get_otp_by_phandle+0x32>
2ffeecfe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffeed02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeed06:	6828      	ldr	r0, [r5, #0]
2ffeed08:	4621      	mov	r1, r4
2ffeed0a:	f003 fbb9 	bl	2fff2480 <fdt_get_phandle>
2ffeed0e:	4540      	cmp	r0, r8
2ffeed10:	d010      	beq.n	2ffeed34 <dt_get_otp_by_phandle+0x60>
2ffeed12:	6828      	ldr	r0, [r5, #0]
2ffeed14:	4621      	mov	r1, r4
2ffeed16:	f004 ff53 	bl	2fff3bc0 <fdt_next_subnode>
2ffeed1a:	e7ed      	b.n	2ffeecf8 <dt_get_otp_by_phandle+0x24>
2ffeed1c:	6818      	ldr	r0, [r3, #0]
2ffeed1e:	f004 fb32 	bl	2fff3386 <fdt32_to_cpu>
2ffeed22:	4602      	mov	r2, r0
2ffeed24:	6858      	ldr	r0, [r3, #4]
2ffeed26:	0892      	lsrs	r2, r2, #2
2ffeed28:	f004 fb2d 	bl	2fff3386 <fdt32_to_cpu>
2ffeed2c:	6038      	str	r0, [r7, #0]
2ffeed2e:	2000      	movs	r0, #0
2ffeed30:	6032      	str	r2, [r6, #0]
2ffeed32:	e7e6      	b.n	2ffeed02 <dt_get_otp_by_phandle+0x2e>
2ffeed34:	4a08      	ldr	r2, [pc, #32]	@ (2ffeed58 <dt_get_otp_by_phandle+0x84>)
2ffeed36:	2300      	movs	r3, #0
2ffeed38:	6828      	ldr	r0, [r5, #0]
2ffeed3a:	4621      	mov	r1, r4
2ffeed3c:	f005 f89e 	bl	2fff3e7c <fdt_getprop>
2ffeed40:	4603      	mov	r3, r0
2ffeed42:	2800      	cmp	r0, #0
2ffeed44:	d1ea      	bne.n	2ffeed1c <dt_get_otp_by_phandle+0x48>
2ffeed46:	f7fd fd55 	bl	2ffec7f4 <console_flush>
2ffeed4a:	f7fa eb48 	blx	2ffe93dc <do_panic>
2ffeed4e:	bf00      	nop
2ffeed50:	2fff96d8 	.word	0x2fff96d8
2ffeed54:	2fff6f7b 	.word	0x2fff6f7b
2ffeed58:	2fff583e 	.word	0x2fff583e

2ffeed5c <fconf_populate_stm32mp_fuse_provisioning>:
2ffeed5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeed60:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2ffeed64:	4a40      	ldr	r2, [pc, #256]	@ (2ffeee68 <fconf_populate_stm32mp_fuse_provisioning+0x10c>)
2ffeed66:	b089      	sub	sp, #36	@ 0x24
2ffeed68:	4606      	mov	r6, r0
2ffeed6a:	f005 f9bb 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2ffeed6e:	1e01      	subs	r1, r0, #0
2ffeed70:	db05      	blt.n	2ffeed7e <fconf_populate_stm32mp_fuse_provisioning+0x22>
2ffeed72:	4630      	mov	r0, r6
2ffeed74:	f004 ff11 	bl	2fff3b9a <fdt_first_subnode>
2ffeed78:	2800      	cmp	r0, #0
2ffeed7a:	4605      	mov	r5, r0
2ffeed7c:	da03      	bge.n	2ffeed86 <fconf_populate_stm32mp_fuse_provisioning+0x2a>
2ffeed7e:	2000      	movs	r0, #0
2ffeed80:	b009      	add	sp, #36	@ 0x24
2ffeed82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeed86:	4a39      	ldr	r2, [pc, #228]	@ (2ffeee6c <fconf_populate_stm32mp_fuse_provisioning+0x110>)
2ffeed88:	2300      	movs	r3, #0
2ffeed8a:	4629      	mov	r1, r5
2ffeed8c:	4630      	mov	r0, r6
2ffeed8e:	f005 f875 	bl	2fff3e7c <fdt_getprop>
2ffeed92:	b918      	cbnz	r0, 2ffeed9c <fconf_populate_stm32mp_fuse_provisioning+0x40>
2ffeed94:	f7fd fd2e 	bl	2ffec7f4 <console_flush>
2ffeed98:	f7fa eb20 	blx	2ffe93dc <do_panic>
2ffeed9c:	6800      	ldr	r0, [r0, #0]
2ffeed9e:	aa06      	add	r2, sp, #24
2ffeeda0:	a905      	add	r1, sp, #20
2ffeeda2:	ba00      	rev	r0, r0
2ffeeda4:	f7ff ff96 	bl	2ffeecd4 <dt_get_otp_by_phandle>
2ffeeda8:	b118      	cbz	r0, 2ffeedb2 <fconf_populate_stm32mp_fuse_provisioning+0x56>
2ffeedaa:	4831      	ldr	r0, [pc, #196]	@ (2ffeee70 <fconf_populate_stm32mp_fuse_provisioning+0x114>)
2ffeedac:	f7fd fc86 	bl	2ffec6bc <tf_log>
2ffeedb0:	e7f0      	b.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeedb2:	4a30      	ldr	r2, [pc, #192]	@ (2ffeee74 <fconf_populate_stm32mp_fuse_provisioning+0x118>)
2ffeedb4:	ab04      	add	r3, sp, #16
2ffeedb6:	4629      	mov	r1, r5
2ffeedb8:	4630      	mov	r0, r6
2ffeedba:	f005 f85f 	bl	2fff3e7c <fdt_getprop>
2ffeedbe:	4680      	mov	r8, r0
2ffeedc0:	2800      	cmp	r0, #0
2ffeedc2:	d0e7      	beq.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeedc4:	9b04      	ldr	r3, [sp, #16]
2ffeedc6:	2b00      	cmp	r3, #0
2ffeedc8:	dbe4      	blt.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeedca:	0799      	lsls	r1, r3, #30
2ffeedcc:	d1e2      	bne.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeedce:	9a06      	ldr	r2, [sp, #24]
2ffeedd0:	0897      	lsrs	r7, r2, #2
2ffeedd2:	0792      	lsls	r2, r2, #30
2ffeedd4:	bf18      	it	ne
2ffeedd6:	3701      	addne	r7, #1
2ffeedd8:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2ffeeddc:	d040      	beq.n	2ffeee60 <fconf_populate_stm32mp_fuse_provisioning+0x104>
2ffeedde:	4826      	ldr	r0, [pc, #152]	@ (2ffeee78 <fconf_populate_stm32mp_fuse_provisioning+0x11c>)
2ffeede0:	e7e4      	b.n	2ffeedac <fconf_populate_stm32mp_fuse_provisioning+0x50>
2ffeede2:	9805      	ldr	r0, [sp, #20]
2ffeede4:	f10d 010f 	add.w	r1, sp, #15
2ffeede8:	4458      	add	r0, fp
2ffeedea:	f000 fbdd 	bl	2ffef5a8 <bsec_read_sw_lock>
2ffeedee:	2800      	cmp	r0, #0
2ffeedf0:	d1d0      	bne.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeedf2:	f89d 200f 	ldrb.w	r2, [sp, #15]
2ffeedf6:	b10a      	cbz	r2, 2ffeedfc <fconf_populate_stm32mp_fuse_provisioning+0xa0>
2ffeedf8:	4820      	ldr	r0, [pc, #128]	@ (2ffeee7c <fconf_populate_stm32mp_fuse_provisioning+0x120>)
2ffeedfa:	e7d7      	b.n	2ffeedac <fconf_populate_stm32mp_fuse_provisioning+0x50>
2ffeedfc:	f858 402b 	ldr.w	r4, [r8, fp, lsl #2]
2ffeee00:	a807      	add	r0, sp, #28
2ffeee02:	9905      	ldr	r1, [sp, #20]
2ffeee04:	f3c4 2a07 	ubfx	sl, r4, #8, #8
2ffeee08:	f3c4 4907 	ubfx	r9, r4, #16, #8
2ffeee0c:	0623      	lsls	r3, r4, #24
2ffeee0e:	4459      	add	r1, fp
2ffeee10:	ea4f 4a0a 	mov.w	sl, sl, lsl #16
2ffeee14:	ea4f 2909 	mov.w	r9, r9, lsl #8
2ffeee18:	0e24      	lsrs	r4, r4, #24
2ffeee1a:	9301      	str	r3, [sp, #4]
2ffeee1c:	f000 fc96 	bl	2ffef74c <bsec_shadow_read_otp>
2ffeee20:	2800      	cmp	r0, #0
2ffeee22:	d1b7      	bne.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeee24:	9a07      	ldr	r2, [sp, #28]
2ffeee26:	b11a      	cbz	r2, 2ffeee30 <fconf_populate_stm32mp_fuse_provisioning+0xd4>
2ffeee28:	9905      	ldr	r1, [sp, #20]
2ffeee2a:	4815      	ldr	r0, [pc, #84]	@ (2ffeee80 <fconf_populate_stm32mp_fuse_provisioning+0x124>)
2ffeee2c:	f7fd fc46 	bl	2ffec6bc <tf_log>
2ffeee30:	9a07      	ldr	r2, [sp, #28]
2ffeee32:	9b01      	ldr	r3, [sp, #4]
2ffeee34:	ea44 0002 	orr.w	r0, r4, r2
2ffeee38:	4318      	orrs	r0, r3
2ffeee3a:	9905      	ldr	r1, [sp, #20]
2ffeee3c:	ea40 000a 	orr.w	r0, r0, sl
2ffeee40:	4459      	add	r1, fp
2ffeee42:	ea40 0009 	orr.w	r0, r0, r9
2ffeee46:	f000 fbc9 	bl	2ffef5dc <bsec_write_otp>
2ffeee4a:	2800      	cmp	r0, #0
2ffeee4c:	d1a2      	bne.n	2ffeed94 <fconf_populate_stm32mp_fuse_provisioning+0x38>
2ffeee4e:	f10b 0b01 	add.w	fp, fp, #1
2ffeee52:	455f      	cmp	r7, fp
2ffeee54:	d1c5      	bne.n	2ffeede2 <fconf_populate_stm32mp_fuse_provisioning+0x86>
2ffeee56:	4629      	mov	r1, r5
2ffeee58:	4630      	mov	r0, r6
2ffeee5a:	f004 feb1 	bl	2fff3bc0 <fdt_next_subnode>
2ffeee5e:	e78b      	b.n	2ffeed78 <fconf_populate_stm32mp_fuse_provisioning+0x1c>
2ffeee60:	f04f 0b00 	mov.w	fp, #0
2ffeee64:	e7f5      	b.n	2ffeee52 <fconf_populate_stm32mp_fuse_provisioning+0xf6>
2ffeee66:	bf00      	nop
2ffeee68:	2fff7001 	.word	0x2fff7001
2ffeee6c:	2fff6aa2 	.word	0x2fff6aa2
2ffeee70:	2fff7011 	.word	0x2fff7011
2ffeee74:	2fff7025 	.word	0x2fff7025
2ffeee78:	2fff7035 	.word	0x2fff7035
2ffeee7c:	2fff7048 	.word	0x2fff7048
2ffeee80:	2fff705c 	.word	0x2fff705c

2ffeee84 <configure_mmu>:
2ffeee84:	4805      	ldr	r0, [pc, #20]	@ (2ffeee9c <configure_mmu+0x18>)
2ffeee86:	b508      	push	{r3, lr}
2ffeee88:	f7fd ffa2 	bl	2ffecdd0 <mmap_add>
2ffeee8c:	f7fd ffc2 	bl	2ffece14 <init_xlat_tables>
2ffeee90:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeee94:	2000      	movs	r0, #0
2ffeee96:	f7fd bfdb 	b.w	2ffece50 <enable_mmu_svc_mon>
2ffeee9a:	bf00      	nop
2ffeee9c:	2fff4418 	.word	0x2fff4418

2ffeeea0 <stm32_get_gpio_bank_base>:
2ffeeea0:	2819      	cmp	r0, #25
2ffeeea2:	b508      	push	{r3, lr}
2ffeeea4:	d00a      	beq.n	2ffeeebc <stm32_get_gpio_bank_base+0x1c>
2ffeeea6:	280a      	cmp	r0, #10
2ffeeea8:	d903      	bls.n	2ffeeeb2 <stm32_get_gpio_bank_base+0x12>
2ffeeeaa:	4805      	ldr	r0, [pc, #20]	@ (2ffeeec0 <stm32_get_gpio_bank_base+0x20>)
2ffeeeac:	216c      	movs	r1, #108	@ 0x6c
2ffeeeae:	f003 fb33 	bl	2fff2518 <__assert>
2ffeeeb2:	f500 20a0 	add.w	r0, r0, #327680	@ 0x50000
2ffeeeb6:	3002      	adds	r0, #2
2ffeeeb8:	0300      	lsls	r0, r0, #12
2ffeeeba:	bd08      	pop	{r3, pc}
2ffeeebc:	4801      	ldr	r0, [pc, #4]	@ (2ffeeec4 <stm32_get_gpio_bank_base+0x24>)
2ffeeebe:	e7fc      	b.n	2ffeeeba <stm32_get_gpio_bank_base+0x1a>
2ffeeec0:	2fff708d 	.word	0x2fff708d
2ffeeec4:	54004000 	.word	0x54004000

2ffeeec8 <stm32_get_gpio_bank_offset>:
2ffeeec8:	2819      	cmp	r0, #25
2ffeeeca:	b508      	push	{r3, lr}
2ffeeecc:	d007      	beq.n	2ffeeede <stm32_get_gpio_bank_offset+0x16>
2ffeeece:	280a      	cmp	r0, #10
2ffeeed0:	d903      	bls.n	2ffeeeda <stm32_get_gpio_bank_offset+0x12>
2ffeeed2:	4804      	ldr	r0, [pc, #16]	@ (2ffeeee4 <stm32_get_gpio_bank_offset+0x1c>)
2ffeeed4:	217c      	movs	r1, #124	@ 0x7c
2ffeeed6:	f003 fb1f 	bl	2fff2518 <__assert>
2ffeeeda:	0300      	lsls	r0, r0, #12
2ffeeedc:	bd08      	pop	{r3, pc}
2ffeeede:	2000      	movs	r0, #0
2ffeeee0:	e7fc      	b.n	2ffeeedc <stm32_get_gpio_bank_offset+0x14>
2ffeeee2:	bf00      	nop
2ffeeee4:	2fff708d 	.word	0x2fff708d

2ffeeee8 <stm32_get_gpio_bank_clock>:
2ffeeee8:	2819      	cmp	r0, #25
2ffeeeea:	b508      	push	{r3, lr}
2ffeeeec:	d007      	beq.n	2ffeeefe <stm32_get_gpio_bank_clock+0x16>
2ffeeeee:	280a      	cmp	r0, #10
2ffeeef0:	d903      	bls.n	2ffeeefa <stm32_get_gpio_bank_clock+0x12>
2ffeeef2:	4804      	ldr	r0, [pc, #16]	@ (2ffeef04 <stm32_get_gpio_bank_clock+0x1c>)
2ffeeef4:	219a      	movs	r1, #154	@ 0x9a
2ffeeef6:	f003 fb0f 	bl	2fff2518 <__assert>
2ffeeefa:	3054      	adds	r0, #84	@ 0x54
2ffeeefc:	bd08      	pop	{r3, pc}
2ffeeefe:	205f      	movs	r0, #95	@ 0x5f
2ffeef00:	e7fc      	b.n	2ffeeefc <stm32_get_gpio_bank_clock+0x14>
2ffeef02:	bf00      	nop
2ffeef04:	2fff708d 	.word	0x2fff708d

2ffeef08 <get_uart_address>:
2ffeef08:	3801      	subs	r0, #1
2ffeef0a:	2807      	cmp	r0, #7
2ffeef0c:	bf9a      	itte	ls
2ffeef0e:	4b02      	ldrls	r3, [pc, #8]	@ (2ffeef18 <get_uart_address+0x10>)
2ffeef10:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
2ffeef14:	2000      	movhi	r0, #0
2ffeef16:	4770      	bx	lr
2ffeef18:	2fff4608 	.word	0x2fff4608

2ffeef1c <stm32mp_get_chip_version>:
2ffeef1c:	b513      	push	{r0, r1, r4, lr}
2ffeef1e:	2400      	movs	r4, #0
2ffeef20:	9401      	str	r4, [sp, #4]
2ffeef22:	a801      	add	r0, sp, #4
2ffeef24:	f001 ff40 	bl	2fff0da8 <stm32mp1_dbgmcu_get_chip_version>
2ffeef28:	42a0      	cmp	r0, r4
2ffeef2a:	da05      	bge.n	2ffeef38 <stm32mp_get_chip_version+0x1c>
2ffeef2c:	4803      	ldr	r0, [pc, #12]	@ (2ffeef3c <stm32mp_get_chip_version+0x20>)
2ffeef2e:	f7fd fbc5 	bl	2ffec6bc <tf_log>
2ffeef32:	4620      	mov	r0, r4
2ffeef34:	b002      	add	sp, #8
2ffeef36:	bd10      	pop	{r4, pc}
2ffeef38:	9801      	ldr	r0, [sp, #4]
2ffeef3a:	e7fb      	b.n	2ffeef34 <stm32mp_get_chip_version+0x18>
2ffeef3c:	2fff70b1 	.word	0x2fff70b1

2ffeef40 <stm32mp_get_chip_dev_id>:
2ffeef40:	b507      	push	{r0, r1, r2, lr}
2ffeef42:	a801      	add	r0, sp, #4
2ffeef44:	f001 ff46 	bl	2fff0dd4 <stm32mp1_dbgmcu_get_chip_dev_id>
2ffeef48:	2800      	cmp	r0, #0
2ffeef4a:	da05      	bge.n	2ffeef58 <stm32mp_get_chip_dev_id+0x18>
2ffeef4c:	4804      	ldr	r0, [pc, #16]	@ (2ffeef60 <stm32mp_get_chip_dev_id+0x20>)
2ffeef4e:	f7fd fbb5 	bl	2ffec6bc <tf_log>
2ffeef52:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
2ffeef56:	9301      	str	r3, [sp, #4]
2ffeef58:	9801      	ldr	r0, [sp, #4]
2ffeef5a:	b003      	add	sp, #12
2ffeef5c:	f85d fb04 	ldr.w	pc, [sp], #4
2ffeef60:	2fff70da 	.word	0x2fff70da

2ffeef64 <get_part_number>:
2ffeef64:	b510      	push	{r4, lr}
2ffeef66:	4c0a      	ldr	r4, [pc, #40]	@ (2ffeef90 <get_part_number+0x2c>)
2ffeef68:	6820      	ldr	r0, [r4, #0]
2ffeef6a:	b980      	cbnz	r0, 2ffeef8e <get_part_number+0x2a>
2ffeef6c:	4809      	ldr	r0, [pc, #36]	@ (2ffeef94 <get_part_number+0x30>)
2ffeef6e:	4621      	mov	r1, r4
2ffeef70:	f7fd fd5c 	bl	2ffeca2c <stm32_get_otp_value>
2ffeef74:	b118      	cbz	r0, 2ffeef7e <get_part_number+0x1a>
2ffeef76:	f7fd fc3d 	bl	2ffec7f4 <console_flush>
2ffeef7a:	f7fa ea30 	blx	2ffe93dc <do_panic>
2ffeef7e:	7823      	ldrb	r3, [r4, #0]
2ffeef80:	6023      	str	r3, [r4, #0]
2ffeef82:	f7ff ffdd 	bl	2ffeef40 <stm32mp_get_chip_dev_id>
2ffeef86:	6823      	ldr	r3, [r4, #0]
2ffeef88:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
2ffeef8c:	6020      	str	r0, [r4, #0]
2ffeef8e:	bd10      	pop	{r4, pc}
2ffeef90:	2fff96dc 	.word	0x2fff96dc
2ffeef94:	2fff7100 	.word	0x2fff7100

2ffeef98 <stm32mp_get_soc_name>:
2ffeef98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffeef9a:	4605      	mov	r5, r0
2ffeef9c:	f7ff ffe2 	bl	2ffeef64 <get_part_number>
2ffeefa0:	4b39      	ldr	r3, [pc, #228]	@ (2ffef088 <stm32mp_get_soc_name+0xf0>)
2ffeefa2:	4298      	cmp	r0, r3
2ffeefa4:	d046      	beq.n	2ffef034 <stm32mp_get_soc_name+0x9c>
2ffeefa6:	d833      	bhi.n	2ffef010 <stm32mp_get_soc_name+0x78>
2ffeefa8:	3b51      	subs	r3, #81	@ 0x51
2ffeefaa:	4298      	cmp	r0, r3
2ffeefac:	d838      	bhi.n	2ffef020 <stm32mp_get_soc_name+0x88>
2ffeefae:	3b0c      	subs	r3, #12
2ffeefb0:	4298      	cmp	r0, r3
2ffeefb2:	d81e      	bhi.n	2ffeeff2 <stm32mp_get_soc_name+0x5a>
2ffeefb4:	f1b0 6fa0 	cmp.w	r0, #83886080	@ 0x5000000
2ffeefb8:	d03e      	beq.n	2ffef038 <stm32mp_get_soc_name+0xa0>
2ffeefba:	4a34      	ldr	r2, [pc, #208]	@ (2ffef08c <stm32mp_get_soc_name+0xf4>)
2ffeefbc:	4c34      	ldr	r4, [pc, #208]	@ (2ffef090 <stm32mp_get_soc_name+0xf8>)
2ffeefbe:	4b35      	ldr	r3, [pc, #212]	@ (2ffef094 <stm32mp_get_soc_name+0xfc>)
2ffeefc0:	4290      	cmp	r0, r2
2ffeefc2:	bf18      	it	ne
2ffeefc4:	461c      	movne	r4, r3
2ffeefc6:	4834      	ldr	r0, [pc, #208]	@ (2ffef098 <stm32mp_get_soc_name+0x100>)
2ffeefc8:	a903      	add	r1, sp, #12
2ffeefca:	f7fd fd2f 	bl	2ffeca2c <stm32_get_otp_value>
2ffeefce:	2800      	cmp	r0, #0
2ffeefd0:	d03a      	beq.n	2ffef048 <stm32mp_get_soc_name+0xb0>
2ffeefd2:	f7fd fc0f 	bl	2ffec7f4 <console_flush>
2ffeefd6:	f7fa ea02 	blx	2ffe93dc <do_panic>
2ffeefda:	2b0b      	cmp	r3, #11
2ffeefdc:	d820      	bhi.n	2ffef020 <stm32mp_get_soc_name+0x88>
2ffeefde:	e8df f003 	tbb	[pc, r3]
2ffeefe2:	062d      	.short	0x062d
2ffeefe4:	1f1f1f1f 	.word	0x1f1f1f1f
2ffeefe8:	1f1f1f1f 	.word	0x1f1f1f1f
2ffeefec:	2725      	.short	0x2725
2ffeefee:	4c2b      	ldr	r4, [pc, #172]	@ (2ffef09c <stm32mp_get_soc_name+0x104>)
2ffeeff0:	e7e9      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffeeff2:	f100 437b 	add.w	r3, r0, #4211081216	@ 0xfb000000
2ffeeff6:	3b24      	subs	r3, #36	@ 0x24
2ffeeff8:	2b0b      	cmp	r3, #11
2ffeeffa:	d811      	bhi.n	2ffef020 <stm32mp_get_soc_name+0x88>
2ffeeffc:	e8df f003 	tbb	[pc, r3]
2ffef000:	10100620 	.word	0x10100620
2ffef004:	10101010 	.word	0x10101010
2ffef008:	14121010 	.word	0x14121010
2ffef00c:	4c24      	ldr	r4, [pc, #144]	@ (2ffef0a0 <stm32mp_get_soc_name+0x108>)
2ffef00e:	e7da      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef010:	4b24      	ldr	r3, [pc, #144]	@ (2ffef0a4 <stm32mp_get_soc_name+0x10c>)
2ffef012:	4298      	cmp	r0, r3
2ffef014:	d016      	beq.n	2ffef044 <stm32mp_get_soc_name+0xac>
2ffef016:	f100 437b 	add.w	r3, r0, #4211081216	@ 0xfb000000
2ffef01a:	3ba4      	subs	r3, #164	@ 0xa4
2ffef01c:	2b0b      	cmp	r3, #11
2ffef01e:	d9dc      	bls.n	2ffeefda <stm32mp_get_soc_name+0x42>
2ffef020:	4c1c      	ldr	r4, [pc, #112]	@ (2ffef094 <stm32mp_get_soc_name+0xfc>)
2ffef022:	e7d0      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef024:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0a8 <stm32mp_get_soc_name+0x110>)
2ffef026:	e7ce      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef028:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0ac <stm32mp_get_soc_name+0x114>)
2ffef02a:	e7cc      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef02c:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0b0 <stm32mp_get_soc_name+0x118>)
2ffef02e:	e7ca      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef030:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0b4 <stm32mp_get_soc_name+0x11c>)
2ffef032:	e7c8      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef034:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0b8 <stm32mp_get_soc_name+0x120>)
2ffef036:	e7c6      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef038:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0bc <stm32mp_get_soc_name+0x124>)
2ffef03a:	e7c4      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef03c:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0c0 <stm32mp_get_soc_name+0x128>)
2ffef03e:	e7c2      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef040:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0c4 <stm32mp_get_soc_name+0x12c>)
2ffef042:	e7c0      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef044:	4c20      	ldr	r4, [pc, #128]	@ (2ffef0c8 <stm32mp_get_soc_name+0x130>)
2ffef046:	e7be      	b.n	2ffeefc6 <stm32mp_get_soc_name+0x2e>
2ffef048:	9b03      	ldr	r3, [sp, #12]
2ffef04a:	f3c3 63c2 	ubfx	r3, r3, #27, #3
2ffef04e:	3b01      	subs	r3, #1
2ffef050:	2b03      	cmp	r3, #3
2ffef052:	bf96      	itet	ls
2ffef054:	4a1d      	ldrls	r2, [pc, #116]	@ (2ffef0cc <stm32mp_get_soc_name+0x134>)
2ffef056:	4e1e      	ldrhi	r6, [pc, #120]	@ (2ffef0d0 <stm32mp_get_soc_name+0x138>)
2ffef058:	f852 6023 	ldrls.w	r6, [r2, r3, lsl #2]
2ffef05c:	f7ff ff5e 	bl	2ffeef1c <stm32mp_get_chip_version>
2ffef060:	4a1c      	ldr	r2, [pc, #112]	@ (2ffef0d4 <stm32mp_get_soc_name+0x13c>)
2ffef062:	f5a0 5000 	sub.w	r0, r0, #8192	@ 0x2000
2ffef066:	9600      	str	r6, [sp, #0]
2ffef068:	2803      	cmp	r0, #3
2ffef06a:	f04f 0114 	mov.w	r1, #20
2ffef06e:	bf96      	itet	ls
2ffef070:	4b19      	ldrls	r3, [pc, #100]	@ (2ffef0d8 <stm32mp_get_soc_name+0x140>)
2ffef072:	4b1a      	ldrhi	r3, [pc, #104]	@ (2ffef0dc <stm32mp_get_soc_name+0x144>)
2ffef074:	f853 3020 	ldrls.w	r3, [r3, r0, lsl #2]
2ffef078:	4628      	mov	r0, r5
2ffef07a:	9301      	str	r3, [sp, #4]
2ffef07c:	4623      	mov	r3, r4
2ffef07e:	f005 f95d 	bl	2fff433c <snprintf>
2ffef082:	b004      	add	sp, #16
2ffef084:	bd70      	pop	{r4, r5, r6, pc}
2ffef086:	bf00      	nop
2ffef088:	05000080 	.word	0x05000080
2ffef08c:	05000001 	.word	0x05000001
2ffef090:	2fff7115 	.word	0x2fff7115
2ffef094:	2fff714c 	.word	0x2fff714c
2ffef098:	2fff7151 	.word	0x2fff7151
2ffef09c:	2fff713d 	.word	0x2fff713d
2ffef0a0:	2fff711f 	.word	0x2fff711f
2ffef0a4:	05000081 	.word	0x05000081
2ffef0a8:	2fff7124 	.word	0x2fff7124
2ffef0ac:	2fff7129 	.word	0x2fff7129
2ffef0b0:	2fff7142 	.word	0x2fff7142
2ffef0b4:	2fff7147 	.word	0x2fff7147
2ffef0b8:	2fff712e 	.word	0x2fff712e
2ffef0bc:	2fff7110 	.word	0x2fff7110
2ffef0c0:	2fff7138 	.word	0x2fff7138
2ffef0c4:	2fff711a 	.word	0x2fff711a
2ffef0c8:	2fff7133 	.word	0x2fff7133
2ffef0cc:	2fff45f8 	.word	0x2fff45f8
2ffef0d0:	2fff714e 	.word	0x2fff714e
2ffef0d4:	2fff715d 	.word	0x2fff715d
2ffef0d8:	2fff45e8 	.word	0x2fff45e8
2ffef0dc:	2fff714f 	.word	0x2fff714f

2ffef0e0 <stm32mp_print_cpuinfo>:
2ffef0e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffef0e2:	a801      	add	r0, sp, #4
2ffef0e4:	f7ff ff58 	bl	2ffeef98 <stm32mp_get_soc_name>
2ffef0e8:	4803      	ldr	r0, [pc, #12]	@ (2ffef0f8 <stm32mp_print_cpuinfo+0x18>)
2ffef0ea:	a901      	add	r1, sp, #4
2ffef0ec:	f7fd fae6 	bl	2ffec6bc <tf_log>
2ffef0f0:	b007      	add	sp, #28
2ffef0f2:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef0f6:	bf00      	nop
2ffef0f8:	2fff7170 	.word	0x2fff7170

2ffef0fc <stm32mp_print_boardinfo>:
2ffef0fc:	b507      	push	{r0, r1, r2, lr}
2ffef0fe:	2300      	movs	r3, #0
2ffef100:	4806      	ldr	r0, [pc, #24]	@ (2ffef11c <stm32mp_print_boardinfo+0x20>)
2ffef102:	a901      	add	r1, sp, #4
2ffef104:	9301      	str	r3, [sp, #4]
2ffef106:	f7fd fc91 	bl	2ffeca2c <stm32_get_otp_value>
2ffef10a:	b918      	cbnz	r0, 2ffef114 <stm32mp_print_boardinfo+0x18>
2ffef10c:	9801      	ldr	r0, [sp, #4]
2ffef10e:	b108      	cbz	r0, 2ffef114 <stm32mp_print_boardinfo+0x18>
2ffef110:	f7fd fcae 	bl	2ffeca70 <stm32_display_board_info>
2ffef114:	b003      	add	sp, #12
2ffef116:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef11a:	bf00      	nop
2ffef11c:	2fff717a 	.word	0x2fff717a

2ffef120 <stm32mp_check_closed_device>:
2ffef120:	b507      	push	{r0, r1, r2, lr}
2ffef122:	a901      	add	r1, sp, #4
2ffef124:	4806      	ldr	r0, [pc, #24]	@ (2ffef140 <stm32mp_check_closed_device+0x20>)
2ffef126:	f7fd fc81 	bl	2ffeca2c <stm32_get_otp_value>
2ffef12a:	9b01      	ldr	r3, [sp, #4]
2ffef12c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
2ffef130:	4303      	orrs	r3, r0
2ffef132:	4804      	ldr	r0, [pc, #16]	@ (2ffef144 <stm32mp_check_closed_device+0x24>)
2ffef134:	4b04      	ldr	r3, [pc, #16]	@ (2ffef148 <stm32mp_check_closed_device+0x28>)
2ffef136:	bf18      	it	ne
2ffef138:	4618      	movne	r0, r3
2ffef13a:	b003      	add	sp, #12
2ffef13c:	f85d fb04 	ldr.w	pc, [sp], #4
2ffef140:	2fff7183 	.word	0x2fff7183
2ffef144:	a764d182 	.word	0xa764d182
2ffef148:	34d9ccc5 	.word	0x34d9ccc5

2ffef14c <stm32_iwdg_get_instance>:
2ffef14c:	b508      	push	{r3, lr}
2ffef14e:	4b07      	ldr	r3, [pc, #28]	@ (2ffef16c <stm32_iwdg_get_instance+0x20>)
2ffef150:	4298      	cmp	r0, r3
2ffef152:	d006      	beq.n	2ffef162 <stm32_iwdg_get_instance+0x16>
2ffef154:	4b06      	ldr	r3, [pc, #24]	@ (2ffef170 <stm32_iwdg_get_instance+0x24>)
2ffef156:	4298      	cmp	r0, r3
2ffef158:	d005      	beq.n	2ffef166 <stm32_iwdg_get_instance+0x1a>
2ffef15a:	f7fd fb4b 	bl	2ffec7f4 <console_flush>
2ffef15e:	f7fa e93e 	blx	2ffe93dc <do_panic>
2ffef162:	2001      	movs	r0, #1
2ffef164:	bd08      	pop	{r3, pc}
2ffef166:	2000      	movs	r0, #0
2ffef168:	e7fc      	b.n	2ffef164 <stm32_iwdg_get_instance+0x18>
2ffef16a:	bf00      	nop
2ffef16c:	5a002000 	.word	0x5a002000
2ffef170:	5c003000 	.word	0x5c003000

2ffef174 <stm32_iwdg_get_otp_config>:
2ffef174:	b513      	push	{r0, r1, r4, lr}
2ffef176:	4604      	mov	r4, r0
2ffef178:	4809      	ldr	r0, [pc, #36]	@ (2ffef1a0 <stm32_iwdg_get_otp_config+0x2c>)
2ffef17a:	a901      	add	r1, sp, #4
2ffef17c:	f7fd fc56 	bl	2ffeca2c <stm32_get_otp_value>
2ffef180:	b118      	cbz	r0, 2ffef18a <stm32_iwdg_get_otp_config+0x16>
2ffef182:	f7fd fb37 	bl	2ffec7f4 <console_flush>
2ffef186:	f7fa e92a 	blx	2ffe93dc <do_panic>
2ffef18a:	9a01      	ldr	r2, [sp, #4]
2ffef18c:	3403      	adds	r4, #3
2ffef18e:	2301      	movs	r3, #1
2ffef190:	40a3      	lsls	r3, r4
2ffef192:	4213      	tst	r3, r2
2ffef194:	bf14      	ite	ne
2ffef196:	2001      	movne	r0, #1
2ffef198:	2000      	moveq	r0, #0
2ffef19a:	b002      	add	sp, #8
2ffef19c:	bd10      	pop	{r4, pc}
2ffef19e:	bf00      	nop
2ffef1a0:	2fff718c 	.word	0x2fff718c

2ffef1a4 <stm32mp_bkpram_get_access>:
2ffef1a4:	4a06      	ldr	r2, [pc, #24]	@ (2ffef1c0 <stm32mp_bkpram_get_access+0x1c>)
2ffef1a6:	2001      	movs	r0, #1
2ffef1a8:	6853      	ldr	r3, [r2, #4]
2ffef1aa:	6b11      	ldr	r1, [r2, #48]	@ 0x30
2ffef1ac:	43db      	mvns	r3, r3
2ffef1ae:	f003 0307 	and.w	r3, r3, #7
2ffef1b2:	f443 031f 	orr.w	r3, r3, #10420224	@ 0x9f0000
2ffef1b6:	400b      	ands	r3, r1
2ffef1b8:	bf18      	it	ne
2ffef1ba:	63d3      	strne	r3, [r2, #60]	@ 0x3c
2ffef1bc:	4770      	bx	lr
2ffef1be:	bf00      	nop
2ffef1c0:	5c00a000 	.word	0x5c00a000

2ffef1c4 <tzc400_set_action>:
2ffef1c4:	b508      	push	{r3, lr}
2ffef1c6:	4b06      	ldr	r3, [pc, #24]	@ (2ffef1e0 <tzc400_set_action+0x1c>)
2ffef1c8:	681b      	ldr	r3, [r3, #0]
2ffef1ca:	b91b      	cbnz	r3, 2ffef1d4 <tzc400_set_action+0x10>
2ffef1cc:	21b5      	movs	r1, #181	@ 0xb5
2ffef1ce:	4805      	ldr	r0, [pc, #20]	@ (2ffef1e4 <tzc400_set_action+0x20>)
2ffef1d0:	f003 f9a2 	bl	2fff2518 <__assert>
2ffef1d4:	2803      	cmp	r0, #3
2ffef1d6:	d901      	bls.n	2ffef1dc <tzc400_set_action+0x18>
2ffef1d8:	21b6      	movs	r1, #182	@ 0xb6
2ffef1da:	e7f8      	b.n	2ffef1ce <tzc400_set_action+0xa>
2ffef1dc:	6058      	str	r0, [r3, #4]
2ffef1de:	bd08      	pop	{r3, pc}
2ffef1e0:	2fff96e0 	.word	0x2fff96e0
2ffef1e4:	2fff71a4 	.word	0x2fff71a4

2ffef1e8 <tzc400_init>:
2ffef1e8:	b508      	push	{r3, lr}
2ffef1ea:	b918      	cbnz	r0, 2ffef1f4 <tzc400_init+0xc>
2ffef1ec:	4812      	ldr	r0, [pc, #72]	@ (2ffef238 <tzc400_init+0x50>)
2ffef1ee:	21c2      	movs	r1, #194	@ 0xc2
2ffef1f0:	f003 f992 	bl	2fff2518 <__assert>
2ffef1f4:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	@ 0xfe0
2ffef1f8:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	@ 0xfe4
2ffef1fc:	4a0f      	ldr	r2, [pc, #60]	@ (2ffef23c <tzc400_init+0x54>)
2ffef1fe:	0209      	lsls	r1, r1, #8
2ffef200:	6010      	str	r0, [r2, #0]
2ffef202:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
2ffef206:	4319      	orrs	r1, r3
2ffef208:	f5b1 6f8c 	cmp.w	r1, #1120	@ 0x460
2ffef20c:	d006      	beq.n	2ffef21c <tzc400_init+0x34>
2ffef20e:	480c      	ldr	r0, [pc, #48]	@ (2ffef240 <tzc400_init+0x58>)
2ffef210:	f7fd fa54 	bl	2ffec6bc <tf_log>
2ffef214:	f7fd faee 	bl	2ffec7f4 <console_flush>
2ffef218:	f7fa e8e0 	blx	2ffe93dc <do_panic>
2ffef21c:	6803      	ldr	r3, [r0, #0]
2ffef21e:	f3c3 6101 	ubfx	r1, r3, #24, #2
2ffef222:	3101      	adds	r1, #1
2ffef224:	7151      	strb	r1, [r2, #5]
2ffef226:	f3c3 2105 	ubfx	r1, r3, #8, #6
2ffef22a:	f003 031f 	and.w	r3, r3, #31
2ffef22e:	3101      	adds	r1, #1
2ffef230:	3301      	adds	r3, #1
2ffef232:	7111      	strb	r1, [r2, #4]
2ffef234:	7193      	strb	r3, [r2, #6]
2ffef236:	bd08      	pop	{r3, pc}
2ffef238:	2fff71a4 	.word	0x2fff71a4
2ffef23c:	2fff96e0 	.word	0x2fff96e0
2ffef240:	2fff71bd 	.word	0x2fff71bd

2ffef244 <tzc400_configure_region0>:
2ffef244:	b508      	push	{r3, lr}
2ffef246:	4b08      	ldr	r3, [pc, #32]	@ (2ffef268 <tzc400_configure_region0+0x24>)
2ffef248:	681b      	ldr	r3, [r3, #0]
2ffef24a:	b91b      	cbnz	r3, 2ffef254 <tzc400_configure_region0+0x10>
2ffef24c:	21e0      	movs	r1, #224	@ 0xe0
2ffef24e:	4807      	ldr	r0, [pc, #28]	@ (2ffef26c <tzc400_configure_region0+0x28>)
2ffef250:	f003 f962 	bl	2fff2518 <__assert>
2ffef254:	2803      	cmp	r0, #3
2ffef256:	d901      	bls.n	2ffef25c <tzc400_configure_region0+0x18>
2ffef258:	21e1      	movs	r1, #225	@ 0xe1
2ffef25a:	e7f8      	b.n	2ffef24e <tzc400_configure_region0+0xa>
2ffef25c:	0780      	lsls	r0, r0, #30
2ffef25e:	f8c3 0110 	str.w	r0, [r3, #272]	@ 0x110
2ffef262:	f8c3 1114 	str.w	r1, [r3, #276]	@ 0x114
2ffef266:	bd08      	pop	{r3, pc}
2ffef268:	2fff96e0 	.word	0x2fff96e0
2ffef26c:	2fff71a4 	.word	0x2fff71a4

2ffef270 <tzc400_configure_region>:
2ffef270:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef274:	4d2d      	ldr	r5, [pc, #180]	@ (2ffef32c <tzc400_configure_region+0xbc>)
2ffef276:	e9dd 7c08 	ldrd	r7, ip, [sp, #32]
2ffef27a:	682c      	ldr	r4, [r5, #0]
2ffef27c:	f8dd e028 	ldr.w	lr, [sp, #40]	@ 0x28
2ffef280:	b91c      	cbnz	r4, 2ffef28a <tzc400_configure_region+0x1a>
2ffef282:	21f7      	movs	r1, #247	@ 0xf7
2ffef284:	482a      	ldr	r0, [pc, #168]	@ (2ffef330 <tzc400_configure_region+0xc0>)
2ffef286:	f003 f947 	bl	2fff2518 <__assert>
2ffef28a:	796e      	ldrb	r6, [r5, #5]
2ffef28c:	280f      	cmp	r0, #15
2ffef28e:	bf02      	ittt	eq
2ffef290:	2001      	moveq	r0, #1
2ffef292:	40b0      	lsleq	r0, r6
2ffef294:	f100 30ff 	addeq.w	r0, r0, #4294967295	@ 0xffffffff
2ffef298:	fa30 f606 	lsrs.w	r6, r0, r6
2ffef29c:	d102      	bne.n	2ffef2a4 <tzc400_configure_region+0x34>
2ffef29e:	79ae      	ldrb	r6, [r5, #6]
2ffef2a0:	428e      	cmp	r6, r1
2ffef2a2:	d801      	bhi.n	2ffef2a8 <tzc400_configure_region+0x38>
2ffef2a4:	21ff      	movs	r1, #255	@ 0xff
2ffef2a6:	e7ed      	b.n	2ffef284 <tzc400_configure_region+0x14>
2ffef2a8:	792e      	ldrb	r6, [r5, #4]
2ffef2aa:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffef2ae:	f1c6 0a40 	rsb	sl, r6, #64	@ 0x40
2ffef2b2:	f1a6 0920 	sub.w	r9, r6, #32
2ffef2b6:	f1c6 0620 	rsb	r6, r6, #32
2ffef2ba:	fa25 f80a 	lsr.w	r8, r5, sl
2ffef2be:	fa05 f909 	lsl.w	r9, r5, r9
2ffef2c2:	fa25 f606 	lsr.w	r6, r5, r6
2ffef2c6:	ea48 0809 	orr.w	r8, r8, r9
2ffef2ca:	ea48 0806 	orr.w	r8, r8, r6
2ffef2ce:	fa25 f50a 	lsr.w	r5, r5, sl
2ffef2d2:	45b8      	cmp	r8, r7
2ffef2d4:	eb75 050c 	sbcs.w	r5, r5, ip
2ffef2d8:	d303      	bcc.n	2ffef2e2 <tzc400_configure_region+0x72>
2ffef2da:	42ba      	cmp	r2, r7
2ffef2dc:	eb73 050c 	sbcs.w	r5, r3, ip
2ffef2e0:	d302      	bcc.n	2ffef2e8 <tzc400_configure_region+0x78>
2ffef2e2:	f44f 7183 	mov.w	r1, #262	@ 0x106
2ffef2e6:	e7cd      	b.n	2ffef284 <tzc400_configure_region+0x14>
2ffef2e8:	1c7d      	adds	r5, r7, #1
2ffef2ea:	4315      	orrs	r5, r2
2ffef2ec:	f3c5 050b 	ubfx	r5, r5, #0, #12
2ffef2f0:	b115      	cbz	r5, 2ffef2f8 <tzc400_configure_region+0x88>
2ffef2f2:	f44f 7185 	mov.w	r1, #266	@ 0x10a
2ffef2f6:	e7c5      	b.n	2ffef284 <tzc400_configure_region+0x14>
2ffef2f8:	f1be 0f03 	cmp.w	lr, #3
2ffef2fc:	d902      	bls.n	2ffef304 <tzc400_configure_region+0x94>
2ffef2fe:	f44f 7186 	mov.w	r1, #268	@ 0x10c
2ffef302:	e7bf      	b.n	2ffef284 <tzc400_configure_region+0x14>
2ffef304:	eb04 1141 	add.w	r1, r4, r1, lsl #5
2ffef308:	ea40 708e 	orr.w	r0, r0, lr, lsl #30
2ffef30c:	f8c1 2100 	str.w	r2, [r1, #256]	@ 0x100
2ffef310:	f8c1 3104 	str.w	r3, [r1, #260]	@ 0x104
2ffef314:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
2ffef316:	f8c1 7108 	str.w	r7, [r1, #264]	@ 0x108
2ffef31a:	f8c1 c10c 	str.w	ip, [r1, #268]	@ 0x10c
2ffef31e:	f8c1 0110 	str.w	r0, [r1, #272]	@ 0x110
2ffef322:	f8c1 3114 	str.w	r3, [r1, #276]	@ 0x114
2ffef326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffef32a:	bf00      	nop
2ffef32c:	2fff96e0 	.word	0x2fff96e0
2ffef330:	2fff71a4 	.word	0x2fff71a4

2ffef334 <tzc400_update_filters>:
2ffef334:	b538      	push	{r3, r4, r5, lr}
2ffef336:	4b0e      	ldr	r3, [pc, #56]	@ (2ffef370 <tzc400_update_filters+0x3c>)
2ffef338:	795c      	ldrb	r4, [r3, #5]
2ffef33a:	fa31 f204 	lsrs.w	r2, r1, r4
2ffef33e:	d102      	bne.n	2ffef346 <tzc400_update_filters+0x12>
2ffef340:	799a      	ldrb	r2, [r3, #6]
2ffef342:	4282      	cmp	r2, r0
2ffef344:	d804      	bhi.n	2ffef350 <tzc400_update_filters+0x1c>
2ffef346:	480b      	ldr	r0, [pc, #44]	@ (2ffef374 <tzc400_update_filters+0x40>)
2ffef348:	f44f 718b 	mov.w	r1, #278	@ 0x116
2ffef34c:	f003 f8e4 	bl	2fff2518 <__assert>
2ffef350:	681a      	ldr	r2, [r3, #0]
2ffef352:	f1c4 0420 	rsb	r4, r4, #32
2ffef356:	0140      	lsls	r0, r0, #5
2ffef358:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffef35c:	f502 7288 	add.w	r2, r2, #272	@ 0x110
2ffef360:	fa25 f404 	lsr.w	r4, r5, r4
2ffef364:	5813      	ldr	r3, [r2, r0]
2ffef366:	ea23 0304 	bic.w	r3, r3, r4
2ffef36a:	4319      	orrs	r1, r3
2ffef36c:	5011      	str	r1, [r2, r0]
2ffef36e:	bd38      	pop	{r3, r4, r5, pc}
2ffef370:	2fff96e0 	.word	0x2fff96e0
2ffef374:	2fff71a4 	.word	0x2fff71a4

2ffef378 <tzc400_enable_filters>:
2ffef378:	b538      	push	{r3, r4, r5, lr}
2ffef37a:	4b16      	ldr	r3, [pc, #88]	@ (2ffef3d4 <tzc400_enable_filters+0x5c>)
2ffef37c:	681a      	ldr	r2, [r3, #0]
2ffef37e:	b122      	cbz	r2, 2ffef38a <tzc400_enable_filters+0x12>
2ffef380:	795c      	ldrb	r4, [r3, #5]
2ffef382:	2100      	movs	r1, #0
2ffef384:	428c      	cmp	r4, r1
2ffef386:	d805      	bhi.n	2ffef394 <tzc400_enable_filters+0x1c>
2ffef388:	bd38      	pop	{r3, r4, r5, pc}
2ffef38a:	4813      	ldr	r0, [pc, #76]	@ (2ffef3d8 <tzc400_enable_filters+0x60>)
2ffef38c:	f240 1121 	movw	r1, #289	@ 0x121
2ffef390:	f003 f8c2 	bl	2fff2518 <__assert>
2ffef394:	6893      	ldr	r3, [r2, #8]
2ffef396:	f102 0508 	add.w	r5, r2, #8
2ffef39a:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffef39e:	40cb      	lsrs	r3, r1
2ffef3a0:	07db      	lsls	r3, r3, #31
2ffef3a2:	d507      	bpl.n	2ffef3b4 <tzc400_enable_filters+0x3c>
2ffef3a4:	b1a1      	cbz	r1, 2ffef3d0 <tzc400_enable_filters+0x58>
2ffef3a6:	480d      	ldr	r0, [pc, #52]	@ (2ffef3dc <tzc400_enable_filters+0x64>)
2ffef3a8:	f7fd f988 	bl	2ffec6bc <tf_log>
2ffef3ac:	f7fd fa22 	bl	2ffec7f4 <console_flush>
2ffef3b0:	f7fa e814 	blx	2ffe93dc <do_panic>
2ffef3b4:	6890      	ldr	r0, [r2, #8]
2ffef3b6:	2301      	movs	r3, #1
2ffef3b8:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffef3bc:	408b      	lsls	r3, r1
2ffef3be:	4303      	orrs	r3, r0
2ffef3c0:	f003 000f 	and.w	r0, r3, #15
2ffef3c4:	6090      	str	r0, [r2, #8]
2ffef3c6:	6828      	ldr	r0, [r5, #0]
2ffef3c8:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffef3cc:	4283      	cmp	r3, r0
2ffef3ce:	d1fa      	bne.n	2ffef3c6 <tzc400_enable_filters+0x4e>
2ffef3d0:	3101      	adds	r1, #1
2ffef3d2:	e7d7      	b.n	2ffef384 <tzc400_enable_filters+0xc>
2ffef3d4:	2fff96e0 	.word	0x2fff96e0
2ffef3d8:	2fff71a4 	.word	0x2fff71a4
2ffef3dc:	2fff71e1 	.word	0x2fff71e1

2ffef3e0 <tzc400_disable_filters>:
2ffef3e0:	4811      	ldr	r0, [pc, #68]	@ (2ffef428 <tzc400_disable_filters+0x48>)
2ffef3e2:	b538      	push	{r3, r4, r5, lr}
2ffef3e4:	6803      	ldr	r3, [r0, #0]
2ffef3e6:	b923      	cbnz	r3, 2ffef3f2 <tzc400_disable_filters+0x12>
2ffef3e8:	4810      	ldr	r0, [pc, #64]	@ (2ffef42c <tzc400_disable_filters+0x4c>)
2ffef3ea:	f240 1143 	movw	r1, #323	@ 0x143
2ffef3ee:	f003 f893 	bl	2fff2518 <__assert>
2ffef3f2:	689a      	ldr	r2, [r3, #8]
2ffef3f4:	f103 0108 	add.w	r1, r3, #8
2ffef3f8:	7944      	ldrb	r4, [r0, #5]
2ffef3fa:	2501      	movs	r5, #1
2ffef3fc:	f3c2 4200 	ubfx	r2, r2, #16, #1
2ffef400:	4294      	cmp	r4, r2
2ffef402:	d800      	bhi.n	2ffef406 <tzc400_disable_filters+0x26>
2ffef404:	bd38      	pop	{r3, r4, r5, pc}
2ffef406:	680b      	ldr	r3, [r1, #0]
2ffef408:	fa05 f002 	lsl.w	r0, r5, r2
2ffef40c:	0c1b      	lsrs	r3, r3, #16
2ffef40e:	ea23 0300 	bic.w	r3, r3, r0
2ffef412:	f003 030f 	and.w	r3, r3, #15
2ffef416:	600b      	str	r3, [r1, #0]
2ffef418:	6808      	ldr	r0, [r1, #0]
2ffef41a:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffef41e:	4283      	cmp	r3, r0
2ffef420:	d1fa      	bne.n	2ffef418 <tzc400_disable_filters+0x38>
2ffef422:	3201      	adds	r2, #1
2ffef424:	e7ec      	b.n	2ffef400 <tzc400_disable_filters+0x20>
2ffef426:	bf00      	nop
2ffef428:	2fff96e0 	.word	0x2fff96e0
2ffef42c:	2fff71a4 	.word	0x2fff71a4

2ffef430 <is_otp_invalid_mode>:
2ffef430:	4b07      	ldr	r3, [pc, #28]	@ (2ffef450 <is_otp_invalid_mode+0x20>)
2ffef432:	b510      	push	{r4, lr}
2ffef434:	68db      	ldr	r3, [r3, #12]
2ffef436:	f003 0304 	and.w	r3, r3, #4
2ffef43a:	2b00      	cmp	r3, #0
2ffef43c:	bf14      	ite	ne
2ffef43e:	2401      	movne	r4, #1
2ffef440:	2400      	moveq	r4, #0
2ffef442:	d002      	beq.n	2ffef44a <is_otp_invalid_mode+0x1a>
2ffef444:	4803      	ldr	r0, [pc, #12]	@ (2ffef454 <is_otp_invalid_mode+0x24>)
2ffef446:	f7fd f939 	bl	2ffec6bc <tf_log>
2ffef44a:	4620      	mov	r0, r4
2ffef44c:	bd10      	pop	{r4, pc}
2ffef44e:	bf00      	nop
2ffef450:	5c005000 	.word	0x5c005000
2ffef454:	2fff7213 	.word	0x2fff7213

2ffef458 <bsec_lock>:
2ffef458:	b508      	push	{r3, lr}
2ffef45a:	f003 fd64 	bl	2fff2f26 <stm32mp_lock_available>
2ffef45e:	b120      	cbz	r0, 2ffef46a <bsec_lock+0x12>
2ffef460:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef464:	4801      	ldr	r0, [pc, #4]	@ (2ffef46c <bsec_lock+0x14>)
2ffef466:	f008 bbdb 	b.w	2fff7c20 <__spin_lock_from_thumb>
2ffef46a:	bd08      	pop	{r3, pc}
2ffef46c:	2fff96e8 	.word	0x2fff96e8

2ffef470 <bsec_unlock>:
2ffef470:	b508      	push	{r3, lr}
2ffef472:	f003 fd58 	bl	2fff2f26 <stm32mp_lock_available>
2ffef476:	b120      	cbz	r0, 2ffef482 <bsec_unlock+0x12>
2ffef478:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef47c:	4801      	ldr	r0, [pc, #4]	@ (2ffef484 <bsec_unlock+0x14>)
2ffef47e:	f008 bbc7 	b.w	2fff7c10 <__spin_unlock_from_thumb>
2ffef482:	bd08      	pop	{r3, pc}
2ffef484:	2fff96e8 	.word	0x2fff96e8

2ffef488 <bsec_power_safmem>:
2ffef488:	b510      	push	{r4, lr}
2ffef48a:	4604      	mov	r4, r0
2ffef48c:	f7ff ffe4 	bl	2ffef458 <bsec_lock>
2ffef490:	4a12      	ldr	r2, [pc, #72]	@ (2ffef4dc <bsec_power_safmem+0x54>)
2ffef492:	6813      	ldr	r3, [r2, #0]
2ffef494:	b16c      	cbz	r4, 2ffef4b2 <bsec_power_safmem+0x2a>
2ffef496:	f64f 74ff 	movw	r4, #65535	@ 0xffff
2ffef49a:	f043 0301 	orr.w	r3, r3, #1
2ffef49e:	6013      	str	r3, [r2, #0]
2ffef4a0:	68d3      	ldr	r3, [r2, #12]
2ffef4a2:	0699      	lsls	r1, r3, #26
2ffef4a4:	d413      	bmi.n	2ffef4ce <bsec_power_safmem+0x46>
2ffef4a6:	b984      	cbnz	r4, 2ffef4ca <bsec_power_safmem+0x42>
2ffef4a8:	f7ff ffe2 	bl	2ffef470 <bsec_unlock>
2ffef4ac:	f06f 0006 	mvn.w	r0, #6
2ffef4b0:	bd10      	pop	{r4, pc}
2ffef4b2:	f023 0301 	bic.w	r3, r3, #1
2ffef4b6:	f64f 74ff 	movw	r4, #65535	@ 0xffff
2ffef4ba:	6013      	str	r3, [r2, #0]
2ffef4bc:	68d3      	ldr	r3, [r2, #12]
2ffef4be:	069b      	lsls	r3, r3, #26
2ffef4c0:	d505      	bpl.n	2ffef4ce <bsec_power_safmem+0x46>
2ffef4c2:	2c00      	cmp	r4, #0
2ffef4c4:	d0f0      	beq.n	2ffef4a8 <bsec_power_safmem+0x20>
2ffef4c6:	3c01      	subs	r4, #1
2ffef4c8:	e7f8      	b.n	2ffef4bc <bsec_power_safmem+0x34>
2ffef4ca:	3c01      	subs	r4, #1
2ffef4cc:	e7e8      	b.n	2ffef4a0 <bsec_power_safmem+0x18>
2ffef4ce:	f7ff ffcf 	bl	2ffef470 <bsec_unlock>
2ffef4d2:	2c00      	cmp	r4, #0
2ffef4d4:	d0ea      	beq.n	2ffef4ac <bsec_power_safmem+0x24>
2ffef4d6:	2000      	movs	r0, #0
2ffef4d8:	e7ea      	b.n	2ffef4b0 <bsec_power_safmem+0x28>
2ffef4da:	bf00      	nop
2ffef4dc:	5c005000 	.word	0x5c005000

2ffef4e0 <otp_bank_offset>:
2ffef4e0:	285f      	cmp	r0, #95	@ 0x5f
2ffef4e2:	b508      	push	{r3, lr}
2ffef4e4:	d903      	bls.n	2ffef4ee <otp_bank_offset+0xe>
2ffef4e6:	4803      	ldr	r0, [pc, #12]	@ (2ffef4f4 <otp_bank_offset+0x14>)
2ffef4e8:	21bb      	movs	r1, #187	@ 0xbb
2ffef4ea:	f003 f815 	bl	2fff2518 <__assert>
2ffef4ee:	0940      	lsrs	r0, r0, #5
2ffef4f0:	0080      	lsls	r0, r0, #2
2ffef4f2:	bd08      	pop	{r3, pc}
2ffef4f4:	2fff722d 	.word	0x2fff722d

2ffef4f8 <bsec_check_error>:
2ffef4f8:	b538      	push	{r3, r4, r5, lr}
2ffef4fa:	f000 031f 	and.w	r3, r0, #31
2ffef4fe:	2401      	movs	r4, #1
2ffef500:	460d      	mov	r5, r1
2ffef502:	409c      	lsls	r4, r3
2ffef504:	f7ff ffec 	bl	2ffef4e0 <otp_bank_offset>
2ffef508:	4b07      	ldr	r3, [pc, #28]	@ (2ffef528 <bsec_check_error+0x30>)
2ffef50a:	4602      	mov	r2, r0
2ffef50c:	58c0      	ldr	r0, [r0, r3]
2ffef50e:	4020      	ands	r0, r4
2ffef510:	d107      	bne.n	2ffef522 <bsec_check_error+0x2a>
2ffef512:	b12d      	cbz	r5, 2ffef520 <bsec_check_error+0x28>
2ffef514:	3b18      	subs	r3, #24
2ffef516:	58d0      	ldr	r0, [r2, r3]
2ffef518:	4020      	ands	r0, r4
2ffef51a:	bf18      	it	ne
2ffef51c:	f06f 0001 	mvnne.w	r0, #1
2ffef520:	bd38      	pop	{r3, r4, r5, pc}
2ffef522:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef526:	e7fb      	b.n	2ffef520 <bsec_check_error+0x28>
2ffef528:	5c005034 	.word	0x5c005034

2ffef52c <bsec_probe>:
2ffef52c:	b508      	push	{r3, lr}
2ffef52e:	f7ff ff7f 	bl	2ffef430 <is_otp_invalid_mode>
2ffef532:	b980      	cbnz	r0, 2ffef556 <bsec_probe+0x2a>
2ffef534:	4a0a      	ldr	r2, [pc, #40]	@ (2ffef560 <bsec_probe+0x34>)
2ffef536:	f8d2 3ff4 	ldr.w	r3, [r2, #4084]	@ 0xff4
2ffef53a:	f8d2 2ff8 	ldr.w	r2, [r2, #4088]	@ 0xff8
2ffef53e:	b2db      	uxtb	r3, r3
2ffef540:	2b11      	cmp	r3, #17
2ffef542:	d001      	beq.n	2ffef548 <bsec_probe+0x1c>
2ffef544:	2b20      	cmp	r3, #32
2ffef546:	d102      	bne.n	2ffef54e <bsec_probe+0x22>
2ffef548:	4b06      	ldr	r3, [pc, #24]	@ (2ffef564 <bsec_probe+0x38>)
2ffef54a:	429a      	cmp	r2, r3
2ffef54c:	d006      	beq.n	2ffef55c <bsec_probe+0x30>
2ffef54e:	f7fd f951 	bl	2ffec7f4 <console_flush>
2ffef552:	f7f9 ef44 	blx	2ffe93dc <do_panic>
2ffef556:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef55a:	bd08      	pop	{r3, pc}
2ffef55c:	2000      	movs	r0, #0
2ffef55e:	e7fc      	b.n	2ffef55a <bsec_probe+0x2e>
2ffef560:	5c005000 	.word	0x5c005000
2ffef564:	00100032 	.word	0x00100032

2ffef568 <bsec_read_debug_conf>:
2ffef568:	4b01      	ldr	r3, [pc, #4]	@ (2ffef570 <bsec_read_debug_conf+0x8>)
2ffef56a:	6958      	ldr	r0, [r3, #20]
2ffef56c:	4770      	bx	lr
2ffef56e:	bf00      	nop
2ffef570:	5c005000 	.word	0x5c005000

2ffef574 <bsec_read_sr_lock>:
2ffef574:	b538      	push	{r3, r4, r5, lr}
2ffef576:	4604      	mov	r4, r0
2ffef578:	460d      	mov	r5, r1
2ffef57a:	f7ff ffb1 	bl	2ffef4e0 <otp_bank_offset>
2ffef57e:	f004 021f 	and.w	r2, r4, #31
2ffef582:	2301      	movs	r3, #1
2ffef584:	2c5f      	cmp	r4, #95	@ 0x5f
2ffef586:	fa03 f302 	lsl.w	r3, r3, r2
2ffef58a:	d808      	bhi.n	2ffef59e <bsec_read_sr_lock+0x2a>
2ffef58c:	4a05      	ldr	r2, [pc, #20]	@ (2ffef5a4 <bsec_read_sr_lock+0x30>)
2ffef58e:	5882      	ldr	r2, [r0, r2]
2ffef590:	2000      	movs	r0, #0
2ffef592:	4213      	tst	r3, r2
2ffef594:	bf14      	ite	ne
2ffef596:	2301      	movne	r3, #1
2ffef598:	2300      	moveq	r3, #0
2ffef59a:	702b      	strb	r3, [r5, #0]
2ffef59c:	bd38      	pop	{r3, r4, r5, pc}
2ffef59e:	f06f 0003 	mvn.w	r0, #3
2ffef5a2:	e7fb      	b.n	2ffef59c <bsec_read_sr_lock+0x28>
2ffef5a4:	5c005094 	.word	0x5c005094

2ffef5a8 <bsec_read_sw_lock>:
2ffef5a8:	b538      	push	{r3, r4, r5, lr}
2ffef5aa:	4604      	mov	r4, r0
2ffef5ac:	460d      	mov	r5, r1
2ffef5ae:	f7ff ff97 	bl	2ffef4e0 <otp_bank_offset>
2ffef5b2:	f004 021f 	and.w	r2, r4, #31
2ffef5b6:	2301      	movs	r3, #1
2ffef5b8:	2c5f      	cmp	r4, #95	@ 0x5f
2ffef5ba:	fa03 f302 	lsl.w	r3, r3, r2
2ffef5be:	d808      	bhi.n	2ffef5d2 <bsec_read_sw_lock+0x2a>
2ffef5c0:	4a05      	ldr	r2, [pc, #20]	@ (2ffef5d8 <bsec_read_sw_lock+0x30>)
2ffef5c2:	5882      	ldr	r2, [r0, r2]
2ffef5c4:	2000      	movs	r0, #0
2ffef5c6:	4213      	tst	r3, r2
2ffef5c8:	bf14      	ite	ne
2ffef5ca:	2301      	movne	r3, #1
2ffef5cc:	2300      	moveq	r3, #0
2ffef5ce:	702b      	strb	r3, [r5, #0]
2ffef5d0:	bd38      	pop	{r3, r4, r5, pc}
2ffef5d2:	f06f 0003 	mvn.w	r0, #3
2ffef5d6:	e7fb      	b.n	2ffef5d0 <bsec_read_sw_lock+0x28>
2ffef5d8:	5c00507c 	.word	0x5c00507c

2ffef5dc <bsec_write_otp>:
2ffef5dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffef5de:	4606      	mov	r6, r0
2ffef5e0:	460c      	mov	r4, r1
2ffef5e2:	f7ff ff25 	bl	2ffef430 <is_otp_invalid_mode>
2ffef5e6:	b9c8      	cbnz	r0, 2ffef61c <bsec_write_otp+0x40>
2ffef5e8:	f10d 0107 	add.w	r1, sp, #7
2ffef5ec:	4620      	mov	r0, r4
2ffef5ee:	f7ff ffdb 	bl	2ffef5a8 <bsec_read_sw_lock>
2ffef5f2:	4605      	mov	r5, r0
2ffef5f4:	b138      	cbz	r0, 2ffef606 <bsec_write_otp+0x2a>
2ffef5f6:	4602      	mov	r2, r0
2ffef5f8:	4621      	mov	r1, r4
2ffef5fa:	480a      	ldr	r0, [pc, #40]	@ (2ffef624 <bsec_write_otp+0x48>)
2ffef5fc:	f7fd f85e 	bl	2ffec6bc <tf_log>
2ffef600:	4628      	mov	r0, r5
2ffef602:	b002      	add	sp, #8
2ffef604:	bd70      	pop	{r4, r5, r6, pc}
2ffef606:	f104 54b8 	add.w	r4, r4, #385875968	@ 0x17000000
2ffef60a:	f7ff ff25 	bl	2ffef458 <bsec_lock>
2ffef60e:	f504 54a4 	add.w	r4, r4, #5248	@ 0x1480
2ffef612:	00a4      	lsls	r4, r4, #2
2ffef614:	6026      	str	r6, [r4, #0]
2ffef616:	f7ff ff2b 	bl	2ffef470 <bsec_unlock>
2ffef61a:	e7f1      	b.n	2ffef600 <bsec_write_otp+0x24>
2ffef61c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2ffef620:	e7ee      	b.n	2ffef600 <bsec_write_otp+0x24>
2ffef622:	bf00      	nop
2ffef624:	2fff7245 	.word	0x2fff7245

2ffef628 <bsec_read_sp_lock>:
2ffef628:	b538      	push	{r3, r4, r5, lr}
2ffef62a:	4604      	mov	r4, r0
2ffef62c:	460d      	mov	r5, r1
2ffef62e:	f7ff ff57 	bl	2ffef4e0 <otp_bank_offset>
2ffef632:	f004 021f 	and.w	r2, r4, #31
2ffef636:	2301      	movs	r3, #1
2ffef638:	2c5f      	cmp	r4, #95	@ 0x5f
2ffef63a:	fa03 f302 	lsl.w	r3, r3, r2
2ffef63e:	d808      	bhi.n	2ffef652 <bsec_read_sp_lock+0x2a>
2ffef640:	4a05      	ldr	r2, [pc, #20]	@ (2ffef658 <bsec_read_sp_lock+0x30>)
2ffef642:	5882      	ldr	r2, [r0, r2]
2ffef644:	2000      	movs	r0, #0
2ffef646:	4213      	tst	r3, r2
2ffef648:	bf14      	ite	ne
2ffef64a:	2301      	movne	r3, #1
2ffef64c:	2300      	moveq	r3, #0
2ffef64e:	702b      	strb	r3, [r5, #0]
2ffef650:	bd38      	pop	{r3, r4, r5, pc}
2ffef652:	f06f 0003 	mvn.w	r0, #3
2ffef656:	e7fb      	b.n	2ffef650 <bsec_read_sp_lock+0x28>
2ffef658:	5c005064 	.word	0x5c005064

2ffef65c <bsec_program_otp>:
2ffef65c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffef65e:	4606      	mov	r6, r0
2ffef660:	460d      	mov	r5, r1
2ffef662:	f7ff fee5 	bl	2ffef430 <is_otp_invalid_mode>
2ffef666:	2800      	cmp	r0, #0
2ffef668:	d161      	bne.n	2ffef72e <bsec_program_otp+0xd2>
2ffef66a:	f10d 0107 	add.w	r1, sp, #7
2ffef66e:	4628      	mov	r0, r5
2ffef670:	f7ff ffda 	bl	2ffef628 <bsec_read_sp_lock>
2ffef674:	4604      	mov	r4, r0
2ffef676:	b138      	cbz	r0, 2ffef688 <bsec_program_otp+0x2c>
2ffef678:	4602      	mov	r2, r0
2ffef67a:	4629      	mov	r1, r5
2ffef67c:	482d      	ldr	r0, [pc, #180]	@ (2ffef734 <bsec_program_otp+0xd8>)
2ffef67e:	f7fd f81d 	bl	2ffec6bc <tf_log>
2ffef682:	4620      	mov	r0, r4
2ffef684:	b003      	add	sp, #12
2ffef686:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffef688:	4628      	mov	r0, r5
2ffef68a:	f7ff ff29 	bl	2ffef4e0 <otp_bank_offset>
2ffef68e:	f005 021f 	and.w	r2, r5, #31
2ffef692:	2301      	movs	r3, #1
2ffef694:	2d5f      	cmp	r5, #95	@ 0x5f
2ffef696:	fa03 f302 	lsl.w	r3, r3, r2
2ffef69a:	d908      	bls.n	2ffef6ae <bsec_program_otp+0x52>
2ffef69c:	4826      	ldr	r0, [pc, #152]	@ (2ffef738 <bsec_program_otp+0xdc>)
2ffef69e:	f06f 0203 	mvn.w	r2, #3
2ffef6a2:	4629      	mov	r1, r5
2ffef6a4:	f06f 0403 	mvn.w	r4, #3
2ffef6a8:	f7fd f808 	bl	2ffec6bc <tf_log>
2ffef6ac:	e7e9      	b.n	2ffef682 <bsec_program_otp+0x26>
2ffef6ae:	4a23      	ldr	r2, [pc, #140]	@ (2ffef73c <bsec_program_otp+0xe0>)
2ffef6b0:	f89d 7007 	ldrb.w	r7, [sp, #7]
2ffef6b4:	5882      	ldr	r2, [r0, r2]
2ffef6b6:	4013      	ands	r3, r2
2ffef6b8:	b907      	cbnz	r7, 2ffef6bc <bsec_program_otp+0x60>
2ffef6ba:	b12b      	cbz	r3, 2ffef6c8 <bsec_program_otp+0x6c>
2ffef6bc:	4820      	ldr	r0, [pc, #128]	@ (2ffef740 <bsec_program_otp+0xe4>)
2ffef6be:	f06f 0404 	mvn.w	r4, #4
2ffef6c2:	f7fc fffb 	bl	2ffec6bc <tf_log>
2ffef6c6:	e7dc      	b.n	2ffef682 <bsec_program_otp+0x26>
2ffef6c8:	4c1e      	ldr	r4, [pc, #120]	@ (2ffef744 <bsec_program_otp+0xe8>)
2ffef6ca:	6923      	ldr	r3, [r4, #16]
2ffef6cc:	06d8      	lsls	r0, r3, #27
2ffef6ce:	d502      	bpl.n	2ffef6d6 <bsec_program_otp+0x7a>
2ffef6d0:	481d      	ldr	r0, [pc, #116]	@ (2ffef748 <bsec_program_otp+0xec>)
2ffef6d2:	f7fc fff3 	bl	2ffec6bc <tf_log>
2ffef6d6:	68e3      	ldr	r3, [r4, #12]
2ffef6d8:	0699      	lsls	r1, r3, #26
2ffef6da:	d406      	bmi.n	2ffef6ea <bsec_program_otp+0x8e>
2ffef6dc:	2001      	movs	r0, #1
2ffef6de:	f7ff fed3 	bl	2ffef488 <bsec_power_safmem>
2ffef6e2:	4604      	mov	r4, r0
2ffef6e4:	2800      	cmp	r0, #0
2ffef6e6:	d1cc      	bne.n	2ffef682 <bsec_program_otp+0x26>
2ffef6e8:	2701      	movs	r7, #1
2ffef6ea:	f7ff feb5 	bl	2ffef458 <bsec_lock>
2ffef6ee:	4b15      	ldr	r3, [pc, #84]	@ (2ffef744 <bsec_program_otp+0xe8>)
2ffef6f0:	f445 7280 	orr.w	r2, r5, #256	@ 0x100
2ffef6f4:	609e      	str	r6, [r3, #8]
2ffef6f6:	605a      	str	r2, [r3, #4]
2ffef6f8:	68da      	ldr	r2, [r3, #12]
2ffef6fa:	0712      	lsls	r2, r2, #28
2ffef6fc:	d4fc      	bmi.n	2ffef6f8 <bsec_program_otp+0x9c>
2ffef6fe:	68db      	ldr	r3, [r3, #12]
2ffef700:	06db      	lsls	r3, r3, #27
2ffef702:	d411      	bmi.n	2ffef728 <bsec_program_otp+0xcc>
2ffef704:	2101      	movs	r1, #1
2ffef706:	4628      	mov	r0, r5
2ffef708:	f7ff fef6 	bl	2ffef4f8 <bsec_check_error>
2ffef70c:	4604      	mov	r4, r0
2ffef70e:	f7ff feaf 	bl	2ffef470 <bsec_unlock>
2ffef712:	2f00      	cmp	r7, #0
2ffef714:	d0b5      	beq.n	2ffef682 <bsec_program_otp+0x26>
2ffef716:	2000      	movs	r0, #0
2ffef718:	f7ff feb6 	bl	2ffef488 <bsec_power_safmem>
2ffef71c:	2800      	cmp	r0, #0
2ffef71e:	d0b0      	beq.n	2ffef682 <bsec_program_otp+0x26>
2ffef720:	f7fd f868 	bl	2ffec7f4 <console_flush>
2ffef724:	f7f9 ee5a 	blx	2ffe93dc <do_panic>
2ffef728:	f06f 0404 	mvn.w	r4, #4
2ffef72c:	e7ef      	b.n	2ffef70e <bsec_program_otp+0xb2>
2ffef72e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffef732:	e7a6      	b.n	2ffef682 <bsec_program_otp+0x26>
2ffef734:	2fff726f 	.word	0x2fff726f
2ffef738:	2fff7298 	.word	0x2fff7298
2ffef73c:	5c00504c 	.word	0x5c00504c
2ffef740:	2fff72bf 	.word	0x2fff72bf
2ffef744:	5c005000 	.word	0x5c005000
2ffef748:	2fff72e8 	.word	0x2fff72e8

2ffef74c <bsec_shadow_read_otp>:
2ffef74c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffef750:	4607      	mov	r7, r0
2ffef752:	460d      	mov	r5, r1
2ffef754:	f7ff fe6c 	bl	2ffef430 <is_otp_invalid_mode>
2ffef758:	4606      	mov	r6, r0
2ffef75a:	2800      	cmp	r0, #0
2ffef75c:	d13a      	bne.n	2ffef7d4 <bsec_shadow_read_otp+0x88>
2ffef75e:	f10d 0107 	add.w	r1, sp, #7
2ffef762:	4628      	mov	r0, r5
2ffef764:	f7ff ff06 	bl	2ffef574 <bsec_read_sr_lock>
2ffef768:	4604      	mov	r4, r0
2ffef76a:	b168      	cbz	r0, 2ffef788 <bsec_shadow_read_otp+0x3c>
2ffef76c:	4602      	mov	r2, r0
2ffef76e:	4629      	mov	r1, r5
2ffef770:	4820      	ldr	r0, [pc, #128]	@ (2ffef7f4 <bsec_shadow_read_otp+0xa8>)
2ffef772:	f7fc ffa3 	bl	2ffec6bc <tf_log>
2ffef776:	4820      	ldr	r0, [pc, #128]	@ (2ffef7f8 <bsec_shadow_read_otp+0xac>)
2ffef778:	4622      	mov	r2, r4
2ffef77a:	4629      	mov	r1, r5
2ffef77c:	f7fc ff9e 	bl	2ffec6bc <tf_log>
2ffef780:	4620      	mov	r0, r4
2ffef782:	b002      	add	sp, #8
2ffef784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffef788:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 2ffef7fc <bsec_shadow_read_otp+0xb0>
2ffef78c:	f8d8 300c 	ldr.w	r3, [r8, #12]
2ffef790:	069b      	lsls	r3, r3, #26
2ffef792:	d406      	bmi.n	2ffef7a2 <bsec_shadow_read_otp+0x56>
2ffef794:	2001      	movs	r0, #1
2ffef796:	f7ff fe77 	bl	2ffef488 <bsec_power_safmem>
2ffef79a:	4604      	mov	r4, r0
2ffef79c:	2800      	cmp	r0, #0
2ffef79e:	d1ea      	bne.n	2ffef776 <bsec_shadow_read_otp+0x2a>
2ffef7a0:	2601      	movs	r6, #1
2ffef7a2:	f7ff fe59 	bl	2ffef458 <bsec_lock>
2ffef7a6:	4a15      	ldr	r2, [pc, #84]	@ (2ffef7fc <bsec_shadow_read_otp+0xb0>)
2ffef7a8:	f8c8 5004 	str.w	r5, [r8, #4]
2ffef7ac:	68d3      	ldr	r3, [r2, #12]
2ffef7ae:	f013 0808 	ands.w	r8, r3, #8
2ffef7b2:	d1fb      	bne.n	2ffef7ac <bsec_shadow_read_otp+0x60>
2ffef7b4:	2101      	movs	r1, #1
2ffef7b6:	4628      	mov	r0, r5
2ffef7b8:	f7ff fe9e 	bl	2ffef4f8 <bsec_check_error>
2ffef7bc:	4604      	mov	r4, r0
2ffef7be:	f7ff fe57 	bl	2ffef470 <bsec_unlock>
2ffef7c2:	b156      	cbz	r6, 2ffef7da <bsec_shadow_read_otp+0x8e>
2ffef7c4:	4640      	mov	r0, r8
2ffef7c6:	f7ff fe5f 	bl	2ffef488 <bsec_power_safmem>
2ffef7ca:	b130      	cbz	r0, 2ffef7da <bsec_shadow_read_otp+0x8e>
2ffef7cc:	f7fd f812 	bl	2ffec7f4 <console_flush>
2ffef7d0:	f7f9 ee04 	blx	2ffe93dc <do_panic>
2ffef7d4:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2ffef7d8:	e7cd      	b.n	2ffef776 <bsec_shadow_read_otp+0x2a>
2ffef7da:	2c00      	cmp	r4, #0
2ffef7dc:	d1cb      	bne.n	2ffef776 <bsec_shadow_read_otp+0x2a>
2ffef7de:	4629      	mov	r1, r5
2ffef7e0:	4638      	mov	r0, r7
2ffef7e2:	f003 fde7 	bl	2fff33b4 <bsec_read_otp>
2ffef7e6:	4604      	mov	r4, r0
2ffef7e8:	2800      	cmp	r0, #0
2ffef7ea:	d0c9      	beq.n	2ffef780 <bsec_shadow_read_otp+0x34>
2ffef7ec:	4602      	mov	r2, r0
2ffef7ee:	4629      	mov	r1, r5
2ffef7f0:	4803      	ldr	r0, [pc, #12]	@ (2ffef800 <bsec_shadow_read_otp+0xb4>)
2ffef7f2:	e7c3      	b.n	2ffef77c <bsec_shadow_read_otp+0x30>
2ffef7f4:	2fff7317 	.word	0x2fff7317
2ffef7f8:	2fff7340 	.word	0x2fff7340
2ffef7fc:	5c005000 	.word	0x5c005000
2ffef800:	2fff735e 	.word	0x2fff735e

2ffef804 <ddr_sw_self_refresh_exit>:
2ffef804:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef808:	f003 fb8a 	bl	2fff2f20 <stm32mp_rcc_base>
2ffef80c:	4606      	mov	r6, r0
2ffef80e:	f7fd f8c9 	bl	2ffec9a4 <stm32mp_pwr_base>
2ffef812:	4607      	mov	r7, r0
2ffef814:	f7fd f8be 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffef818:	4605      	mov	r5, r0
2ffef81a:	f7fd f8bf 	bl	2ffec99c <stm32mp_ddrphyc_base>
2ffef81e:	4604      	mov	r4, r0
2ffef820:	f003 fdde 	bl	2fff33e0 <ddr_enable_clock>
2ffef824:	4628      	mov	r0, r5
2ffef826:	f7fe f9ad 	bl	2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>
2ffef82a:	f8d5 31b0 	ldr.w	r3, [r5, #432]	@ 0x1b0
2ffef82e:	4628      	mov	r0, r5
2ffef830:	f023 0301 	bic.w	r3, r3, #1
2ffef834:	f8c5 31b0 	str.w	r3, [r5, #432]	@ 0x1b0
2ffef838:	f7fe f9ca 	bl	2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffef83c:	f001 ff2a 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffef840:	f8d6 30d8 	ldr.w	r3, [r6, #216]	@ 0xd8
2ffef844:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2ffef848:	f8c6 30d8 	str.w	r3, [r6, #216]	@ 0xd8
2ffef84c:	f001 ff28 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffef850:	6963      	ldr	r3, [r4, #20]
2ffef852:	2032      	movs	r0, #50	@ 0x32
2ffef854:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef858:	6163      	str	r3, [r4, #20]
2ffef85a:	f8d4 31cc 	ldr.w	r3, [r4, #460]	@ 0x1cc
2ffef85e:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef862:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
2ffef866:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
2ffef86a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef86e:	f8c4 320c 	str.w	r3, [r4, #524]	@ 0x20c
2ffef872:	f8d4 324c 	ldr.w	r3, [r4, #588]	@ 0x24c
2ffef876:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef87a:	f8c4 324c 	str.w	r3, [r4, #588]	@ 0x24c
2ffef87e:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
2ffef882:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef886:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
2ffef88a:	f7fd ff9d 	bl	2ffed7c8 <udelay>
2ffef88e:	f001 ff01 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffef892:	f8d6 30d8 	ldr.w	r3, [r6, #216]	@ 0xd8
2ffef896:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2ffef89a:	f8c6 30d8 	str.w	r3, [r6, #216]	@ 0xd8
2ffef89e:	f001 feff 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffef8a2:	6963      	ldr	r3, [r4, #20]
2ffef8a4:	200a      	movs	r0, #10
2ffef8a6:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
2ffef8aa:	6163      	str	r3, [r4, #20]
2ffef8ac:	f7fd ff8c 	bl	2ffed7c8 <udelay>
2ffef8b0:	6963      	ldr	r3, [r4, #20]
2ffef8b2:	2001      	movs	r0, #1
2ffef8b4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
2ffef8b8:	6163      	str	r3, [r4, #20]
2ffef8ba:	2317      	movs	r3, #23
2ffef8bc:	6063      	str	r3, [r4, #4]
2ffef8be:	f7fd ff83 	bl	2ffed7c8 <udelay>
2ffef8c2:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffef8c6:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2ffef8ca:	4a44      	ldr	r2, [pc, #272]	@ (2ffef9dc <ddr_sw_self_refresh_exit+0x1d8>)
2ffef8cc:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffef8d0:	2300      	movs	r3, #0
2ffef8d2:	fba1 0100 	umull	r0, r1, r1, r0
2ffef8d6:	f002 ecbc 	blx	2fff2250 <__aeabi_uldivmod>
2ffef8da:	eb10 0309 	adds.w	r3, r0, r9
2ffef8de:	eb41 020a 	adc.w	r2, r1, sl
2ffef8e2:	68e1      	ldr	r1, [r4, #12]
2ffef8e4:	07c9      	lsls	r1, r1, #31
2ffef8e6:	d568      	bpl.n	2ffef9ba <ddr_sw_self_refresh_exit+0x1b6>
2ffef8e8:	4628      	mov	r0, r5
2ffef8ea:	f7fe f94b 	bl	2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>
2ffef8ee:	f8d5 31b0 	ldr.w	r3, [r5, #432]	@ 0x1b0
2ffef8f2:	4628      	mov	r0, r5
2ffef8f4:	f043 0301 	orr.w	r3, r3, #1
2ffef8f8:	f8c5 31b0 	str.w	r3, [r5, #432]	@ 0x1b0
2ffef8fc:	f7fe f968 	bl	2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffef900:	f7fd f854 	bl	2ffec9ac <stm32mp_pwr_regs_lock>
2ffef904:	68fb      	ldr	r3, [r7, #12]
2ffef906:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
2ffef90a:	60fb      	str	r3, [r7, #12]
2ffef90c:	f7fd f85a 	bl	2ffec9c4 <stm32mp_pwr_regs_unlock>
2ffef910:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
2ffef914:	4628      	mov	r0, r5
2ffef916:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
2ffef91a:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
2ffef91e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffef920:	f023 0308 	bic.w	r3, r3, #8
2ffef924:	6263      	str	r3, [r4, #36]	@ 0x24
2ffef926:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffef928:	f043 0302 	orr.w	r3, r3, #2
2ffef92c:	6263      	str	r3, [r4, #36]	@ 0x24
2ffef92e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffef930:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
2ffef934:	6263      	str	r3, [r4, #36]	@ 0x24
2ffef936:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2ffef938:	f423 1370 	bic.w	r3, r3, #3932160	@ 0x3c0000
2ffef93c:	6263      	str	r3, [r4, #36]	@ 0x24
2ffef93e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffef940:	f023 0304 	bic.w	r3, r3, #4
2ffef944:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffef946:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2ffef948:	f023 0308 	bic.w	r3, r3, #8
2ffef94c:	62a3      	str	r3, [r4, #40]	@ 0x28
2ffef94e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffef950:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
2ffef954:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffef956:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffef958:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
2ffef95c:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffef95e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffef960:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2ffef964:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffef966:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2ffef968:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
2ffef96c:	62e3      	str	r3, [r4, #44]	@ 0x2c
2ffef96e:	f003 fc87 	bl	2fff3280 <stm32mp_ddr_sw_selfref_exit>
2ffef972:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffef976:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffef97a:	4a18      	ldr	r2, [pc, #96]	@ (2ffef9dc <ddr_sw_self_refresh_exit+0x1d8>)
2ffef97c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
2ffef980:	2300      	movs	r3, #0
2ffef982:	4644      	mov	r4, r8
2ffef984:	fba1 0100 	umull	r0, r1, r1, r0
2ffef988:	f002 ec62 	blx	2fff2250 <__aeabi_uldivmod>
2ffef98c:	1900      	adds	r0, r0, r4
2ffef98e:	eb41 0109 	adc.w	r1, r1, r9
2ffef992:	686b      	ldr	r3, [r5, #4]
2ffef994:	f003 0307 	and.w	r3, r3, #7
2ffef998:	2b01      	cmp	r3, #1
2ffef99a:	d118      	bne.n	2ffef9ce <ddr_sw_self_refresh_exit+0x1ca>
2ffef99c:	4628      	mov	r0, r5
2ffef99e:	f003 fc13 	bl	2fff31c8 <stm32mp_ddr_enable_axi_port>
2ffef9a2:	f001 fe77 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffef9a6:	f8d6 30d8 	ldr.w	r3, [r6, #216]	@ 0xd8
2ffef9aa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffef9ae:	f8c6 30d8 	str.w	r3, [r6, #216]	@ 0xd8
2ffef9b2:	f001 fe75 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffef9b6:	2000      	movs	r0, #0
2ffef9b8:	e007      	b.n	2ffef9ca <ddr_sw_self_refresh_exit+0x1c6>
2ffef9ba:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffef9be:	4283      	cmp	r3, r0
2ffef9c0:	eb72 0101 	sbcs.w	r1, r2, r1
2ffef9c4:	d28d      	bcs.n	2ffef8e2 <ddr_sw_self_refresh_exit+0xde>
2ffef9c6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2ffef9ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffef9ce:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffef9d2:	4290      	cmp	r0, r2
2ffef9d4:	eb71 0303 	sbcs.w	r3, r1, r3
2ffef9d8:	d2db      	bcs.n	2ffef992 <ddr_sw_self_refresh_exit+0x18e>
2ffef9da:	e7f4      	b.n	2ffef9c6 <ddr_sw_self_refresh_exit+0x1c2>
2ffef9dc:	000f4240 	.word	0x000f4240

2ffef9e0 <ddr_read_sr_mode>:
2ffef9e0:	b508      	push	{r3, lr}
2ffef9e2:	f7fc ffd7 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffef9e6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2ffef9e8:	4a02      	ldr	r2, [pc, #8]	@ (2ffef9f4 <ddr_read_sr_mode+0x14>)
2ffef9ea:	f003 0309 	and.w	r3, r3, #9
2ffef9ee:	5cd0      	ldrb	r0, [r2, r3]
2ffef9f0:	bd08      	pop	{r3, pc}
2ffef9f2:	bf00      	nop
2ffef9f4:	2fff7393 	.word	0x2fff7393

2ffef9f8 <ddr_set_sr_mode>:
2ffef9f8:	2802      	cmp	r0, #2
2ffef9fa:	b538      	push	{r3, r4, r5, lr}
2ffef9fc:	d06a      	beq.n	2ffefad4 <ddr_set_sr_mode+0xdc>
2ffef9fe:	2803      	cmp	r0, #3
2ffefa00:	f000 80a6 	beq.w	2ffefb50 <ddr_set_sr_mode+0x158>
2ffefa04:	2801      	cmp	r0, #1
2ffefa06:	f040 80e6 	bne.w	2ffefbd6 <ddr_set_sr_mode+0x1de>
2ffefa0a:	f003 fa89 	bl	2fff2f20 <stm32mp_rcc_base>
2ffefa0e:	4604      	mov	r4, r0
2ffefa10:	f7fc ffc0 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffefa14:	4605      	mov	r5, r0
2ffefa16:	f001 fe3d 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffefa1a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa1e:	f043 0302 	orr.w	r3, r3, #2
2ffefa22:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa26:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa2a:	f043 0301 	orr.w	r3, r3, #1
2ffefa2e:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa32:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa36:	f043 0308 	orr.w	r3, r3, #8
2ffefa3a:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa3e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa42:	f043 0304 	orr.w	r3, r3, #4
2ffefa46:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa4a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
2ffefa52:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa56:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa5a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
2ffefa5e:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa62:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2ffefa6a:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa6e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa72:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
2ffefa76:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa7a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa7e:	f043 0310 	orr.w	r3, r3, #16
2ffefa82:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa86:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa8a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2ffefa8e:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa92:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefa96:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffefa9a:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefa9e:	f001 fdff 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffefaa2:	4628      	mov	r0, r5
2ffefaa4:	f7fe f86e 	bl	2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>
2ffefaa8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
2ffefaaa:	4628      	mov	r0, r5
2ffefaac:	f023 0301 	bic.w	r3, r3, #1
2ffefab0:	63ab      	str	r3, [r5, #56]	@ 0x38
2ffefab2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
2ffefab4:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffefab8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffefabc:	636b      	str	r3, [r5, #52]	@ 0x34
2ffefabe:	f7fe f887 	bl	2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffefac2:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2ffefac4:	f023 0308 	bic.w	r3, r3, #8
2ffefac8:	632b      	str	r3, [r5, #48]	@ 0x30
2ffefaca:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2ffefacc:	f023 0301 	bic.w	r3, r3, #1
2ffefad0:	632b      	str	r3, [r5, #48]	@ 0x30
2ffefad2:	bd38      	pop	{r3, r4, r5, pc}
2ffefad4:	f003 fa24 	bl	2fff2f20 <stm32mp_rcc_base>
2ffefad8:	4604      	mov	r4, r0
2ffefada:	f7fc ff5b 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffefade:	4605      	mov	r5, r0
2ffefae0:	f001 fdd8 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffefae4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefae8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffefaec:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefaf0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefaf4:	f023 0302 	bic.w	r3, r3, #2
2ffefaf8:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefafc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefb00:	f023 0308 	bic.w	r3, r3, #8
2ffefb04:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefb08:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefb0c:	f043 0320 	orr.w	r3, r3, #32
2ffefb10:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefb14:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
2ffefb18:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffefb1c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
2ffefb20:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
2ffefb24:	f001 fdbc 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffefb28:	4628      	mov	r0, r5
2ffefb2a:	f7fe f82b 	bl	2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>
2ffefb2e:	6bab      	ldr	r3, [r5, #56]	@ 0x38
2ffefb30:	4628      	mov	r0, r5
2ffefb32:	f043 0301 	orr.w	r3, r3, #1
2ffefb36:	63ab      	str	r3, [r5, #56]	@ 0x38
2ffefb38:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
2ffefb3a:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffefb3e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffefb42:	636b      	str	r3, [r5, #52]	@ 0x34
2ffefb44:	f7fe f844 	bl	2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffefb48:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2ffefb4a:	f043 0308 	orr.w	r3, r3, #8
2ffefb4e:	e7bf      	b.n	2ffefad0 <ddr_set_sr_mode+0xd8>
2ffefb50:	f003 f9e6 	bl	2fff2f20 <stm32mp_rcc_base>
2ffefb54:	4605      	mov	r5, r0
2ffefb56:	f7fc ff1d 	bl	2ffec994 <stm32mp_ddrctrl_base>
2ffefb5a:	4604      	mov	r4, r0
2ffefb5c:	f001 fd9a 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2ffefb60:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2ffefb64:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2ffefb68:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2ffefb6c:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2ffefb70:	f043 0302 	orr.w	r3, r3, #2
2ffefb74:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2ffefb78:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2ffefb7c:	f043 0308 	orr.w	r3, r3, #8
2ffefb80:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2ffefb84:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2ffefb88:	f043 0320 	orr.w	r3, r3, #32
2ffefb8c:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2ffefb90:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2ffefb94:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2ffefb98:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
2ffefb9c:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2ffefba0:	f001 fd7e 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2ffefba4:	4620      	mov	r0, r4
2ffefba6:	f7fd ffed 	bl	2ffedb84 <stm32mp_ddr_set_qd3_update_conditions>
2ffefbaa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2ffefbac:	4620      	mov	r0, r4
2ffefbae:	f043 0301 	orr.w	r3, r3, #1
2ffefbb2:	63a3      	str	r3, [r4, #56]	@ 0x38
2ffefbb4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
2ffefbb6:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2ffefbba:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2ffefbbe:	6363      	str	r3, [r4, #52]	@ 0x34
2ffefbc0:	f7fe f806 	bl	2ffedbd0 <stm32mp_ddr_unset_qd3_update_conditions>
2ffefbc4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffefbc6:	f043 0308 	orr.w	r3, r3, #8
2ffefbca:	6323      	str	r3, [r4, #48]	@ 0x30
2ffefbcc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
2ffefbce:	f043 0301 	orr.w	r3, r3, #1
2ffefbd2:	6323      	str	r3, [r4, #48]	@ 0x30
2ffefbd4:	e77d      	b.n	2ffefad2 <ddr_set_sr_mode+0xda>
2ffefbd6:	4803      	ldr	r0, [pc, #12]	@ (2ffefbe4 <ddr_set_sr_mode+0x1ec>)
2ffefbd8:	f7fc fd70 	bl	2ffec6bc <tf_log>
2ffefbdc:	f7fc fe0a 	bl	2ffec7f4 <console_flush>
2ffefbe0:	f7f9 ebfc 	blx	2ffe93dc <do_panic>
2ffefbe4:	2fff7377 	.word	0x2fff7377

2ffefbe8 <i2c_transfer_config.isra.0>:
2ffefbe8:	b530      	push	{r4, r5, lr}
2ffefbea:	9d03      	ldr	r5, [sp, #12]
2ffefbec:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffefbf0:	432b      	orrs	r3, r5
2ffefbf2:	0412      	lsls	r2, r2, #16
2ffefbf4:	430b      	orrs	r3, r1
2ffefbf6:	f402 027f 	and.w	r2, r2, #16711680	@ 0xff0000
2ffefbfa:	4313      	orrs	r3, r2
2ffefbfc:	4a04      	ldr	r2, [pc, #16]	@ (2ffefc10 <i2c_transfer_config.isra.0+0x28>)
2ffefbfe:	6844      	ldr	r4, [r0, #4]
2ffefc00:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2ffefc04:	ea24 0402 	bic.w	r4, r4, r2
2ffefc08:	4323      	orrs	r3, r4
2ffefc0a:	6043      	str	r3, [r0, #4]
2ffefc0c:	bd30      	pop	{r4, r5, pc}
2ffefc0e:	bf00      	nop
2ffefc10:	03ff63ff 	.word	0x03ff63ff

2ffefc14 <i2c_read.constprop.0>:
2ffefc14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffefc18:	b085      	sub	sp, #20
2ffefc1a:	469a      	mov	sl, r3
2ffefc1c:	4604      	mov	r4, r0
2ffefc1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2ffefc20:	4689      	mov	r9, r1
2ffefc22:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
2ffefc26:	4690      	mov	r8, r2
2ffefc28:	2b10      	cmp	r3, #16
2ffefc2a:	d002      	beq.n	2ffefc32 <i2c_read.constprop.0+0x1e>
2ffefc2c:	2b40      	cmp	r3, #64	@ 0x40
2ffefc2e:	f040 80d9 	bne.w	2ffefde4 <i2c_read.constprop.0+0x1d0>
2ffefc32:	6923      	ldr	r3, [r4, #16]
2ffefc34:	2b20      	cmp	r3, #32
2ffefc36:	f040 80d8 	bne.w	2ffefdea <i2c_read.constprop.0+0x1d6>
2ffefc3a:	7b23      	ldrb	r3, [r4, #12]
2ffefc3c:	2b00      	cmp	r3, #0
2ffefc3e:	f040 80d4 	bne.w	2ffefdea <i2c_read.constprop.0+0x1d6>
2ffefc42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffefc44:	2b00      	cmp	r3, #0
2ffefc46:	f000 80d3 	beq.w	2ffefdf0 <i2c_read.constprop.0+0x1dc>
2ffefc4a:	2d00      	cmp	r5, #0
2ffefc4c:	f000 80d0 	beq.w	2ffefdf0 <i2c_read.constprop.0+0x1dc>
2ffefc50:	68a0      	ldr	r0, [r4, #8]
2ffefc52:	f04f 0b01 	mov.w	fp, #1
2ffefc56:	f7fd fd57 	bl	2ffed708 <clk_enable>
2ffefc5a:	f884 b00c 	strb.w	fp, [r4, #12]
2ffefc5e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffefc62:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffefc66:	f246 10a8 	movw	r0, #25000	@ 0x61a8
2ffefc6a:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffefc6e:	9e02      	ldr	r6, [sp, #8]
2ffefc70:	2300      	movs	r3, #0
2ffefc72:	4a61      	ldr	r2, [pc, #388]	@ (2ffefdf8 <i2c_read.constprop.0+0x1e4>)
2ffefc74:	fba1 0100 	umull	r0, r1, r1, r0
2ffefc78:	f002 eaea 	blx	2fff2250 <__aeabi_uldivmod>
2ffefc7c:	9b03      	ldr	r3, [sp, #12]
2ffefc7e:	465a      	mov	r2, fp
2ffefc80:	1986      	adds	r6, r0, r6
2ffefc82:	4620      	mov	r0, r4
2ffefc84:	eb41 0703 	adc.w	r7, r1, r3
2ffefc88:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
2ffefc8c:	e9cd 6700 	strd	r6, r7, [sp]
2ffefc90:	f003 fc7e 	bl	2fff3590 <i2c_wait_flag>
2ffefc94:	4603      	mov	r3, r0
2ffefc96:	b150      	cbz	r0, 2ffefcae <i2c_read.constprop.0+0x9a>
2ffefc98:	f06f 0604 	mvn.w	r6, #4
2ffefc9c:	68a0      	ldr	r0, [r4, #8]
2ffefc9e:	2300      	movs	r3, #0
2ffefca0:	7323      	strb	r3, [r4, #12]
2ffefca2:	f7fd fd43 	bl	2ffed72c <clk_disable>
2ffefca6:	4630      	mov	r0, r6
2ffefca8:	b005      	add	sp, #20
2ffefcaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffefcae:	61a0      	str	r0, [r4, #24]
2ffefcb0:	2222      	movs	r2, #34	@ 0x22
2ffefcb2:	6122      	str	r2, [r4, #16]
2ffefcb4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
2ffefcb6:	6820      	ldr	r0, [r4, #0]
2ffefcb8:	6162      	str	r2, [r4, #20]
2ffefcba:	2a40      	cmp	r2, #64	@ 0x40
2ffefcbc:	d00c      	beq.n	2ffefcd8 <i2c_read.constprop.0+0xc4>
2ffefcbe:	6820      	ldr	r0, [r4, #0]
2ffefcc0:	2dff      	cmp	r5, #255	@ 0xff
2ffefcc2:	4b4e      	ldr	r3, [pc, #312]	@ (2ffefdfc <i2c_read.constprop.0+0x1e8>)
2ffefcc4:	d836      	bhi.n	2ffefd34 <i2c_read.constprop.0+0x120>
2ffefcc6:	9300      	str	r3, [sp, #0]
2ffefcc8:	462a      	mov	r2, r5
2ffefcca:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffefcce:	4649      	mov	r1, r9
2ffefcd0:	46a8      	mov	r8, r5
2ffefcd2:	f7ff ff89 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefcd6:	e036      	b.n	2ffefd46 <i2c_read.constprop.0+0x132>
2ffefcd8:	4a49      	ldr	r2, [pc, #292]	@ (2ffefe00 <i2c_read.constprop.0+0x1ec>)
2ffefcda:	4649      	mov	r1, r9
2ffefcdc:	9200      	str	r2, [sp, #0]
2ffefcde:	4652      	mov	r2, sl
2ffefce0:	f7ff ff82 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefce4:	4632      	mov	r2, r6
2ffefce6:	463b      	mov	r3, r7
2ffefce8:	4620      	mov	r0, r4
2ffefcea:	f003 fcb9 	bl	2fff3660 <i2c_wait_txis>
2ffefcee:	2800      	cmp	r0, #0
2ffefcf0:	d1d2      	bne.n	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefcf2:	6823      	ldr	r3, [r4, #0]
2ffefcf4:	f1ba 0f01 	cmp.w	sl, #1
2ffefcf8:	d10d      	bne.n	2ffefd16 <i2c_read.constprop.0+0x102>
2ffefcfa:	fa5f f888 	uxtb.w	r8, r8
2ffefcfe:	f883 8028 	strb.w	r8, [r3, #40]	@ 0x28
2ffefd02:	2200      	movs	r2, #0
2ffefd04:	2140      	movs	r1, #64	@ 0x40
2ffefd06:	4620      	mov	r0, r4
2ffefd08:	e9cd 6700 	strd	r6, r7, [sp]
2ffefd0c:	f003 fc40 	bl	2fff3590 <i2c_wait_flag>
2ffefd10:	2800      	cmp	r0, #0
2ffefd12:	d0d4      	beq.n	2ffefcbe <i2c_read.constprop.0+0xaa>
2ffefd14:	e7c0      	b.n	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefd16:	ea4f 2218 	mov.w	r2, r8, lsr #8
2ffefd1a:	4620      	mov	r0, r4
2ffefd1c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffefd20:	4632      	mov	r2, r6
2ffefd22:	463b      	mov	r3, r7
2ffefd24:	f003 fc9c 	bl	2fff3660 <i2c_wait_txis>
2ffefd28:	2800      	cmp	r0, #0
2ffefd2a:	d1b5      	bne.n	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefd2c:	6823      	ldr	r3, [r4, #0]
2ffefd2e:	fa5f f888 	uxtb.w	r8, r8
2ffefd32:	e7e4      	b.n	2ffefcfe <i2c_read.constprop.0+0xea>
2ffefd34:	9300      	str	r3, [sp, #0]
2ffefd36:	22ff      	movs	r2, #255	@ 0xff
2ffefd38:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffefd3c:	4649      	mov	r1, r9
2ffefd3e:	f04f 08ff 	mov.w	r8, #255	@ 0xff
2ffefd42:	f7ff ff51 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefd46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffefd48:	f103 3aff 	add.w	sl, r3, #4294967295	@ 0xffffffff
2ffefd4c:	2200      	movs	r2, #0
2ffefd4e:	2104      	movs	r1, #4
2ffefd50:	4620      	mov	r0, r4
2ffefd52:	e9cd 6700 	strd	r6, r7, [sp]
2ffefd56:	f003 fc1b 	bl	2fff3590 <i2c_wait_flag>
2ffefd5a:	2800      	cmp	r0, #0
2ffefd5c:	d19c      	bne.n	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefd5e:	6823      	ldr	r3, [r4, #0]
2ffefd60:	3d01      	subs	r5, #1
2ffefd62:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
2ffefd66:	f80a 3f01 	strb.w	r3, [sl, #1]!
2ffefd6a:	d118      	bne.n	2ffefd9e <i2c_read.constprop.0+0x18a>
2ffefd6c:	4632      	mov	r2, r6
2ffefd6e:	463b      	mov	r3, r7
2ffefd70:	4620      	mov	r0, r4
2ffefd72:	f003 fc96 	bl	2fff36a2 <i2c_wait_stop>
2ffefd76:	4606      	mov	r6, r0
2ffefd78:	2800      	cmp	r0, #0
2ffefd7a:	d18d      	bne.n	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefd7c:	6823      	ldr	r3, [r4, #0]
2ffefd7e:	2220      	movs	r2, #32
2ffefd80:	61da      	str	r2, [r3, #28]
2ffefd82:	6821      	ldr	r1, [r4, #0]
2ffefd84:	684b      	ldr	r3, [r1, #4]
2ffefd86:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2ffefd8a:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2ffefd8e:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2ffefd92:	f023 0301 	bic.w	r3, r3, #1
2ffefd96:	604b      	str	r3, [r1, #4]
2ffefd98:	6122      	str	r2, [r4, #16]
2ffefd9a:	6165      	str	r5, [r4, #20]
2ffefd9c:	e77e      	b.n	2ffefc9c <i2c_read.constprop.0+0x88>
2ffefd9e:	f1b8 0801 	subs.w	r8, r8, #1
2ffefda2:	d1d3      	bne.n	2ffefd4c <i2c_read.constprop.0+0x138>
2ffefda4:	4642      	mov	r2, r8
2ffefda6:	2180      	movs	r1, #128	@ 0x80
2ffefda8:	4620      	mov	r0, r4
2ffefdaa:	e9cd 6700 	strd	r6, r7, [sp]
2ffefdae:	f003 fbef 	bl	2fff3590 <i2c_wait_flag>
2ffefdb2:	2800      	cmp	r0, #0
2ffefdb4:	f47f af70 	bne.w	2ffefc98 <i2c_read.constprop.0+0x84>
2ffefdb8:	6820      	ldr	r0, [r4, #0]
2ffefdba:	2dff      	cmp	r5, #255	@ 0xff
2ffefdbc:	f8cd 8000 	str.w	r8, [sp]
2ffefdc0:	d908      	bls.n	2ffefdd4 <i2c_read.constprop.0+0x1c0>
2ffefdc2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffefdc6:	22ff      	movs	r2, #255	@ 0xff
2ffefdc8:	4649      	mov	r1, r9
2ffefdca:	f04f 08ff 	mov.w	r8, #255	@ 0xff
2ffefdce:	f7ff ff0b 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefdd2:	e7bb      	b.n	2ffefd4c <i2c_read.constprop.0+0x138>
2ffefdd4:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffefdd8:	b2aa      	uxth	r2, r5
2ffefdda:	4649      	mov	r1, r9
2ffefddc:	46a8      	mov	r8, r5
2ffefdde:	f7ff ff03 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefde2:	e7b3      	b.n	2ffefd4c <i2c_read.constprop.0+0x138>
2ffefde4:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
2ffefde8:	e75d      	b.n	2ffefca6 <i2c_read.constprop.0+0x92>
2ffefdea:	f06f 060f 	mvn.w	r6, #15
2ffefdee:	e75a      	b.n	2ffefca6 <i2c_read.constprop.0+0x92>
2ffefdf0:	f06f 0615 	mvn.w	r6, #21
2ffefdf4:	e757      	b.n	2ffefca6 <i2c_read.constprop.0+0x92>
2ffefdf6:	bf00      	nop
2ffefdf8:	000f4240 	.word	0x000f4240
2ffefdfc:	80002400 	.word	0x80002400
2ffefe00:	80002000 	.word	0x80002000

2ffefe04 <i2c_write>:
2ffefe04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffefe08:	b085      	sub	sp, #20
2ffefe0a:	469a      	mov	sl, r3
2ffefe0c:	4604      	mov	r4, r0
2ffefe0e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffefe10:	460e      	mov	r6, r1
2ffefe12:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
2ffefe16:	4617      	mov	r7, r2
2ffefe18:	2b10      	cmp	r3, #16
2ffefe1a:	d002      	beq.n	2ffefe22 <i2c_write+0x1e>
2ffefe1c:	2b40      	cmp	r3, #64	@ 0x40
2ffefe1e:	f040 80ef 	bne.w	2fff0000 <i2c_write+0x1fc>
2ffefe22:	6923      	ldr	r3, [r4, #16]
2ffefe24:	2b20      	cmp	r3, #32
2ffefe26:	f040 80ee 	bne.w	2fff0006 <i2c_write+0x202>
2ffefe2a:	7b23      	ldrb	r3, [r4, #12]
2ffefe2c:	2b00      	cmp	r3, #0
2ffefe2e:	f040 80ea 	bne.w	2fff0006 <i2c_write+0x202>
2ffefe32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffefe34:	2b00      	cmp	r3, #0
2ffefe36:	f000 80e9 	beq.w	2fff000c <i2c_write+0x208>
2ffefe3a:	2d00      	cmp	r5, #0
2ffefe3c:	f000 80e6 	beq.w	2fff000c <i2c_write+0x208>
2ffefe40:	68a0      	ldr	r0, [r4, #8]
2ffefe42:	f04f 0b01 	mov.w	fp, #1
2ffefe46:	f7fd fc5f 	bl	2ffed708 <clk_enable>
2ffefe4a:	f884 b00c 	strb.w	fp, [r4, #12]
2ffefe4e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffefe52:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffefe56:	f246 10a8 	movw	r0, #25000	@ 0x61a8
2ffefe5a:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffefe5e:	f8dd 8008 	ldr.w	r8, [sp, #8]
2ffefe62:	2300      	movs	r3, #0
2ffefe64:	4a6b      	ldr	r2, [pc, #428]	@ (2fff0014 <i2c_write+0x210>)
2ffefe66:	fba1 0100 	umull	r0, r1, r1, r0
2ffefe6a:	f002 e9f2 	blx	2fff2250 <__aeabi_uldivmod>
2ffefe6e:	9b03      	ldr	r3, [sp, #12]
2ffefe70:	465a      	mov	r2, fp
2ffefe72:	eb10 0008 	adds.w	r0, r0, r8
2ffefe76:	eb41 0103 	adc.w	r1, r1, r3
2ffefe7a:	e9cd 0100 	strd	r0, r1, [sp]
2ffefe7e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
2ffefe82:	4620      	mov	r0, r4
2ffefe84:	f003 fb84 	bl	2fff3590 <i2c_wait_flag>
2ffefe88:	b150      	cbz	r0, 2ffefea0 <i2c_write+0x9c>
2ffefe8a:	f06f 0504 	mvn.w	r5, #4
2ffefe8e:	68a0      	ldr	r0, [r4, #8]
2ffefe90:	2300      	movs	r3, #0
2ffefe92:	7323      	strb	r3, [r4, #12]
2ffefe94:	f7fd fc4a 	bl	2ffed72c <clk_disable>
2ffefe98:	4628      	mov	r0, r5
2ffefe9a:	b005      	add	sp, #20
2ffefe9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffefea0:	61a0      	str	r0, [r4, #24]
2ffefea2:	2321      	movs	r3, #33	@ 0x21
2ffefea4:	6123      	str	r3, [r4, #16]
2ffefea6:	46ab      	mov	fp, r5
2ffefea8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffefeaa:	6163      	str	r3, [r4, #20]
2ffefeac:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffefeb0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffefeb4:	9910      	ldr	r1, [sp, #64]	@ 0x40
2ffefeb6:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffefeba:	f8dd 8008 	ldr.w	r8, [sp, #8]
2ffefebe:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2ffefec2:	4359      	muls	r1, r3
2ffefec4:	4a53      	ldr	r2, [pc, #332]	@ (2fff0014 <i2c_write+0x210>)
2ffefec6:	2300      	movs	r3, #0
2ffefec8:	fba1 0100 	umull	r0, r1, r1, r0
2ffefecc:	f002 e9c0 	blx	2fff2250 <__aeabi_uldivmod>
2ffefed0:	9b03      	ldr	r3, [sp, #12]
2ffefed2:	eb10 0808 	adds.w	r8, r0, r8
2ffefed6:	eb41 0903 	adc.w	r9, r1, r3
2ffefeda:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2ffefedc:	6820      	ldr	r0, [r4, #0]
2ffefede:	2b40      	cmp	r3, #64	@ 0x40
2ffefee0:	4b4d      	ldr	r3, [pc, #308]	@ (2fff0018 <i2c_write+0x214>)
2ffefee2:	9300      	str	r3, [sp, #0]
2ffefee4:	d168      	bne.n	2ffeffb8 <i2c_write+0x1b4>
2ffefee6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffefeea:	4652      	mov	r2, sl
2ffefeec:	4631      	mov	r1, r6
2ffefeee:	f7ff fe7b 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefef2:	4642      	mov	r2, r8
2ffefef4:	464b      	mov	r3, r9
2ffefef6:	4620      	mov	r0, r4
2ffefef8:	f003 fbb2 	bl	2fff3660 <i2c_wait_txis>
2ffefefc:	2800      	cmp	r0, #0
2ffefefe:	d1c4      	bne.n	2ffefe8a <i2c_write+0x86>
2ffeff00:	6823      	ldr	r3, [r4, #0]
2ffeff02:	f1ba 0f01 	cmp.w	sl, #1
2ffeff06:	d118      	bne.n	2ffeff3a <i2c_write+0x136>
2ffeff08:	b2ff      	uxtb	r7, r7
2ffeff0a:	f883 7028 	strb.w	r7, [r3, #40]	@ 0x28
2ffeff0e:	2200      	movs	r2, #0
2ffeff10:	2180      	movs	r1, #128	@ 0x80
2ffeff12:	4620      	mov	r0, r4
2ffeff14:	e9cd 8900 	strd	r8, r9, [sp]
2ffeff18:	f003 fb3a 	bl	2fff3590 <i2c_wait_flag>
2ffeff1c:	4603      	mov	r3, r0
2ffeff1e:	2800      	cmp	r0, #0
2ffeff20:	d1b3      	bne.n	2ffefe8a <i2c_write+0x86>
2ffeff22:	6820      	ldr	r0, [r4, #0]
2ffeff24:	2dff      	cmp	r5, #255	@ 0xff
2ffeff26:	9300      	str	r3, [sp, #0]
2ffeff28:	d914      	bls.n	2ffeff54 <i2c_write+0x150>
2ffeff2a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeff2e:	22ff      	movs	r2, #255	@ 0xff
2ffeff30:	4631      	mov	r1, r6
2ffeff32:	25ff      	movs	r5, #255	@ 0xff
2ffeff34:	f7ff fe58 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffeff38:	e012      	b.n	2ffeff60 <i2c_write+0x15c>
2ffeff3a:	0a3a      	lsrs	r2, r7, #8
2ffeff3c:	4620      	mov	r0, r4
2ffeff3e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffeff42:	4642      	mov	r2, r8
2ffeff44:	464b      	mov	r3, r9
2ffeff46:	f003 fb8b 	bl	2fff3660 <i2c_wait_txis>
2ffeff4a:	2800      	cmp	r0, #0
2ffeff4c:	d19d      	bne.n	2ffefe8a <i2c_write+0x86>
2ffeff4e:	6823      	ldr	r3, [r4, #0]
2ffeff50:	b2ff      	uxtb	r7, r7
2ffeff52:	e7da      	b.n	2ffeff0a <i2c_write+0x106>
2ffeff54:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffeff58:	462a      	mov	r2, r5
2ffeff5a:	4631      	mov	r1, r6
2ffeff5c:	f7ff fe44 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffeff60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2ffeff62:	1e5f      	subs	r7, r3, #1
2ffeff64:	4642      	mov	r2, r8
2ffeff66:	464b      	mov	r3, r9
2ffeff68:	4620      	mov	r0, r4
2ffeff6a:	f003 fb79 	bl	2fff3660 <i2c_wait_txis>
2ffeff6e:	2800      	cmp	r0, #0
2ffeff70:	d18b      	bne.n	2ffefe8a <i2c_write+0x86>
2ffeff72:	f817 2f01 	ldrb.w	r2, [r7, #1]!
2ffeff76:	f1bb 0b01 	subs.w	fp, fp, #1
2ffeff7a:	6823      	ldr	r3, [r4, #0]
2ffeff7c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
2ffeff80:	d11c      	bne.n	2ffeffbc <i2c_write+0x1b8>
2ffeff82:	4642      	mov	r2, r8
2ffeff84:	464b      	mov	r3, r9
2ffeff86:	4620      	mov	r0, r4
2ffeff88:	f003 fb8b 	bl	2fff36a2 <i2c_wait_stop>
2ffeff8c:	4605      	mov	r5, r0
2ffeff8e:	2800      	cmp	r0, #0
2ffeff90:	f47f af7b 	bne.w	2ffefe8a <i2c_write+0x86>
2ffeff94:	6823      	ldr	r3, [r4, #0]
2ffeff96:	2220      	movs	r2, #32
2ffeff98:	61da      	str	r2, [r3, #28]
2ffeff9a:	6821      	ldr	r1, [r4, #0]
2ffeff9c:	684b      	ldr	r3, [r1, #4]
2ffeff9e:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2ffeffa2:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2ffeffa6:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2ffeffaa:	f023 0301 	bic.w	r3, r3, #1
2ffeffae:	604b      	str	r3, [r1, #4]
2ffeffb0:	6122      	str	r2, [r4, #16]
2ffeffb2:	f8c4 b014 	str.w	fp, [r4, #20]
2ffeffb6:	e76a      	b.n	2ffefe8e <i2c_write+0x8a>
2ffeffb8:	2dff      	cmp	r5, #255	@ 0xff
2ffeffba:	e7b5      	b.n	2ffeff28 <i2c_write+0x124>
2ffeffbc:	3d01      	subs	r5, #1
2ffeffbe:	d1d1      	bne.n	2ffeff64 <i2c_write+0x160>
2ffeffc0:	462a      	mov	r2, r5
2ffeffc2:	2180      	movs	r1, #128	@ 0x80
2ffeffc4:	4620      	mov	r0, r4
2ffeffc6:	e9cd 8900 	strd	r8, r9, [sp]
2ffeffca:	f003 fae1 	bl	2fff3590 <i2c_wait_flag>
2ffeffce:	2800      	cmp	r0, #0
2ffeffd0:	f47f af5b 	bne.w	2ffefe8a <i2c_write+0x86>
2ffeffd4:	6820      	ldr	r0, [r4, #0]
2ffeffd6:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
2ffeffda:	9500      	str	r5, [sp, #0]
2ffeffdc:	d907      	bls.n	2ffeffee <i2c_write+0x1ea>
2ffeffde:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
2ffeffe2:	22ff      	movs	r2, #255	@ 0xff
2ffeffe4:	4631      	mov	r1, r6
2ffeffe6:	25ff      	movs	r5, #255	@ 0xff
2ffeffe8:	f7ff fdfe 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffeffec:	e7ba      	b.n	2ffeff64 <i2c_write+0x160>
2ffeffee:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
2ffefff2:	fa1f f28b 	uxth.w	r2, fp
2ffefff6:	4631      	mov	r1, r6
2ffefff8:	465d      	mov	r5, fp
2ffefffa:	f7ff fdf5 	bl	2ffefbe8 <i2c_transfer_config.isra.0>
2ffefffe:	e7b1      	b.n	2ffeff64 <i2c_write+0x160>
2fff0000:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2fff0004:	e748      	b.n	2ffefe98 <i2c_write+0x94>
2fff0006:	f06f 050f 	mvn.w	r5, #15
2fff000a:	e745      	b.n	2ffefe98 <i2c_write+0x94>
2fff000c:	f06f 0515 	mvn.w	r5, #21
2fff0010:	e742      	b.n	2ffefe98 <i2c_write+0x94>
2fff0012:	bf00      	nop
2fff0014:	000f4240 	.word	0x000f4240
2fff0018:	80002000 	.word	0x80002000

2fff001c <stm32_i2c_get_setup_from_fdt>:
2fff001c:	b570      	push	{r4, r5, r6, lr}
2fff001e:	2319      	movs	r3, #25
2fff0020:	4615      	mov	r5, r2
2fff0022:	4606      	mov	r6, r0
2fff0024:	4a10      	ldr	r2, [pc, #64]	@ (2fff0068 <stm32_i2c_get_setup_from_fdt+0x4c>)
2fff0026:	460c      	mov	r4, r1
2fff0028:	f002 fcd2 	bl	2fff29d0 <fdt_read_uint32_default>
2fff002c:	61e8      	str	r0, [r5, #28]
2fff002e:	230a      	movs	r3, #10
2fff0030:	4a0e      	ldr	r2, [pc, #56]	@ (2fff006c <stm32_i2c_get_setup_from_fdt+0x50>)
2fff0032:	4621      	mov	r1, r4
2fff0034:	4630      	mov	r0, r6
2fff0036:	f002 fccb 	bl	2fff29d0 <fdt_read_uint32_default>
2fff003a:	6228      	str	r0, [r5, #32]
2fff003c:	4621      	mov	r1, r4
2fff003e:	4a0c      	ldr	r2, [pc, #48]	@ (2fff0070 <stm32_i2c_get_setup_from_fdt+0x54>)
2fff0040:	4630      	mov	r0, r6
2fff0042:	4b0c      	ldr	r3, [pc, #48]	@ (2fff0074 <stm32_i2c_get_setup_from_fdt+0x58>)
2fff0044:	f002 fcc4 	bl	2fff29d0 <fdt_read_uint32_default>
2fff0048:	4a0b      	ldr	r2, [pc, #44]	@ (2fff0078 <stm32_i2c_get_setup_from_fdt+0x5c>)
2fff004a:	4601      	mov	r1, r0
2fff004c:	4290      	cmp	r0, r2
2fff004e:	d805      	bhi.n	2fff005c <stm32_i2c_get_setup_from_fdt+0x40>
2fff0050:	6268      	str	r0, [r5, #36]	@ 0x24
2fff0052:	4620      	mov	r0, r4
2fff0054:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff0058:	f7fd be4e 	b.w	2ffedcf8 <dt_set_pinctrl_config>
2fff005c:	4807      	ldr	r0, [pc, #28]	@ (2fff007c <stm32_i2c_get_setup_from_fdt+0x60>)
2fff005e:	f7fc fb2d 	bl	2ffec6bc <tf_log>
2fff0062:	f06f 000e 	mvn.w	r0, #14
2fff0066:	bd70      	pop	{r4, r5, r6, pc}
2fff0068:	2fff739d 	.word	0x2fff739d
2fff006c:	2fff73b4 	.word	0x2fff73b4
2fff0070:	2fff6984 	.word	0x2fff6984
2fff0074:	000186a0 	.word	0x000186a0
2fff0078:	000f4240 	.word	0x000f4240
2fff007c:	2fff73cc 	.word	0x2fff73cc

2fff0080 <stm32_i2c_init>:
2fff0080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff0084:	460d      	mov	r5, r1
2fff0086:	b0a3      	sub	sp, #140	@ 0x8c
2fff0088:	4604      	mov	r4, r0
2fff008a:	2800      	cmp	r0, #0
2fff008c:	f000 8207 	beq.w	2fff049e <stm32_i2c_init+0x41e>
2fff0090:	6903      	ldr	r3, [r0, #16]
2fff0092:	b903      	cbnz	r3, 2fff0096 <stm32_i2c_init+0x16>
2fff0094:	7303      	strb	r3, [r0, #12]
2fff0096:	68a0      	ldr	r0, [r4, #8]
2fff0098:	2324      	movs	r3, #36	@ 0x24
2fff009a:	6123      	str	r3, [r4, #16]
2fff009c:	f7fd fb58 	bl	2ffed750 <clk_get_rate>
2fff00a0:	9002      	str	r0, [sp, #8]
2fff00a2:	b940      	cbnz	r0, 2fff00b6 <stm32_i2c_init+0x36>
2fff00a4:	4897      	ldr	r0, [pc, #604]	@ (2fff0304 <stm32_i2c_init+0x284>)
2fff00a6:	f06f 0715 	mvn.w	r7, #21
2fff00aa:	f7fc fb07 	bl	2ffec6bc <tf_log>
2fff00ae:	4638      	mov	r0, r7
2fff00b0:	b023      	add	sp, #140	@ 0x8c
2fff00b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff00b6:	6a23      	ldr	r3, [r4, #32]
2fff00b8:	9a02      	ldr	r2, [sp, #8]
2fff00ba:	429a      	cmp	r2, r3
2fff00bc:	d02c      	beq.n	2fff0118 <stm32_i2c_init+0x98>
2fff00be:	4b92      	ldr	r3, [pc, #584]	@ (2fff0308 <stm32_i2c_init+0x288>)
2fff00c0:	eb03 0652 	add.w	r6, r3, r2, lsr #1
2fff00c4:	fbb6 f6f2 	udiv	r6, r6, r2
2fff00c8:	0073      	lsls	r3, r6, #1
2fff00ca:	9309      	str	r3, [sp, #36]	@ 0x24
2fff00cc:	6a69      	ldr	r1, [r5, #36]	@ 0x24
2fff00ce:	4b8f      	ldr	r3, [pc, #572]	@ (2fff030c <stm32_i2c_init+0x28c>)
2fff00d0:	4299      	cmp	r1, r3
2fff00d2:	d97f      	bls.n	2fff01d4 <stm32_i2c_init+0x154>
2fff00d4:	4b8e      	ldr	r3, [pc, #568]	@ (2fff0310 <stm32_i2c_init+0x290>)
2fff00d6:	4299      	cmp	r1, r3
2fff00d8:	d97f      	bls.n	2fff01da <stm32_i2c_init+0x15a>
2fff00da:	4b8e      	ldr	r3, [pc, #568]	@ (2fff0314 <stm32_i2c_init+0x294>)
2fff00dc:	4299      	cmp	r1, r3
2fff00de:	d87f      	bhi.n	2fff01e0 <stm32_i2c_init+0x160>
2fff00e0:	f04f 0902 	mov.w	r9, #2
2fff00e4:	4a8c      	ldr	r2, [pc, #560]	@ (2fff0318 <stm32_i2c_init+0x298>)
2fff00e6:	ea4f 1349 	mov.w	r3, r9, lsl #5
2fff00ea:	eb02 1149 	add.w	r1, r2, r9, lsl #5
2fff00ee:	f852 8003 	ldr.w	r8, [r2, r3]
2fff00f2:	4b85      	ldr	r3, [pc, #532]	@ (2fff0308 <stm32_i2c_init+0x288>)
2fff00f4:	688a      	ldr	r2, [r1, #8]
2fff00f6:	eb03 0358 	add.w	r3, r3, r8, lsr #1
2fff00fa:	69e8      	ldr	r0, [r5, #28]
2fff00fc:	fbb3 f3f8 	udiv	r3, r3, r8
2fff0100:	4290      	cmp	r0, r2
2fff0102:	9307      	str	r3, [sp, #28]
2fff0104:	6849      	ldr	r1, [r1, #4]
2fff0106:	6a2b      	ldr	r3, [r5, #32]
2fff0108:	f240 8084 	bls.w	2fff0214 <stm32_i2c_init+0x194>
2fff010c:	9100      	str	r1, [sp, #0]
2fff010e:	4601      	mov	r1, r0
2fff0110:	4882      	ldr	r0, [pc, #520]	@ (2fff031c <stm32_i2c_init+0x29c>)
2fff0112:	f7fc fad3 	bl	2ffec6bc <tf_log>
2fff0116:	e066      	b.n	2fff01e6 <stm32_i2c_init+0x166>
2fff0118:	69e6      	ldr	r6, [r4, #28]
2fff011a:	68a0      	ldr	r0, [r4, #8]
2fff011c:	f026 6670 	bic.w	r6, r6, #251658240	@ 0xf000000
2fff0120:	f7fd faf2 	bl	2ffed708 <clk_enable>
2fff0124:	6822      	ldr	r2, [r4, #0]
2fff0126:	2120      	movs	r1, #32
2fff0128:	6813      	ldr	r3, [r2, #0]
2fff012a:	f023 0301 	bic.w	r3, r3, #1
2fff012e:	6013      	str	r3, [r2, #0]
2fff0130:	6823      	ldr	r3, [r4, #0]
2fff0132:	611e      	str	r6, [r3, #16]
2fff0134:	6822      	ldr	r2, [r4, #0]
2fff0136:	6893      	ldr	r3, [r2, #8]
2fff0138:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
2fff013c:	6093      	str	r3, [r2, #8]
2fff013e:	686b      	ldr	r3, [r5, #4]
2fff0140:	6822      	ldr	r2, [r4, #0]
2fff0142:	2b01      	cmp	r3, #1
2fff0144:	682b      	ldr	r3, [r5, #0]
2fff0146:	bf0c      	ite	eq
2fff0148:	f443 4300 	orreq.w	r3, r3, #32768	@ 0x8000
2fff014c:	f443 4304 	orrne.w	r3, r3, #33792	@ 0x8400
2fff0150:	6093      	str	r3, [r2, #8]
2fff0152:	2200      	movs	r2, #0
2fff0154:	6823      	ldr	r3, [r4, #0]
2fff0156:	605a      	str	r2, [r3, #4]
2fff0158:	686b      	ldr	r3, [r5, #4]
2fff015a:	2b02      	cmp	r3, #2
2fff015c:	bf01      	itttt	eq
2fff015e:	6822      	ldreq	r2, [r4, #0]
2fff0160:	6853      	ldreq	r3, [r2, #4]
2fff0162:	f443 6300 	orreq.w	r3, r3, #2048	@ 0x800
2fff0166:	6053      	streq	r3, [r2, #4]
2fff0168:	6822      	ldr	r2, [r4, #0]
2fff016a:	6853      	ldr	r3, [r2, #4]
2fff016c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
2fff0170:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
2fff0174:	6053      	str	r3, [r2, #4]
2fff0176:	6822      	ldr	r2, [r4, #0]
2fff0178:	68d3      	ldr	r3, [r2, #12]
2fff017a:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
2fff017e:	60d3      	str	r3, [r2, #12]
2fff0180:	68ea      	ldr	r2, [r5, #12]
2fff0182:	68ab      	ldr	r3, [r5, #8]
2fff0184:	4313      	orrs	r3, r2
2fff0186:	692a      	ldr	r2, [r5, #16]
2fff0188:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff018c:	6822      	ldr	r2, [r4, #0]
2fff018e:	60d3      	str	r3, [r2, #12]
2fff0190:	69aa      	ldr	r2, [r5, #24]
2fff0192:	696b      	ldr	r3, [r5, #20]
2fff0194:	4313      	orrs	r3, r2
2fff0196:	6822      	ldr	r2, [r4, #0]
2fff0198:	6013      	str	r3, [r2, #0]
2fff019a:	6822      	ldr	r2, [r4, #0]
2fff019c:	6813      	ldr	r3, [r2, #0]
2fff019e:	f043 0301 	orr.w	r3, r3, #1
2fff01a2:	6013      	str	r3, [r2, #0]
2fff01a4:	2300      	movs	r3, #0
2fff01a6:	61a3      	str	r3, [r4, #24]
2fff01a8:	6163      	str	r3, [r4, #20]
2fff01aa:	6aab      	ldr	r3, [r5, #40]	@ 0x28
2fff01ac:	7b27      	ldrb	r7, [r4, #12]
2fff01ae:	fab3 f383 	clz	r3, r3
2fff01b2:	6121      	str	r1, [r4, #16]
2fff01b4:	095b      	lsrs	r3, r3, #5
2fff01b6:	031b      	lsls	r3, r3, #12
2fff01b8:	2f00      	cmp	r7, #0
2fff01ba:	f000 8155 	beq.w	2fff0468 <stm32_i2c_init+0x3e8>
2fff01be:	4858      	ldr	r0, [pc, #352]	@ (2fff0320 <stm32_i2c_init+0x2a0>)
2fff01c0:	f06f 010f 	mvn.w	r1, #15
2fff01c4:	f06f 070f 	mvn.w	r7, #15
2fff01c8:	f7fc fa78 	bl	2ffec6bc <tf_log>
2fff01cc:	68a0      	ldr	r0, [r4, #8]
2fff01ce:	f7fd faad 	bl	2ffed72c <clk_disable>
2fff01d2:	e76c      	b.n	2fff00ae <stm32_i2c_init+0x2e>
2fff01d4:	f04f 0900 	mov.w	r9, #0
2fff01d8:	e784      	b.n	2fff00e4 <stm32_i2c_init+0x64>
2fff01da:	f04f 0901 	mov.w	r9, #1
2fff01de:	e781      	b.n	2fff00e4 <stm32_i2c_init+0x64>
2fff01e0:	4850      	ldr	r0, [pc, #320]	@ (2fff0324 <stm32_i2c_init+0x2a4>)
2fff01e2:	f7fc fa6b 	bl	2ffec6bc <tf_log>
2fff01e6:	f06f 0715 	mvn.w	r7, #21
2fff01ea:	484f      	ldr	r0, [pc, #316]	@ (2fff0328 <stm32_i2c_init+0x2a8>)
2fff01ec:	f7fc fa66 	bl	2ffec6bc <tf_log>
2fff01f0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
2fff01f2:	4846      	ldr	r0, [pc, #280]	@ (2fff030c <stm32_i2c_init+0x28c>)
2fff01f4:	4283      	cmp	r3, r0
2fff01f6:	f240 8133 	bls.w	2fff0460 <stm32_i2c_init+0x3e0>
2fff01fa:	4946      	ldr	r1, [pc, #280]	@ (2fff0314 <stm32_i2c_init+0x294>)
2fff01fc:	428b      	cmp	r3, r1
2fff01fe:	d804      	bhi.n	2fff020a <stm32_i2c_init+0x18a>
2fff0200:	4a43      	ldr	r2, [pc, #268]	@ (2fff0310 <stm32_i2c_init+0x290>)
2fff0202:	4293      	cmp	r3, r2
2fff0204:	bf94      	ite	ls
2fff0206:	4601      	movls	r1, r0
2fff0208:	4611      	movhi	r1, r2
2fff020a:	4848      	ldr	r0, [pc, #288]	@ (2fff032c <stm32_i2c_init+0x2ac>)
2fff020c:	6269      	str	r1, [r5, #36]	@ 0x24
2fff020e:	f7fc fa55 	bl	2ffec6bc <tf_log>
2fff0212:	e75b      	b.n	2fff00cc <stm32_i2c_init+0x4c>
2fff0214:	428b      	cmp	r3, r1
2fff0216:	f63f af79 	bhi.w	2fff010c <stm32_i2c_init+0x8c>
2fff021a:	f895 102c 	ldrb.w	r1, [r5, #44]	@ 0x2c
2fff021e:	2910      	cmp	r1, #16
2fff0220:	d904      	bls.n	2fff022c <stm32_i2c_init+0x1ac>
2fff0222:	4843      	ldr	r0, [pc, #268]	@ (2fff0330 <stm32_i2c_init+0x2b0>)
2fff0224:	2210      	movs	r2, #16
2fff0226:	f7fc fa49 	bl	2ffec6bc <tf_log>
2fff022a:	e7dc      	b.n	2fff01e6 <stm32_i2c_init+0x166>
2fff022c:	6aaf      	ldr	r7, [r5, #40]	@ 0x28
2fff022e:	bb6f      	cbnz	r7, 2fff028c <stm32_i2c_init+0x20c>
2fff0230:	46be      	mov	lr, r7
2fff0232:	fb06 f201 	mul.w	r2, r6, r1
2fff0236:	3103      	adds	r1, #3
2fff0238:	9205      	str	r2, [sp, #20]
2fff023a:	4a37      	ldr	r2, [pc, #220]	@ (2fff0318 <stm32_i2c_init+0x298>)
2fff023c:	4371      	muls	r1, r6
2fff023e:	eb02 1c49 	add.w	ip, r2, r9, lsl #5
2fff0242:	1a5b      	subs	r3, r3, r1
2fff0244:	f8dc 200c 	ldr.w	r2, [ip, #12]
2fff0248:	4431      	add	r1, r6
2fff024a:	4413      	add	r3, r2
2fff024c:	1bdb      	subs	r3, r3, r7
2fff024e:	9303      	str	r3, [sp, #12]
2fff0250:	f8dc 3010 	ldr.w	r3, [ip, #16]
2fff0254:	4401      	add	r1, r0
2fff0256:	1a5b      	subs	r3, r3, r1
2fff0258:	2150      	movs	r1, #80	@ 0x50
2fff025a:	eba3 030e 	sub.w	r3, r3, lr
2fff025e:	9304      	str	r3, [sp, #16]
2fff0260:	f8dc 3014 	ldr.w	r3, [ip, #20]
2fff0264:	18c3      	adds	r3, r0, r3
2fff0266:	a80e      	add	r0, sp, #56	@ 0x38
2fff0268:	9308      	str	r3, [sp, #32]
2fff026a:	9b03      	ldr	r3, [sp, #12]
2fff026c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff0270:	9303      	str	r3, [sp, #12]
2fff0272:	9b04      	ldr	r3, [sp, #16]
2fff0274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff0278:	9304      	str	r3, [sp, #16]
2fff027a:	f7f9 e9b0 	blx	2ffe95dc <zero_normalmem>
2fff027e:	4630      	mov	r0, r6
2fff0280:	2300      	movs	r3, #0
2fff0282:	f04f 0c10 	mov.w	ip, #16
2fff0286:	4682      	mov	sl, r0
2fff0288:	2100      	movs	r1, #0
2fff028a:	e00d      	b.n	2fff02a8 <stm32_i2c_init+0x228>
2fff028c:	2732      	movs	r7, #50	@ 0x32
2fff028e:	f44f 7e82 	mov.w	lr, #260	@ 0x104
2fff0292:	e7ce      	b.n	2fff0232 <stm32_i2c_init+0x1b2>
2fff0294:	4486      	add	lr, r0
2fff0296:	3201      	adds	r2, #1
2fff0298:	b292      	uxth	r2, r2
2fff029a:	2a10      	cmp	r2, #16
2fff029c:	d10c      	bne.n	2fff02b8 <stm32_i2c_init+0x238>
2fff029e:	459c      	cmp	ip, r3
2fff02a0:	d023      	beq.n	2fff02ea <stm32_i2c_init+0x26a>
2fff02a2:	4482      	add	sl, r0
2fff02a4:	2910      	cmp	r1, #16
2fff02a6:	d020      	beq.n	2fff02ea <stm32_i2c_init+0x26a>
2fff02a8:	9a08      	ldr	r2, [sp, #32]
2fff02aa:	9106      	str	r1, [sp, #24]
2fff02ac:	3101      	adds	r1, #1
2fff02ae:	4552      	cmp	r2, sl
2fff02b0:	b289      	uxth	r1, r1
2fff02b2:	d8f6      	bhi.n	2fff02a2 <stm32_i2c_init+0x222>
2fff02b4:	46b6      	mov	lr, r6
2fff02b6:	2200      	movs	r2, #0
2fff02b8:	f8dd b00c 	ldr.w	fp, [sp, #12]
2fff02bc:	45f3      	cmp	fp, lr
2fff02be:	d8e9      	bhi.n	2fff0294 <stm32_i2c_init+0x214>
2fff02c0:	f8dd b010 	ldr.w	fp, [sp, #16]
2fff02c4:	45f3      	cmp	fp, lr
2fff02c6:	d3e5      	bcc.n	2fff0294 <stm32_i2c_init+0x214>
2fff02c8:	459c      	cmp	ip, r3
2fff02ca:	d0e3      	beq.n	2fff0294 <stm32_i2c_init+0x214>
2fff02cc:	eb03 0183 	add.w	r1, r3, r3, lsl #2
2fff02d0:	f8dd c018 	ldr.w	ip, [sp, #24]
2fff02d4:	3188      	adds	r1, #136	@ 0x88
2fff02d6:	4469      	add	r1, sp
2fff02d8:	f801 cc50 	strb.w	ip, [r1, #-80]
2fff02dc:	469c      	mov	ip, r3
2fff02de:	f801 2c4f 	strb.w	r2, [r1, #-79]
2fff02e2:	f04f 0201 	mov.w	r2, #1
2fff02e6:	f801 2c4c 	strb.w	r2, [r1, #-76]
2fff02ea:	4430      	add	r0, r6
2fff02ec:	3301      	adds	r3, #1
2fff02ee:	2b10      	cmp	r3, #16
2fff02f0:	d1c9      	bne.n	2fff0286 <stm32_i2c_init+0x206>
2fff02f2:	f1bc 0f10 	cmp.w	ip, #16
2fff02f6:	d11f      	bne.n	2fff0338 <stm32_i2c_init+0x2b8>
2fff02f8:	480e      	ldr	r0, [pc, #56]	@ (2fff0334 <stm32_i2c_init+0x2b4>)
2fff02fa:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
2fff02fe:	f7fc f9dd 	bl	2ffec6bc <tf_log>
2fff0302:	e772      	b.n	2fff01ea <stm32_i2c_init+0x16a>
2fff0304:	2fff73ea 	.word	0x2fff73ea
2fff0308:	3b9aca00 	.word	0x3b9aca00
2fff030c:	000186a0 	.word	0x000186a0
2fff0310:	00061a80 	.word	0x00061a80
2fff0314:	000f4240 	.word	0x000f4240
2fff0318:	2fff4628 	.word	0x2fff4628
2fff031c:	2fff741e 	.word	0x2fff741e
2fff0320:	2fff7505 	.word	0x2fff7505
2fff0324:	2fff7400 	.word	0x2fff7400
2fff0328:	2fff74a2 	.word	0x2fff74a2
2fff032c:	2fff74c2 	.word	0x2fff74c2
2fff0330:	2fff7452 	.word	0x2fff7452
2fff0334:	2fff746b 	.word	0x2fff746b
2fff0338:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2fff033a:	f10d 0c38 	add.w	ip, sp, #56	@ 0x38
2fff033e:	9b05      	ldr	r3, [sp, #20]
2fff0340:	4630      	mov	r0, r6
2fff0342:	f04f 0e00 	mov.w	lr, #0
2fff0346:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff034a:	4413      	add	r3, r2
2fff034c:	2250      	movs	r2, #80	@ 0x50
2fff034e:	443b      	add	r3, r7
2fff0350:	9308      	str	r3, [sp, #32]
2fff0352:	2364      	movs	r3, #100	@ 0x64
2fff0354:	fbb8 f3f3 	udiv	r3, r8, r3
2fff0358:	4353      	muls	r3, r2
2fff035a:	4a52      	ldr	r2, [pc, #328]	@ (2fff04a4 <stm32_i2c_init+0x424>)
2fff035c:	fbb2 f3f3 	udiv	r3, r2, r3
2fff0360:	930a      	str	r3, [sp, #40]	@ 0x28
2fff0362:	fbb2 f3f8 	udiv	r3, r2, r8
2fff0366:	930b      	str	r3, [sp, #44]	@ 0x2c
2fff0368:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
2fff036c:	9303      	str	r3, [sp, #12]
2fff036e:	4b4e      	ldr	r3, [pc, #312]	@ (2fff04a8 <stm32_i2c_init+0x428>)
2fff0370:	eb03 1349 	add.w	r3, r3, r9, lsl #5
2fff0374:	9306      	str	r3, [sp, #24]
2fff0376:	9b05      	ldr	r3, [sp, #20]
2fff0378:	443b      	add	r3, r7
2fff037a:	930d      	str	r3, [sp, #52]	@ 0x34
2fff037c:	f89c 3004 	ldrb.w	r3, [ip, #4]
2fff0380:	2b00      	cmp	r3, #0
2fff0382:	d045      	beq.n	2fff0410 <stm32_i2c_init+0x390>
2fff0384:	9b06      	ldr	r3, [sp, #24]
2fff0386:	f04f 0900 	mov.w	r9, #0
2fff038a:	699b      	ldr	r3, [r3, #24]
2fff038c:	9305      	str	r3, [sp, #20]
2fff038e:	9b08      	ldr	r3, [sp, #32]
2fff0390:	4403      	add	r3, r0
2fff0392:	9304      	str	r3, [sp, #16]
2fff0394:	4698      	mov	r8, r3
2fff0396:	9b05      	ldr	r3, [sp, #20]
2fff0398:	4543      	cmp	r3, r8
2fff039a:	d833      	bhi.n	2fff0404 <stm32_i2c_init+0x384>
2fff039c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
2fff039e:	eba8 0303 	sub.w	r3, r8, r3
2fff03a2:	ebb6 0f93 	cmp.w	r6, r3, lsr #2
2fff03a6:	d22d      	bcs.n	2fff0404 <stm32_i2c_init+0x384>
2fff03a8:	6a2b      	ldr	r3, [r5, #32]
2fff03aa:	f04f 0a00 	mov.w	sl, #0
2fff03ae:	69ea      	ldr	r2, [r5, #28]
2fff03b0:	9f07      	ldr	r7, [sp, #28]
2fff03b2:	441a      	add	r2, r3
2fff03b4:	4442      	add	r2, r8
2fff03b6:	9b04      	ldr	r3, [sp, #16]
2fff03b8:	1bd7      	subs	r7, r2, r7
2fff03ba:	970c      	str	r7, [sp, #48]	@ 0x30
2fff03bc:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
2fff03c0:	18d7      	adds	r7, r2, r3
2fff03c2:	45bb      	cmp	fp, r7
2fff03c4:	d818      	bhi.n	2fff03f8 <stm32_i2c_init+0x378>
2fff03c6:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
2fff03ca:	45bb      	cmp	fp, r7
2fff03cc:	d314      	bcc.n	2fff03f8 <stm32_i2c_init+0x378>
2fff03ce:	9f06      	ldr	r7, [sp, #24]
2fff03d0:	69ff      	ldr	r7, [r7, #28]
2fff03d2:	429f      	cmp	r7, r3
2fff03d4:	d810      	bhi.n	2fff03f8 <stm32_i2c_init+0x378>
2fff03d6:	429e      	cmp	r6, r3
2fff03d8:	d20e      	bcs.n	2fff03f8 <stm32_i2c_init+0x378>
2fff03da:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
2fff03dc:	f8dd b00c 	ldr.w	fp, [sp, #12]
2fff03e0:	441f      	add	r7, r3
2fff03e2:	2f00      	cmp	r7, #0
2fff03e4:	bfb8      	it	lt
2fff03e6:	427f      	neglt	r7, r7
2fff03e8:	45bb      	cmp	fp, r7
2fff03ea:	bfc1      	itttt	gt
2fff03ec:	f88c 9003 	strbgt.w	r9, [ip, #3]
2fff03f0:	4671      	movgt	r1, lr
2fff03f2:	f88c a002 	strbgt.w	sl, [ip, #2]
2fff03f6:	9703      	strgt	r7, [sp, #12]
2fff03f8:	4403      	add	r3, r0
2fff03fa:	f10a 0a01 	add.w	sl, sl, #1
2fff03fe:	f5ba 7f80 	cmp.w	sl, #256	@ 0x100
2fff0402:	d1db      	bne.n	2fff03bc <stm32_i2c_init+0x33c>
2fff0404:	4480      	add	r8, r0
2fff0406:	f109 0901 	add.w	r9, r9, #1
2fff040a:	f5b9 7f80 	cmp.w	r9, #256	@ 0x100
2fff040e:	d1c2      	bne.n	2fff0396 <stm32_i2c_init+0x316>
2fff0410:	4430      	add	r0, r6
2fff0412:	f10e 0e01 	add.w	lr, lr, #1
2fff0416:	f1be 0f10 	cmp.w	lr, #16
2fff041a:	f10c 0c05 	add.w	ip, ip, #5
2fff041e:	d1ad      	bne.n	2fff037c <stm32_i2c_init+0x2fc>
2fff0420:	1c4b      	adds	r3, r1, #1
2fff0422:	d101      	bne.n	2fff0428 <stm32_i2c_init+0x3a8>
2fff0424:	4821      	ldr	r0, [pc, #132]	@ (2fff04ac <stm32_i2c_init+0x42c>)
2fff0426:	e768      	b.n	2fff02fa <stm32_i2c_init+0x27a>
2fff0428:	eb01 0381 	add.w	r3, r1, r1, lsl #2
2fff042c:	3388      	adds	r3, #136	@ 0x88
2fff042e:	446b      	add	r3, sp
2fff0430:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2fff0434:	f813 2c4e 	ldrb.w	r2, [r3, #-78]
2fff0438:	ea46 7601 	orr.w	r6, r6, r1, lsl #28
2fff043c:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
2fff0440:	f813 2c50 	ldrb.w	r2, [r3, #-80]
2fff0444:	f813 3c4f 	ldrb.w	r3, [r3, #-79]
2fff0448:	0512      	lsls	r2, r2, #20
2fff044a:	041b      	lsls	r3, r3, #16
2fff044c:	f402 0270 	and.w	r2, r2, #15728640	@ 0xf00000
2fff0450:	4316      	orrs	r6, r2
2fff0452:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
2fff0456:	431e      	orrs	r6, r3
2fff0458:	9b02      	ldr	r3, [sp, #8]
2fff045a:	61e6      	str	r6, [r4, #28]
2fff045c:	6223      	str	r3, [r4, #32]
2fff045e:	e65c      	b.n	2fff011a <stm32_i2c_init+0x9a>
2fff0460:	4813      	ldr	r0, [pc, #76]	@ (2fff04b0 <stm32_i2c_init+0x430>)
2fff0462:	f7fc f92b 	bl	2ffec6bc <tf_log>
2fff0466:	e622      	b.n	2fff00ae <stm32_i2c_init+0x2e>
2fff0468:	6820      	ldr	r0, [r4, #0]
2fff046a:	2224      	movs	r2, #36	@ 0x24
2fff046c:	6122      	str	r2, [r4, #16]
2fff046e:	6802      	ldr	r2, [r0, #0]
2fff0470:	f022 0201 	bic.w	r2, r2, #1
2fff0474:	6002      	str	r2, [r0, #0]
2fff0476:	6820      	ldr	r0, [r4, #0]
2fff0478:	6802      	ldr	r2, [r0, #0]
2fff047a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
2fff047e:	6002      	str	r2, [r0, #0]
2fff0480:	6820      	ldr	r0, [r4, #0]
2fff0482:	6802      	ldr	r2, [r0, #0]
2fff0484:	4313      	orrs	r3, r2
2fff0486:	6003      	str	r3, [r0, #0]
2fff0488:	6822      	ldr	r2, [r4, #0]
2fff048a:	6813      	ldr	r3, [r2, #0]
2fff048c:	f043 0301 	orr.w	r3, r3, #1
2fff0490:	6013      	str	r3, [r2, #0]
2fff0492:	6121      	str	r1, [r4, #16]
2fff0494:	68a0      	ldr	r0, [r4, #8]
2fff0496:	7327      	strb	r7, [r4, #12]
2fff0498:	f7fd f948 	bl	2ffed72c <clk_disable>
2fff049c:	e607      	b.n	2fff00ae <stm32_i2c_init+0x2e>
2fff049e:	f06f 0701 	mvn.w	r7, #1
2fff04a2:	e604      	b.n	2fff00ae <stm32_i2c_init+0x2e>
2fff04a4:	3b9aca00 	.word	0x3b9aca00
2fff04a8:	2fff4628 	.word	0x2fff4628
2fff04ac:	2fff7488 	.word	0x2fff7488
2fff04b0:	2fff74e1 	.word	0x2fff74e1

2fff04b4 <stm32_i2c_is_device_ready>:
2fff04b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff04b8:	461f      	mov	r7, r3
2fff04ba:	6903      	ldr	r3, [r0, #16]
2fff04bc:	4604      	mov	r4, r0
2fff04be:	468a      	mov	sl, r1
2fff04c0:	4693      	mov	fp, r2
2fff04c2:	2b20      	cmp	r3, #32
2fff04c4:	f040 808a 	bne.w	2fff05dc <stm32_i2c_is_device_ready+0x128>
2fff04c8:	7b05      	ldrb	r5, [r0, #12]
2fff04ca:	2d00      	cmp	r5, #0
2fff04cc:	f040 8086 	bne.w	2fff05dc <stm32_i2c_is_device_ready+0x128>
2fff04d0:	6880      	ldr	r0, [r0, #8]
2fff04d2:	f7fd f919 	bl	2ffed708 <clk_enable>
2fff04d6:	6165      	str	r5, [r4, #20]
2fff04d8:	2301      	movs	r3, #1
2fff04da:	7323      	strb	r3, [r4, #12]
2fff04dc:	6823      	ldr	r3, [r4, #0]
2fff04de:	699d      	ldr	r5, [r3, #24]
2fff04e0:	f415 4500 	ands.w	r5, r5, #32768	@ 0x8000
2fff04e4:	d136      	bne.n	2fff0554 <stm32_i2c_is_device_ready+0xa0>
2fff04e6:	f3ca 0a09 	ubfx	sl, sl, #0, #10
2fff04ea:	2324      	movs	r3, #36	@ 0x24
2fff04ec:	6123      	str	r3, [r4, #16]
2fff04ee:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2fff04f2:	435f      	muls	r7, r3
2fff04f4:	61a5      	str	r5, [r4, #24]
2fff04f6:	6823      	ldr	r3, [r4, #0]
2fff04f8:	689a      	ldr	r2, [r3, #8]
2fff04fa:	0552      	lsls	r2, r2, #21
2fff04fc:	bf56      	itet	pl
2fff04fe:	f04a 7200 	orrpl.w	r2, sl, #33554432	@ 0x2000000
2fff0502:	f44a 5220 	orrmi.w	r2, sl, #10240	@ 0x2800
2fff0506:	f442 5200 	orrpl.w	r2, r2, #8192	@ 0x2000
2fff050a:	605a      	str	r2, [r3, #4]
2fff050c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff0510:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff0514:	4a32      	ldr	r2, [pc, #200]	@ (2fff05e0 <stm32_i2c_is_device_ready+0x12c>)
2fff0516:	2300      	movs	r3, #0
2fff0518:	fba7 0100 	umull	r0, r1, r7, r0
2fff051c:	4646      	mov	r6, r8
2fff051e:	f001 ee98 	blx	2fff2250 <__aeabi_uldivmod>
2fff0522:	1986      	adds	r6, r0, r6
2fff0524:	eb41 0809 	adc.w	r8, r1, r9
2fff0528:	f8d4 9000 	ldr.w	r9, [r4]
2fff052c:	f109 0c18 	add.w	ip, r9, #24
2fff0530:	f8dc 2000 	ldr.w	r2, [ip]
2fff0534:	f012 0230 	ands.w	r2, r2, #48	@ 0x30
2fff0538:	d116      	bne.n	2fff0568 <stm32_i2c_is_device_ready+0xb4>
2fff053a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff053e:	4286      	cmp	r6, r0
2fff0540:	eb78 0301 	sbcs.w	r3, r8, r1
2fff0544:	d2f4      	bcs.n	2fff0530 <stm32_i2c_is_device_ready+0x7c>
2fff0546:	69a3      	ldr	r3, [r4, #24]
2fff0548:	6162      	str	r2, [r4, #20]
2fff054a:	f043 0320 	orr.w	r3, r3, #32
2fff054e:	61a3      	str	r3, [r4, #24]
2fff0550:	2320      	movs	r3, #32
2fff0552:	6123      	str	r3, [r4, #16]
2fff0554:	2500      	movs	r5, #0
2fff0556:	68a0      	ldr	r0, [r4, #8]
2fff0558:	2300      	movs	r3, #0
2fff055a:	7323      	strb	r3, [r4, #12]
2fff055c:	f7fd f8e6 	bl	2ffed72c <clk_disable>
2fff0560:	4628      	mov	r0, r5
2fff0562:	b003      	add	sp, #12
2fff0564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff0568:	f8d9 2018 	ldr.w	r2, [r9, #24]
2fff056c:	e9cd 6800 	strd	r6, r8, [sp]
2fff0570:	f012 0210 	ands.w	r2, r2, #16
2fff0574:	d10a      	bne.n	2fff058c <stm32_i2c_is_device_ready+0xd8>
2fff0576:	2120      	movs	r1, #32
2fff0578:	4620      	mov	r0, r4
2fff057a:	f003 f809 	bl	2fff3590 <i2c_wait_flag>
2fff057e:	2800      	cmp	r0, #0
2fff0580:	d1e8      	bne.n	2fff0554 <stm32_i2c_is_device_ready+0xa0>
2fff0582:	f8c9 101c 	str.w	r1, [r9, #28]
2fff0586:	2501      	movs	r5, #1
2fff0588:	6121      	str	r1, [r4, #16]
2fff058a:	e7e4      	b.n	2fff0556 <stm32_i2c_is_device_ready+0xa2>
2fff058c:	2200      	movs	r2, #0
2fff058e:	2120      	movs	r1, #32
2fff0590:	4620      	mov	r0, r4
2fff0592:	f002 fffd 	bl	2fff3590 <i2c_wait_flag>
2fff0596:	4602      	mov	r2, r0
2fff0598:	2800      	cmp	r0, #0
2fff059a:	d1db      	bne.n	2fff0554 <stm32_i2c_is_device_ready+0xa0>
2fff059c:	455d      	cmp	r5, fp
2fff059e:	f04f 0310 	mov.w	r3, #16
2fff05a2:	f8c9 301c 	str.w	r3, [r9, #28]
2fff05a6:	6823      	ldr	r3, [r4, #0]
2fff05a8:	61d9      	str	r1, [r3, #28]
2fff05aa:	d10d      	bne.n	2fff05c8 <stm32_i2c_is_device_ready+0x114>
2fff05ac:	6820      	ldr	r0, [r4, #0]
2fff05ae:	6843      	ldr	r3, [r0, #4]
2fff05b0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
2fff05b4:	6043      	str	r3, [r0, #4]
2fff05b6:	4620      	mov	r0, r4
2fff05b8:	e9cd 6800 	strd	r6, r8, [sp]
2fff05bc:	f002 ffe8 	bl	2fff3590 <i2c_wait_flag>
2fff05c0:	2800      	cmp	r0, #0
2fff05c2:	d1c7      	bne.n	2fff0554 <stm32_i2c_is_device_ready+0xa0>
2fff05c4:	6823      	ldr	r3, [r4, #0]
2fff05c6:	61d9      	str	r1, [r3, #28]
2fff05c8:	3501      	adds	r5, #1
2fff05ca:	45ab      	cmp	fp, r5
2fff05cc:	d893      	bhi.n	2fff04f6 <stm32_i2c_is_device_ready+0x42>
2fff05ce:	69a3      	ldr	r3, [r4, #24]
2fff05d0:	f043 0320 	orr.w	r3, r3, #32
2fff05d4:	61a3      	str	r3, [r4, #24]
2fff05d6:	2300      	movs	r3, #0
2fff05d8:	6163      	str	r3, [r4, #20]
2fff05da:	e7b9      	b.n	2fff0550 <stm32_i2c_is_device_ready+0x9c>
2fff05dc:	2500      	movs	r5, #0
2fff05de:	e7bf      	b.n	2fff0560 <stm32_i2c_is_device_ready+0xac>
2fff05e0:	000f4240 	.word	0x000f4240

2fff05e4 <stm32_iwdg_refresh>:
2fff05e4:	b510      	push	{r4, lr}
2fff05e6:	4c0e      	ldr	r4, [pc, #56]	@ (2fff0620 <stm32_iwdg_refresh+0x3c>)
2fff05e8:	6823      	ldr	r3, [r4, #0]
2fff05ea:	b14b      	cbz	r3, 2fff0600 <stm32_iwdg_refresh+0x1c>
2fff05ec:	6860      	ldr	r0, [r4, #4]
2fff05ee:	f7fd f88b 	bl	2ffed708 <clk_enable>
2fff05f2:	6823      	ldr	r3, [r4, #0]
2fff05f4:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
2fff05f8:	601a      	str	r2, [r3, #0]
2fff05fa:	6860      	ldr	r0, [r4, #4]
2fff05fc:	f7fd f896 	bl	2ffed72c <clk_disable>
2fff0600:	68e3      	ldr	r3, [r4, #12]
2fff0602:	b15b      	cbz	r3, 2fff061c <stm32_iwdg_refresh+0x38>
2fff0604:	6920      	ldr	r0, [r4, #16]
2fff0606:	f7fd f87f 	bl	2ffed708 <clk_enable>
2fff060a:	68e3      	ldr	r3, [r4, #12]
2fff060c:	f64a 22aa 	movw	r2, #43690	@ 0xaaaa
2fff0610:	601a      	str	r2, [r3, #0]
2fff0612:	6920      	ldr	r0, [r4, #16]
2fff0614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0618:	f7fd b888 	b.w	2ffed72c <clk_disable>
2fff061c:	bd10      	pop	{r4, pc}
2fff061e:	bf00      	nop
2fff0620:	2fff96ec 	.word	0x2fff96ec

2fff0624 <stm32_iwdg_init>:
2fff0624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0628:	b086      	sub	sp, #24
2fff062a:	a801      	add	r0, sp, #4
2fff062c:	f7fe f99a 	bl	2ffee964 <fdt_get_address>
2fff0630:	b918      	cbnz	r0, 2fff063a <stm32_iwdg_init+0x16>
2fff0632:	f7fc f8df 	bl	2ffec7f4 <console_flush>
2fff0636:	f7f8 eed2 	blx	2ffe93dc <do_panic>
2fff063a:	4a23      	ldr	r2, [pc, #140]	@ (2fff06c8 <stm32_iwdg_init+0xa4>)
2fff063c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff0640:	4d22      	ldr	r5, [pc, #136]	@ (2fff06cc <stm32_iwdg_init+0xa8>)
2fff0642:	a802      	add	r0, sp, #8
2fff0644:	f8df 9080 	ldr.w	r9, [pc, #128]	@ 2fff06c8 <stm32_iwdg_init+0xa4>
2fff0648:	f7fe fa34 	bl	2ffeeab4 <dt_get_node>
2fff064c:	ea40 74e0 	orr.w	r4, r0, r0, asr #31
2fff0650:	f04f 080c 	mov.w	r8, #12
2fff0654:	1c63      	adds	r3, r4, #1
2fff0656:	d103      	bne.n	2fff0660 <stm32_iwdg_init+0x3c>
2fff0658:	2000      	movs	r0, #0
2fff065a:	b006      	add	sp, #24
2fff065c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff0660:	9802      	ldr	r0, [sp, #8]
2fff0662:	f7fe fd73 	bl	2ffef14c <stm32_iwdg_get_instance>
2fff0666:	fb08 f700 	mul.w	r7, r8, r0
2fff066a:	9b02      	ldr	r3, [sp, #8]
2fff066c:	4682      	mov	sl, r0
2fff066e:	19ee      	adds	r6, r5, r7
2fff0670:	51eb      	str	r3, [r5, r7]
2fff0672:	9b03      	ldr	r3, [sp, #12]
2fff0674:	6073      	str	r3, [r6, #4]
2fff0676:	f7fe fd7d 	bl	2ffef174 <stm32_iwdg_get_otp_config>
2fff067a:	9b05      	ldr	r3, [sp, #20]
2fff067c:	f010 0f01 	tst.w	r0, #1
2fff0680:	d006      	beq.n	2fff0690 <stm32_iwdg_init+0x6c>
2fff0682:	b953      	cbnz	r3, 2fff069a <stm32_iwdg_init+0x76>
2fff0684:	4812      	ldr	r0, [pc, #72]	@ (2fff06d0 <stm32_iwdg_init+0xac>)
2fff0686:	f10a 0101 	add.w	r1, sl, #1
2fff068a:	f7fc f817 	bl	2ffec6bc <tf_log>
2fff068e:	e7d0      	b.n	2fff0632 <stm32_iwdg_init+0xe>
2fff0690:	b95b      	cbnz	r3, 2fff06aa <stm32_iwdg_init+0x86>
2fff0692:	210c      	movs	r1, #12
2fff0694:	4630      	mov	r0, r6
2fff0696:	f7f8 efa2 	blx	2ffe95dc <zero_normalmem>
2fff069a:	4621      	mov	r1, r4
2fff069c:	464a      	mov	r2, r9
2fff069e:	a802      	add	r0, sp, #8
2fff06a0:	f7fe fa08 	bl	2ffeeab4 <dt_get_node>
2fff06a4:	ea40 74e0 	orr.w	r4, r0, r0, asr #31
2fff06a8:	e7d4      	b.n	2fff0654 <stm32_iwdg_init+0x30>
2fff06aa:	59eb      	ldr	r3, [r5, r7]
2fff06ac:	2b00      	cmp	r3, #0
2fff06ae:	d0c0      	beq.n	2fff0632 <stm32_iwdg_init+0xe>
2fff06b0:	6870      	ldr	r0, [r6, #4]
2fff06b2:	f7fd f829 	bl	2ffed708 <clk_enable>
2fff06b6:	59eb      	ldr	r3, [r5, r7]
2fff06b8:	f64c 42cc 	movw	r2, #52428	@ 0xcccc
2fff06bc:	601a      	str	r2, [r3, #0]
2fff06be:	6870      	ldr	r0, [r6, #4]
2fff06c0:	f7fd f834 	bl	2ffed72c <clk_disable>
2fff06c4:	e7e9      	b.n	2fff069a <stm32_iwdg_init+0x76>
2fff06c6:	bf00      	nop
2fff06c8:	2fff7530 	.word	0x2fff7530
2fff06cc:	2fff96ec 	.word	0x2fff96ec
2fff06d0:	2fff7541 	.word	0x2fff7541

2fff06d4 <dt_get_pmic_node>:
2fff06d4:	b510      	push	{r4, lr}
2fff06d6:	4c06      	ldr	r4, [pc, #24]	@ (2fff06f0 <dt_get_pmic_node+0x1c>)
2fff06d8:	6823      	ldr	r3, [r4, #0]
2fff06da:	3304      	adds	r3, #4
2fff06dc:	d105      	bne.n	2fff06ea <dt_get_pmic_node+0x16>
2fff06de:	4a05      	ldr	r2, [pc, #20]	@ (2fff06f4 <dt_get_pmic_node+0x20>)
2fff06e0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff06e4:	f003 fcfe 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2fff06e8:	6020      	str	r0, [r4, #0]
2fff06ea:	6820      	ldr	r0, [r4, #0]
2fff06ec:	bd10      	pop	{r4, pc}
2fff06ee:	bf00      	nop
2fff06f0:	2fff8538 	.word	0x2fff8538
2fff06f4:	2fff7566 	.word	0x2fff7566

2fff06f8 <dt_pmic_status>:
2fff06f8:	b513      	push	{r0, r1, r4, lr}
2fff06fa:	4c0b      	ldr	r4, [pc, #44]	@ (2fff0728 <dt_pmic_status+0x30>)
2fff06fc:	6820      	ldr	r0, [r4, #0]
2fff06fe:	f110 0f0f 	cmn.w	r0, #15
2fff0702:	d10c      	bne.n	2fff071e <dt_pmic_status+0x26>
2fff0704:	a801      	add	r0, sp, #4
2fff0706:	f7fe f92d 	bl	2ffee964 <fdt_get_address>
2fff070a:	b150      	cbz	r0, 2fff0722 <dt_pmic_status+0x2a>
2fff070c:	9801      	ldr	r0, [sp, #4]
2fff070e:	f7ff ffe1 	bl	2fff06d4 <dt_get_pmic_node>
2fff0712:	2800      	cmp	r0, #0
2fff0714:	bfd4      	ite	le
2fff0716:	f04f 30ff 	movle.w	r0, #4294967295	@ 0xffffffff
2fff071a:	2002      	movgt	r0, #2
2fff071c:	6020      	str	r0, [r4, #0]
2fff071e:	b002      	add	sp, #8
2fff0720:	bd10      	pop	{r4, pc}
2fff0722:	f06f 0001 	mvn.w	r0, #1
2fff0726:	e7fa      	b.n	2fff071e <dt_pmic_status+0x26>
2fff0728:	2fff853c 	.word	0x2fff853c

2fff072c <initialize_pmic_i2c>:
2fff072c:	b570      	push	{r4, r5, r6, lr}
2fff072e:	b092      	sub	sp, #72	@ 0x48
2fff0730:	a801      	add	r0, sp, #4
2fff0732:	f7fe f917 	bl	2ffee964 <fdt_get_address>
2fff0736:	b940      	cbnz	r0, 2fff074a <initialize_pmic_i2c+0x1e>
2fff0738:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff073c:	4837      	ldr	r0, [pc, #220]	@ (2fff081c <initialize_pmic_i2c+0xf0>)
2fff073e:	f7fb ffbd 	bl	2ffec6bc <tf_log>
2fff0742:	f7fc f857 	bl	2ffec7f4 <console_flush>
2fff0746:	f7f8 ee4a 	blx	2ffe93dc <do_panic>
2fff074a:	4d35      	ldr	r5, [pc, #212]	@ (2fff0820 <initialize_pmic_i2c+0xf4>)
2fff074c:	682b      	ldr	r3, [r5, #0]
2fff074e:	3301      	adds	r3, #1
2fff0750:	d11e      	bne.n	2fff0790 <initialize_pmic_i2c+0x64>
2fff0752:	9801      	ldr	r0, [sp, #4]
2fff0754:	f7ff ffbe 	bl	2fff06d4 <dt_get_pmic_node>
2fff0758:	1e04      	subs	r4, r0, #0
2fff075a:	db2a      	blt.n	2fff07b2 <initialize_pmic_i2c+0x86>
2fff075c:	4a31      	ldr	r2, [pc, #196]	@ (2fff0824 <initialize_pmic_i2c+0xf8>)
2fff075e:	2300      	movs	r3, #0
2fff0760:	9801      	ldr	r0, [sp, #4]
2fff0762:	4621      	mov	r1, r4
2fff0764:	f003 fb8a 	bl	2fff3e7c <fdt_getprop>
2fff0768:	2800      	cmp	r0, #0
2fff076a:	d0e5      	beq.n	2fff0738 <initialize_pmic_i2c+0xc>
2fff076c:	6803      	ldr	r3, [r0, #0]
2fff076e:	4a2e      	ldr	r2, [pc, #184]	@ (2fff0828 <initialize_pmic_i2c+0xfc>)
2fff0770:	ba1b      	rev	r3, r3
2fff0772:	005b      	lsls	r3, r3, #1
2fff0774:	6013      	str	r3, [r2, #0]
2fff0776:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
2fff077a:	d302      	bcc.n	2fff0782 <initialize_pmic_i2c+0x56>
2fff077c:	f06f 010e 	mvn.w	r1, #14
2fff0780:	e7dc      	b.n	2fff073c <initialize_pmic_i2c+0x10>
2fff0782:	9801      	ldr	r0, [sp, #4]
2fff0784:	4621      	mov	r1, r4
2fff0786:	f003 fc26 	bl	2fff3fd6 <fdt_parent_offset>
2fff078a:	6028      	str	r0, [r5, #0]
2fff078c:	2800      	cmp	r0, #0
2fff078e:	dbd3      	blt.n	2fff0738 <initialize_pmic_i2c+0xc>
2fff0790:	6829      	ldr	r1, [r5, #0]
2fff0792:	a802      	add	r0, sp, #8
2fff0794:	f7fe f94a 	bl	2ffeea2c <dt_fill_device_info>
2fff0798:	9b02      	ldr	r3, [sp, #8]
2fff079a:	2b00      	cmp	r3, #0
2fff079c:	d0cc      	beq.n	2fff0738 <initialize_pmic_i2c+0xc>
2fff079e:	6829      	ldr	r1, [r5, #0]
2fff07a0:	2302      	movs	r3, #2
2fff07a2:	9801      	ldr	r0, [sp, #4]
2fff07a4:	aa06      	add	r2, sp, #24
2fff07a6:	9305      	str	r3, [sp, #20]
2fff07a8:	f7ff fc38 	bl	2fff001c <stm32_i2c_get_setup_from_fdt>
2fff07ac:	1e01      	subs	r1, r0, #0
2fff07ae:	dbc5      	blt.n	2fff073c <initialize_pmic_i2c+0x10>
2fff07b0:	d003      	beq.n	2fff07ba <initialize_pmic_i2c+0x8e>
2fff07b2:	2500      	movs	r5, #0
2fff07b4:	4628      	mov	r0, r5
2fff07b6:	b012      	add	sp, #72	@ 0x48
2fff07b8:	bd70      	pop	{r4, r5, r6, pc}
2fff07ba:	4c1c      	ldr	r4, [pc, #112]	@ (2fff082c <initialize_pmic_i2c+0x100>)
2fff07bc:	2501      	movs	r5, #1
2fff07be:	9b02      	ldr	r3, [sp, #8]
2fff07c0:	4e19      	ldr	r6, [pc, #100]	@ (2fff0828 <initialize_pmic_i2c+0xfc>)
2fff07c2:	4620      	mov	r0, r4
2fff07c4:	6023      	str	r3, [r4, #0]
2fff07c6:	9b05      	ldr	r3, [sp, #20]
2fff07c8:	6121      	str	r1, [r4, #16]
2fff07ca:	6063      	str	r3, [r4, #4]
2fff07cc:	9b03      	ldr	r3, [sp, #12]
2fff07ce:	e9cd 1108 	strd	r1, r1, [sp, #32]
2fff07d2:	60a3      	str	r3, [r4, #8]
2fff07d4:	6833      	ldr	r3, [r6, #0]
2fff07d6:	e9cd 110a 	strd	r1, r1, [sp, #40]	@ 0x28
2fff07da:	910c      	str	r1, [sp, #48]	@ 0x30
2fff07dc:	f88d 1044 	strb.w	r1, [sp, #68]	@ 0x44
2fff07e0:	a906      	add	r1, sp, #24
2fff07e2:	9306      	str	r3, [sp, #24]
2fff07e4:	9507      	str	r5, [sp, #28]
2fff07e6:	9510      	str	r5, [sp, #64]	@ 0x40
2fff07e8:	f7ff fc4a 	bl	2fff0080 <stm32_i2c_init>
2fff07ec:	4602      	mov	r2, r0
2fff07ee:	b120      	cbz	r0, 2fff07fa <initialize_pmic_i2c+0xce>
2fff07f0:	6821      	ldr	r1, [r4, #0]
2fff07f2:	480f      	ldr	r0, [pc, #60]	@ (2fff0830 <initialize_pmic_i2c+0x104>)
2fff07f4:	f7fb ff62 	bl	2ffec6bc <tf_log>
2fff07f8:	e7a3      	b.n	2fff0742 <initialize_pmic_i2c+0x16>
2fff07fa:	8831      	ldrh	r1, [r6, #0]
2fff07fc:	462a      	mov	r2, r5
2fff07fe:	2319      	movs	r3, #25
2fff0800:	4620      	mov	r0, r4
2fff0802:	f7ff fe57 	bl	2fff04b4 <stm32_i2c_is_device_ready>
2fff0806:	4605      	mov	r5, r0
2fff0808:	b918      	cbnz	r0, 2fff0812 <initialize_pmic_i2c+0xe6>
2fff080a:	480a      	ldr	r0, [pc, #40]	@ (2fff0834 <initialize_pmic_i2c+0x108>)
2fff080c:	f7fb ff56 	bl	2ffec6bc <tf_log>
2fff0810:	e797      	b.n	2fff0742 <initialize_pmic_i2c+0x16>
2fff0812:	8831      	ldrh	r1, [r6, #0]
2fff0814:	4620      	mov	r0, r4
2fff0816:	f000 fa07 	bl	2fff0c28 <stpmic1_bind_i2c>
2fff081a:	e7cb      	b.n	2fff07b4 <initialize_pmic_i2c+0x88>
2fff081c:	2fff7571 	.word	0x2fff7571
2fff0820:	2fff8534 	.word	0x2fff8534
2fff0824:	2fff583e 	.word	0x2fff583e
2fff0828:	2fff9704 	.word	0x2fff9704
2fff082c:	2fff9708 	.word	0x2fff9708
2fff0830:	2fff758f 	.word	0x2fff758f
2fff0834:	2fff75af 	.word	0x2fff75af

2fff0838 <initialize_pmic>:
2fff0838:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff083c:	f7ff ff76 	bl	2fff072c <initialize_pmic_i2c>
2fff0840:	b1f0      	cbz	r0, 2fff0880 <initialize_pmic+0x48>
2fff0842:	f7ff ff59 	bl	2fff06f8 <dt_pmic_status>
2fff0846:	a801      	add	r0, sp, #4
2fff0848:	f7fe f88c 	bl	2ffee964 <fdt_get_address>
2fff084c:	2800      	cmp	r0, #0
2fff084e:	d043      	beq.n	2fff08d8 <initialize_pmic+0xa0>
2fff0850:	9801      	ldr	r0, [sp, #4]
2fff0852:	f7ff ff3f 	bl	2fff06d4 <dt_get_pmic_node>
2fff0856:	1e01      	subs	r1, r0, #0
2fff0858:	db3e      	blt.n	2fff08d8 <initialize_pmic+0xa0>
2fff085a:	4a2c      	ldr	r2, [pc, #176]	@ (2fff090c <initialize_pmic+0xd4>)
2fff085c:	9801      	ldr	r0, [sp, #4]
2fff085e:	f003 fa88 	bl	2fff3d72 <fdt_subnode_offset>
2fff0862:	1e01      	subs	r1, r0, #0
2fff0864:	db38      	blt.n	2fff08d8 <initialize_pmic+0xa0>
2fff0866:	9801      	ldr	r0, [sp, #4]
2fff0868:	f04f 0814 	mov.w	r8, #20
2fff086c:	4f28      	ldr	r7, [pc, #160]	@ (2fff0910 <initialize_pmic+0xd8>)
2fff086e:	f003 f994 	bl	2fff3b9a <fdt_first_subnode>
2fff0872:	4604      	mov	r4, r0
2fff0874:	2c00      	cmp	r4, #0
2fff0876:	da06      	bge.n	2fff0886 <initialize_pmic+0x4e>
2fff0878:	f002 ffbc 	bl	2fff37f4 <stpmic1_powerctrl_on>
2fff087c:	2800      	cmp	r0, #0
2fff087e:	db2b      	blt.n	2fff08d8 <initialize_pmic+0xa0>
2fff0880:	b002      	add	sp, #8
2fff0882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff0886:	9801      	ldr	r0, [sp, #4]
2fff0888:	2200      	movs	r2, #0
2fff088a:	4621      	mov	r1, r4
2fff088c:	2500      	movs	r5, #0
2fff088e:	f003 fa02 	bl	2fff3c96 <fdt_get_name>
2fff0892:	4606      	mov	r6, r0
2fff0894:	fb08 f305 	mul.w	r3, r8, r5
2fff0898:	4631      	mov	r1, r6
2fff089a:	f857 9003 	ldr.w	r9, [r7, r3]
2fff089e:	eb03 0a07 	add.w	sl, r3, r7
2fff08a2:	4648      	mov	r0, r9
2fff08a4:	f003 fd62 	bl	2fff436c <strcmp>
2fff08a8:	b138      	cbz	r0, 2fff08ba <initialize_pmic+0x82>
2fff08aa:	3501      	adds	r5, #1
2fff08ac:	2d0e      	cmp	r5, #14
2fff08ae:	d1f1      	bne.n	2fff0894 <initialize_pmic+0x5c>
2fff08b0:	4818      	ldr	r0, [pc, #96]	@ (2fff0914 <initialize_pmic+0xdc>)
2fff08b2:	f44f 71d1 	mov.w	r1, #418	@ 0x1a2
2fff08b6:	f001 fe2f 	bl	2fff2518 <__assert>
2fff08ba:	4621      	mov	r1, r4
2fff08bc:	4650      	mov	r0, sl
2fff08be:	f7fd ff11 	bl	2ffee6e4 <regulator_register>
2fff08c2:	4605      	mov	r5, r0
2fff08c4:	b160      	cbz	r0, 2fff08e0 <initialize_pmic+0xa8>
2fff08c6:	4914      	ldr	r1, [pc, #80]	@ (2fff0918 <initialize_pmic+0xe0>)
2fff08c8:	4633      	mov	r3, r6
2fff08ca:	4814      	ldr	r0, [pc, #80]	@ (2fff091c <initialize_pmic+0xe4>)
2fff08cc:	f240 12a7 	movw	r2, #423	@ 0x1a7
2fff08d0:	f7fb fef4 	bl	2ffec6bc <tf_log>
2fff08d4:	2d00      	cmp	r5, #0
2fff08d6:	dacf      	bge.n	2fff0878 <initialize_pmic+0x40>
2fff08d8:	f7fb ff8c 	bl	2ffec7f4 <console_flush>
2fff08dc:	f7f8 ed7e 	blx	2ffe93dc <do_panic>
2fff08e0:	4a0f      	ldr	r2, [pc, #60]	@ (2fff0920 <initialize_pmic+0xe8>)
2fff08e2:	4603      	mov	r3, r0
2fff08e4:	9801      	ldr	r0, [sp, #4]
2fff08e6:	4621      	mov	r1, r4
2fff08e8:	f003 fac8 	bl	2fff3e7c <fdt_getprop>
2fff08ec:	b140      	cbz	r0, 2fff0900 <initialize_pmic+0xc8>
2fff08ee:	4648      	mov	r0, r9
2fff08f0:	f002 ffb0 	bl	2fff3854 <stpmic1_regulator_mask_reset_set>
2fff08f4:	4605      	mov	r5, r0
2fff08f6:	b118      	cbz	r0, 2fff0900 <initialize_pmic+0xc8>
2fff08f8:	480a      	ldr	r0, [pc, #40]	@ (2fff0924 <initialize_pmic+0xec>)
2fff08fa:	f7fb fedf 	bl	2ffec6bc <tf_log>
2fff08fe:	e7e9      	b.n	2fff08d4 <initialize_pmic+0x9c>
2fff0900:	9801      	ldr	r0, [sp, #4]
2fff0902:	4621      	mov	r1, r4
2fff0904:	f003 f95c 	bl	2fff3bc0 <fdt_next_subnode>
2fff0908:	4604      	mov	r4, r0
2fff090a:	e7b3      	b.n	2fff0874 <initialize_pmic+0x3c>
2fff090c:	2fff75c6 	.word	0x2fff75c6
2fff0910:	2fff4688 	.word	0x2fff4688
2fff0914:	2fff75d1 	.word	0x2fff75d1
2fff0918:	2fff7647 	.word	0x2fff7647
2fff091c:	2fff6ec1 	.word	0x2fff6ec1
2fff0920:	2fff75f0 	.word	0x2fff75f0
2fff0924:	2fff75fe 	.word	0x2fff75fe

2fff0928 <print_pmic_info_and_debug>:
2fff0928:	b507      	push	{r0, r1, r2, lr}
2fff092a:	a801      	add	r0, sp, #4
2fff092c:	f002 ffb6 	bl	2fff389c <stpmic1_get_version>
2fff0930:	b130      	cbz	r0, 2fff0940 <print_pmic_info_and_debug+0x18>
2fff0932:	4807      	ldr	r0, [pc, #28]	@ (2fff0950 <print_pmic_info_and_debug+0x28>)
2fff0934:	f7fb fec2 	bl	2ffec6bc <tf_log>
2fff0938:	f7fb ff5c 	bl	2ffec7f4 <console_flush>
2fff093c:	f7f8 ed4e 	blx	2ffe93dc <do_panic>
2fff0940:	9901      	ldr	r1, [sp, #4]
2fff0942:	4804      	ldr	r0, [pc, #16]	@ (2fff0954 <print_pmic_info_and_debug+0x2c>)
2fff0944:	f7fb feba 	bl	2ffec6bc <tf_log>
2fff0948:	b003      	add	sp, #12
2fff094a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff094e:	bf00      	nop
2fff0950:	2fff7616 	.word	0x2fff7616
2fff0954:	2fff762e 	.word	0x2fff762e

2fff0958 <get_regulator_data>:
2fff0958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff095c:	4605      	mov	r5, r0
2fff095e:	4e0e      	ldr	r6, [pc, #56]	@ (2fff0998 <get_regulator_data+0x40>)
2fff0960:	2400      	movs	r4, #0
2fff0962:	f04f 0914 	mov.w	r9, #20
2fff0966:	fb09 f304 	mul.w	r3, r9, r4
2fff096a:	58f7      	ldr	r7, [r6, r3]
2fff096c:	eb03 0806 	add.w	r8, r3, r6
2fff0970:	4638      	mov	r0, r7
2fff0972:	f003 fd1b 	bl	2fff43ac <strlen>
2fff0976:	4602      	mov	r2, r0
2fff0978:	4639      	mov	r1, r7
2fff097a:	4628      	mov	r0, r5
2fff097c:	f003 fd1e 	bl	2fff43bc <strncmp>
2fff0980:	b130      	cbz	r0, 2fff0990 <get_regulator_data+0x38>
2fff0982:	3401      	adds	r4, #1
2fff0984:	2c0e      	cmp	r4, #14
2fff0986:	d1ee      	bne.n	2fff0966 <get_regulator_data+0xe>
2fff0988:	f7fb ff34 	bl	2ffec7f4 <console_flush>
2fff098c:	f7f8 ed26 	blx	2ffe93dc <do_panic>
2fff0990:	4640      	mov	r0, r8
2fff0992:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff0996:	bf00      	nop
2fff0998:	2fff47c0 	.word	0x2fff47c0

2fff099c <stpmic1_regulator_levels_mv>:
2fff099c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff099e:	4607      	mov	r7, r0
2fff09a0:	460e      	mov	r6, r1
2fff09a2:	4615      	mov	r5, r2
2fff09a4:	f7ff ffd8 	bl	2fff0958 <get_regulator_data>
2fff09a8:	4909      	ldr	r1, [pc, #36]	@ (2fff09d0 <stpmic1_regulator_levels_mv+0x34>)
2fff09aa:	4604      	mov	r4, r0
2fff09ac:	2205      	movs	r2, #5
2fff09ae:	4638      	mov	r0, r7
2fff09b0:	f003 fd04 	bl	2fff43bc <strncmp>
2fff09b4:	b940      	cbnz	r0, 2fff09c8 <stpmic1_regulator_levels_mv+0x2c>
2fff09b6:	4b07      	ldr	r3, [pc, #28]	@ (2fff09d4 <stpmic1_regulator_levels_mv+0x38>)
2fff09b8:	781b      	ldrb	r3, [r3, #0]
2fff09ba:	b12b      	cbz	r3, 2fff09c8 <stpmic1_regulator_levels_mv+0x2c>
2fff09bc:	2301      	movs	r3, #1
2fff09be:	602b      	str	r3, [r5, #0]
2fff09c0:	4b05      	ldr	r3, [pc, #20]	@ (2fff09d8 <stpmic1_regulator_levels_mv+0x3c>)
2fff09c2:	6033      	str	r3, [r6, #0]
2fff09c4:	2000      	movs	r0, #0
2fff09c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff09c8:	7a23      	ldrb	r3, [r4, #8]
2fff09ca:	602b      	str	r3, [r5, #0]
2fff09cc:	6863      	ldr	r3, [r4, #4]
2fff09ce:	e7f8      	b.n	2fff09c2 <stpmic1_regulator_levels_mv+0x26>
2fff09d0:	2fff6533 	.word	0x2fff6533
2fff09d4:	2fff9a9f 	.word	0x2fff9a9f
2fff09d8:	2fff4cb2 	.word	0x2fff4cb2

2fff09dc <stpmic1_register_read>:
2fff09dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff09de:	2319      	movs	r3, #25
2fff09e0:	9302      	str	r3, [sp, #8]
2fff09e2:	2301      	movs	r3, #1
2fff09e4:	e9cd 1300 	strd	r1, r3, [sp]
2fff09e8:	4904      	ldr	r1, [pc, #16]	@ (2fff09fc <stpmic1_register_read+0x20>)
2fff09ea:	4602      	mov	r2, r0
2fff09ec:	4804      	ldr	r0, [pc, #16]	@ (2fff0a00 <stpmic1_register_read+0x24>)
2fff09ee:	8809      	ldrh	r1, [r1, #0]
2fff09f0:	6800      	ldr	r0, [r0, #0]
2fff09f2:	f002 fe85 	bl	2fff3700 <stm32_i2c_mem_read>
2fff09f6:	b005      	add	sp, #20
2fff09f8:	f85d fb04 	ldr.w	pc, [sp], #4
2fff09fc:	2fff9a26 	.word	0x2fff9a26
2fff0a00:	2fff972c 	.word	0x2fff972c

2fff0a04 <stpmic1_regulator_voltage_get>:
2fff0a04:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff0a06:	4604      	mov	r4, r0
2fff0a08:	f7ff ffa6 	bl	2fff0958 <get_regulator_data>
2fff0a0c:	491c      	ldr	r1, [pc, #112]	@ (2fff0a80 <stpmic1_regulator_voltage_get+0x7c>)
2fff0a0e:	4605      	mov	r5, r0
2fff0a10:	2205      	movs	r2, #5
2fff0a12:	4620      	mov	r0, r4
2fff0a14:	f003 fcd2 	bl	2fff43bc <strncmp>
2fff0a18:	b928      	cbnz	r0, 2fff0a26 <stpmic1_regulator_voltage_get+0x22>
2fff0a1a:	4b1a      	ldr	r3, [pc, #104]	@ (2fff0a84 <stpmic1_regulator_voltage_get+0x80>)
2fff0a1c:	781b      	ldrb	r3, [r3, #0]
2fff0a1e:	b113      	cbz	r3, 2fff0a26 <stpmic1_regulator_voltage_get+0x22>
2fff0a20:	2000      	movs	r0, #0
2fff0a22:	b003      	add	sp, #12
2fff0a24:	bd30      	pop	{r4, r5, pc}
2fff0a26:	4918      	ldr	r1, [pc, #96]	@ (2fff0a88 <stpmic1_regulator_voltage_get+0x84>)
2fff0a28:	2204      	movs	r2, #4
2fff0a2a:	4620      	mov	r0, r4
2fff0a2c:	f003 fcc6 	bl	2fff43bc <strncmp>
2fff0a30:	b318      	cbz	r0, 2fff0a7a <stpmic1_regulator_voltage_get+0x76>
2fff0a32:	4916      	ldr	r1, [pc, #88]	@ (2fff0a8c <stpmic1_regulator_voltage_get+0x88>)
2fff0a34:	2203      	movs	r2, #3
2fff0a36:	4620      	mov	r0, r4
2fff0a38:	f003 fcc0 	bl	2fff43bc <strncmp>
2fff0a3c:	2800      	cmp	r0, #0
2fff0a3e:	d1ef      	bne.n	2fff0a20 <stpmic1_regulator_voltage_get+0x1c>
2fff0a40:	4913      	ldr	r1, [pc, #76]	@ (2fff0a90 <stpmic1_regulator_voltage_get+0x8c>)
2fff0a42:	2205      	movs	r2, #5
2fff0a44:	4620      	mov	r0, r4
2fff0a46:	f003 fcb9 	bl	2fff43bc <strncmp>
2fff0a4a:	2800      	cmp	r0, #0
2fff0a4c:	d0e8      	beq.n	2fff0a20 <stpmic1_regulator_voltage_get+0x1c>
2fff0a4e:	247c      	movs	r4, #124	@ 0x7c
2fff0a50:	7a68      	ldrb	r0, [r5, #9]
2fff0a52:	f10d 0107 	add.w	r1, sp, #7
2fff0a56:	f7ff ffc1 	bl	2fff09dc <stpmic1_register_read>
2fff0a5a:	2800      	cmp	r0, #0
2fff0a5c:	dbe1      	blt.n	2fff0a22 <stpmic1_regulator_voltage_get+0x1e>
2fff0a5e:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff0a62:	401c      	ands	r4, r3
2fff0a64:	7a2b      	ldrb	r3, [r5, #8]
2fff0a66:	08a2      	lsrs	r2, r4, #2
2fff0a68:	ebb3 0f94 	cmp.w	r3, r4, lsr #2
2fff0a6c:	bf32      	itee	cc
2fff0a6e:	f06f 0021 	mvncc.w	r0, #33	@ 0x21
2fff0a72:	686b      	ldrcs	r3, [r5, #4]
2fff0a74:	f833 0012 	ldrhcs.w	r0, [r3, r2, lsl #1]
2fff0a78:	e7d3      	b.n	2fff0a22 <stpmic1_regulator_voltage_get+0x1e>
2fff0a7a:	24fc      	movs	r4, #252	@ 0xfc
2fff0a7c:	e7e8      	b.n	2fff0a50 <stpmic1_regulator_voltage_get+0x4c>
2fff0a7e:	bf00      	nop
2fff0a80:	2fff6533 	.word	0x2fff6533
2fff0a84:	2fff9a9f 	.word	0x2fff9a9f
2fff0a88:	2fff7690 	.word	0x2fff7690
2fff0a8c:	2fff7695 	.word	0x2fff7695
2fff0a90:	2fff766b 	.word	0x2fff766b

2fff0a94 <stpmic1_register_write>:
2fff0a94:	b530      	push	{r4, r5, lr}
2fff0a96:	b089      	sub	sp, #36	@ 0x24
2fff0a98:	f10d 0217 	add.w	r2, sp, #23
2fff0a9c:	2319      	movs	r3, #25
2fff0a9e:	9200      	str	r2, [sp, #0]
2fff0aa0:	4604      	mov	r4, r0
2fff0aa2:	f88d 1017 	strb.w	r1, [sp, #23]
2fff0aa6:	4602      	mov	r2, r0
2fff0aa8:	4910      	ldr	r1, [pc, #64]	@ (2fff0aec <stpmic1_register_write+0x58>)
2fff0aaa:	4811      	ldr	r0, [pc, #68]	@ (2fff0af0 <stpmic1_register_write+0x5c>)
2fff0aac:	9302      	str	r3, [sp, #8]
2fff0aae:	2301      	movs	r3, #1
2fff0ab0:	9301      	str	r3, [sp, #4]
2fff0ab2:	8809      	ldrh	r1, [r1, #0]
2fff0ab4:	6800      	ldr	r0, [r0, #0]
2fff0ab6:	f002 fe15 	bl	2fff36e4 <stm32_i2c_mem_write>
2fff0aba:	4605      	mov	r5, r0
2fff0abc:	b990      	cbnz	r0, 2fff0ae4 <stpmic1_register_write+0x50>
2fff0abe:	2c1b      	cmp	r4, #27
2fff0ac0:	d010      	beq.n	2fff0ae4 <stpmic1_register_write+0x50>
2fff0ac2:	2c40      	cmp	r4, #64	@ 0x40
2fff0ac4:	d80e      	bhi.n	2fff0ae4 <stpmic1_register_write+0x50>
2fff0ac6:	f10d 011f 	add.w	r1, sp, #31
2fff0aca:	4620      	mov	r0, r4
2fff0acc:	f7ff ff86 	bl	2fff09dc <stpmic1_register_read>
2fff0ad0:	b938      	cbnz	r0, 2fff0ae2 <stpmic1_register_write+0x4e>
2fff0ad2:	f89d 201f 	ldrb.w	r2, [sp, #31]
2fff0ad6:	f89d 3017 	ldrb.w	r3, [sp, #23]
2fff0ada:	429a      	cmp	r2, r3
2fff0adc:	d002      	beq.n	2fff0ae4 <stpmic1_register_write+0x50>
2fff0ade:	f06f 0004 	mvn.w	r0, #4
2fff0ae2:	4605      	mov	r5, r0
2fff0ae4:	4628      	mov	r0, r5
2fff0ae6:	b009      	add	sp, #36	@ 0x24
2fff0ae8:	bd30      	pop	{r4, r5, pc}
2fff0aea:	bf00      	nop
2fff0aec:	2fff9a26 	.word	0x2fff9a26
2fff0af0:	2fff972c 	.word	0x2fff972c

2fff0af4 <stpmic1_regulator_voltage_set>:
2fff0af4:	b570      	push	{r4, r5, r6, lr}
2fff0af6:	4604      	mov	r4, r0
2fff0af8:	460e      	mov	r6, r1
2fff0afa:	f7ff ff2d 	bl	2fff0958 <get_regulator_data>
2fff0afe:	7a02      	ldrb	r2, [r0, #8]
2fff0b00:	2300      	movs	r3, #0
2fff0b02:	b2dd      	uxtb	r5, r3
2fff0b04:	4295      	cmp	r5, r2
2fff0b06:	d303      	bcc.n	2fff0b10 <stpmic1_regulator_voltage_set+0x1c>
2fff0b08:	f7fb fe74 	bl	2ffec7f4 <console_flush>
2fff0b0c:	f7f8 ec66 	blx	2ffe93dc <do_panic>
2fff0b10:	6841      	ldr	r1, [r0, #4]
2fff0b12:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
2fff0b16:	3301      	adds	r3, #1
2fff0b18:	428e      	cmp	r6, r1
2fff0b1a:	d1f2      	bne.n	2fff0b02 <stpmic1_regulator_voltage_set+0xe>
2fff0b1c:	4620      	mov	r0, r4
2fff0b1e:	f7ff ff1b 	bl	2fff0958 <get_regulator_data>
2fff0b22:	4915      	ldr	r1, [pc, #84]	@ (2fff0b78 <stpmic1_regulator_voltage_set+0x84>)
2fff0b24:	4606      	mov	r6, r0
2fff0b26:	2205      	movs	r2, #5
2fff0b28:	4620      	mov	r0, r4
2fff0b2a:	f003 fc47 	bl	2fff43bc <strncmp>
2fff0b2e:	b1d0      	cbz	r0, 2fff0b66 <stpmic1_regulator_voltage_set+0x72>
2fff0b30:	4912      	ldr	r1, [pc, #72]	@ (2fff0b7c <stpmic1_regulator_voltage_set+0x88>)
2fff0b32:	2204      	movs	r2, #4
2fff0b34:	4620      	mov	r0, r4
2fff0b36:	f003 fc41 	bl	2fff43bc <strncmp>
2fff0b3a:	b1d0      	cbz	r0, 2fff0b72 <stpmic1_regulator_voltage_set+0x7e>
2fff0b3c:	4910      	ldr	r1, [pc, #64]	@ (2fff0b80 <stpmic1_regulator_voltage_set+0x8c>)
2fff0b3e:	2203      	movs	r2, #3
2fff0b40:	4620      	mov	r0, r4
2fff0b42:	f003 fc3b 	bl	2fff43bc <strncmp>
2fff0b46:	b990      	cbnz	r0, 2fff0b6e <stpmic1_regulator_voltage_set+0x7a>
2fff0b48:	490e      	ldr	r1, [pc, #56]	@ (2fff0b84 <stpmic1_regulator_voltage_set+0x90>)
2fff0b4a:	2205      	movs	r2, #5
2fff0b4c:	4620      	mov	r0, r4
2fff0b4e:	f003 fc35 	bl	2fff43bc <strncmp>
2fff0b52:	b160      	cbz	r0, 2fff0b6e <stpmic1_regulator_voltage_set+0x7a>
2fff0b54:	227c      	movs	r2, #124	@ 0x7c
2fff0b56:	00a9      	lsls	r1, r5, #2
2fff0b58:	7a70      	ldrb	r0, [r6, #9]
2fff0b5a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
2fff0b5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff0b62:	f002 be30 	b.w	2fff37c6 <stpmic1_register_update>
2fff0b66:	4b08      	ldr	r3, [pc, #32]	@ (2fff0b88 <stpmic1_regulator_voltage_set+0x94>)
2fff0b68:	781b      	ldrb	r3, [r3, #0]
2fff0b6a:	2b00      	cmp	r3, #0
2fff0b6c:	d0e0      	beq.n	2fff0b30 <stpmic1_regulator_voltage_set+0x3c>
2fff0b6e:	2000      	movs	r0, #0
2fff0b70:	bd70      	pop	{r4, r5, r6, pc}
2fff0b72:	22fc      	movs	r2, #252	@ 0xfc
2fff0b74:	e7ef      	b.n	2fff0b56 <stpmic1_regulator_voltage_set+0x62>
2fff0b76:	bf00      	nop
2fff0b78:	2fff6533 	.word	0x2fff6533
2fff0b7c:	2fff7690 	.word	0x2fff7690
2fff0b80:	2fff7695 	.word	0x2fff7695
2fff0b84:	2fff766b 	.word	0x2fff766b
2fff0b88:	2fff9a9f 	.word	0x2fff9a9f

2fff0b8c <stpmic1_regulator_sink_mode_set>:
2fff0b8c:	b508      	push	{r3, lr}
2fff0b8e:	2205      	movs	r2, #5
2fff0b90:	4908      	ldr	r1, [pc, #32]	@ (2fff0bb4 <stpmic1_regulator_sink_mode_set+0x28>)
2fff0b92:	f003 fc13 	bl	2fff43bc <strncmp>
2fff0b96:	b948      	cbnz	r0, 2fff0bac <stpmic1_regulator_sink_mode_set+0x20>
2fff0b98:	4b07      	ldr	r3, [pc, #28]	@ (2fff0bb8 <stpmic1_regulator_sink_mode_set+0x2c>)
2fff0b9a:	2201      	movs	r2, #1
2fff0b9c:	217c      	movs	r1, #124	@ 0x7c
2fff0b9e:	2027      	movs	r0, #39	@ 0x27
2fff0ba0:	701a      	strb	r2, [r3, #0]
2fff0ba2:	22fc      	movs	r2, #252	@ 0xfc
2fff0ba4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0ba8:	f002 be0d 	b.w	2fff37c6 <stpmic1_register_update>
2fff0bac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0bb0:	bd08      	pop	{r3, pc}
2fff0bb2:	bf00      	nop
2fff0bb4:	2fff6533 	.word	0x2fff6533
2fff0bb8:	2fff9a9f 	.word	0x2fff9a9f

2fff0bbc <stpmic1_regulator_bypass_mode_set>:
2fff0bbc:	b508      	push	{r3, lr}
2fff0bbe:	2205      	movs	r2, #5
2fff0bc0:	4908      	ldr	r1, [pc, #32]	@ (2fff0be4 <stpmic1_regulator_bypass_mode_set+0x28>)
2fff0bc2:	f003 fbfb 	bl	2fff43bc <strncmp>
2fff0bc6:	b948      	cbnz	r0, 2fff0bdc <stpmic1_regulator_bypass_mode_set+0x20>
2fff0bc8:	4b07      	ldr	r3, [pc, #28]	@ (2fff0be8 <stpmic1_regulator_bypass_mode_set+0x2c>)
2fff0bca:	2201      	movs	r2, #1
2fff0bcc:	2180      	movs	r1, #128	@ 0x80
2fff0bce:	2027      	movs	r0, #39	@ 0x27
2fff0bd0:	701a      	strb	r2, [r3, #0]
2fff0bd2:	22fc      	movs	r2, #252	@ 0xfc
2fff0bd4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0bd8:	f002 bdf5 	b.w	2fff37c6 <stpmic1_register_update>
2fff0bdc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0be0:	bd08      	pop	{r3, pc}
2fff0be2:	bf00      	nop
2fff0be4:	2fff6533 	.word	0x2fff6533
2fff0be8:	2fff9a9f 	.word	0x2fff9a9f

2fff0bec <stpmic1_active_discharge_mode_set>:
2fff0bec:	b510      	push	{r4, lr}
2fff0bee:	2208      	movs	r2, #8
2fff0bf0:	490b      	ldr	r1, [pc, #44]	@ (2fff0c20 <stpmic1_active_discharge_mode_set+0x34>)
2fff0bf2:	4604      	mov	r4, r0
2fff0bf4:	f003 fbe2 	bl	2fff43bc <strncmp>
2fff0bf8:	b930      	cbnz	r0, 2fff0c08 <stpmic1_active_discharge_mode_set+0x1c>
2fff0bfa:	2210      	movs	r2, #16
2fff0bfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0c00:	4611      	mov	r1, r2
2fff0c02:	2040      	movs	r0, #64	@ 0x40
2fff0c04:	f002 bddf 	b.w	2fff37c6 <stpmic1_register_update>
2fff0c08:	4906      	ldr	r1, [pc, #24]	@ (2fff0c24 <stpmic1_active_discharge_mode_set+0x38>)
2fff0c0a:	2208      	movs	r2, #8
2fff0c0c:	4620      	mov	r0, r4
2fff0c0e:	f003 fbd5 	bl	2fff43bc <strncmp>
2fff0c12:	b908      	cbnz	r0, 2fff0c18 <stpmic1_active_discharge_mode_set+0x2c>
2fff0c14:	2220      	movs	r2, #32
2fff0c16:	e7f1      	b.n	2fff0bfc <stpmic1_active_discharge_mode_set+0x10>
2fff0c18:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0c1c:	bd10      	pop	{r4, pc}
2fff0c1e:	bf00      	nop
2fff0c20:	2fff7680 	.word	0x2fff7680
2fff0c24:	2fff7688 	.word	0x2fff7688

2fff0c28 <stpmic1_bind_i2c>:
2fff0c28:	4b02      	ldr	r3, [pc, #8]	@ (2fff0c34 <stpmic1_bind_i2c+0xc>)
2fff0c2a:	6018      	str	r0, [r3, #0]
2fff0c2c:	4b02      	ldr	r3, [pc, #8]	@ (2fff0c38 <stpmic1_bind_i2c+0x10>)
2fff0c2e:	8019      	strh	r1, [r3, #0]
2fff0c30:	4770      	bx	lr
2fff0c32:	bf00      	nop
2fff0c34:	2fff972c 	.word	0x2fff972c
2fff0c38:	2fff9a26 	.word	0x2fff9a26

2fff0c3c <stm32mp_reset_assert>:
2fff0c3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff0c40:	4605      	mov	r5, r0
2fff0c42:	f000 031f 	and.w	r3, r0, #31
2fff0c46:	2601      	movs	r6, #1
2fff0c48:	096d      	lsrs	r5, r5, #5
2fff0c4a:	460c      	mov	r4, r1
2fff0c4c:	409e      	lsls	r6, r3
2fff0c4e:	f002 f967 	bl	2fff2f20 <stm32mp_rcc_base>
2fff0c52:	eb00 0785 	add.w	r7, r0, r5, lsl #2
2fff0c56:	f840 6025 	str.w	r6, [r0, r5, lsl #2]
2fff0c5a:	b184      	cbz	r4, 2fff0c7e <stm32mp_reset_assert+0x42>
2fff0c5c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff0c60:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff0c64:	4a0c      	ldr	r2, [pc, #48]	@ (2fff0c98 <stm32mp_reset_assert+0x5c>)
2fff0c66:	2300      	movs	r3, #0
2fff0c68:	fba4 0100 	umull	r0, r1, r4, r0
2fff0c6c:	4645      	mov	r5, r8
2fff0c6e:	f001 eaf0 	blx	2fff2250 <__aeabi_uldivmod>
2fff0c72:	1940      	adds	r0, r0, r5
2fff0c74:	eb41 0109 	adc.w	r1, r1, r9
2fff0c78:	683b      	ldr	r3, [r7, #0]
2fff0c7a:	421e      	tst	r6, r3
2fff0c7c:	d002      	beq.n	2fff0c84 <stm32mp_reset_assert+0x48>
2fff0c7e:	2000      	movs	r0, #0
2fff0c80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff0c84:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff0c88:	4290      	cmp	r0, r2
2fff0c8a:	eb71 0303 	sbcs.w	r3, r1, r3
2fff0c8e:	d2f3      	bcs.n	2fff0c78 <stm32mp_reset_assert+0x3c>
2fff0c90:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2fff0c94:	e7f4      	b.n	2fff0c80 <stm32mp_reset_assert+0x44>
2fff0c96:	bf00      	nop
2fff0c98:	000f4240 	.word	0x000f4240

2fff0c9c <stm32mp_reset_deassert>:
2fff0c9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff0ca0:	4605      	mov	r5, r0
2fff0ca2:	f000 031f 	and.w	r3, r0, #31
2fff0ca6:	2601      	movs	r6, #1
2fff0ca8:	096d      	lsrs	r5, r5, #5
2fff0caa:	460c      	mov	r4, r1
2fff0cac:	409e      	lsls	r6, r3
2fff0cae:	3501      	adds	r5, #1
2fff0cb0:	f002 f936 	bl	2fff2f20 <stm32mp_rcc_base>
2fff0cb4:	eb00 0785 	add.w	r7, r0, r5, lsl #2
2fff0cb8:	f840 6025 	str.w	r6, [r0, r5, lsl #2]
2fff0cbc:	b184      	cbz	r4, 2fff0ce0 <stm32mp_reset_deassert+0x44>
2fff0cbe:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff0cc2:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff0cc6:	4a0c      	ldr	r2, [pc, #48]	@ (2fff0cf8 <stm32mp_reset_deassert+0x5c>)
2fff0cc8:	2300      	movs	r3, #0
2fff0cca:	fba4 0100 	umull	r0, r1, r4, r0
2fff0cce:	4645      	mov	r5, r8
2fff0cd0:	f001 eabe 	blx	2fff2250 <__aeabi_uldivmod>
2fff0cd4:	1940      	adds	r0, r0, r5
2fff0cd6:	eb41 0109 	adc.w	r1, r1, r9
2fff0cda:	683c      	ldr	r4, [r7, #0]
2fff0cdc:	4034      	ands	r4, r6
2fff0cde:	d102      	bne.n	2fff0ce6 <stm32mp_reset_deassert+0x4a>
2fff0ce0:	4620      	mov	r0, r4
2fff0ce2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff0ce6:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff0cea:	4290      	cmp	r0, r2
2fff0cec:	eb71 0303 	sbcs.w	r3, r1, r3
2fff0cf0:	d2f3      	bcs.n	2fff0cda <stm32mp_reset_deassert+0x3e>
2fff0cf2:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2fff0cf6:	e7f4      	b.n	2fff0ce2 <stm32mp_reset_deassert+0x46>
2fff0cf8:	000f4240 	.word	0x000f4240

2fff0cfc <stm32_context_save_bl2_param>:
2fff0cfc:	b510      	push	{r4, lr}
2fff0cfe:	f7fe fa51 	bl	2ffef1a4 <stm32mp_bkpram_get_access>
2fff0d02:	b1d8      	cbz	r0, 2fff0d3c <stm32_context_save_bl2_param+0x40>
2fff0d04:	2063      	movs	r0, #99	@ 0x63
2fff0d06:	f04f 44a8 	mov.w	r4, #1409286144	@ 0x54000000
2fff0d0a:	f7fc fcfd 	bl	2ffed708 <clk_enable>
2fff0d0e:	4b0c      	ldr	r3, [pc, #48]	@ (2fff0d40 <stm32_context_save_bl2_param+0x44>)
2fff0d10:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
2fff0d14:	4b0b      	ldr	r3, [pc, #44]	@ (2fff0d44 <stm32_context_save_bl2_param+0x48>)
2fff0d16:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
2fff0d1a:	4b0b      	ldr	r3, [pc, #44]	@ (2fff0d48 <stm32_context_save_bl2_param+0x4c>)
2fff0d1c:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
2fff0d20:	4b0a      	ldr	r3, [pc, #40]	@ (2fff0d4c <stm32_context_save_bl2_param+0x50>)
2fff0d22:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
2fff0d26:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
2fff0d2a:	6023      	str	r3, [r4, #0]
2fff0d2c:	f002 fb69 	bl	2fff3402 <ddr_get_io_calibration_val>
2fff0d30:	60a0      	str	r0, [r4, #8]
2fff0d32:	2063      	movs	r0, #99	@ 0x63
2fff0d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0d38:	f7fc bcf8 	b.w	2ffed72c <clk_disable>
2fff0d3c:	bd10      	pop	{r4, pc}
2fff0d3e:	bf00      	nop
2fff0d40:	2ffe9288 	.word	0x2ffe9288
2fff0d44:	2ffe9000 	.word	0x2ffe9000
2fff0d48:	2fff8000 	.word	0x2fff8000
2fff0d4c:	2fffc000 	.word	0x2fffc000

2fff0d50 <stm32_restore_ddr_training_area>:
2fff0d50:	b508      	push	{r3, lr}
2fff0d52:	2063      	movs	r0, #99	@ 0x63
2fff0d54:	f7fc fcd8 	bl	2ffed708 <clk_enable>
2fff0d58:	4906      	ldr	r1, [pc, #24]	@ (2fff0d74 <stm32_restore_ddr_training_area+0x24>)
2fff0d5a:	2240      	movs	r2, #64	@ 0x40
2fff0d5c:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff0d60:	f003 f9f7 	bl	2fff4152 <memcpy>
2fff0d64:	f3bf 8f4f 	dsb	sy
2fff0d68:	2063      	movs	r0, #99	@ 0x63
2fff0d6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0d6e:	f7fc bcdd 	b.w	2ffed72c <clk_disable>
2fff0d72:	bf00      	nop
2fff0d74:	5400000c 	.word	0x5400000c

2fff0d78 <stm32mp1_dbgmcu_init>:
2fff0d78:	b508      	push	{r3, lr}
2fff0d7a:	f7fe fbf5 	bl	2ffef568 <bsec_read_debug_conf>
2fff0d7e:	0543      	lsls	r3, r0, #21
2fff0d80:	d405      	bmi.n	2fff0d8e <stm32mp1_dbgmcu_init+0x16>
2fff0d82:	4808      	ldr	r0, [pc, #32]	@ (2fff0da4 <stm32mp1_dbgmcu_init+0x2c>)
2fff0d84:	f7fb fc9a 	bl	2ffec6bc <tf_log>
2fff0d88:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0d8c:	bd08      	pop	{r3, pc}
2fff0d8e:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
2fff0d92:	2000      	movs	r0, #0
2fff0d94:	f8d2 380c 	ldr.w	r3, [r2, #2060]	@ 0x80c
2fff0d98:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2fff0d9c:	f8c2 380c 	str.w	r3, [r2, #2060]	@ 0x80c
2fff0da0:	e7f4      	b.n	2fff0d8c <stm32mp1_dbgmcu_init+0x14>
2fff0da2:	bf00      	nop
2fff0da4:	2fff7699 	.word	0x2fff7699

2fff0da8 <stm32mp1_dbgmcu_get_chip_version>:
2fff0da8:	b510      	push	{r4, lr}
2fff0daa:	4604      	mov	r4, r0
2fff0dac:	b918      	cbnz	r0, 2fff0db6 <stm32mp1_dbgmcu_get_chip_version+0xe>
2fff0dae:	4807      	ldr	r0, [pc, #28]	@ (2fff0dcc <stm32mp1_dbgmcu_get_chip_version+0x24>)
2fff0db0:	212d      	movs	r1, #45	@ 0x2d
2fff0db2:	f001 fbb1 	bl	2fff2518 <__assert>
2fff0db6:	f7ff ffdf 	bl	2fff0d78 <stm32mp1_dbgmcu_init>
2fff0dba:	b920      	cbnz	r0, 2fff0dc6 <stm32mp1_dbgmcu_get_chip_version+0x1e>
2fff0dbc:	4b04      	ldr	r3, [pc, #16]	@ (2fff0dd0 <stm32mp1_dbgmcu_get_chip_version+0x28>)
2fff0dbe:	681b      	ldr	r3, [r3, #0]
2fff0dc0:	0c1b      	lsrs	r3, r3, #16
2fff0dc2:	6023      	str	r3, [r4, #0]
2fff0dc4:	bd10      	pop	{r4, pc}
2fff0dc6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0dca:	e7fb      	b.n	2fff0dc4 <stm32mp1_dbgmcu_get_chip_version+0x1c>
2fff0dcc:	2fff76cf 	.word	0x2fff76cf
2fff0dd0:	50081000 	.word	0x50081000

2fff0dd4 <stm32mp1_dbgmcu_get_chip_dev_id>:
2fff0dd4:	b510      	push	{r4, lr}
2fff0dd6:	4604      	mov	r4, r0
2fff0dd8:	b918      	cbnz	r0, 2fff0de2 <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2fff0dda:	4808      	ldr	r0, [pc, #32]	@ (2fff0dfc <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2fff0ddc:	2140      	movs	r1, #64	@ 0x40
2fff0dde:	f001 fb9b 	bl	2fff2518 <__assert>
2fff0de2:	f7ff ffc9 	bl	2fff0d78 <stm32mp1_dbgmcu_init>
2fff0de6:	b928      	cbnz	r0, 2fff0df4 <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2fff0de8:	4b05      	ldr	r3, [pc, #20]	@ (2fff0e00 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2fff0dea:	681b      	ldr	r3, [r3, #0]
2fff0dec:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff0df0:	6023      	str	r3, [r4, #0]
2fff0df2:	bd10      	pop	{r4, pc}
2fff0df4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff0df8:	e7fb      	b.n	2fff0df2 <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2fff0dfa:	bf00      	nop
2fff0dfc:	2fff76cf 	.word	0x2fff76cf
2fff0e00:	50081000 	.word	0x50081000

2fff0e04 <stm32mp_syscfg_enable_io_compensation_start>:
2fff0e04:	b508      	push	{r3, lr}
2fff0e06:	2033      	movs	r0, #51	@ 0x33
2fff0e08:	f7fc fc7e 	bl	2ffed708 <clk_enable>
2fff0e0c:	4a02      	ldr	r2, [pc, #8]	@ (2fff0e18 <stm32mp_syscfg_enable_io_compensation_start+0x14>)
2fff0e0e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
2fff0e10:	f043 0301 	orr.w	r3, r3, #1
2fff0e14:	6253      	str	r3, [r2, #36]	@ 0x24
2fff0e16:	bd08      	pop	{r3, pc}
2fff0e18:	50020000 	.word	0x50020000

2fff0e1c <stm32mp_syscfg_init>:
2fff0e1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff0e1e:	f44f 7300 	mov.w	r3, #512	@ 0x200
2fff0e22:	4c1b      	ldr	r4, [pc, #108]	@ (2fff0e90 <stm32mp_syscfg_init+0x74>)
2fff0e24:	a901      	add	r1, sp, #4
2fff0e26:	481b      	ldr	r0, [pc, #108]	@ (2fff0e94 <stm32mp_syscfg_init+0x78>)
2fff0e28:	61e3      	str	r3, [r4, #28]
2fff0e2a:	6823      	ldr	r3, [r4, #0]
2fff0e2c:	6822      	ldr	r2, [r4, #0]
2fff0e2e:	011b      	lsls	r3, r3, #4
2fff0e30:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
2fff0e34:	f003 0370 	and.w	r3, r3, #112	@ 0x70
2fff0e38:	4313      	orrs	r3, r2
2fff0e3a:	6023      	str	r3, [r4, #0]
2fff0e3c:	f7fb fdf6 	bl	2ffeca2c <stm32_get_otp_value>
2fff0e40:	b118      	cbz	r0, 2fff0e4a <stm32mp_syscfg_init+0x2e>
2fff0e42:	f7fb fcd7 	bl	2ffec7f4 <console_flush>
2fff0e46:	f7f8 eaca 	blx	2ffe93dc <do_panic>
2fff0e4a:	9d01      	ldr	r5, [sp, #4]
2fff0e4c:	f002 fa9d 	bl	2fff338a <dt_get_pwr_vdd_voltage>
2fff0e50:	b938      	cbnz	r0, 2fff0e62 <stm32mp_syscfg_init+0x46>
2fff0e52:	4811      	ldr	r0, [pc, #68]	@ (2fff0e98 <stm32mp_syscfg_init+0x7c>)
2fff0e54:	f7fb fc32 	bl	2ffec6bc <tf_log>
2fff0e58:	b003      	add	sp, #12
2fff0e5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff0e5e:	f7ff bfd1 	b.w	2fff0e04 <stm32mp_syscfg_enable_io_compensation_start>
2fff0e62:	4a0e      	ldr	r2, [pc, #56]	@ (2fff0e9c <stm32mp_syscfg_init+0x80>)
2fff0e64:	f405 5500 	and.w	r5, r5, #8192	@ 0x2000
2fff0e68:	4290      	cmp	r0, r2
2fff0e6a:	d205      	bcs.n	2fff0e78 <stm32mp_syscfg_init+0x5c>
2fff0e6c:	221f      	movs	r2, #31
2fff0e6e:	61a2      	str	r2, [r4, #24]
2fff0e70:	2d00      	cmp	r5, #0
2fff0e72:	d1f1      	bne.n	2fff0e58 <stm32mp_syscfg_init+0x3c>
2fff0e74:	480a      	ldr	r0, [pc, #40]	@ (2fff0ea0 <stm32mp_syscfg_init+0x84>)
2fff0e76:	e7ed      	b.n	2fff0e54 <stm32mp_syscfg_init+0x38>
2fff0e78:	2d00      	cmp	r5, #0
2fff0e7a:	d0ed      	beq.n	2fff0e58 <stm32mp_syscfg_init+0x3c>
2fff0e7c:	4809      	ldr	r0, [pc, #36]	@ (2fff0ea4 <stm32mp_syscfg_init+0x88>)
2fff0e7e:	f7fb fc1d 	bl	2ffec6bc <tf_log>
2fff0e82:	4809      	ldr	r0, [pc, #36]	@ (2fff0ea8 <stm32mp_syscfg_init+0x8c>)
2fff0e84:	f7fb fc1a 	bl	2ffec6bc <tf_log>
2fff0e88:	4808      	ldr	r0, [pc, #32]	@ (2fff0eac <stm32mp_syscfg_init+0x90>)
2fff0e8a:	f7fb fc17 	bl	2ffec6bc <tf_log>
2fff0e8e:	e7d8      	b.n	2fff0e42 <stm32mp_syscfg_init+0x26>
2fff0e90:	50020000 	.word	0x50020000
2fff0e94:	2fff718c 	.word	0x2fff718c
2fff0e98:	2fff76f2 	.word	0x2fff76f2
2fff0e9c:	002932e0 	.word	0x002932e0
2fff0ea0:	2fff7700 	.word	0x2fff7700
2fff0ea4:	2fff772e 	.word	0x2fff772e
2fff0ea8:	2fff7745 	.word	0x2fff7745
2fff0eac:	2fff7766 	.word	0x2fff7766

2fff0eb0 <stm32mp_syscfg_enable_io_compensation_finish>:
2fff0eb0:	b570      	push	{r4, r5, r6, lr}
2fff0eb2:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff0eb6:	ec56 5f0e 	mrrc	15, 0, r5, r6, cr14
2fff0eba:	4a0e      	ldr	r2, [pc, #56]	@ (2fff0ef4 <stm32mp_syscfg_enable_io_compensation_finish+0x44>)
2fff0ebc:	f242 7010 	movw	r0, #10000	@ 0x2710
2fff0ec0:	4c0d      	ldr	r4, [pc, #52]	@ (2fff0ef8 <stm32mp_syscfg_enable_io_compensation_finish+0x48>)
2fff0ec2:	2300      	movs	r3, #0
2fff0ec4:	fba1 0100 	umull	r0, r1, r1, r0
2fff0ec8:	f001 e9c2 	blx	2fff2250 <__aeabi_uldivmod>
2fff0ecc:	1940      	adds	r0, r0, r5
2fff0ece:	eb41 0106 	adc.w	r1, r1, r6
2fff0ed2:	6a23      	ldr	r3, [r4, #32]
2fff0ed4:	05db      	lsls	r3, r3, #23
2fff0ed6:	d408      	bmi.n	2fff0eea <stm32mp_syscfg_enable_io_compensation_finish+0x3a>
2fff0ed8:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff0edc:	4290      	cmp	r0, r2
2fff0ede:	eb71 0303 	sbcs.w	r3, r1, r3
2fff0ee2:	d2f6      	bcs.n	2fff0ed2 <stm32mp_syscfg_enable_io_compensation_finish+0x22>
2fff0ee4:	4805      	ldr	r0, [pc, #20]	@ (2fff0efc <stm32mp_syscfg_enable_io_compensation_finish+0x4c>)
2fff0ee6:	f7fb fbe9 	bl	2ffec6bc <tf_log>
2fff0eea:	6a23      	ldr	r3, [r4, #32]
2fff0eec:	f023 0302 	bic.w	r3, r3, #2
2fff0ef0:	6223      	str	r3, [r4, #32]
2fff0ef2:	bd70      	pop	{r4, r5, r6, pc}
2fff0ef4:	000f4240 	.word	0x000f4240
2fff0ef8:	50020000 	.word	0x50020000
2fff0efc:	2fff7781 	.word	0x2fff7781

2fff0f00 <stm32_tamp_nvram_get_cdata>:
2fff0f00:	4800      	ldr	r0, [pc, #0]	@ (2fff0f04 <stm32_tamp_nvram_get_cdata+0x4>)
2fff0f02:	4770      	bx	lr
2fff0f04:	2fff48d8 	.word	0x2fff48d8

2fff0f08 <stm32_tamp_nvram_get_access_rights>:
2fff0f08:	4800      	ldr	r0, [pc, #0]	@ (2fff0f0c <stm32_tamp_nvram_get_access_rights+0x4>)
2fff0f0a:	4770      	bx	lr
2fff0f0c:	2fff8540 	.word	0x2fff8540

2fff0f10 <stm32mp1_check_pll_conf>:
2fff0f10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff0f14:	4604      	mov	r4, r0
2fff0f16:	4f38      	ldr	r7, [pc, #224]	@ (2fff0ff8 <stm32mp1_check_pll_conf+0xe8>)
2fff0f18:	4688      	mov	r8, r1
2fff0f1a:	4615      	mov	r5, r2
2fff0f1c:	461e      	mov	r6, r3
2fff0f1e:	f001 ffff 	bl	2fff2f20 <stm32mp_rcc_base>
2fff0f22:	0163      	lsls	r3, r4, #5
2fff0f24:	4602      	mov	r2, r0
2fff0f26:	eb07 1044 	add.w	r0, r7, r4, lsl #5
2fff0f2a:	8981      	ldrh	r1, [r0, #12]
2fff0f2c:	5889      	ldr	r1, [r1, r2]
2fff0f2e:	2901      	cmp	r1, #1
2fff0f30:	d160      	bne.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0f32:	ea4f 1118 	mov.w	r1, r8, lsr #4
2fff0f36:	5889      	ldr	r1, [r1, r2]
2fff0f38:	ea88 0101 	eor.w	r1, r8, r1
2fff0f3c:	f011 0107 	ands.w	r1, r1, #7
2fff0f40:	d158      	bne.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0f42:	8880      	ldrh	r0, [r0, #4]
2fff0f44:	f857 e003 	ldr.w	lr, [r7, r3]
2fff0f48:	5880      	ldr	r0, [r0, r2]
2fff0f4a:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 2fff0ffc <stm32mp1_check_pll_conf+0xec>
2fff0f4e:	f000 0003 	and.w	r0, r0, #3
2fff0f52:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
2fff0f56:	3004      	adds	r0, #4
2fff0f58:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
2fff0f5c:	2805      	cmp	r0, #5
2fff0f5e:	bf8e      	itee	hi
2fff0f60:	4608      	movhi	r0, r1
2fff0f62:	4c27      	ldrls	r4, [pc, #156]	@ (2fff1000 <stm32mp1_check_pll_conf+0xf0>)
2fff0f64:	f854 0020 	ldrls.w	r0, [r4, r0, lsl #2]
2fff0f68:	682c      	ldr	r4, [r5, #0]
2fff0f6a:	f104 0c01 	add.w	ip, r4, #1
2fff0f6e:	fbb0 f0fc 	udiv	r0, r0, ip
2fff0f72:	f8df c090 	ldr.w	ip, [pc, #144]	@ 2fff1004 <stm32mp1_check_pll_conf+0xf4>
2fff0f76:	f81c 801e 	ldrb.w	r8, [ip, lr, lsl #1]
2fff0f7a:	fb09 f808 	mul.w	r8, r9, r8
2fff0f7e:	4580      	cmp	r8, r0
2fff0f80:	d838      	bhi.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0f82:	eb0c 0c4e 	add.w	ip, ip, lr, lsl #1
2fff0f86:	f89c c001 	ldrb.w	ip, [ip, #1]
2fff0f8a:	fb09 fc0c 	mul.w	ip, r9, ip
2fff0f8e:	4584      	cmp	ip, r0
2fff0f90:	d330      	bcc.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0f92:	f1be 0f00 	cmp.w	lr, #0
2fff0f96:	d104      	bne.n	2fff0fa2 <stm32mp1_check_pll_conf+0x92>
2fff0f98:	491b      	ldr	r1, [pc, #108]	@ (2fff1008 <stm32mp1_check_pll_conf+0xf8>)
2fff0f9a:	4288      	cmp	r0, r1
2fff0f9c:	bf34      	ite	cc
2fff0f9e:	2100      	movcc	r1, #0
2fff0fa0:	2101      	movcs	r1, #1
2fff0fa2:	6868      	ldr	r0, [r5, #4]
2fff0fa4:	0424      	lsls	r4, r4, #16
2fff0fa6:	443b      	add	r3, r7
2fff0fa8:	f404 147c 	and.w	r4, r4, #4128768	@ 0x3f0000
2fff0fac:	f3c0 0008 	ubfx	r0, r0, #0, #9
2fff0fb0:	4304      	orrs	r4, r0
2fff0fb2:	88d8      	ldrh	r0, [r3, #6]
2fff0fb4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
2fff0fb8:	5880      	ldr	r0, [r0, r2]
2fff0fba:	4284      	cmp	r4, r0
2fff0fbc:	d11a      	bne.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0fbe:	8959      	ldrh	r1, [r3, #10]
2fff0fc0:	00f6      	lsls	r6, r6, #3
2fff0fc2:	5889      	ldr	r1, [r1, r2]
2fff0fc4:	f446 3680 	orr.w	r6, r6, #65536	@ 0x10000
2fff0fc8:	428e      	cmp	r6, r1
2fff0fca:	d113      	bne.n	2fff0ff4 <stm32mp1_check_pll_conf+0xe4>
2fff0fcc:	891b      	ldrh	r3, [r3, #8]
2fff0fce:	68a9      	ldr	r1, [r5, #8]
2fff0fd0:	589a      	ldr	r2, [r3, r2]
2fff0fd2:	68eb      	ldr	r3, [r5, #12]
2fff0fd4:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
2fff0fd8:	0218      	lsls	r0, r3, #8
2fff0fda:	692b      	ldr	r3, [r5, #16]
2fff0fdc:	f400 40fe 	and.w	r0, r0, #32512	@ 0x7f00
2fff0fe0:	041b      	lsls	r3, r3, #16
2fff0fe2:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
2fff0fe6:	4318      	orrs	r0, r3
2fff0fe8:	4308      	orrs	r0, r1
2fff0fea:	1a83      	subs	r3, r0, r2
2fff0fec:	4258      	negs	r0, r3
2fff0fee:	4158      	adcs	r0, r3
2fff0ff0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff0ff4:	2000      	movs	r0, #0
2fff0ff6:	e7fb      	b.n	2fff0ff0 <stm32mp1_check_pll_conf+0xe0>
2fff0ff8:	2fff490c 	.word	0x2fff490c
2fff0ffc:	000f4240 	.word	0x000f4240
2fff1000:	2fff9a08 	.word	0x2fff9a08
2fff1004:	2fff794a 	.word	0x2fff794a
2fff1008:	007a1200 	.word	0x007a1200

2fff100c <stm32mp1_pll_config_output>:
2fff100c:	b538      	push	{r3, r4, r5, lr}
2fff100e:	460c      	mov	r4, r1
2fff1010:	4605      	mov	r5, r0
2fff1012:	f001 ff85 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1016:	68a3      	ldr	r3, [r4, #8]
2fff1018:	6922      	ldr	r2, [r4, #16]
2fff101a:	f003 017f 	and.w	r1, r3, #127	@ 0x7f
2fff101e:	68e3      	ldr	r3, [r4, #12]
2fff1020:	0412      	lsls	r2, r2, #16
2fff1022:	021b      	lsls	r3, r3, #8
2fff1024:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
2fff1028:	f403 43fe 	and.w	r3, r3, #32512	@ 0x7f00
2fff102c:	4313      	orrs	r3, r2
2fff102e:	4a03      	ldr	r2, [pc, #12]	@ (2fff103c <stm32mp1_pll_config_output+0x30>)
2fff1030:	430b      	orrs	r3, r1
2fff1032:	eb02 1245 	add.w	r2, r2, r5, lsl #5
2fff1036:	8912      	ldrh	r2, [r2, #8]
2fff1038:	5013      	str	r3, [r2, r0]
2fff103a:	bd38      	pop	{r3, r4, r5, pc}
2fff103c:	2fff490c 	.word	0x2fff490c

2fff1040 <stm32mp1_clk_get_gated_id>:
2fff1040:	b508      	push	{r3, lr}
2fff1042:	4602      	mov	r2, r0
2fff1044:	4908      	ldr	r1, [pc, #32]	@ (2fff1068 <stm32mp1_clk_get_gated_id+0x28>)
2fff1046:	2300      	movs	r3, #0
2fff1048:	f811 0033 	ldrb.w	r0, [r1, r3, lsl #3]
2fff104c:	4290      	cmp	r0, r2
2fff104e:	d101      	bne.n	2fff1054 <stm32mp1_clk_get_gated_id+0x14>
2fff1050:	4618      	mov	r0, r3
2fff1052:	bd08      	pop	{r3, pc}
2fff1054:	3301      	adds	r3, #1
2fff1056:	2b3b      	cmp	r3, #59	@ 0x3b
2fff1058:	d1f6      	bne.n	2fff1048 <stm32mp1_clk_get_gated_id+0x8>
2fff105a:	4804      	ldr	r0, [pc, #16]	@ (2fff106c <stm32mp1_clk_get_gated_id+0x2c>)
2fff105c:	4904      	ldr	r1, [pc, #16]	@ (2fff1070 <stm32mp1_clk_get_gated_id+0x30>)
2fff105e:	f7fb fb2d 	bl	2ffec6bc <tf_log>
2fff1062:	f06f 0015 	mvn.w	r0, #21
2fff1066:	e7f4      	b.n	2fff1052 <stm32mp1_clk_get_gated_id+0x12>
2fff1068:	2fff4f0d 	.word	0x2fff4f0d
2fff106c:	2fff77a2 	.word	0x2fff77a2
2fff1070:	2fff790d 	.word	0x2fff790d

2fff1074 <stm32mp1_clk_get_parent>:
2fff1074:	b538      	push	{r3, r4, r5, lr}
2fff1076:	4604      	mov	r4, r0
2fff1078:	f001 ff52 	bl	2fff2f20 <stm32mp_rcc_base>
2fff107c:	4b18      	ldr	r3, [pc, #96]	@ (2fff10e0 <stm32mp1_clk_get_parent+0x6c>)
2fff107e:	4605      	mov	r5, r0
2fff1080:	2000      	movs	r0, #0
2fff1082:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff1086:	4294      	cmp	r4, r2
2fff1088:	d026      	beq.n	2fff10d8 <stm32mp1_clk_get_parent+0x64>
2fff108a:	3001      	adds	r0, #1
2fff108c:	2823      	cmp	r0, #35	@ 0x23
2fff108e:	d1f8      	bne.n	2fff1082 <stm32mp1_clk_get_parent+0xe>
2fff1090:	4620      	mov	r0, r4
2fff1092:	f7ff ffd5 	bl	2fff1040 <stm32mp1_clk_get_gated_id>
2fff1096:	1e03      	subs	r3, r0, #0
2fff1098:	da03      	bge.n	2fff10a2 <stm32mp1_clk_get_parent+0x2e>
2fff109a:	f7fb fbab 	bl	2ffec7f4 <console_flush>
2fff109e:	f7f8 e99e 	blx	2ffe93dc <do_panic>
2fff10a2:	4a10      	ldr	r2, [pc, #64]	@ (2fff10e4 <stm32mp1_clk_get_parent+0x70>)
2fff10a4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
2fff10a8:	79d8      	ldrb	r0, [r3, #7]
2fff10aa:	2822      	cmp	r0, #34	@ 0x22
2fff10ac:	d914      	bls.n	2fff10d8 <stm32mp1_clk_get_parent+0x64>
2fff10ae:	799b      	ldrb	r3, [r3, #6]
2fff10b0:	2bff      	cmp	r3, #255	@ 0xff
2fff10b2:	d012      	beq.n	2fff10da <stm32mp1_clk_get_parent+0x66>
2fff10b4:	2b15      	cmp	r3, #21
2fff10b6:	d8f0      	bhi.n	2fff109a <stm32mp1_clk_get_parent+0x26>
2fff10b8:	490b      	ldr	r1, [pc, #44]	@ (2fff10e8 <stm32mp1_clk_get_parent+0x74>)
2fff10ba:	220c      	movs	r2, #12
2fff10bc:	4353      	muls	r3, r2
2fff10be:	18ca      	adds	r2, r1, r3
2fff10c0:	5acb      	ldrh	r3, [r1, r3]
2fff10c2:	7891      	ldrb	r1, [r2, #2]
2fff10c4:	5958      	ldr	r0, [r3, r5]
2fff10c6:	78d3      	ldrb	r3, [r2, #3]
2fff10c8:	408b      	lsls	r3, r1
2fff10ca:	4003      	ands	r3, r0
2fff10cc:	40cb      	lsrs	r3, r1
2fff10ce:	7911      	ldrb	r1, [r2, #4]
2fff10d0:	4299      	cmp	r1, r3
2fff10d2:	d902      	bls.n	2fff10da <stm32mp1_clk_get_parent+0x66>
2fff10d4:	6892      	ldr	r2, [r2, #8]
2fff10d6:	5cd0      	ldrb	r0, [r2, r3]
2fff10d8:	bd38      	pop	{r3, r4, r5, pc}
2fff10da:	f06f 0015 	mvn.w	r0, #21
2fff10de:	e7fb      	b.n	2fff10d8 <stm32mp1_clk_get_parent+0x64>
2fff10e0:	2fff799d 	.word	0x2fff799d
2fff10e4:	2fff4f0a 	.word	0x2fff4f0a
2fff10e8:	2fff498c 	.word	0x2fff498c

2fff10ec <stm32mp_clk_is_enabled>:
2fff10ec:	b510      	push	{r4, lr}
2fff10ee:	4602      	mov	r2, r0
2fff10f0:	f002 fc0d 	bl	2fff390e <clock_is_always_on>
2fff10f4:	b9b8      	cbnz	r0, 2fff1126 <stm32mp_clk_is_enabled+0x3a>
2fff10f6:	4610      	mov	r0, r2
2fff10f8:	f7ff ffa2 	bl	2fff1040 <stm32mp1_clk_get_gated_id>
2fff10fc:	1e04      	subs	r4, r0, #0
2fff10fe:	da03      	bge.n	2fff1108 <stm32mp_clk_is_enabled+0x1c>
2fff1100:	f7fb fb78 	bl	2ffec7f4 <console_flush>
2fff1104:	f7f8 e96a 	blx	2ffe93dc <do_panic>
2fff1108:	f001 ff0a 	bl	2fff2f20 <stm32mp_rcc_base>
2fff110c:	4b06      	ldr	r3, [pc, #24]	@ (2fff1128 <stm32mp_clk_is_enabled+0x3c>)
2fff110e:	f833 2034 	ldrh.w	r2, [r3, r4, lsl #3]
2fff1112:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff1116:	5812      	ldr	r2, [r2, r0]
2fff1118:	7899      	ldrb	r1, [r3, #2]
2fff111a:	2301      	movs	r3, #1
2fff111c:	408b      	lsls	r3, r1
2fff111e:	4213      	tst	r3, r2
2fff1120:	bf14      	ite	ne
2fff1122:	2001      	movne	r0, #1
2fff1124:	2000      	moveq	r0, #0
2fff1126:	bd10      	pop	{r4, pc}
2fff1128:	2fff4f0a 	.word	0x2fff4f0a

2fff112c <stm32mp_clk_disable>:
2fff112c:	b538      	push	{r3, r4, r5, lr}
2fff112e:	4605      	mov	r5, r0
2fff1130:	f002 fbed 	bl	2fff390e <clock_is_always_on>
2fff1134:	2800      	cmp	r0, #0
2fff1136:	d136      	bne.n	2fff11a6 <stm32mp_clk_disable+0x7a>
2fff1138:	4628      	mov	r0, r5
2fff113a:	f7ff ff81 	bl	2fff1040 <stm32mp1_clk_get_gated_id>
2fff113e:	1e04      	subs	r4, r0, #0
2fff1140:	da07      	bge.n	2fff1152 <stm32mp_clk_disable+0x26>
2fff1142:	4819      	ldr	r0, [pc, #100]	@ (2fff11a8 <stm32mp_clk_disable+0x7c>)
2fff1144:	4629      	mov	r1, r5
2fff1146:	f7fb fab9 	bl	2ffec6bc <tf_log>
2fff114a:	f7fb fb53 	bl	2ffec7f4 <console_flush>
2fff114e:	f7f8 e946 	blx	2ffe93dc <do_panic>
2fff1152:	4816      	ldr	r0, [pc, #88]	@ (2fff11ac <stm32mp_clk_disable+0x80>)
2fff1154:	f002 fbeb 	bl	2fff392e <stm32mp1_clk_lock>
2fff1158:	4a15      	ldr	r2, [pc, #84]	@ (2fff11b0 <stm32mp_clk_disable+0x84>)
2fff115a:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
2fff115e:	b913      	cbnz	r3, 2fff1166 <stm32mp_clk_disable+0x3a>
2fff1160:	4814      	ldr	r0, [pc, #80]	@ (2fff11b4 <stm32mp_clk_disable+0x88>)
2fff1162:	4629      	mov	r1, r5
2fff1164:	e7ef      	b.n	2fff1146 <stm32mp_clk_disable+0x1a>
2fff1166:	3b01      	subs	r3, #1
2fff1168:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
2fff116c:	b98b      	cbnz	r3, 2fff1192 <stm32mp_clk_disable+0x66>
2fff116e:	f001 fed7 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1172:	f3bf 8f4f 	dsb	sy
2fff1176:	4a10      	ldr	r2, [pc, #64]	@ (2fff11b8 <stm32mp_clk_disable+0x8c>)
2fff1178:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
2fff117c:	f832 2034 	ldrh.w	r2, [r2, r4, lsl #3]
2fff1180:	7919      	ldrb	r1, [r3, #4]
2fff1182:	789d      	ldrb	r5, [r3, #2]
2fff1184:	2301      	movs	r3, #1
2fff1186:	b149      	cbz	r1, 2fff119c <stm32mp_clk_disable+0x70>
2fff1188:	40ab      	lsls	r3, r5
2fff118a:	3204      	adds	r2, #4
2fff118c:	5013      	str	r3, [r2, r0]
2fff118e:	f3bf 8f4f 	dsb	sy
2fff1192:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff1196:	4805      	ldr	r0, [pc, #20]	@ (2fff11ac <stm32mp_clk_disable+0x80>)
2fff1198:	f002 bbd4 	b.w	2fff3944 <stm32mp1_clk_unlock>
2fff119c:	5811      	ldr	r1, [r2, r0]
2fff119e:	40ab      	lsls	r3, r5
2fff11a0:	ea21 0303 	bic.w	r3, r1, r3
2fff11a4:	e7f2      	b.n	2fff118c <stm32mp_clk_disable+0x60>
2fff11a6:	bd38      	pop	{r3, r4, r5, pc}
2fff11a8:	2fff77bd 	.word	0x2fff77bd
2fff11ac:	2fff9914 	.word	0x2fff9914
2fff11b0:	2fff9918 	.word	0x2fff9918
2fff11b4:	2fff77db 	.word	0x2fff77db
2fff11b8:	2fff4f0a 	.word	0x2fff4f0a

2fff11bc <stm32mp_clk_enable>:
2fff11bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff11be:	4605      	mov	r5, r0
2fff11c0:	f002 fba5 	bl	2fff390e <clock_is_always_on>
2fff11c4:	bb98      	cbnz	r0, 2fff122e <stm32mp_clk_enable+0x72>
2fff11c6:	4628      	mov	r0, r5
2fff11c8:	f7ff ff3a 	bl	2fff1040 <stm32mp1_clk_get_gated_id>
2fff11cc:	1e04      	subs	r4, r0, #0
2fff11ce:	da07      	bge.n	2fff11e0 <stm32mp_clk_enable+0x24>
2fff11d0:	4818      	ldr	r0, [pc, #96]	@ (2fff1234 <stm32mp_clk_enable+0x78>)
2fff11d2:	4629      	mov	r1, r5
2fff11d4:	f7fb fa72 	bl	2ffec6bc <tf_log>
2fff11d8:	f7fb fb0c 	bl	2ffec7f4 <console_flush>
2fff11dc:	f7f8 e8fe 	blx	2ffe93dc <do_panic>
2fff11e0:	4e15      	ldr	r6, [pc, #84]	@ (2fff1238 <stm32mp_clk_enable+0x7c>)
2fff11e2:	4816      	ldr	r0, [pc, #88]	@ (2fff123c <stm32mp_clk_enable+0x80>)
2fff11e4:	f002 fba3 	bl	2fff392e <stm32mp1_clk_lock>
2fff11e8:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff11ec:	b973      	cbnz	r3, 2fff120c <stm32mp_clk_enable+0x50>
2fff11ee:	f001 fe97 	bl	2fff2f20 <stm32mp_rcc_base>
2fff11f2:	4a13      	ldr	r2, [pc, #76]	@ (2fff1240 <stm32mp_clk_enable+0x84>)
2fff11f4:	eb02 03c4 	add.w	r3, r2, r4, lsl #3
2fff11f8:	f832 2034 	ldrh.w	r2, [r2, r4, lsl #3]
2fff11fc:	791f      	ldrb	r7, [r3, #4]
2fff11fe:	7899      	ldrb	r1, [r3, #2]
2fff1200:	2301      	movs	r3, #1
2fff1202:	b16f      	cbz	r7, 2fff1220 <stm32mp_clk_enable+0x64>
2fff1204:	408b      	lsls	r3, r1
2fff1206:	5013      	str	r3, [r2, r0]
2fff1208:	f3bf 8f4f 	dsb	sy
2fff120c:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff1210:	3301      	adds	r3, #1
2fff1212:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff1216:	3301      	adds	r3, #1
2fff1218:	d106      	bne.n	2fff1228 <stm32mp_clk_enable+0x6c>
2fff121a:	480a      	ldr	r0, [pc, #40]	@ (2fff1244 <stm32mp_clk_enable+0x88>)
2fff121c:	4629      	mov	r1, r5
2fff121e:	e7d9      	b.n	2fff11d4 <stm32mp_clk_enable+0x18>
2fff1220:	5817      	ldr	r7, [r2, r0]
2fff1222:	408b      	lsls	r3, r1
2fff1224:	433b      	orrs	r3, r7
2fff1226:	e7ee      	b.n	2fff1206 <stm32mp_clk_enable+0x4a>
2fff1228:	4804      	ldr	r0, [pc, #16]	@ (2fff123c <stm32mp_clk_enable+0x80>)
2fff122a:	f002 fb8b 	bl	2fff3944 <stm32mp1_clk_unlock>
2fff122e:	2000      	movs	r0, #0
2fff1230:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff1232:	bf00      	nop
2fff1234:	2fff77fa 	.word	0x2fff77fa
2fff1238:	2fff9918 	.word	0x2fff9918
2fff123c:	2fff9914 	.word	0x2fff9914
2fff1240:	2fff4f0a 	.word	0x2fff4f0a
2fff1244:	2fff7817 	.word	0x2fff7817

2fff1248 <stm32_clk_configure_mux>:
2fff1248:	f3c1 1307 	ubfx	r3, r1, #4, #8
2fff124c:	2206      	movs	r2, #6
2fff124e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff1252:	f001 010f 	and.w	r1, r1, #15
2fff1256:	6844      	ldr	r4, [r0, #4]
2fff1258:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
2fff125c:	4353      	muls	r3, r2
2fff125e:	6800      	ldr	r0, [r0, #0]
2fff1260:	18e2      	adds	r2, r4, r3
2fff1262:	5ae5      	ldrh	r5, [r4, r3]
2fff1264:	7897      	ldrb	r7, [r2, #2]
2fff1266:	78d3      	ldrb	r3, [r2, #3]
2fff1268:	582e      	ldr	r6, [r5, r0]
2fff126a:	443b      	add	r3, r7
2fff126c:	182c      	adds	r4, r5, r0
2fff126e:	f1c3 0320 	rsb	r3, r3, #32
2fff1272:	40b9      	lsls	r1, r7
2fff1274:	fa2c f303 	lsr.w	r3, ip, r3
2fff1278:	4071      	eors	r1, r6
2fff127a:	fa0c fc07 	lsl.w	ip, ip, r7
2fff127e:	400b      	ands	r3, r1
2fff1280:	ea03 030c 	and.w	r3, r3, ip
2fff1284:	4073      	eors	r3, r6
2fff1286:	502b      	str	r3, [r5, r0]
2fff1288:	7915      	ldrb	r5, [r2, #4]
2fff128a:	2dff      	cmp	r5, #255	@ 0xff
2fff128c:	d013      	beq.n	2fff12b6 <stm32_clk_configure_mux+0x6e>
2fff128e:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff1292:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2fff1296:	480e      	ldr	r0, [pc, #56]	@ (2fff12d0 <stm32_clk_configure_mux+0x88>)
2fff1298:	2300      	movs	r3, #0
2fff129a:	4a0e      	ldr	r2, [pc, #56]	@ (2fff12d4 <stm32_clk_configure_mux+0x8c>)
2fff129c:	fba1 0100 	umull	r0, r1, r1, r0
2fff12a0:	f000 efd6 	blx	2fff2250 <__aeabi_uldivmod>
2fff12a4:	19c0      	adds	r0, r0, r7
2fff12a6:	f04f 0301 	mov.w	r3, #1
2fff12aa:	eb41 0108 	adc.w	r1, r1, r8
2fff12ae:	40ab      	lsls	r3, r5
2fff12b0:	6822      	ldr	r2, [r4, #0]
2fff12b2:	4213      	tst	r3, r2
2fff12b4:	d002      	beq.n	2fff12bc <stm32_clk_configure_mux+0x74>
2fff12b6:	2000      	movs	r0, #0
2fff12b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff12bc:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff12c0:	42b0      	cmp	r0, r6
2fff12c2:	eb71 0207 	sbcs.w	r2, r1, r7
2fff12c6:	d2f3      	bcs.n	2fff12b0 <stm32_clk_configure_mux+0x68>
2fff12c8:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2fff12cc:	e7f4      	b.n	2fff12b8 <stm32_clk_configure_mux+0x70>
2fff12ce:	bf00      	nop
2fff12d0:	00030d40 	.word	0x00030d40
2fff12d4:	000f4240 	.word	0x000f4240

2fff12d8 <stm32mp1_read_pll_freq>:
2fff12d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff12dc:	4607      	mov	r7, r0
2fff12de:	f8df 9098 	ldr.w	r9, [pc, #152]	@ 2fff1378 <stm32mp1_read_pll_freq+0xa0>
2fff12e2:	460d      	mov	r5, r1
2fff12e4:	f001 fe1c 	bl	2fff2f20 <stm32mp_rcc_base>
2fff12e8:	eb09 1847 	add.w	r8, r9, r7, lsl #5
2fff12ec:	f8b8 3008 	ldrh.w	r3, [r8, #8]
2fff12f0:	581c      	ldr	r4, [r3, r0]
2fff12f2:	4b22      	ldr	r3, [pc, #136]	@ (2fff137c <stm32mp1_read_pll_freq+0xa4>)
2fff12f4:	5d5b      	ldrb	r3, [r3, r5]
2fff12f6:	40dc      	lsrs	r4, r3
2fff12f8:	f001 fe12 	bl	2fff2f20 <stm32mp_rcc_base>
2fff12fc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
2fff1300:	f004 047f 	and.w	r4, r4, #127	@ 0x7f
2fff1304:	581e      	ldr	r6, [r3, r0]
2fff1306:	f8b8 300a 	ldrh.w	r3, [r8, #10]
2fff130a:	581d      	ldr	r5, [r3, r0]
2fff130c:	f001 fe08 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1310:	f8b8 3004 	ldrh.w	r3, [r8, #4]
2fff1314:	5818      	ldr	r0, [r3, r0]
2fff1316:	f000 0003 	and.w	r0, r0, #3
2fff131a:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
2fff131e:	3004      	adds	r0, #4
2fff1320:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2fff1324:	2b05      	cmp	r3, #5
2fff1326:	bf8e      	itee	hi
2fff1328:	2700      	movhi	r7, #0
2fff132a:	4a15      	ldrls	r2, [pc, #84]	@ (2fff1380 <stm32mp1_read_pll_freq+0xa8>)
2fff132c:	f852 7023 	ldrls.w	r7, [r2, r3, lsl #2]
2fff1330:	03e9      	lsls	r1, r5, #15
2fff1332:	f3c6 0208 	ubfx	r2, r6, #0, #9
2fff1336:	f3c6 4305 	ubfx	r3, r6, #16, #6
2fff133a:	f102 0201 	add.w	r2, r2, #1
2fff133e:	f103 0301 	add.w	r3, r3, #1
2fff1342:	d513      	bpl.n	2fff136c <stm32mp1_read_pll_freq+0x94>
2fff1344:	f3c5 00cc 	ubfx	r0, r5, #3, #13
2fff1348:	0cd1      	lsrs	r1, r2, #19
2fff134a:	0352      	lsls	r2, r2, #13
2fff134c:	1880      	adds	r0, r0, r2
2fff134e:	fba7 0500 	umull	r0, r5, r7, r0
2fff1352:	f141 0100 	adc.w	r1, r1, #0
2fff1356:	035a      	lsls	r2, r3, #13
2fff1358:	fb07 5101 	mla	r1, r7, r1, r5
2fff135c:	0cdb      	lsrs	r3, r3, #19
2fff135e:	f000 ef78 	blx	2fff2250 <__aeabi_uldivmod>
2fff1362:	3401      	adds	r4, #1
2fff1364:	fbb0 f0f4 	udiv	r0, r0, r4
2fff1368:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff136c:	fb07 f002 	mul.w	r0, r7, r2
2fff1370:	fbb0 f0f3 	udiv	r0, r0, r3
2fff1374:	e7f5      	b.n	2fff1362 <stm32mp1_read_pll_freq+0x8a>
2fff1376:	bf00      	nop
2fff1378:	2fff490c 	.word	0x2fff490c
2fff137c:	2fff7947 	.word	0x2fff7947
2fff1380:	2fff9a08 	.word	0x2fff9a08

2fff1384 <stm32mp_clk_get_rate>:
2fff1384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff1386:	4606      	mov	r6, r0
2fff1388:	f001 fdca 	bl	2fff2f20 <stm32mp_rcc_base>
2fff138c:	4604      	mov	r4, r0
2fff138e:	4630      	mov	r0, r6
2fff1390:	f7ff fe70 	bl	2fff1074 <stm32mp1_clk_get_parent>
2fff1394:	1e07      	subs	r7, r0, #0
2fff1396:	f2c0 80fc 	blt.w	2fff1592 <stm32mp_clk_get_rate+0x20e>
2fff139a:	f001 fdc1 	bl	2fff2f20 <stm32mp_rcc_base>
2fff139e:	4605      	mov	r5, r0
2fff13a0:	2f22      	cmp	r7, #34	@ 0x22
2fff13a2:	f200 80b4 	bhi.w	2fff150e <stm32mp_clk_get_rate+0x18a>
2fff13a6:	e8df f017 	tbh	[pc, r7, lsl #1]
2fff13aa:	002d      	.short	0x002d
2fff13ac:	00b40044 	.word	0x00b40044
2fff13b0:	00c700c4 	.word	0x00c700c4
2fff13b4:	002d00b2 	.word	0x002d00b2
2fff13b8:	00b70044 	.word	0x00b70044
2fff13bc:	00b400bb 	.word	0x00b400bb
2fff13c0:	00ca0047 	.word	0x00ca0047
2fff13c4:	00d100cf 	.word	0x00d100cf
2fff13c8:	00d600d4 	.word	0x00d600d4
2fff13cc:	00db00d8 	.word	0x00db00d8
2fff13d0:	00df00dd 	.word	0x00df00dd
2fff13d4:	00e400e2 	.word	0x00e400e2
2fff13d8:	00780055 	.word	0x00780055
2fff13dc:	00780078 	.word	0x00780078
2fff13e0:	00550055 	.word	0x00550055
2fff13e4:	00550055 	.word	0x00550055
2fff13e8:	002300a7 	.word	0x002300a7
2fff13ec:	00e60078 	.word	0x00e60078
2fff13f0:	6a03      	ldr	r3, [r0, #32]
2fff13f2:	f003 0307 	and.w	r3, r3, #7
2fff13f6:	2b03      	cmp	r3, #3
2fff13f8:	f200 8089 	bhi.w	2fff150e <stm32mp_clk_get_rate+0x18a>
2fff13fc:	e8df f003 	tbb	[pc, r3]
2fff1400:	1f1c1902 	.word	0x1f1c1902
2fff1404:	4b64      	ldr	r3, [pc, #400]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1406:	6818      	ldr	r0, [r3, #0]
2fff1408:	2ecd      	cmp	r6, #205	@ 0xcd
2fff140a:	f200 80b6 	bhi.w	2fff157a <stm32mp_clk_get_rate+0x1f6>
2fff140e:	2ec4      	cmp	r6, #196	@ 0xc4
2fff1410:	f240 80b7 	bls.w	2fff1582 <stm32mp_clk_get_rate+0x1fe>
2fff1414:	f8d4 2834 	ldr.w	r2, [r4, #2100]	@ 0x834
2fff1418:	f8d4 3828 	ldr.w	r3, [r4, #2088]	@ 0x828
2fff141c:	f002 0207 	and.w	r2, r2, #7
2fff1420:	f003 0301 	and.w	r3, r3, #1
2fff1424:	2a00      	cmp	r2, #0
2fff1426:	f000 80ac 	beq.w	2fff1582 <stm32mp_clk_get_rate+0x1fe>
2fff142a:	fb03 0300 	mla	r3, r3, r0, r0
2fff142e:	0058      	lsls	r0, r3, #1
2fff1430:	e0a7      	b.n	2fff1582 <stm32mp_clk_get_rate+0x1fe>
2fff1432:	4b59      	ldr	r3, [pc, #356]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1434:	6858      	ldr	r0, [r3, #4]
2fff1436:	e7e7      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1438:	2100      	movs	r1, #0
2fff143a:	4608      	mov	r0, r1
2fff143c:	e081      	b.n	2fff1542 <stm32mp_clk_get_rate+0x1be>
2fff143e:	2100      	movs	r1, #0
2fff1440:	4608      	mov	r0, r1
2fff1442:	f7ff ff49 	bl	2fff12d8 <stm32mp1_read_pll_freq>
2fff1446:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
2fff1448:	4a54      	ldr	r2, [pc, #336]	@ (2fff159c <stm32mp_clk_get_rate+0x218>)
2fff144a:	f003 0307 	and.w	r3, r3, #7
2fff144e:	5cd3      	ldrb	r3, [r2, r3]
2fff1450:	40d8      	lsrs	r0, r3
2fff1452:	e7d9      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1454:	6a43      	ldr	r3, [r0, #36]	@ 0x24
2fff1456:	f003 0307 	and.w	r3, r3, #7
2fff145a:	2b01      	cmp	r3, #1
2fff145c:	d011      	beq.n	2fff1482 <stm32mp_clk_get_rate+0xfe>
2fff145e:	2b02      	cmp	r3, #2
2fff1460:	d012      	beq.n	2fff1488 <stm32mp_clk_get_rate+0x104>
2fff1462:	b9b3      	cbnz	r3, 2fff1492 <stm32mp_clk_get_rate+0x10e>
2fff1464:	4b4c      	ldr	r3, [pc, #304]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1466:	6818      	ldr	r0, [r3, #0]
2fff1468:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
2fff146a:	2f1b      	cmp	r7, #27
2fff146c:	4a4c      	ldr	r2, [pc, #304]	@ (2fff15a0 <stm32mp_clk_get_rate+0x21c>)
2fff146e:	f003 0307 	and.w	r3, r3, #7
2fff1472:	5cd3      	ldrb	r3, [r2, r3]
2fff1474:	fbb0 f0f3 	udiv	r0, r0, r3
2fff1478:	d00d      	beq.n	2fff1496 <stm32mp_clk_get_rate+0x112>
2fff147a:	2f1c      	cmp	r7, #28
2fff147c:	d1c4      	bne.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff147e:	6c2b      	ldr	r3, [r5, #64]	@ 0x40
2fff1480:	e7e2      	b.n	2fff1448 <stm32mp_clk_get_rate+0xc4>
2fff1482:	4b45      	ldr	r3, [pc, #276]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1484:	6858      	ldr	r0, [r3, #4]
2fff1486:	e7ef      	b.n	2fff1468 <stm32mp_clk_get_rate+0xe4>
2fff1488:	2100      	movs	r1, #0
2fff148a:	2001      	movs	r0, #1
2fff148c:	f7ff ff24 	bl	2fff12d8 <stm32mp1_read_pll_freq>
2fff1490:	e7ea      	b.n	2fff1468 <stm32mp_clk_get_rate+0xe4>
2fff1492:	2000      	movs	r0, #0
2fff1494:	e7e8      	b.n	2fff1468 <stm32mp_clk_get_rate+0xe4>
2fff1496:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
2fff1498:	e7d6      	b.n	2fff1448 <stm32mp_clk_get_rate+0xc4>
2fff149a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
2fff149c:	f003 0307 	and.w	r3, r3, #7
2fff14a0:	2b03      	cmp	r3, #3
2fff14a2:	d821      	bhi.n	2fff14e8 <stm32mp_clk_get_rate+0x164>
2fff14a4:	e8df f003 	tbb	[pc, r3]
2fff14a8:	1b181502 	.word	0x1b181502
2fff14ac:	4b3a      	ldr	r3, [pc, #232]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff14ae:	6818      	ldr	r0, [r3, #0]
2fff14b0:	f8d5 2830 	ldr.w	r2, [r5, #2096]	@ 0x830
2fff14b4:	2f19      	cmp	r7, #25
2fff14b6:	493b      	ldr	r1, [pc, #236]	@ (2fff15a4 <stm32mp_clk_get_rate+0x220>)
2fff14b8:	f002 020f 	and.w	r2, r2, #15
2fff14bc:	5c8a      	ldrb	r2, [r1, r2]
2fff14be:	fa20 f002 	lsr.w	r0, r0, r2
2fff14c2:	d013      	beq.n	2fff14ec <stm32mp_clk_get_rate+0x168>
2fff14c4:	2f1a      	cmp	r7, #26
2fff14c6:	d014      	beq.n	2fff14f2 <stm32mp_clk_get_rate+0x16e>
2fff14c8:	2f18      	cmp	r7, #24
2fff14ca:	d19d      	bne.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff14cc:	f8d5 3834 	ldr.w	r3, [r5, #2100]	@ 0x834
2fff14d0:	e7ba      	b.n	2fff1448 <stm32mp_clk_get_rate+0xc4>
2fff14d2:	4b31      	ldr	r3, [pc, #196]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff14d4:	6858      	ldr	r0, [r3, #4]
2fff14d6:	e7eb      	b.n	2fff14b0 <stm32mp_clk_get_rate+0x12c>
2fff14d8:	4b2f      	ldr	r3, [pc, #188]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff14da:	6898      	ldr	r0, [r3, #8]
2fff14dc:	e7e8      	b.n	2fff14b0 <stm32mp_clk_get_rate+0x12c>
2fff14de:	2100      	movs	r1, #0
2fff14e0:	2002      	movs	r0, #2
2fff14e2:	f7ff fef9 	bl	2fff12d8 <stm32mp1_read_pll_freq>
2fff14e6:	e7e3      	b.n	2fff14b0 <stm32mp_clk_get_rate+0x12c>
2fff14e8:	2000      	movs	r0, #0
2fff14ea:	e7e1      	b.n	2fff14b0 <stm32mp_clk_get_rate+0x12c>
2fff14ec:	f8d5 3838 	ldr.w	r3, [r5, #2104]	@ 0x838
2fff14f0:	e7aa      	b.n	2fff1448 <stm32mp_clk_get_rate+0xc4>
2fff14f2:	f8d5 383c 	ldr.w	r3, [r5, #2108]	@ 0x83c
2fff14f6:	e7a7      	b.n	2fff1448 <stm32mp_clk_get_rate+0xc4>
2fff14f8:	f8d0 30d0 	ldr.w	r3, [r0, #208]	@ 0xd0
2fff14fc:	f003 0307 	and.w	r3, r3, #7
2fff1500:	2b01      	cmp	r3, #1
2fff1502:	d006      	beq.n	2fff1512 <stm32mp_clk_get_rate+0x18e>
2fff1504:	2b02      	cmp	r3, #2
2fff1506:	d094      	beq.n	2fff1432 <stm32mp_clk_get_rate+0xae>
2fff1508:	2b00      	cmp	r3, #0
2fff150a:	f43f af7b 	beq.w	2fff1404 <stm32mp_clk_get_rate+0x80>
2fff150e:	2000      	movs	r0, #0
2fff1510:	e77a      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1512:	4b21      	ldr	r3, [pc, #132]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1514:	6898      	ldr	r0, [r3, #8]
2fff1516:	e777      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1518:	4b1f      	ldr	r3, [pc, #124]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff151a:	6858      	ldr	r0, [r3, #4]
2fff151c:	0840      	lsrs	r0, r0, #1
2fff151e:	e773      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1520:	6c43      	ldr	r3, [r0, #68]	@ 0x44
2fff1522:	4a1d      	ldr	r2, [pc, #116]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1524:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
2fff1528:	6850      	ldr	r0, [r2, #4]
2fff152a:	3301      	adds	r3, #1
2fff152c:	fbb0 f0f3 	udiv	r0, r0, r3
2fff1530:	e76a      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1532:	4b19      	ldr	r3, [pc, #100]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff1534:	68d8      	ldr	r0, [r3, #12]
2fff1536:	e767      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1538:	4b17      	ldr	r3, [pc, #92]	@ (2fff1598 <stm32mp_clk_get_rate+0x214>)
2fff153a:	6918      	ldr	r0, [r3, #16]
2fff153c:	e764      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff153e:	2101      	movs	r1, #1
2fff1540:	2000      	movs	r0, #0
2fff1542:	f7ff fec9 	bl	2fff12d8 <stm32mp1_read_pll_freq>
2fff1546:	e75f      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff1548:	2102      	movs	r1, #2
2fff154a:	e7f9      	b.n	2fff1540 <stm32mp_clk_get_rate+0x1bc>
2fff154c:	2100      	movs	r1, #0
2fff154e:	2001      	movs	r0, #1
2fff1550:	e7f7      	b.n	2fff1542 <stm32mp_clk_get_rate+0x1be>
2fff1552:	2101      	movs	r1, #1
2fff1554:	e771      	b.n	2fff143a <stm32mp_clk_get_rate+0xb6>
2fff1556:	2102      	movs	r1, #2
2fff1558:	e7f9      	b.n	2fff154e <stm32mp_clk_get_rate+0x1ca>
2fff155a:	2100      	movs	r1, #0
2fff155c:	2002      	movs	r0, #2
2fff155e:	e7f0      	b.n	2fff1542 <stm32mp_clk_get_rate+0x1be>
2fff1560:	2101      	movs	r1, #1
2fff1562:	e7fb      	b.n	2fff155c <stm32mp_clk_get_rate+0x1d8>
2fff1564:	2102      	movs	r1, #2
2fff1566:	e7f9      	b.n	2fff155c <stm32mp_clk_get_rate+0x1d8>
2fff1568:	2100      	movs	r1, #0
2fff156a:	2003      	movs	r0, #3
2fff156c:	e7e9      	b.n	2fff1542 <stm32mp_clk_get_rate+0x1be>
2fff156e:	2101      	movs	r1, #1
2fff1570:	e7fb      	b.n	2fff156a <stm32mp_clk_get_rate+0x1e6>
2fff1572:	2102      	movs	r1, #2
2fff1574:	e7f9      	b.n	2fff156a <stm32mp_clk_get_rate+0x1e6>
2fff1576:	480c      	ldr	r0, [pc, #48]	@ (2fff15a8 <stm32mp_clk_get_rate+0x224>)
2fff1578:	e746      	b.n	2fff1408 <stm32mp_clk_get_rate+0x84>
2fff157a:	f1a6 03ce 	sub.w	r3, r6, #206	@ 0xce
2fff157e:	2b04      	cmp	r3, #4
2fff1580:	d900      	bls.n	2fff1584 <stm32mp_clk_get_rate+0x200>
2fff1582:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff1584:	f8d4 2838 	ldr.w	r2, [r4, #2104]	@ 0x838
2fff1588:	f8d4 382c 	ldr.w	r3, [r4, #2092]	@ 0x82c
2fff158c:	f002 0207 	and.w	r2, r2, #7
2fff1590:	e746      	b.n	2fff1420 <stm32mp_clk_get_rate+0x9c>
2fff1592:	2000      	movs	r0, #0
2fff1594:	e7f5      	b.n	2fff1582 <stm32mp_clk_get_rate+0x1fe>
2fff1596:	bf00      	nop
2fff1598:	2fff9a08 	.word	0x2fff9a08
2fff159c:	2fff792f 	.word	0x2fff792f
2fff15a0:	2fff7927 	.word	0x2fff7927
2fff15a4:	2fff7937 	.word	0x2fff7937
2fff15a8:	02dc6c00 	.word	0x02dc6c00

2fff15ac <stm32mp1_osc_wait.isra.0>:
2fff15ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff15b0:	4606      	mov	r6, r0
2fff15b2:	460f      	mov	r7, r1
2fff15b4:	4614      	mov	r4, r2
2fff15b6:	f001 fcb3 	bl	2fff2f20 <stm32mp_rcc_base>
2fff15ba:	19c2      	adds	r2, r0, r7
2fff15bc:	2e00      	cmp	r6, #0
2fff15be:	bf14      	ite	ne
2fff15c0:	4621      	movne	r1, r4
2fff15c2:	2100      	moveq	r1, #0
2fff15c4:	ee1e 5f10 	mrc	15, 0, r5, cr14, cr0, {0}
2fff15c8:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff15cc:	eb15 0508 	adds.w	r5, r5, r8
2fff15d0:	f149 0c00 	adc.w	ip, r9, #0
2fff15d4:	6813      	ldr	r3, [r2, #0]
2fff15d6:	4023      	ands	r3, r4
2fff15d8:	428b      	cmp	r3, r1
2fff15da:	d00c      	beq.n	2fff15f6 <stm32mp1_osc_wait.isra.0+0x4a>
2fff15dc:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff15e0:	4545      	cmp	r5, r8
2fff15e2:	eb7c 0309 	sbcs.w	r3, ip, r9
2fff15e6:	d2f5      	bcs.n	2fff15d4 <stm32mp1_osc_wait.isra.0+0x28>
2fff15e8:	59c3      	ldr	r3, [r0, r7]
2fff15ea:	4621      	mov	r1, r4
2fff15ec:	4803      	ldr	r0, [pc, #12]	@ (2fff15fc <stm32mp1_osc_wait.isra.0+0x50>)
2fff15ee:	9300      	str	r3, [sp, #0]
2fff15f0:	4633      	mov	r3, r6
2fff15f2:	f7fb f863 	bl	2ffec6bc <tf_log>
2fff15f6:	b003      	add	sp, #12
2fff15f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff15fc:	2fff783e 	.word	0x2fff783e

2fff1600 <clk_stm32_set_div>:
2fff1600:	6903      	ldr	r3, [r0, #16]
2fff1602:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff1606:	428b      	cmp	r3, r1
2fff1608:	d803      	bhi.n	2fff1612 <clk_stm32_set_div+0x12>
2fff160a:	f7fb f8f3 	bl	2ffec7f4 <console_flush>
2fff160e:	f7f7 eee6 	blx	2ffe93dc <do_panic>
2fff1612:	2306      	movs	r3, #6
2fff1614:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
2fff1618:	4359      	muls	r1, r3
2fff161a:	68c3      	ldr	r3, [r0, #12]
2fff161c:	185d      	adds	r5, r3, r1
2fff161e:	5a5e      	ldrh	r6, [r3, r1]
2fff1620:	78af      	ldrb	r7, [r5, #2]
2fff1622:	78eb      	ldrb	r3, [r5, #3]
2fff1624:	6801      	ldr	r1, [r0, #0]
2fff1626:	443b      	add	r3, r7
2fff1628:	5870      	ldr	r0, [r6, r1]
2fff162a:	f1c3 0320 	rsb	r3, r3, #32
2fff162e:	40ba      	lsls	r2, r7
2fff1630:	fa2c f303 	lsr.w	r3, ip, r3
2fff1634:	4042      	eors	r2, r0
2fff1636:	1874      	adds	r4, r6, r1
2fff1638:	4013      	ands	r3, r2
2fff163a:	fa0c fc07 	lsl.w	ip, ip, r7
2fff163e:	ea03 030c 	and.w	r3, r3, ip
2fff1642:	4043      	eors	r3, r0
2fff1644:	5073      	str	r3, [r6, r1]
2fff1646:	792d      	ldrb	r5, [r5, #4]
2fff1648:	2dff      	cmp	r5, #255	@ 0xff
2fff164a:	d013      	beq.n	2fff1674 <clk_stm32_set_div+0x74>
2fff164c:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff1650:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2fff1654:	480d      	ldr	r0, [pc, #52]	@ (2fff168c <clk_stm32_set_div+0x8c>)
2fff1656:	2300      	movs	r3, #0
2fff1658:	4a0d      	ldr	r2, [pc, #52]	@ (2fff1690 <clk_stm32_set_div+0x90>)
2fff165a:	fba1 0100 	umull	r0, r1, r1, r0
2fff165e:	f000 edf8 	blx	2fff2250 <__aeabi_uldivmod>
2fff1662:	19c0      	adds	r0, r0, r7
2fff1664:	f04f 0301 	mov.w	r3, #1
2fff1668:	eb41 0108 	adc.w	r1, r1, r8
2fff166c:	40ab      	lsls	r3, r5
2fff166e:	6822      	ldr	r2, [r4, #0]
2fff1670:	4213      	tst	r3, r2
2fff1672:	d002      	beq.n	2fff167a <clk_stm32_set_div+0x7a>
2fff1674:	2000      	movs	r0, #0
2fff1676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff167a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff167e:	42b0      	cmp	r0, r6
2fff1680:	eb71 0207 	sbcs.w	r2, r1, r7
2fff1684:	d2f3      	bcs.n	2fff166e <clk_stm32_set_div+0x6e>
2fff1686:	f06f 003b 	mvn.w	r0, #59	@ 0x3b
2fff168a:	e7f4      	b.n	2fff1676 <clk_stm32_set_div+0x76>
2fff168c:	00030d40 	.word	0x00030d40
2fff1690:	000f4240 	.word	0x000f4240

2fff1694 <stm32mp1_clk_rcc_regs_lock>:
2fff1694:	4801      	ldr	r0, [pc, #4]	@ (2fff169c <stm32mp1_clk_rcc_regs_lock+0x8>)
2fff1696:	f002 b94a 	b.w	2fff392e <stm32mp1_clk_lock>
2fff169a:	bf00      	nop
2fff169c:	2fff9a04 	.word	0x2fff9a04

2fff16a0 <stm32mp1_clk_rcc_regs_unlock>:
2fff16a0:	4801      	ldr	r0, [pc, #4]	@ (2fff16a8 <stm32mp1_clk_rcc_regs_unlock+0x8>)
2fff16a2:	f002 b94f 	b.w	2fff3944 <stm32mp1_clk_unlock>
2fff16a6:	bf00      	nop
2fff16a8:	2fff9a04 	.word	0x2fff9a04

2fff16ac <stm32mp1_clk_init>:
2fff16ac:	4bb7      	ldr	r3, [pc, #732]	@ (2fff198c <stm32mp1_clk_init+0x2e0>)
2fff16ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff16b2:	b099      	sub	sp, #100	@ 0x64
2fff16b4:	f8d3 a000 	ldr.w	sl, [r3]
2fff16b8:	4605      	mov	r5, r0
2fff16ba:	2080      	movs	r0, #128	@ 0x80
2fff16bc:	f8da 3014 	ldr.w	r3, [sl, #20]
2fff16c0:	685c      	ldr	r4, [r3, #4]
2fff16c2:	930f      	str	r3, [sp, #60]	@ 0x3c
2fff16c4:	f7ff fcd6 	bl	2fff1074 <stm32mp1_clk_get_parent>
2fff16c8:	9010      	str	r0, [sp, #64]	@ 0x40
2fff16ca:	207f      	movs	r0, #127	@ 0x7f
2fff16cc:	f7ff fcd2 	bl	2fff1074 <stm32mp1_clk_get_parent>
2fff16d0:	9011      	str	r0, [sp, #68]	@ 0x44
2fff16d2:	7820      	ldrb	r0, [r4, #0]
2fff16d4:	2800      	cmp	r0, #0
2fff16d6:	f040 80c3 	bne.w	2fff1860 <stm32mp1_clk_init+0x1b4>
2fff16da:	2d00      	cmp	r5, #0
2fff16dc:	f000 80c0 	beq.w	2fff1860 <stm32mp1_clk_init+0x1b4>
2fff16e0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2fff16e2:	4aab      	ldr	r2, [pc, #684]	@ (2fff1990 <stm32mp1_clk_init+0x2e4>)
2fff16e4:	4293      	cmp	r3, r2
2fff16e6:	d006      	beq.n	2fff16f6 <stm32mp1_clk_init+0x4a>
2fff16e8:	3201      	adds	r2, #1
2fff16ea:	4293      	cmp	r3, r2
2fff16ec:	d004      	beq.n	2fff16f8 <stm32mp1_clk_init+0x4c>
2fff16ee:	f7fb f881 	bl	2ffec7f4 <console_flush>
2fff16f2:	f7f7 ee74 	blx	2ffe93dc <do_panic>
2fff16f6:	2004      	movs	r0, #4
2fff16f8:	f7ff fe44 	bl	2fff1384 <stm32mp_clk_get_rate>
2fff16fc:	9001      	str	r0, [sp, #4]
2fff16fe:	9b01      	ldr	r3, [sp, #4]
2fff1700:	2b00      	cmp	r3, #0
2fff1702:	d0f4      	beq.n	2fff16ee <stm32mp1_clk_init+0x42>
2fff1704:	2300      	movs	r3, #0
2fff1706:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
2fff170a:	6163      	str	r3, [r4, #20]
2fff170c:	61a3      	str	r3, [r4, #24]
2fff170e:	2301      	movs	r3, #1
2fff1710:	61e3      	str	r3, [r4, #28]
2fff1712:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2fff1716:	fba5 3203 	umull	r3, r2, r5, r3
2fff171a:	f8cd b034 	str.w	fp, [sp, #52]	@ 0x34
2fff171e:	9308      	str	r3, [sp, #32]
2fff1720:	f44f 437a 	mov.w	r3, #64000	@ 0xfa00
2fff1724:	9209      	str	r2, [sp, #36]	@ 0x24
2fff1726:	fba5 3203 	umull	r3, r2, r5, r3
2fff172a:	930b      	str	r3, [sp, #44]	@ 0x2c
2fff172c:	2340      	movs	r3, #64	@ 0x40
2fff172e:	920c      	str	r2, [sp, #48]	@ 0x30
2fff1730:	9304      	str	r3, [sp, #16]
2fff1732:	9b01      	ldr	r3, [sp, #4]
2fff1734:	9a04      	ldr	r2, [sp, #16]
2fff1736:	fbb3 f7f2 	udiv	r7, r3, r2
2fff173a:	4a96      	ldr	r2, [pc, #600]	@ (2fff1994 <stm32mp1_clk_init+0x2e8>)
2fff173c:	f5a7 03f4 	sub.w	r3, r7, #7995392	@ 0x7a0000
2fff1740:	f5a3 5390 	sub.w	r3, r3, #4608	@ 0x1200
2fff1744:	4293      	cmp	r3, r2
2fff1746:	f200 8104 	bhi.w	2fff1952 <stm32mp1_clk_init+0x2a6>
2fff174a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
2fff174c:	9302      	str	r3, [sp, #8]
2fff174e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
2fff1750:	9307      	str	r3, [sp, #28]
2fff1752:	2301      	movs	r3, #1
2fff1754:	9306      	str	r3, [sp, #24]
2fff1756:	2300      	movs	r3, #0
2fff1758:	930a      	str	r3, [sp, #40]	@ 0x28
2fff175a:	9b04      	ldr	r3, [sp, #16]
2fff175c:	3b01      	subs	r3, #1
2fff175e:	9317      	str	r3, [sp, #92]	@ 0x5c
2fff1760:	9a01      	ldr	r2, [sp, #4]
2fff1762:	2300      	movs	r3, #0
2fff1764:	9802      	ldr	r0, [sp, #8]
2fff1766:	9907      	ldr	r1, [sp, #28]
2fff1768:	f000 ed72 	blx	2fff2250 <__aeabi_uldivmod>
2fff176c:	f1b0 0219 	subs.w	r2, r0, #25
2fff1770:	4680      	mov	r8, r0
2fff1772:	f161 0300 	sbc.w	r3, r1, #0
2fff1776:	2a4c      	cmp	r2, #76	@ 0x4c
2fff1778:	f173 0300 	sbcs.w	r3, r3, #0
2fff177c:	460e      	mov	r6, r1
2fff177e:	4605      	mov	r5, r0
2fff1780:	f080 80d1 	bcs.w	2fff1926 <stm32mp1_clk_init+0x27a>
2fff1784:	9b07      	ldr	r3, [sp, #28]
2fff1786:	f8dd c008 	ldr.w	ip, [sp, #8]
2fff178a:	9802      	ldr	r0, [sp, #8]
2fff178c:	0359      	lsls	r1, r3, #13
2fff178e:	2300      	movs	r3, #0
2fff1790:	9a01      	ldr	r2, [sp, #4]
2fff1792:	0340      	lsls	r0, r0, #13
2fff1794:	ea41 41dc 	orr.w	r1, r1, ip, lsr #19
2fff1798:	f000 ed5a 	blx	2fff2250 <__aeabi_uldivmod>
2fff179c:	0373      	lsls	r3, r6, #13
2fff179e:	ea43 43d8 	orr.w	r3, r3, r8, lsr #19
2fff17a2:	ea4f 3848 	mov.w	r8, r8, lsl #13
2fff17a6:	ebb0 0008 	subs.w	r0, r0, r8
2fff17aa:	eb61 0103 	sbc.w	r1, r1, r3
2fff17ae:	f242 0301 	movw	r3, #8193	@ 0x2001
2fff17b2:	4298      	cmp	r0, r3
2fff17b4:	f171 0300 	sbcs.w	r3, r1, #0
2fff17b8:	f080 80b5 	bcs.w	2fff1926 <stm32mp1_clk_init+0x27a>
2fff17bc:	9b06      	ldr	r3, [sp, #24]
2fff17be:	fba0 8907 	umull	r8, r9, r0, r7
2fff17c2:	3b01      	subs	r3, #1
2fff17c4:	9312      	str	r3, [sp, #72]	@ 0x48
2fff17c6:	1e6b      	subs	r3, r5, #1
2fff17c8:	9315      	str	r3, [sp, #84]	@ 0x54
2fff17ca:	fba5 3207 	umull	r3, r2, r5, r7
2fff17ce:	fb07 9901 	mla	r9, r7, r1, r9
2fff17d2:	9316      	str	r3, [sp, #88]	@ 0x58
2fff17d4:	fb07 2306 	mla	r3, r7, r6, r2
2fff17d8:	1c46      	adds	r6, r0, #1
2fff17da:	f141 0500 	adc.w	r5, r1, #0
2fff17de:	930e      	str	r3, [sp, #56]	@ 0x38
2fff17e0:	1c83      	adds	r3, r0, #2
2fff17e2:	9313      	str	r3, [sp, #76]	@ 0x4c
2fff17e4:	f141 0300 	adc.w	r3, r1, #0
2fff17e8:	9314      	str	r3, [sp, #80]	@ 0x50
2fff17ea:	9b16      	ldr	r3, [sp, #88]	@ 0x58
2fff17ec:	ea4f 3058 	mov.w	r0, r8, lsr #13
2fff17f0:	ea40 40c9 	orr.w	r0, r0, r9, lsl #19
2fff17f4:	18c0      	adds	r0, r0, r3
2fff17f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
2fff17f8:	f8df c19c 	ldr.w	ip, [pc, #412]	@ 2fff1998 <stm32mp1_clk_init+0x2ec>
2fff17fc:	eb43 3159 	adc.w	r1, r3, r9, lsr #13
2fff1800:	4b66      	ldr	r3, [pc, #408]	@ (2fff199c <stm32mp1_clk_init+0x2f0>)
2fff1802:	18c2      	adds	r2, r0, r3
2fff1804:	f161 0300 	sbc.w	r3, r1, #0
2fff1808:	4594      	cmp	ip, r2
2fff180a:	f04f 0200 	mov.w	r2, #0
2fff180e:	eb72 0303 	sbcs.w	r3, r2, r3
2fff1812:	f0c0 8082 	bcc.w	2fff191a <stm32mp1_clk_init+0x26e>
2fff1816:	9a06      	ldr	r2, [sp, #24]
2fff1818:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
2fff181a:	f000 ed1a 	blx	2fff2250 <__aeabi_uldivmod>
2fff181e:	f8dd c020 	ldr.w	ip, [sp, #32]
2fff1822:	4603      	mov	r3, r0
2fff1824:	460a      	mov	r2, r1
2fff1826:	4584      	cmp	ip, r0
2fff1828:	9809      	ldr	r0, [sp, #36]	@ 0x24
2fff182a:	4188      	sbcs	r0, r1
2fff182c:	d26d      	bcs.n	2fff190a <stm32mp1_clk_init+0x25e>
2fff182e:	ebb3 030c 	subs.w	r3, r3, ip
2fff1832:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2fff1834:	eb61 0102 	sbc.w	r1, r1, r2
2fff1838:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
2fff183a:	455b      	cmp	r3, fp
2fff183c:	eb71 0202 	sbcs.w	r2, r1, r2
2fff1840:	d267      	bcs.n	2fff1912 <stm32mp1_clk_init+0x266>
2fff1842:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
2fff1844:	60a2      	str	r2, [r4, #8]
2fff1846:	9a15      	ldr	r2, [sp, #84]	@ 0x54
2fff1848:	60e2      	str	r2, [r4, #12]
2fff184a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
2fff184c:	6122      	str	r2, [r4, #16]
2fff184e:	1e72      	subs	r2, r6, #1
2fff1850:	6222      	str	r2, [r4, #32]
2fff1852:	ea53 0201 	orrs.w	r2, r3, r1
2fff1856:	d15e      	bne.n	2fff1916 <stm32mp1_clk_init+0x26a>
2fff1858:	2301      	movs	r3, #1
2fff185a:	7023      	strb	r3, [r4, #0]
2fff185c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
2fff185e:	6063      	str	r3, [r4, #4]
2fff1860:	4d4f      	ldr	r5, [pc, #316]	@ (2fff19a0 <stm32mp1_clk_init+0x2f4>)
2fff1862:	68eb      	ldr	r3, [r5, #12]
2fff1864:	b16b      	cbz	r3, 2fff1882 <stm32mp1_clk_init+0x1d6>
2fff1866:	f001 fb5b 	bl	2fff2f20 <stm32mp_rcc_base>
2fff186a:	f8d0 3144 	ldr.w	r3, [r0, #324]	@ 0x144
2fff186e:	2202      	movs	r2, #2
2fff1870:	f44f 71a2 	mov.w	r1, #324	@ 0x144
2fff1874:	f043 0301 	orr.w	r3, r3, #1
2fff1878:	f8c0 3144 	str.w	r3, [r0, #324]	@ 0x144
2fff187c:	2001      	movs	r0, #1
2fff187e:	f7ff fe95 	bl	2fff15ac <stm32mp1_osc_wait.isra.0>
2fff1882:	692b      	ldr	r3, [r5, #16]
2fff1884:	2b00      	cmp	r3, #0
2fff1886:	f000 80a7 	beq.w	2fff19d8 <stm32mp1_clk_init+0x32c>
2fff188a:	4b46      	ldr	r3, [pc, #280]	@ (2fff19a4 <stm32mp1_clk_init+0x2f8>)
2fff188c:	4946      	ldr	r1, [pc, #280]	@ (2fff19a8 <stm32mp1_clk_init+0x2fc>)
2fff188e:	691e      	ldr	r6, [r3, #16]
2fff1890:	4630      	mov	r0, r6
2fff1892:	f7fc f861 	bl	2ffed958 <fdt_clk_read_bool>
2fff1896:	4945      	ldr	r1, [pc, #276]	@ (2fff19ac <stm32mp1_clk_init+0x300>)
2fff1898:	4607      	mov	r7, r0
2fff189a:	4630      	mov	r0, r6
2fff189c:	f7fc f85c 	bl	2ffed958 <fdt_clk_read_bool>
2fff18a0:	4943      	ldr	r1, [pc, #268]	@ (2fff19b0 <stm32mp1_clk_init+0x304>)
2fff18a2:	4680      	mov	r8, r0
2fff18a4:	4630      	mov	r0, r6
2fff18a6:	f7fc f857 	bl	2ffed958 <fdt_clk_read_bool>
2fff18aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
2fff18ac:	2202      	movs	r2, #2
2fff18ae:	4941      	ldr	r1, [pc, #260]	@ (2fff19b4 <stm32mp1_clk_init+0x308>)
2fff18b0:	7618      	strb	r0, [r3, #24]
2fff18b2:	4630      	mov	r0, r6
2fff18b4:	f7fc f884 	bl	2ffed9c0 <fdt_clk_read_uint32_default>
2fff18b8:	4606      	mov	r6, r0
2fff18ba:	f001 fb31 	bl	2fff2f20 <stm32mp_rcc_base>
2fff18be:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2fff18c2:	f500 71a0 	add.w	r1, r0, #320	@ 0x140
2fff18c6:	07db      	lsls	r3, r3, #31
2fff18c8:	f100 8086 	bmi.w	2fff19d8 <stm32mp1_clk_init+0x32c>
2fff18cc:	f1b8 0f00 	cmp.w	r8, #0
2fff18d0:	d072      	beq.n	2fff19b8 <stm32mp1_clk_init+0x30c>
2fff18d2:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2fff18d6:	f043 0308 	orr.w	r3, r3, #8
2fff18da:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
2fff18de:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2fff18e2:	f043 0302 	orr.w	r3, r3, #2
2fff18e6:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
2fff18ea:	e067      	b.n	2fff19bc <stm32mp1_clk_init+0x310>
2fff18ec:	eb18 0807 	adds.w	r8, r8, r7
2fff18f0:	f149 0900 	adc.w	r9, r9, #0
2fff18f4:	1c72      	adds	r2, r6, #1
2fff18f6:	f145 0300 	adc.w	r3, r5, #0
2fff18fa:	f5a6 5600 	sub.w	r6, r6, #8192	@ 0x2000
2fff18fe:	3e01      	subs	r6, #1
2fff1900:	432e      	orrs	r6, r5
2fff1902:	d010      	beq.n	2fff1926 <stm32mp1_clk_init+0x27a>
2fff1904:	4616      	mov	r6, r2
2fff1906:	461d      	mov	r5, r3
2fff1908:	e76f      	b.n	2fff17ea <stm32mp1_clk_init+0x13e>
2fff190a:	9908      	ldr	r1, [sp, #32]
2fff190c:	1acb      	subs	r3, r1, r3
2fff190e:	9909      	ldr	r1, [sp, #36]	@ 0x24
2fff1910:	e790      	b.n	2fff1834 <stm32mp1_clk_init+0x188>
2fff1912:	990d      	ldr	r1, [sp, #52]	@ 0x34
2fff1914:	465b      	mov	r3, fp
2fff1916:	910d      	str	r1, [sp, #52]	@ 0x34
2fff1918:	469b      	mov	fp, r3
2fff191a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
2fff191c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
2fff191e:	42aa      	cmp	r2, r5
2fff1920:	bf08      	it	eq
2fff1922:	42b3      	cmpeq	r3, r6
2fff1924:	d1e2      	bne.n	2fff18ec <stm32mp1_clk_init+0x240>
2fff1926:	9b02      	ldr	r3, [sp, #8]
2fff1928:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
2fff192a:	189b      	adds	r3, r3, r2
2fff192c:	9302      	str	r3, [sp, #8]
2fff192e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
2fff1930:	9b07      	ldr	r3, [sp, #28]
2fff1932:	eb43 0302 	adc.w	r3, r3, r2
2fff1936:	9307      	str	r3, [sp, #28]
2fff1938:	9b06      	ldr	r3, [sp, #24]
2fff193a:	3301      	adds	r3, #1
2fff193c:	9306      	str	r3, [sp, #24]
2fff193e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
2fff1940:	f143 0300 	adc.w	r3, r3, #0
2fff1944:	930a      	str	r3, [sp, #40]	@ 0x28
2fff1946:	9b06      	ldr	r3, [sp, #24]
2fff1948:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
2fff194a:	3b81      	subs	r3, #129	@ 0x81
2fff194c:	4313      	orrs	r3, r2
2fff194e:	f47f af07 	bne.w	2fff1760 <stm32mp1_clk_init+0xb4>
2fff1952:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
2fff1954:	9a08      	ldr	r2, [sp, #32]
2fff1956:	1a9b      	subs	r3, r3, r2
2fff1958:	930b      	str	r3, [sp, #44]	@ 0x2c
2fff195a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2fff195c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
2fff195e:	eb63 0302 	sbc.w	r3, r3, r2
2fff1962:	930c      	str	r3, [sp, #48]	@ 0x30
2fff1964:	9b04      	ldr	r3, [sp, #16]
2fff1966:	3b01      	subs	r3, #1
2fff1968:	9304      	str	r3, [sp, #16]
2fff196a:	f47f aee2 	bne.w	2fff1732 <stm32mp1_clk_init+0x86>
2fff196e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
2fff1970:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
2fff1974:	bf08      	it	eq
2fff1976:	f1bb 3fff 	cmpeq.w	fp, #4294967295	@ 0xffffffff
2fff197a:	f47f af6d 	bne.w	2fff1858 <stm32mp1_clk_init+0x1ac>
2fff197e:	f06f 0515 	mvn.w	r5, #21
2fff1982:	4628      	mov	r0, r5
2fff1984:	b019      	add	sp, #100	@ 0x64
2fff1986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff198a:	bf00      	nop
2fff198c:	2fff9a20 	.word	0x2fff9a20
2fff1990:	04000030 	.word	0x04000030
2fff1994:	007a1200 	.word	0x007a1200
2fff1998:	17d78400 	.word	0x17d78400
2fff199c:	e8287c00 	.word	0xe8287c00
2fff19a0:	2fff9a08 	.word	0x2fff9a08
2fff19a4:	2fff8580 	.word	0x2fff8580
2fff19a8:	2fff786a 	.word	0x2fff786a
2fff19ac:	2fff7874 	.word	0x2fff7874
2fff19b0:	2fff7881 	.word	0x2fff7881
2fff19b4:	2fff7888 	.word	0x2fff7888
2fff19b8:	2f00      	cmp	r7, #0
2fff19ba:	d190      	bne.n	2fff18de <stm32mp1_clk_init+0x232>
2fff19bc:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2fff19c0:	f3c3 1301 	ubfx	r3, r3, #4, #2
2fff19c4:	429e      	cmp	r6, r3
2fff19c6:	d125      	bne.n	2fff1a14 <stm32mp1_clk_init+0x368>
2fff19c8:	f001 faaa 	bl	2fff2f20 <stm32mp_rcc_base>
2fff19cc:	f8d0 3140 	ldr.w	r3, [r0, #320]	@ 0x140
2fff19d0:	f043 0301 	orr.w	r3, r3, #1
2fff19d4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
2fff19d8:	686b      	ldr	r3, [r5, #4]
2fff19da:	2b00      	cmp	r3, #0
2fff19dc:	d03e      	beq.n	2fff1a5c <stm32mp1_clk_init+0x3b0>
2fff19de:	4bae      	ldr	r3, [pc, #696]	@ (2fff1c98 <stm32mp1_clk_init+0x5ec>)
2fff19e0:	49ae      	ldr	r1, [pc, #696]	@ (2fff1c9c <stm32mp1_clk_init+0x5f0>)
2fff19e2:	685d      	ldr	r5, [r3, #4]
2fff19e4:	4628      	mov	r0, r5
2fff19e6:	f7fb ffb7 	bl	2ffed958 <fdt_clk_read_bool>
2fff19ea:	49ad      	ldr	r1, [pc, #692]	@ (2fff1ca0 <stm32mp1_clk_init+0x5f4>)
2fff19ec:	4606      	mov	r6, r0
2fff19ee:	4628      	mov	r0, r5
2fff19f0:	f7fb ffb2 	bl	2ffed958 <fdt_clk_read_bool>
2fff19f4:	49ab      	ldr	r1, [pc, #684]	@ (2fff1ca4 <stm32mp1_clk_init+0x5f8>)
2fff19f6:	4607      	mov	r7, r0
2fff19f8:	4628      	mov	r0, r5
2fff19fa:	f7fb ffad 	bl	2ffed958 <fdt_clk_read_bool>
2fff19fe:	4680      	mov	r8, r0
2fff1a00:	f001 fa8e 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1a04:	4605      	mov	r5, r0
2fff1a06:	b187      	cbz	r7, 2fff1a2a <stm32mp1_clk_init+0x37e>
2fff1a08:	2380      	movs	r3, #128	@ 0x80
2fff1a0a:	60c3      	str	r3, [r0, #12]
2fff1a0c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
2fff1a10:	60eb      	str	r3, [r5, #12]
2fff1a12:	e00c      	b.n	2fff1a2e <stm32mp1_clk_init+0x382>
2fff1a14:	680a      	ldr	r2, [r1, #0]
2fff1a16:	bf34      	ite	cc
2fff1a18:	f103 33ff 	addcc.w	r3, r3, #4294967295	@ 0xffffffff
2fff1a1c:	3301      	addcs	r3, #1
2fff1a1e:	f022 0230 	bic.w	r2, r2, #48	@ 0x30
2fff1a22:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
2fff1a26:	600a      	str	r2, [r1, #0]
2fff1a28:	e7cc      	b.n	2fff19c4 <stm32mp1_clk_init+0x318>
2fff1a2a:	2e00      	cmp	r6, #0
2fff1a2c:	d1ee      	bne.n	2fff1a0c <stm32mp1_clk_init+0x360>
2fff1a2e:	f001 fa77 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1a32:	f44f 7280 	mov.w	r2, #256	@ 0x100
2fff1a36:	f640 0108 	movw	r1, #2056	@ 0x808
2fff1a3a:	60c2      	str	r2, [r0, #12]
2fff1a3c:	2001      	movs	r0, #1
2fff1a3e:	f7ff fdb5 	bl	2fff15ac <stm32mp1_osc_wait.isra.0>
2fff1a42:	f1b8 0f00 	cmp.w	r8, #0
2fff1a46:	d002      	beq.n	2fff1a4e <stm32mp1_clk_init+0x3a2>
2fff1a48:	f44f 6300 	mov.w	r3, #2048	@ 0x800
2fff1a4c:	60eb      	str	r3, [r5, #12]
2fff1a4e:	68eb      	ldr	r3, [r5, #12]
2fff1a50:	0559      	lsls	r1, r3, #21
2fff1a52:	d503      	bpl.n	2fff1a5c <stm32mp1_clk_init+0x3b0>
2fff1a54:	b917      	cbnz	r7, 2fff1a5c <stm32mp1_clk_init+0x3b0>
2fff1a56:	2e00      	cmp	r6, #0
2fff1a58:	f43f ae49 	beq.w	2fff16ee <stm32mp1_clk_init+0x42>
2fff1a5c:	f001 fa60 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1a60:	2210      	movs	r2, #16
2fff1a62:	f640 0108 	movw	r1, #2056	@ 0x808
2fff1a66:	60c2      	str	r2, [r0, #12]
2fff1a68:	2001      	movs	r0, #1
2fff1a6a:	f7ff fd9f 	bl	2fff15ac <stm32mp1_osc_wait.isra.0>
2fff1a6e:	f04f 6180 	mov.w	r1, #67108864	@ 0x4000000
2fff1a72:	4650      	mov	r0, sl
2fff1a74:	f7ff fbe8 	bl	2fff1248 <stm32_clk_configure_mux>
2fff1a78:	4605      	mov	r5, r0
2fff1a7a:	2800      	cmp	r0, #0
2fff1a7c:	d181      	bne.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1a7e:	498a      	ldr	r1, [pc, #552]	@ (2fff1ca8 <stm32mp1_clk_init+0x5fc>)
2fff1a80:	4650      	mov	r0, sl
2fff1a82:	f7ff fbe1 	bl	2fff1248 <stm32_clk_configure_mux>
2fff1a86:	4605      	mov	r5, r0
2fff1a88:	2800      	cmp	r0, #0
2fff1a8a:	f47f af7a 	bne.w	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1a8e:	4987      	ldr	r1, [pc, #540]	@ (2fff1cac <stm32mp1_clk_init+0x600>)
2fff1a90:	4650      	mov	r0, sl
2fff1a92:	f7ff fbd9 	bl	2fff1248 <stm32_clk_configure_mux>
2fff1a96:	4605      	mov	r5, r0
2fff1a98:	2800      	cmp	r0, #0
2fff1a9a:	f47f af72 	bne.w	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1a9e:	f8da 3000 	ldr.w	r3, [sl]
2fff1aa2:	f8d3 6408 	ldr.w	r6, [r3, #1032]	@ 0x408
2fff1aa6:	f416 5600 	ands.w	r6, r6, #8192	@ 0x2000
2fff1aaa:	d02a      	beq.n	2fff1b02 <stm32mp1_clk_init+0x456>
2fff1aac:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
2fff1ab0:	f104 0270 	add.w	r2, r4, #112	@ 0x70
2fff1ab4:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
2fff1ab6:	2002      	movs	r0, #2
2fff1ab8:	f7ff fa2a 	bl	2fff0f10 <stm32mp1_check_pll_conf>
2fff1abc:	9002      	str	r0, [sp, #8]
2fff1abe:	f104 02a4 	add.w	r2, r4, #164	@ 0xa4
2fff1ac2:	f8d4 30bc 	ldr.w	r3, [r4, #188]	@ 0xbc
2fff1ac6:	2003      	movs	r0, #3
2fff1ac8:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
2fff1acc:	f7ff fa20 	bl	2fff0f10 <stm32mp1_check_pll_conf>
2fff1ad0:	4606      	mov	r6, r0
2fff1ad2:	f7fa ff59 	bl	2ffec988 <stm32mp_get_boot_itf_selected>
2fff1ad6:	2806      	cmp	r0, #6
2fff1ad8:	d115      	bne.n	2fff1b06 <stm32mp1_clk_init+0x45a>
2fff1ada:	9b10      	ldr	r3, [sp, #64]	@ 0x40
2fff1adc:	2b16      	cmp	r3, #22
2fff1ade:	d002      	beq.n	2fff1ae6 <stm32mp1_clk_init+0x43a>
2fff1ae0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
2fff1ae2:	2b16      	cmp	r3, #22
2fff1ae4:	d10f      	bne.n	2fff1b06 <stm32mp1_clk_init+0x45a>
2fff1ae6:	2601      	movs	r6, #1
2fff1ae8:	9601      	str	r6, [sp, #4]
2fff1aea:	4b71      	ldr	r3, [pc, #452]	@ (2fff1cb0 <stm32mp1_clk_init+0x604>)
2fff1aec:	2500      	movs	r5, #0
2fff1aee:	9306      	str	r3, [sp, #24]
2fff1af0:	461f      	mov	r7, r3
2fff1af2:	2d02      	cmp	r5, #2
2fff1af4:	d10a      	bne.n	2fff1b0c <stm32mp1_clk_init+0x460>
2fff1af6:	9b02      	ldr	r3, [sp, #8]
2fff1af8:	b153      	cbz	r3, 2fff1b10 <stm32mp1_clk_init+0x464>
2fff1afa:	3720      	adds	r7, #32
2fff1afc:	2503      	movs	r5, #3
2fff1afe:	b13e      	cbz	r6, 2fff1b10 <stm32mp1_clk_init+0x464>
2fff1b00:	e02f      	b.n	2fff1b62 <stm32mp1_clk_init+0x4b6>
2fff1b02:	9602      	str	r6, [sp, #8]
2fff1b04:	e7e5      	b.n	2fff1ad2 <stm32mp1_clk_init+0x426>
2fff1b06:	2300      	movs	r3, #0
2fff1b08:	9301      	str	r3, [sp, #4]
2fff1b0a:	e7ee      	b.n	2fff1aea <stm32mp1_clk_init+0x43e>
2fff1b0c:	2d03      	cmp	r5, #3
2fff1b0e:	d0f6      	beq.n	2fff1afe <stm32mp1_clk_init+0x452>
2fff1b10:	f001 fa06 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1b14:	89bb      	ldrh	r3, [r7, #12]
2fff1b16:	581a      	ldr	r2, [r3, r0]
2fff1b18:	eb03 0b00 	add.w	fp, r3, r0
2fff1b1c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
2fff1b20:	501a      	str	r2, [r3, r0]
2fff1b22:	581a      	ldr	r2, [r3, r0]
2fff1b24:	f022 0201 	bic.w	r2, r2, #1
2fff1b28:	501a      	str	r2, [r3, r0]
2fff1b2a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff1b2e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1b32:	4960      	ldr	r1, [pc, #384]	@ (2fff1cb4 <stm32mp1_clk_init+0x608>)
2fff1b34:	e9cd 2304 	strd	r2, r3, [sp, #16]
2fff1b38:	f8dd 8010 	ldr.w	r8, [sp, #16]
2fff1b3c:	2300      	movs	r3, #0
2fff1b3e:	4a5e      	ldr	r2, [pc, #376]	@ (2fff1cb8 <stm32mp1_clk_init+0x60c>)
2fff1b40:	fba0 0101 	umull	r0, r1, r0, r1
2fff1b44:	f000 eb84 	blx	2fff2250 <__aeabi_uldivmod>
2fff1b48:	9b05      	ldr	r3, [sp, #20]
2fff1b4a:	eb10 0008 	adds.w	r0, r0, r8
2fff1b4e:	eb41 0103 	adc.w	r1, r1, r3
2fff1b52:	f8db 3000 	ldr.w	r3, [fp]
2fff1b56:	079a      	lsls	r2, r3, #30
2fff1b58:	d430      	bmi.n	2fff1bbc <stm32mp1_clk_init+0x510>
2fff1b5a:	3501      	adds	r5, #1
2fff1b5c:	3720      	adds	r7, #32
2fff1b5e:	2d04      	cmp	r5, #4
2fff1b60:	d1c7      	bne.n	2fff1af2 <stm32mp1_clk_init+0x446>
2fff1b62:	4b56      	ldr	r3, [pc, #344]	@ (2fff1cbc <stm32mp1_clk_init+0x610>)
2fff1b64:	681b      	ldr	r3, [r3, #0]
2fff1b66:	bb93      	cbnz	r3, 2fff1bce <stm32mp1_clk_init+0x522>
2fff1b68:	f8da 8014 	ldr.w	r8, [sl, #20]
2fff1b6c:	2700      	movs	r7, #0
2fff1b6e:	f8d8 3010 	ldr.w	r3, [r8, #16]
2fff1b72:	429f      	cmp	r7, r3
2fff1b74:	d377      	bcc.n	2fff1c66 <stm32mp1_clk_init+0x5ba>
2fff1b76:	2100      	movs	r1, #0
2fff1b78:	4650      	mov	r0, sl
2fff1b7a:	f001 ff09 	bl	2fff3990 <stm32mp1_pll_configure_src>
2fff1b7e:	4605      	mov	r5, r0
2fff1b80:	2800      	cmp	r0, #0
2fff1b82:	f47f aefe 	bne.w	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1b86:	9b02      	ldr	r3, [sp, #8]
2fff1b88:	2b00      	cmp	r3, #0
2fff1b8a:	d07c      	beq.n	2fff1c86 <stm32mp1_clk_init+0x5da>
2fff1b8c:	b92e      	cbnz	r6, 2fff1b9a <stm32mp1_clk_init+0x4ee>
2fff1b8e:	2103      	movs	r1, #3
2fff1b90:	4650      	mov	r0, sl
2fff1b92:	f001 fefd 	bl	2fff3990 <stm32mp1_pll_configure_src>
2fff1b96:	2800      	cmp	r0, #0
2fff1b98:	d17c      	bne.n	2fff1c94 <stm32mp1_clk_init+0x5e8>
2fff1b9a:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 2fff1cb0 <stm32mp1_clk_init+0x604>
2fff1b9e:	f04f 0900 	mov.w	r9, #0
2fff1ba2:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 2fff1cc0 <stm32mp1_clk_init+0x614>
2fff1ba6:	f1b9 0f02 	cmp.w	r9, #2
2fff1baa:	f040 8095 	bne.w	2fff1cd8 <stm32mp1_clk_init+0x62c>
2fff1bae:	9b02      	ldr	r3, [sp, #8]
2fff1bb0:	2b00      	cmp	r3, #0
2fff1bb2:	f000 8147 	beq.w	2fff1e44 <stm32mp1_clk_init+0x798>
2fff1bb6:	f108 0820 	add.w	r8, r8, #32
2fff1bba:	e091      	b.n	2fff1ce0 <stm32mp1_clk_init+0x634>
2fff1bbc:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1bc0:	4290      	cmp	r0, r2
2fff1bc2:	eb71 0303 	sbcs.w	r3, r1, r3
2fff1bc6:	d2c4      	bcs.n	2fff1b52 <stm32mp1_clk_init+0x4a6>
2fff1bc8:	f06f 053b 	mvn.w	r5, #59	@ 0x3b
2fff1bcc:	e6d9      	b.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1bce:	4a3d      	ldr	r2, [pc, #244]	@ (2fff1cc4 <stm32mp1_clk_init+0x618>)
2fff1bd0:	4293      	cmp	r3, r2
2fff1bd2:	d02f      	beq.n	2fff1c34 <stm32mp1_clk_init+0x588>
2fff1bd4:	4a3c      	ldr	r2, [pc, #240]	@ (2fff1cc8 <stm32mp1_clk_init+0x61c>)
2fff1bd6:	4293      	cmp	r3, r2
2fff1bd8:	d008      	beq.n	2fff1bec <stm32mp1_clk_init+0x540>
2fff1bda:	4a3c      	ldr	r2, [pc, #240]	@ (2fff1ccc <stm32mp1_clk_init+0x620>)
2fff1bdc:	4293      	cmp	r3, r2
2fff1bde:	d02f      	beq.n	2fff1c40 <stm32mp1_clk_init+0x594>
2fff1be0:	4a3b      	ldr	r2, [pc, #236]	@ (2fff1cd0 <stm32mp1_clk_init+0x624>)
2fff1be2:	4293      	cmp	r3, r2
2fff1be4:	d02f      	beq.n	2fff1c46 <stm32mp1_clk_init+0x59a>
2fff1be6:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2fff1bea:	e6ca      	b.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1bec:	f04f 0801 	mov.w	r8, #1
2fff1bf0:	f001 f996 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1bf4:	6983      	ldr	r3, [r0, #24]
2fff1bf6:	4605      	mov	r5, r0
2fff1bf8:	f600 0708 	addw	r7, r0, #2056	@ 0x808
2fff1bfc:	f023 0303 	bic.w	r3, r3, #3
2fff1c00:	ea43 0308 	orr.w	r3, r3, r8
2fff1c04:	6183      	str	r3, [r0, #24]
2fff1c06:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff1c0a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1c0e:	4829      	ldr	r0, [pc, #164]	@ (2fff1cb4 <stm32mp1_clk_init+0x608>)
2fff1c10:	e9cd 2304 	strd	r2, r3, [sp, #16]
2fff1c14:	f8dd 8010 	ldr.w	r8, [sp, #16]
2fff1c18:	2300      	movs	r3, #0
2fff1c1a:	4a27      	ldr	r2, [pc, #156]	@ (2fff1cb8 <stm32mp1_clk_init+0x60c>)
2fff1c1c:	fba1 0100 	umull	r0, r1, r1, r0
2fff1c20:	f000 eb16 	blx	2fff2250 <__aeabi_uldivmod>
2fff1c24:	9b05      	ldr	r3, [sp, #20]
2fff1c26:	eb10 0008 	adds.w	r0, r0, r8
2fff1c2a:	eb41 0103 	adc.w	r1, r1, r3
2fff1c2e:	683b      	ldr	r3, [r7, #0]
2fff1c30:	075b      	lsls	r3, r3, #29
2fff1c32:	d50b      	bpl.n	2fff1c4c <stm32mp1_clk_init+0x5a0>
2fff1c34:	2080      	movs	r0, #128	@ 0x80
2fff1c36:	f7ff fba5 	bl	2fff1384 <stm32mp_clk_get_rate>
2fff1c3a:	f7fb ff25 	bl	2ffeda88 <stm32mp_stgen_config>
2fff1c3e:	e793      	b.n	2fff1b68 <stm32mp1_clk_init+0x4bc>
2fff1c40:	f04f 0802 	mov.w	r8, #2
2fff1c44:	e7d4      	b.n	2fff1bf0 <stm32mp1_clk_init+0x544>
2fff1c46:	f04f 0803 	mov.w	r8, #3
2fff1c4a:	e7d1      	b.n	2fff1bf0 <stm32mp1_clk_init+0x544>
2fff1c4c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1c50:	4290      	cmp	r0, r2
2fff1c52:	eb71 0303 	sbcs.w	r3, r1, r3
2fff1c56:	d2ea      	bcs.n	2fff1c2e <stm32mp1_clk_init+0x582>
2fff1c58:	f8d5 2808 	ldr.w	r2, [r5, #2056]	@ 0x808
2fff1c5c:	4639      	mov	r1, r7
2fff1c5e:	481d      	ldr	r0, [pc, #116]	@ (2fff1cd4 <stm32mp1_clk_init+0x628>)
2fff1c60:	f7fa fd2c 	bl	2ffec6bc <tf_log>
2fff1c64:	e7b0      	b.n	2fff1bc8 <stm32mp1_clk_init+0x51c>
2fff1c66:	f8d8 3014 	ldr.w	r3, [r8, #20]
2fff1c6a:	4650      	mov	r0, sl
2fff1c6c:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
2fff1c70:	b2ca      	uxtb	r2, r1
2fff1c72:	f3c1 2107 	ubfx	r1, r1, #8, #8
2fff1c76:	f7ff fcc3 	bl	2fff1600 <clk_stm32_set_div>
2fff1c7a:	4605      	mov	r5, r0
2fff1c7c:	2800      	cmp	r0, #0
2fff1c7e:	f47f ae80 	bne.w	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1c82:	3701      	adds	r7, #1
2fff1c84:	e773      	b.n	2fff1b6e <stm32mp1_clk_init+0x4c2>
2fff1c86:	2102      	movs	r1, #2
2fff1c88:	4650      	mov	r0, sl
2fff1c8a:	f001 fe81 	bl	2fff3990 <stm32mp1_pll_configure_src>
2fff1c8e:	2800      	cmp	r0, #0
2fff1c90:	f43f af7c 	beq.w	2fff1b8c <stm32mp1_clk_init+0x4e0>
2fff1c94:	4605      	mov	r5, r0
2fff1c96:	e674      	b.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1c98:	2fff8580 	.word	0x2fff8580
2fff1c9c:	2fff786a 	.word	0x2fff786a
2fff1ca0:	2fff7874 	.word	0x2fff7874
2fff1ca4:	2fff7881 	.word	0x2fff7881
2fff1ca8:	04000010 	.word	0x04000010
2fff1cac:	04000020 	.word	0x04000020
2fff1cb0:	2fff490c 	.word	0x2fff490c
2fff1cb4:	00030d40 	.word	0x00030d40
2fff1cb8:	000f4240 	.word	0x000f4240
2fff1cbc:	2fff9a08 	.word	0x2fff9a08
2fff1cc0:	2fff794a 	.word	0x2fff794a
2fff1cc4:	03d09000 	.word	0x03d09000
2fff1cc8:	01e84800 	.word	0x01e84800
2fff1ccc:	00f42400 	.word	0x00f42400
2fff1cd0:	007a1200 	.word	0x007a1200
2fff1cd4:	2fff7891 	.word	0x2fff7891
2fff1cd8:	f1b9 0f03 	cmp.w	r9, #3
2fff1cdc:	f040 80a6 	bne.w	2fff1e2c <stm32mp1_clk_init+0x780>
2fff1ce0:	2e00      	cmp	r6, #0
2fff1ce2:	f000 808a 	beq.w	2fff1dfa <stm32mp1_clk_init+0x74e>
2fff1ce6:	9b01      	ldr	r3, [sp, #4]
2fff1ce8:	2b00      	cmp	r3, #0
2fff1cea:	f040 8092 	bne.w	2fff1e12 <stm32mp1_clk_init+0x766>
2fff1cee:	2600      	movs	r6, #0
2fff1cf0:	f104 031c 	add.w	r3, r4, #28
2fff1cf4:	9307      	str	r3, [sp, #28]
2fff1cf6:	f814 3026 	ldrb.w	r3, [r4, r6, lsl #2]
2fff1cfa:	b35b      	cbz	r3, 2fff1d54 <stm32mp1_clk_init+0x6a8>
2fff1cfc:	9b07      	ldr	r3, [sp, #28]
2fff1cfe:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
2fff1d02:	4699      	mov	r9, r3
2fff1d04:	f001 f90c 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1d08:	9b06      	ldr	r3, [sp, #24]
2fff1d0a:	4607      	mov	r7, r0
2fff1d0c:	f8b3 b00c 	ldrh.w	fp, [r3, #12]
2fff1d10:	eb0b 0300 	add.w	r3, fp, r0
2fff1d14:	9304      	str	r3, [sp, #16]
2fff1d16:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff1d1a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1d1e:	49c0      	ldr	r1, [pc, #768]	@ (2fff2020 <stm32mp1_clk_init+0x974>)
2fff1d20:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff1d24:	f8dd 8008 	ldr.w	r8, [sp, #8]
2fff1d28:	2300      	movs	r3, #0
2fff1d2a:	4abe      	ldr	r2, [pc, #760]	@ (2fff2024 <stm32mp1_clk_init+0x978>)
2fff1d2c:	fba0 0101 	umull	r0, r1, r0, r1
2fff1d30:	f000 ea8e 	blx	2fff2250 <__aeabi_uldivmod>
2fff1d34:	9b03      	ldr	r3, [sp, #12]
2fff1d36:	eb10 0008 	adds.w	r0, r0, r8
2fff1d3a:	eb41 0103 	adc.w	r1, r1, r3
2fff1d3e:	9b04      	ldr	r3, [sp, #16]
2fff1d40:	681b      	ldr	r3, [r3, #0]
2fff1d42:	079a      	lsls	r2, r3, #30
2fff1d44:	f140 810b 	bpl.w	2fff1f5e <stm32mp1_clk_init+0x8b2>
2fff1d48:	f85b 3007 	ldr.w	r3, [fp, r7]
2fff1d4c:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
2fff1d50:	f84b 3007 	str.w	r3, [fp, r7]
2fff1d54:	9b06      	ldr	r3, [sp, #24]
2fff1d56:	360d      	adds	r6, #13
2fff1d58:	2e34      	cmp	r6, #52	@ 0x34
2fff1d5a:	f103 0320 	add.w	r3, r3, #32
2fff1d5e:	9306      	str	r3, [sp, #24]
2fff1d60:	d1c9      	bne.n	2fff1cf6 <stm32mp1_clk_init+0x64a>
2fff1d62:	f8df 82c4 	ldr.w	r8, [pc, #708]	@ 2fff2028 <stm32mp1_clk_init+0x97c>
2fff1d66:	f8d8 3010 	ldr.w	r3, [r8, #16]
2fff1d6a:	b12b      	cbz	r3, 2fff1d78 <stm32mp1_clk_init+0x6cc>
2fff1d6c:	2204      	movs	r2, #4
2fff1d6e:	f44f 71a0 	mov.w	r1, #320	@ 0x140
2fff1d72:	2001      	movs	r0, #1
2fff1d74:	f7ff fc1a 	bl	2fff15ac <stm32mp1_osc_wait.isra.0>
2fff1d78:	9b01      	ldr	r3, [sp, #4]
2fff1d7a:	2b00      	cmp	r3, #0
2fff1d7c:	f000 80f7 	beq.w	2fff1f6e <stm32mp1_clk_init+0x8c2>
2fff1d80:	f8da 3000 	ldr.w	r3, [sl]
2fff1d84:	f8d3 791c 	ldr.w	r7, [r3, #2332]	@ 0x91c
2fff1d88:	f8da 9014 	ldr.w	r9, [sl, #20]
2fff1d8c:	f04f 0b00 	mov.w	fp, #0
2fff1d90:	f8cd b008 	str.w	fp, [sp, #8]
2fff1d94:	f8d9 2008 	ldr.w	r2, [r9, #8]
2fff1d98:	4593      	cmp	fp, r2
2fff1d9a:	f0c0 80ea 	bcc.w	2fff1f72 <stm32mp1_clk_init+0x8c6>
2fff1d9e:	9b02      	ldr	r3, [sp, #8]
2fff1da0:	b133      	cbz	r3, 2fff1db0 <stm32mp1_clk_init+0x704>
2fff1da2:	49a2      	ldr	r1, [pc, #648]	@ (2fff202c <stm32mp1_clk_init+0x980>)
2fff1da4:	4650      	mov	r0, sl
2fff1da6:	f7ff fa4f 	bl	2fff1248 <stm32_clk_configure_mux>
2fff1daa:	2800      	cmp	r0, #0
2fff1dac:	f47f ac9f 	bne.w	2fff16ee <stm32mp1_clk_init+0x42>
2fff1db0:	9b01      	ldr	r3, [sp, #4]
2fff1db2:	b143      	cbz	r3, 2fff1dc6 <stm32mp1_clk_init+0x71a>
2fff1db4:	f8da 3000 	ldr.w	r3, [sl]
2fff1db8:	f8d3 391c 	ldr.w	r3, [r3, #2332]	@ 0x91c
2fff1dbc:	405f      	eors	r7, r3
2fff1dbe:	f017 0f13 	tst.w	r7, #19
2fff1dc2:	f040 812a 	bne.w	2fff201a <stm32mp1_clk_init+0x96e>
2fff1dc6:	f8d8 4000 	ldr.w	r4, [r8]
2fff1dca:	b944      	cbnz	r4, 2fff1dde <stm32mp1_clk_init+0x732>
2fff1dcc:	f001 f8a8 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1dd0:	2201      	movs	r2, #1
2fff1dd2:	f640 0108 	movw	r1, #2056	@ 0x808
2fff1dd6:	6102      	str	r2, [r0, #16]
2fff1dd8:	4620      	mov	r0, r4
2fff1dda:	f7ff fbe7 	bl	2fff15ac <stm32mp1_osc_wait.isra.0>
2fff1dde:	2080      	movs	r0, #128	@ 0x80
2fff1de0:	f7ff fad0 	bl	2fff1384 <stm32mp_clk_get_rate>
2fff1de4:	f7fb fe50 	bl	2ffeda88 <stm32mp_stgen_config>
2fff1de8:	f8da 2000 	ldr.w	r2, [sl]
2fff1dec:	f8d2 30d8 	ldr.w	r3, [r2, #216]	@ 0xd8
2fff1df0:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
2fff1df4:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
2fff1df8:	e5c3      	b.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff1dfa:	f894 309c 	ldrb.w	r3, [r4, #156]	@ 0x9c
2fff1dfe:	f104 079c 	add.w	r7, r4, #156	@ 0x9c
2fff1e02:	2b00      	cmp	r3, #0
2fff1e04:	f43f af73 	beq.w	2fff1cee <stm32mp1_clk_init+0x642>
2fff1e08:	9b01      	ldr	r3, [sp, #4]
2fff1e0a:	b94b      	cbnz	r3, 2fff1e20 <stm32mp1_clk_init+0x774>
2fff1e0c:	f04f 0903 	mov.w	r9, #3
2fff1e10:	e01f      	b.n	2fff1e52 <stm32mp1_clk_init+0x7a6>
2fff1e12:	f894 309c 	ldrb.w	r3, [r4, #156]	@ 0x9c
2fff1e16:	2b00      	cmp	r3, #0
2fff1e18:	f43f af69 	beq.w	2fff1cee <stm32mp1_clk_init+0x642>
2fff1e1c:	f104 079c 	add.w	r7, r4, #156	@ 0x9c
2fff1e20:	f107 0108 	add.w	r1, r7, #8
2fff1e24:	2003      	movs	r0, #3
2fff1e26:	f7ff f8f1 	bl	2fff100c <stm32mp1_pll_config_output>
2fff1e2a:	e760      	b.n	2fff1cee <stm32mp1_clk_init+0x642>
2fff1e2c:	2734      	movs	r7, #52	@ 0x34
2fff1e2e:	fb07 f709 	mul.w	r7, r7, r9
2fff1e32:	5de3      	ldrb	r3, [r4, r7]
2fff1e34:	2b00      	cmp	r3, #0
2fff1e36:	f040 808e 	bne.w	2fff1f56 <stm32mp1_clk_init+0x8aa>
2fff1e3a:	f109 0901 	add.w	r9, r9, #1
2fff1e3e:	f108 0820 	add.w	r8, r8, #32
2fff1e42:	e6b0      	b.n	2fff1ba6 <stm32mp1_clk_init+0x4fa>
2fff1e44:	f894 3068 	ldrb.w	r3, [r4, #104]	@ 0x68
2fff1e48:	2b00      	cmp	r3, #0
2fff1e4a:	f43f aeb4 	beq.w	2fff1bb6 <stm32mp1_clk_init+0x50a>
2fff1e4e:	f104 0768 	add.w	r7, r4, #104	@ 0x68
2fff1e52:	f107 0308 	add.w	r3, r7, #8
2fff1e56:	9304      	str	r3, [sp, #16]
2fff1e58:	6a3b      	ldr	r3, [r7, #32]
2fff1e5a:	9307      	str	r3, [sp, #28]
2fff1e5c:	f001 f860 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1e60:	f8b8 3004 	ldrh.w	r3, [r8, #4]
2fff1e64:	4a72      	ldr	r2, [pc, #456]	@ (2fff2030 <stm32mp1_clk_init+0x984>)
2fff1e66:	581b      	ldr	r3, [r3, r0]
2fff1e68:	f8d8 1000 	ldr.w	r1, [r8]
2fff1e6c:	f8df e1b4 	ldr.w	lr, [pc, #436]	@ 2fff2024 <stm32mp1_clk_init+0x978>
2fff1e70:	f003 0303 	and.w	r3, r3, #3
2fff1e74:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
2fff1e78:	3304      	adds	r3, #4
2fff1e7a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
2fff1e7e:	2b05      	cmp	r3, #5
2fff1e80:	bf8e      	itee	hi
2fff1e82:	2200      	movhi	r2, #0
2fff1e84:	4a68      	ldrls	r2, [pc, #416]	@ (2fff2028 <stm32mp1_clk_init+0x97c>)
2fff1e86:	f852 2023 	ldrls.w	r2, [r2, r3, lsl #2]
2fff1e8a:	68bb      	ldr	r3, [r7, #8]
2fff1e8c:	f103 0c01 	add.w	ip, r3, #1
2fff1e90:	fbb2 f2fc 	udiv	r2, r2, ip
2fff1e94:	f81b c011 	ldrb.w	ip, [fp, r1, lsl #1]
2fff1e98:	fb0e fc0c 	mul.w	ip, lr, ip
2fff1e9c:	4562      	cmp	r2, ip
2fff1e9e:	f4ff ad6e 	bcc.w	2fff197e <stm32mp1_clk_init+0x2d2>
2fff1ea2:	eb0b 0c41 	add.w	ip, fp, r1, lsl #1
2fff1ea6:	f89c c001 	ldrb.w	ip, [ip, #1]
2fff1eaa:	fb0e fc0c 	mul.w	ip, lr, ip
2fff1eae:	4562      	cmp	r2, ip
2fff1eb0:	f63f ad65 	bhi.w	2fff197e <stm32mp1_clk_init+0x2d2>
2fff1eb4:	2900      	cmp	r1, #0
2fff1eb6:	d150      	bne.n	2fff1f5a <stm32mp1_clk_init+0x8ae>
2fff1eb8:	495e      	ldr	r1, [pc, #376]	@ (2fff2034 <stm32mp1_clk_init+0x988>)
2fff1eba:	428a      	cmp	r2, r1
2fff1ebc:	bf34      	ite	cc
2fff1ebe:	2100      	movcc	r1, #0
2fff1ec0:	2101      	movcs	r1, #1
2fff1ec2:	68fa      	ldr	r2, [r7, #12]
2fff1ec4:	041b      	lsls	r3, r3, #16
2fff1ec6:	f3c2 0208 	ubfx	r2, r2, #0, #9
2fff1eca:	f403 137c 	and.w	r3, r3, #4128768	@ 0x3f0000
2fff1ece:	4313      	orrs	r3, r2
2fff1ed0:	f8b8 2006 	ldrh.w	r2, [r8, #6]
2fff1ed4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2fff1ed8:	5013      	str	r3, [r2, r0]
2fff1eda:	2300      	movs	r3, #0
2fff1edc:	f8b8 200a 	ldrh.w	r2, [r8, #10]
2fff1ee0:	9904      	ldr	r1, [sp, #16]
2fff1ee2:	5013      	str	r3, [r2, r0]
2fff1ee4:	9b07      	ldr	r3, [sp, #28]
2fff1ee6:	00db      	lsls	r3, r3, #3
2fff1ee8:	5013      	str	r3, [r2, r0]
2fff1eea:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2fff1eee:	5013      	str	r3, [r2, r0]
2fff1ef0:	4648      	mov	r0, r9
2fff1ef2:	f7ff f88b 	bl	2fff100c <stm32mp1_pll_config_output>
2fff1ef6:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
2fff1efa:	b1cb      	cbz	r3, 2fff1f30 <stm32mp1_clk_init+0x884>
2fff1efc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
2fff1efe:	4b4e      	ldr	r3, [pc, #312]	@ (2fff2038 <stm32mp1_clk_init+0x98c>)
2fff1f00:	ea03 4302 	and.w	r3, r3, r2, lsl #16
2fff1f04:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
2fff1f06:	03d2      	lsls	r2, r2, #15
2fff1f08:	b292      	uxth	r2, r2
2fff1f0a:	4313      	orrs	r3, r2
2fff1f0c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
2fff1f0e:	f3c2 020c 	ubfx	r2, r2, #0, #13
2fff1f12:	ea43 0702 	orr.w	r7, r3, r2
2fff1f16:	f001 f803 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1f1a:	f8b8 300e 	ldrh.w	r3, [r8, #14]
2fff1f1e:	501f      	str	r7, [r3, r0]
2fff1f20:	f000 fffe 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1f24:	f8b8 200c 	ldrh.w	r2, [r8, #12]
2fff1f28:	5813      	ldr	r3, [r2, r0]
2fff1f2a:	f043 0304 	orr.w	r3, r3, #4
2fff1f2e:	5013      	str	r3, [r2, r0]
2fff1f30:	f109 0901 	add.w	r9, r9, #1
2fff1f34:	f000 fff4 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1f38:	f8b8 200c 	ldrh.w	r2, [r8, #12]
2fff1f3c:	f1b9 0f04 	cmp.w	r9, #4
2fff1f40:	f108 0820 	add.w	r8, r8, #32
2fff1f44:	5813      	ldr	r3, [r2, r0]
2fff1f46:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
2fff1f4a:	f043 0301 	orr.w	r3, r3, #1
2fff1f4e:	5013      	str	r3, [r2, r0]
2fff1f50:	f47f ae29 	bne.w	2fff1ba6 <stm32mp1_clk_init+0x4fa>
2fff1f54:	e6cb      	b.n	2fff1cee <stm32mp1_clk_init+0x642>
2fff1f56:	4427      	add	r7, r4
2fff1f58:	e77b      	b.n	2fff1e52 <stm32mp1_clk_init+0x7a6>
2fff1f5a:	2100      	movs	r1, #0
2fff1f5c:	e7b1      	b.n	2fff1ec2 <stm32mp1_clk_init+0x816>
2fff1f5e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff1f62:	4290      	cmp	r0, r2
2fff1f64:	eb71 0303 	sbcs.w	r3, r1, r3
2fff1f68:	f4bf aee9 	bcs.w	2fff1d3e <stm32mp1_clk_init+0x692>
2fff1f6c:	e62c      	b.n	2fff1bc8 <stm32mp1_clk_init+0x51c>
2fff1f6e:	9f01      	ldr	r7, [sp, #4]
2fff1f70:	e70a      	b.n	2fff1d88 <stm32mp1_clk_init+0x6dc>
2fff1f72:	f8d9 200c 	ldr.w	r2, [r9, #12]
2fff1f76:	f852 402b 	ldr.w	r4, [r2, fp, lsl #2]
2fff1f7a:	2c00      	cmp	r4, #0
2fff1f7c:	da0a      	bge.n	2fff1f94 <stm32mp1_clk_init+0x8e8>
2fff1f7e:	f3c4 410e 	ubfx	r1, r4, #16, #15
2fff1f82:	b2a4      	uxth	r4, r4
2fff1f84:	f8da 2000 	ldr.w	r2, [sl]
2fff1f88:	5888      	ldr	r0, [r1, r2]
2fff1f8a:	4304      	orrs	r4, r0
2fff1f8c:	508c      	str	r4, [r1, r2]
2fff1f8e:	f10b 0b01 	add.w	fp, fp, #1
2fff1f92:	e6ff      	b.n	2fff1d94 <stm32mp1_clk_init+0x6e8>
2fff1f94:	4b25      	ldr	r3, [pc, #148]	@ (2fff202c <stm32mp1_clk_init+0x980>)
2fff1f96:	429c      	cmp	r4, r3
2fff1f98:	d03c      	beq.n	2fff2014 <stm32mp1_clk_init+0x968>
2fff1f9a:	0ea2      	lsrs	r2, r4, #26
2fff1f9c:	f024 467c 	bic.w	r6, r4, #4227858432	@ 0xfc000000
2fff1fa0:	2a01      	cmp	r2, #1
2fff1fa2:	d02f      	beq.n	2fff2004 <stm32mp1_clk_init+0x958>
2fff1fa4:	2a02      	cmp	r2, #2
2fff1fa6:	f47f aba2 	bne.w	2fff16ee <stm32mp1_clk_init+0x42>
2fff1faa:	f3c6 22c8 	ubfx	r2, r6, #11, #9
2fff1fae:	2ac0      	cmp	r2, #192	@ 0xc0
2fff1fb0:	d1ed      	bne.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff1fb2:	f8da 2014 	ldr.w	r2, [sl, #20]
2fff1fb6:	9206      	str	r2, [sp, #24]
2fff1fb8:	f000 ffb2 	bl	2fff2f20 <stm32mp_rcc_base>
2fff1fbc:	f8d0 1140 	ldr.w	r1, [r0, #320]	@ 0x140
2fff1fc0:	9a06      	ldr	r2, [sp, #24]
2fff1fc2:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
2fff1fc6:	d001      	beq.n	2fff1fcc <stm32mp1_clk_init+0x920>
2fff1fc8:	0563      	lsls	r3, r4, #21
2fff1fca:	d5e0      	bpl.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff1fcc:	f8d0 4140 	ldr.w	r4, [r0, #320]	@ 0x140
2fff1fd0:	0436      	lsls	r6, r6, #16
2fff1fd2:	f424 3440 	bic.w	r4, r4, #196608	@ 0x30000
2fff1fd6:	f406 26e0 	and.w	r6, r6, #458752	@ 0x70000
2fff1fda:	4326      	orrs	r6, r4
2fff1fdc:	f8c0 6140 	str.w	r6, [r0, #320]	@ 0x140
2fff1fe0:	f8d0 1140 	ldr.w	r1, [r0, #320]	@ 0x140
2fff1fe4:	7e12      	ldrb	r2, [r2, #24]
2fff1fe6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
2fff1fea:	f8c0 1140 	str.w	r1, [r0, #320]	@ 0x140
2fff1fee:	2a00      	cmp	r2, #0
2fff1ff0:	d0cd      	beq.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff1ff2:	f8da 1000 	ldr.w	r1, [sl]
2fff1ff6:	f8d1 2140 	ldr.w	r2, [r1, #320]	@ 0x140
2fff1ffa:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
2fff1ffe:	f8c1 2140 	str.w	r2, [r1, #320]	@ 0x140
2fff2002:	e7c4      	b.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff2004:	4631      	mov	r1, r6
2fff2006:	4650      	mov	r0, sl
2fff2008:	f7ff f91e 	bl	2fff1248 <stm32_clk_configure_mux>
2fff200c:	2800      	cmp	r0, #0
2fff200e:	d0be      	beq.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff2010:	f7ff bb6d 	b.w	2fff16ee <stm32mp1_clk_init+0x42>
2fff2014:	2301      	movs	r3, #1
2fff2016:	9302      	str	r3, [sp, #8]
2fff2018:	e7b9      	b.n	2fff1f8e <stm32mp1_clk_init+0x8e2>
2fff201a:	f06f 050e 	mvn.w	r5, #14
2fff201e:	e4b0      	b.n	2fff1982 <stm32mp1_clk_init+0x2d6>
2fff2020:	00030d40 	.word	0x00030d40
2fff2024:	000f4240 	.word	0x000f4240
2fff2028:	2fff9a08 	.word	0x2fff9a08
2fff202c:	04000063 	.word	0x04000063
2fff2030:	2fff490c 	.word	0x2fff490c
2fff2034:	007a1200 	.word	0x007a1200
2fff2038:	7fff0000 	.word	0x7fff0000

2fff203c <stm32mp1_clk_probe>:
2fff203c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff2040:	2400      	movs	r4, #0
2fff2042:	4d70      	ldr	r5, [pc, #448]	@ (2fff2204 <stm32mp1_clk_probe+0x1c8>)
2fff2044:	b099      	sub	sp, #100	@ 0x64
2fff2046:	4e70      	ldr	r6, [pc, #448]	@ (2fff2208 <stm32mp1_clk_probe+0x1cc>)
2fff2048:	f855 0b04 	ldr.w	r0, [r5], #4
2fff204c:	a908      	add	r1, sp, #32
2fff204e:	f7fb fc3d 	bl	2ffed8cc <fdt_osc_read_freq>
2fff2052:	b910      	cbnz	r0, 2fff205a <stm32mp1_clk_probe+0x1e>
2fff2054:	9b08      	ldr	r3, [sp, #32]
2fff2056:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff205a:	3401      	adds	r4, #1
2fff205c:	2c06      	cmp	r4, #6
2fff205e:	d1f3      	bne.n	2fff2048 <stm32mp1_clk_probe+0xc>
2fff2060:	2500      	movs	r5, #0
2fff2062:	a807      	add	r0, sp, #28
2fff2064:	9507      	str	r5, [sp, #28]
2fff2066:	f7fc fc7d 	bl	2ffee964 <fdt_get_address>
2fff206a:	b928      	cbnz	r0, 2fff2078 <stm32mp1_clk_probe+0x3c>
2fff206c:	f06f 0601 	mvn.w	r6, #1
2fff2070:	4630      	mov	r0, r6
2fff2072:	b019      	add	sp, #100	@ 0x64
2fff2074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff2078:	4a64      	ldr	r2, [pc, #400]	@ (2fff220c <stm32mp1_clk_probe+0x1d0>)
2fff207a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff207e:	9807      	ldr	r0, [sp, #28]
2fff2080:	f002 f830 	bl	2fff40e4 <fdt_node_offset_by_compatible>
2fff2084:	f1b0 0800 	subs.w	r8, r0, #0
2fff2088:	da03      	bge.n	2fff2092 <stm32mp1_clk_probe+0x56>
2fff208a:	f7fa fbb3 	bl	2ffec7f4 <console_flush>
2fff208e:	f7f7 e9a6 	blx	2ffe93dc <do_panic>
2fff2092:	9c07      	ldr	r4, [sp, #28]
2fff2094:	f8df a178 	ldr.w	sl, [pc, #376]	@ 2fff2210 <stm32mp1_clk_probe+0x1d4>
2fff2098:	f8da 3000 	ldr.w	r3, [sl]
2fff209c:	429d      	cmp	r5, r3
2fff209e:	d336      	bcc.n	2fff210e <stm32mp1_clk_probe+0xd2>
2fff20a0:	4c5c      	ldr	r4, [pc, #368]	@ (2fff2214 <stm32mp1_clk_probe+0x1d8>)
2fff20a2:	4641      	mov	r1, r8
2fff20a4:	4a5c      	ldr	r2, [pc, #368]	@ (2fff2218 <stm32mp1_clk_probe+0x1dc>)
2fff20a6:	9400      	str	r4, [sp, #0]
2fff20a8:	9807      	ldr	r0, [sp, #28]
2fff20aa:	f8da 3014 	ldr.w	r3, [sl, #20]
2fff20ae:	f001 fc54 	bl	2fff395a <stm32_clk_parse_fdt_by_name>
2fff20b2:	4606      	mov	r6, r0
2fff20b4:	2800      	cmp	r0, #0
2fff20b6:	d1db      	bne.n	2fff2070 <stm32mp1_clk_probe+0x34>
2fff20b8:	4a58      	ldr	r2, [pc, #352]	@ (2fff221c <stm32mp1_clk_probe+0x1e0>)
2fff20ba:	3c08      	subs	r4, #8
2fff20bc:	9400      	str	r4, [sp, #0]
2fff20be:	4641      	mov	r1, r8
2fff20c0:	f8da 300c 	ldr.w	r3, [sl, #12]
2fff20c4:	9807      	ldr	r0, [sp, #28]
2fff20c6:	f001 fc48 	bl	2fff395a <stm32_clk_parse_fdt_by_name>
2fff20ca:	4606      	mov	r6, r0
2fff20cc:	2800      	cmp	r0, #0
2fff20ce:	d1cf      	bne.n	2fff2070 <stm32mp1_clk_probe+0x34>
2fff20d0:	4b53      	ldr	r3, [pc, #332]	@ (2fff2220 <stm32mp1_clk_probe+0x1e4>)
2fff20d2:	ac08      	add	r4, sp, #32
2fff20d4:	4a53      	ldr	r2, [pc, #332]	@ (2fff2224 <stm32mp1_clk_probe+0x1e8>)
2fff20d6:	4d54      	ldr	r5, [pc, #336]	@ (2fff2228 <stm32mp1_clk_probe+0x1ec>)
2fff20d8:	6013      	str	r3, [r2, #0]
2fff20da:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
2fff20de:	601a      	str	r2, [r3, #0]
2fff20e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff20e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff20e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff20e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff20e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff20ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff20ec:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
2fff20f0:	4635      	mov	r5, r6
2fff20f2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
2fff20f6:	ac08      	add	r4, sp, #32
2fff20f8:	f854 0b04 	ldr.w	r0, [r4], #4
2fff20fc:	3501      	adds	r5, #1
2fff20fe:	f7ff f85d 	bl	2fff11bc <stm32mp_clk_enable>
2fff2102:	2d10      	cmp	r5, #16
2fff2104:	d1f8      	bne.n	2fff20f8 <stm32mp1_clk_probe+0xbc>
2fff2106:	4849      	ldr	r0, [pc, #292]	@ (2fff222c <stm32mp1_clk_probe+0x1f0>)
2fff2108:	f7fb fb46 	bl	2ffed798 <clk_register>
2fff210c:	e7b0      	b.n	2fff2070 <stm32mp1_clk_probe+0x34>
2fff210e:	f8da 3004 	ldr.w	r3, [sl, #4]
2fff2112:	210c      	movs	r1, #12
2fff2114:	4a46      	ldr	r2, [pc, #280]	@ (2fff2230 <stm32mp1_clk_probe+0x1f4>)
2fff2116:	a808      	add	r0, sp, #32
2fff2118:	9303      	str	r3, [sp, #12]
2fff211a:	462b      	mov	r3, r5
2fff211c:	f002 f90e 	bl	2fff433c <snprintf>
2fff2120:	aa08      	add	r2, sp, #32
2fff2122:	4641      	mov	r1, r8
2fff2124:	4620      	mov	r0, r4
2fff2126:	f001 fe24 	bl	2fff3d72 <fdt_subnode_offset>
2fff212a:	4606      	mov	r6, r0
2fff212c:	f7fc fc24 	bl	2ffee978 <fdt_check_node>
2fff2130:	4681      	mov	r9, r0
2fff2132:	b908      	cbnz	r0, 2fff2138 <stm32mp1_clk_probe+0xfc>
2fff2134:	3501      	adds	r5, #1
2fff2136:	e7af      	b.n	2fff2098 <stm32mp1_clk_probe+0x5c>
2fff2138:	4a3e      	ldr	r2, [pc, #248]	@ (2fff2234 <stm32mp1_clk_probe+0x1f8>)
2fff213a:	2300      	movs	r3, #0
2fff213c:	4631      	mov	r1, r6
2fff213e:	4620      	mov	r0, r4
2fff2140:	f001 fe9c 	bl	2fff3e7c <fdt_getprop>
2fff2144:	2800      	cmp	r0, #0
2fff2146:	d0f5      	beq.n	2fff2134 <stm32mp1_clk_probe+0xf8>
2fff2148:	6801      	ldr	r1, [r0, #0]
2fff214a:	4620      	mov	r0, r4
2fff214c:	ba09      	rev	r1, r1
2fff214e:	f001 ff52 	bl	2fff3ff6 <fdt_node_offset_by_phandle>
2fff2152:	1e03      	subs	r3, r0, #0
2fff2154:	9304      	str	r3, [sp, #16]
2fff2156:	db98      	blt.n	2fff208a <stm32mp1_clk_probe+0x4e>
2fff2158:	4a37      	ldr	r2, [pc, #220]	@ (2fff2238 <stm32mp1_clk_probe+0x1fc>)
2fff215a:	4601      	mov	r1, r0
2fff215c:	2300      	movs	r3, #0
2fff215e:	4620      	mov	r0, r4
2fff2160:	f001 fe8c 	bl	2fff3e7c <fdt_getprop>
2fff2164:	2800      	cmp	r0, #0
2fff2166:	d090      	beq.n	2fff208a <stm32mp1_clk_probe+0x4e>
2fff2168:	6801      	ldr	r1, [r0, #0]
2fff216a:	4620      	mov	r0, r4
2fff216c:	ba09      	rev	r1, r1
2fff216e:	f001 ff42 	bl	2fff3ff6 <fdt_node_offset_by_phandle>
2fff2172:	1e07      	subs	r7, r0, #0
2fff2174:	db89      	blt.n	2fff208a <stm32mp1_clk_probe+0x4e>
2fff2176:	4a31      	ldr	r2, [pc, #196]	@ (2fff223c <stm32mp1_clk_probe+0x200>)
2fff2178:	2334      	movs	r3, #52	@ 0x34
2fff217a:	fb03 fb05 	mul.w	fp, r3, r5
2fff217e:	9b03      	ldr	r3, [sp, #12]
2fff2180:	4639      	mov	r1, r7
2fff2182:	4620      	mov	r0, r4
2fff2184:	eb03 060b 	add.w	r6, r3, fp
2fff2188:	f106 0308 	add.w	r3, r6, #8
2fff218c:	9300      	str	r3, [sp, #0]
2fff218e:	2302      	movs	r3, #2
2fff2190:	f7f7 fe8a 	bl	2ffe9ea8 <fdt_read_uint32_array>
2fff2194:	9005      	str	r0, [sp, #20]
2fff2196:	2800      	cmp	r0, #0
2fff2198:	f47f af77 	bne.w	2fff208a <stm32mp1_clk_probe+0x4e>
2fff219c:	4a28      	ldr	r2, [pc, #160]	@ (2fff2240 <stm32mp1_clk_probe+0x204>)
2fff219e:	f106 0328 	add.w	r3, r6, #40	@ 0x28
2fff21a2:	9300      	str	r3, [sp, #0]
2fff21a4:	4639      	mov	r1, r7
2fff21a6:	2303      	movs	r3, #3
2fff21a8:	4620      	mov	r0, r4
2fff21aa:	f7f7 fe7d 	bl	2ffe9ea8 <fdt_read_uint32_array>
2fff21ae:	b120      	cbz	r0, 2fff21ba <stm32mp1_clk_probe+0x17e>
2fff21b0:	3001      	adds	r0, #1
2fff21b2:	f47f af6a 	bne.w	2fff208a <stm32mp1_clk_probe+0x4e>
2fff21b6:	f8dd 9014 	ldr.w	r9, [sp, #20]
2fff21ba:	9a03      	ldr	r2, [sp, #12]
2fff21bc:	2301      	movs	r3, #1
2fff21be:	f886 9024 	strb.w	r9, [r6, #36]	@ 0x24
2fff21c2:	4639      	mov	r1, r7
2fff21c4:	f802 300b 	strb.w	r3, [r2, fp]
2fff21c8:	4620      	mov	r0, r4
2fff21ca:	4a1e      	ldr	r2, [pc, #120]	@ (2fff2244 <stm32mp1_clk_probe+0x208>)
2fff21cc:	2300      	movs	r3, #0
2fff21ce:	f000 fbff 	bl	2fff29d0 <fdt_read_uint32_default>
2fff21d2:	6230      	str	r0, [r6, #32]
2fff21d4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
2fff21d8:	4a1b      	ldr	r2, [pc, #108]	@ (2fff2248 <stm32mp1_clk_probe+0x20c>)
2fff21da:	4639      	mov	r1, r7
2fff21dc:	4620      	mov	r0, r4
2fff21de:	f000 fbf7 	bl	2fff29d0 <fdt_read_uint32_default>
2fff21e2:	6070      	str	r0, [r6, #4]
2fff21e4:	f106 0310 	add.w	r3, r6, #16
2fff21e8:	9300      	str	r3, [sp, #0]
2fff21ea:	4620      	mov	r0, r4
2fff21ec:	4a17      	ldr	r2, [pc, #92]	@ (2fff224c <stm32mp1_clk_probe+0x210>)
2fff21ee:	2303      	movs	r3, #3
2fff21f0:	9904      	ldr	r1, [sp, #16]
2fff21f2:	f7f7 fe59 	bl	2ffe9ea8 <fdt_read_uint32_array>
2fff21f6:	2800      	cmp	r0, #0
2fff21f8:	f47f af47 	bne.w	2fff208a <stm32mp1_clk_probe+0x4e>
2fff21fc:	2307      	movs	r3, #7
2fff21fe:	61f3      	str	r3, [r6, #28]
2fff2200:	e798      	b.n	2fff2134 <stm32mp1_clk_probe+0xf8>
2fff2202:	bf00      	nop
2fff2204:	2fff8580 	.word	0x2fff8580
2fff2208:	2fff9a08 	.word	0x2fff9a08
2fff220c:	2fff78af 	.word	0x2fff78af
2fff2210:	2fff8564 	.word	0x2fff8564
2fff2214:	2fff8574 	.word	0x2fff8574
2fff2218:	2fff78f9 	.word	0x2fff78f9
2fff221c:	2fff7903 	.word	0x2fff7903
2fff2220:	2fff854c 	.word	0x2fff854c
2fff2224:	2fff9a20 	.word	0x2fff9a20
2fff2228:	2fff4a94 	.word	0x2fff4a94
2fff222c:	2fff48f8 	.word	0x2fff48f8
2fff2230:	2fff78bf 	.word	0x2fff78bf
2fff2234:	2fff78c9 	.word	0x2fff78c9
2fff2238:	2fff78d0 	.word	0x2fff78d0
2fff223c:	2fff78db 	.word	0x2fff78db
2fff2240:	2fff78e1 	.word	0x2fff78e1
2fff2244:	2fff78e5 	.word	0x2fff78e5
2fff2248:	2fff7909 	.word	0x2fff7909
2fff224c:	2fff78ea 	.word	0x2fff78ea

2fff2250 <__aeabi_uldivmod>:
2fff2250:	e92d4040 	push	{r6, lr}
2fff2254:	e24dd010 	sub	sp, sp, #16
2fff2258:	e28d6008 	add	r6, sp, #8
2fff225c:	e58d6000 	str	r6, [sp]
2fff2260:	fb0002b2 	blx	2fff2d32 <__udivmoddi4>
2fff2264:	e59d2008 	ldr	r2, [sp, #8]
2fff2268:	e59d300c 	ldr	r3, [sp, #12]
2fff226c:	e28dd010 	add	sp, sp, #16
2fff2270:	e8bd8040 	pop	{r6, pc}

2fff2274 <fdt_ro_probe_>:
2fff2274:	b510      	push	{r4, lr}
2fff2276:	4604      	mov	r4, r0
2fff2278:	3004      	adds	r0, #4
2fff227a:	f001 fb95 	bl	2fff39a8 <fdt32_ld>
2fff227e:	0763      	lsls	r3, r4, #29
2fff2280:	4601      	mov	r1, r0
2fff2282:	d124      	bne.n	2fff22ce <fdt_ro_probe_+0x5a>
2fff2284:	4620      	mov	r0, r4
2fff2286:	f001 fb8f 	bl	2fff39a8 <fdt32_ld>
2fff228a:	4b15      	ldr	r3, [pc, #84]	@ (2fff22e0 <fdt_ro_probe_+0x6c>)
2fff228c:	4298      	cmp	r0, r3
2fff228e:	d10e      	bne.n	2fff22ae <fdt_ro_probe_+0x3a>
2fff2290:	f104 0014 	add.w	r0, r4, #20
2fff2294:	f001 fb88 	bl	2fff39a8 <fdt32_ld>
2fff2298:	2801      	cmp	r0, #1
2fff229a:	d905      	bls.n	2fff22a8 <fdt_ro_probe_+0x34>
2fff229c:	f104 0018 	add.w	r0, r4, #24
2fff22a0:	f001 fb82 	bl	2fff39a8 <fdt32_ld>
2fff22a4:	2811      	cmp	r0, #17
2fff22a6:	d90a      	bls.n	2fff22be <fdt_ro_probe_+0x4a>
2fff22a8:	f06f 0009 	mvn.w	r0, #9
2fff22ac:	e00e      	b.n	2fff22cc <fdt_ro_probe_+0x58>
2fff22ae:	4b0d      	ldr	r3, [pc, #52]	@ (2fff22e4 <fdt_ro_probe_+0x70>)
2fff22b0:	4298      	cmp	r0, r3
2fff22b2:	d10f      	bne.n	2fff22d4 <fdt_ro_probe_+0x60>
2fff22b4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
2fff22b8:	f001 fb76 	bl	2fff39a8 <fdt32_ld>
2fff22bc:	b168      	cbz	r0, 2fff22da <fdt_ro_probe_+0x66>
2fff22be:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
2fff22c2:	4299      	cmp	r1, r3
2fff22c4:	bf34      	ite	cc
2fff22c6:	4608      	movcc	r0, r1
2fff22c8:	f06f 0007 	mvncs.w	r0, #7
2fff22cc:	bd10      	pop	{r4, pc}
2fff22ce:	f06f 0012 	mvn.w	r0, #18
2fff22d2:	e7fb      	b.n	2fff22cc <fdt_ro_probe_+0x58>
2fff22d4:	f06f 0008 	mvn.w	r0, #8
2fff22d8:	e7f8      	b.n	2fff22cc <fdt_ro_probe_+0x58>
2fff22da:	f06f 0006 	mvn.w	r0, #6
2fff22de:	e7f5      	b.n	2fff22cc <fdt_ro_probe_+0x58>
2fff22e0:	d00dfeed 	.word	0xd00dfeed
2fff22e4:	2ff20112 	.word	0x2ff20112

2fff22e8 <fdt_check_header>:
2fff22e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff22ea:	4601      	mov	r1, r0
2fff22ec:	0743      	lsls	r3, r0, #29
2fff22ee:	d153      	bne.n	2fff2398 <fdt_check_header+0xb0>
2fff22f0:	f001 fb5a 	bl	2fff39a8 <fdt32_ld>
2fff22f4:	4b2e      	ldr	r3, [pc, #184]	@ (2fff23b0 <fdt_check_header+0xc8>)
2fff22f6:	4298      	cmp	r0, r3
2fff22f8:	d151      	bne.n	2fff239e <fdt_check_header+0xb6>
2fff22fa:	f101 0014 	add.w	r0, r1, #20
2fff22fe:	f001 fb53 	bl	2fff39a8 <fdt32_ld>
2fff2302:	2801      	cmp	r0, #1
2fff2304:	4607      	mov	r7, r0
2fff2306:	d94d      	bls.n	2fff23a4 <fdt_check_header+0xbc>
2fff2308:	f101 0018 	add.w	r0, r1, #24
2fff230c:	f001 fb4c 	bl	2fff39a8 <fdt32_ld>
2fff2310:	2811      	cmp	r0, #17
2fff2312:	d847      	bhi.n	2fff23a4 <fdt_check_header+0xbc>
2fff2314:	4287      	cmp	r7, r0
2fff2316:	d345      	bcc.n	2fff23a4 <fdt_check_header+0xbc>
2fff2318:	4608      	mov	r0, r1
2fff231a:	f001 fb5e 	bl	2fff39da <fdt_header_size>
2fff231e:	4606      	mov	r6, r0
2fff2320:	1d08      	adds	r0, r1, #4
2fff2322:	f001 fb41 	bl	2fff39a8 <fdt32_ld>
2fff2326:	42b0      	cmp	r0, r6
2fff2328:	4604      	mov	r4, r0
2fff232a:	d33e      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff232c:	2800      	cmp	r0, #0
2fff232e:	db3c      	blt.n	2fff23aa <fdt_check_header+0xc2>
2fff2330:	f101 0010 	add.w	r0, r1, #16
2fff2334:	f001 fb38 	bl	2fff39a8 <fdt32_ld>
2fff2338:	42b0      	cmp	r0, r6
2fff233a:	d336      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff233c:	4284      	cmp	r4, r0
2fff233e:	d334      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff2340:	f101 0008 	add.w	r0, r1, #8
2fff2344:	f001 fb30 	bl	2fff39a8 <fdt32_ld>
2fff2348:	2f10      	cmp	r7, #16
2fff234a:	4605      	mov	r5, r0
2fff234c:	d818      	bhi.n	2fff2380 <fdt_check_header+0x98>
2fff234e:	4286      	cmp	r6, r0
2fff2350:	d82b      	bhi.n	2fff23aa <fdt_check_header+0xc2>
2fff2352:	4284      	cmp	r4, r0
2fff2354:	d329      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff2356:	f101 000c 	add.w	r0, r1, #12
2fff235a:	f001 fb25 	bl	2fff39a8 <fdt32_ld>
2fff235e:	42b0      	cmp	r0, r6
2fff2360:	4605      	mov	r5, r0
2fff2362:	d322      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff2364:	4284      	cmp	r4, r0
2fff2366:	d320      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff2368:	f101 0020 	add.w	r0, r1, #32
2fff236c:	f001 fb1c 	bl	2fff39a8 <fdt32_ld>
2fff2370:	182d      	adds	r5, r5, r0
2fff2372:	d21a      	bcs.n	2fff23aa <fdt_check_header+0xc2>
2fff2374:	42ac      	cmp	r4, r5
2fff2376:	bf34      	ite	cc
2fff2378:	f06f 0007 	mvncc.w	r0, #7
2fff237c:	2000      	movcs	r0, #0
2fff237e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2380:	4286      	cmp	r6, r0
2fff2382:	d812      	bhi.n	2fff23aa <fdt_check_header+0xc2>
2fff2384:	4284      	cmp	r4, r0
2fff2386:	d310      	bcc.n	2fff23aa <fdt_check_header+0xc2>
2fff2388:	f101 0024 	add.w	r0, r1, #36	@ 0x24
2fff238c:	f001 fb0c 	bl	2fff39a8 <fdt32_ld>
2fff2390:	1940      	adds	r0, r0, r5
2fff2392:	d20a      	bcs.n	2fff23aa <fdt_check_header+0xc2>
2fff2394:	4284      	cmp	r4, r0
2fff2396:	e7dd      	b.n	2fff2354 <fdt_check_header+0x6c>
2fff2398:	f06f 0012 	mvn.w	r0, #18
2fff239c:	e7ef      	b.n	2fff237e <fdt_check_header+0x96>
2fff239e:	f06f 0008 	mvn.w	r0, #8
2fff23a2:	e7ec      	b.n	2fff237e <fdt_check_header+0x96>
2fff23a4:	f06f 0009 	mvn.w	r0, #9
2fff23a8:	e7e9      	b.n	2fff237e <fdt_check_header+0x96>
2fff23aa:	f06f 0007 	mvn.w	r0, #7
2fff23ae:	e7e6      	b.n	2fff237e <fdt_check_header+0x96>
2fff23b0:	d00dfeed 	.word	0xd00dfeed

2fff23b4 <fdt_address_cells>:
2fff23b4:	b508      	push	{r3, lr}
2fff23b6:	4a05      	ldr	r2, [pc, #20]	@ (2fff23cc <fdt_address_cells+0x18>)
2fff23b8:	f001 fc17 	bl	2fff3bea <fdt_cells>
2fff23bc:	b118      	cbz	r0, 2fff23c6 <fdt_address_cells+0x12>
2fff23be:	1c43      	adds	r3, r0, #1
2fff23c0:	bf08      	it	eq
2fff23c2:	2002      	moveq	r0, #2
2fff23c4:	bd08      	pop	{r3, pc}
2fff23c6:	f06f 000d 	mvn.w	r0, #13
2fff23ca:	e7fb      	b.n	2fff23c4 <fdt_address_cells+0x10>
2fff23cc:	2fff7b44 	.word	0x2fff7b44

2fff23d0 <fdt_get_string>:
2fff23d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff23d4:	4605      	mov	r5, r0
2fff23d6:	460e      	mov	r6, r1
2fff23d8:	4617      	mov	r7, r2
2fff23da:	f7ff ff4b 	bl	2fff2274 <fdt_ro_probe_>
2fff23de:	1e04      	subs	r4, r0, #0
2fff23e0:	db3f      	blt.n	2fff2462 <fdt_get_string+0x92>
2fff23e2:	f105 000c 	add.w	r0, r5, #12
2fff23e6:	f001 fc15 	bl	2fff3c14 <fdt32_ld>
2fff23ea:	1981      	adds	r1, r0, r6
2fff23ec:	428c      	cmp	r4, r1
2fff23ee:	d93b      	bls.n	2fff2468 <fdt_get_string+0x98>
2fff23f0:	1a64      	subs	r4, r4, r1
2fff23f2:	4628      	mov	r0, r5
2fff23f4:	f001 fc0e 	bl	2fff3c14 <fdt32_ld>
2fff23f8:	4b1f      	ldr	r3, [pc, #124]	@ (2fff2478 <fdt_get_string+0xa8>)
2fff23fa:	4298      	cmp	r0, r3
2fff23fc:	d11e      	bne.n	2fff243c <fdt_get_string+0x6c>
2fff23fe:	2e00      	cmp	r6, #0
2fff2400:	db32      	blt.n	2fff2468 <fdt_get_string+0x98>
2fff2402:	f105 0014 	add.w	r0, r5, #20
2fff2406:	f001 fc05 	bl	2fff3c14 <fdt32_ld>
2fff240a:	2810      	cmp	r0, #16
2fff240c:	d909      	bls.n	2fff2422 <fdt_get_string+0x52>
2fff240e:	f105 0020 	add.w	r0, r5, #32
2fff2412:	f001 fbff 	bl	2fff3c14 <fdt32_ld>
2fff2416:	4286      	cmp	r6, r0
2fff2418:	d226      	bcs.n	2fff2468 <fdt_get_string+0x98>
2fff241a:	1b80      	subs	r0, r0, r6
2fff241c:	4284      	cmp	r4, r0
2fff241e:	bf28      	it	cs
2fff2420:	4604      	movcs	r4, r0
2fff2422:	440d      	add	r5, r1
2fff2424:	4622      	mov	r2, r4
2fff2426:	2100      	movs	r1, #0
2fff2428:	4628      	mov	r0, r5
2fff242a:	f001 fe76 	bl	2fff411a <memchr>
2fff242e:	b1f0      	cbz	r0, 2fff246e <fdt_get_string+0x9e>
2fff2430:	b10f      	cbz	r7, 2fff2436 <fdt_get_string+0x66>
2fff2432:	1b40      	subs	r0, r0, r5
2fff2434:	6038      	str	r0, [r7, #0]
2fff2436:	4628      	mov	r0, r5
2fff2438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff243c:	4b0f      	ldr	r3, [pc, #60]	@ (2fff247c <fdt_get_string+0xac>)
2fff243e:	4298      	cmp	r0, r3
2fff2440:	d10d      	bne.n	2fff245e <fdt_get_string+0x8e>
2fff2442:	2e00      	cmp	r6, #0
2fff2444:	f1c6 0800 	rsb	r8, r6, #0
2fff2448:	da0e      	bge.n	2fff2468 <fdt_get_string+0x98>
2fff244a:	f105 0020 	add.w	r0, r5, #32
2fff244e:	f001 fbe1 	bl	2fff3c14 <fdt32_ld>
2fff2452:	4540      	cmp	r0, r8
2fff2454:	d308      	bcc.n	2fff2468 <fdt_get_string+0x98>
2fff2456:	4544      	cmp	r4, r8
2fff2458:	bf28      	it	cs
2fff245a:	4644      	movcs	r4, r8
2fff245c:	e7e1      	b.n	2fff2422 <fdt_get_string+0x52>
2fff245e:	f06f 040c 	mvn.w	r4, #12
2fff2462:	b93f      	cbnz	r7, 2fff2474 <fdt_get_string+0xa4>
2fff2464:	2500      	movs	r5, #0
2fff2466:	e7e6      	b.n	2fff2436 <fdt_get_string+0x66>
2fff2468:	f06f 0403 	mvn.w	r4, #3
2fff246c:	e7f9      	b.n	2fff2462 <fdt_get_string+0x92>
2fff246e:	f06f 0407 	mvn.w	r4, #7
2fff2472:	e7f6      	b.n	2fff2462 <fdt_get_string+0x92>
2fff2474:	603c      	str	r4, [r7, #0]
2fff2476:	e7f5      	b.n	2fff2464 <fdt_get_string+0x94>
2fff2478:	d00dfeed 	.word	0xd00dfeed
2fff247c:	2ff20112 	.word	0x2ff20112

2fff2480 <fdt_get_phandle>:
2fff2480:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2482:	ab01      	add	r3, sp, #4
2fff2484:	4a0d      	ldr	r2, [pc, #52]	@ (2fff24bc <fdt_get_phandle+0x3c>)
2fff2486:	4604      	mov	r4, r0
2fff2488:	460d      	mov	r5, r1
2fff248a:	f001 fcf7 	bl	2fff3e7c <fdt_getprop>
2fff248e:	b110      	cbz	r0, 2fff2496 <fdt_get_phandle+0x16>
2fff2490:	9b01      	ldr	r3, [sp, #4]
2fff2492:	2b04      	cmp	r3, #4
2fff2494:	d009      	beq.n	2fff24aa <fdt_get_phandle+0x2a>
2fff2496:	4a0a      	ldr	r2, [pc, #40]	@ (2fff24c0 <fdt_get_phandle+0x40>)
2fff2498:	ab01      	add	r3, sp, #4
2fff249a:	4629      	mov	r1, r5
2fff249c:	4620      	mov	r0, r4
2fff249e:	f001 fced 	bl	2fff3e7c <fdt_getprop>
2fff24a2:	b140      	cbz	r0, 2fff24b6 <fdt_get_phandle+0x36>
2fff24a4:	9b01      	ldr	r3, [sp, #4]
2fff24a6:	2b04      	cmp	r3, #4
2fff24a8:	d105      	bne.n	2fff24b6 <fdt_get_phandle+0x36>
2fff24aa:	6800      	ldr	r0, [r0, #0]
2fff24ac:	b003      	add	sp, #12
2fff24ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff24b2:	f001 bbd4 	b.w	2fff3c5e <fdt32_ld_.isra.0>
2fff24b6:	2000      	movs	r0, #0
2fff24b8:	b003      	add	sp, #12
2fff24ba:	bd30      	pop	{r4, r5, pc}
2fff24bc:	2fff7b59 	.word	0x2fff7b59
2fff24c0:	2fff7b53 	.word	0x2fff7b53

2fff24c4 <fdt_get_alias_namelen>:
2fff24c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff24c6:	460d      	mov	r5, r1
2fff24c8:	4908      	ldr	r1, [pc, #32]	@ (2fff24ec <fdt_get_alias_namelen+0x28>)
2fff24ca:	4604      	mov	r4, r0
2fff24cc:	4616      	mov	r6, r2
2fff24ce:	f001 fd30 	bl	2fff3f32 <fdt_path_offset>
2fff24d2:	1e01      	subs	r1, r0, #0
2fff24d4:	f04f 0000 	mov.w	r0, #0
2fff24d8:	db05      	blt.n	2fff24e6 <fdt_get_alias_namelen+0x22>
2fff24da:	9000      	str	r0, [sp, #0]
2fff24dc:	4633      	mov	r3, r6
2fff24de:	462a      	mov	r2, r5
2fff24e0:	4620      	mov	r0, r4
2fff24e2:	f001 fcab 	bl	2fff3e3c <fdt_getprop_namelen>
2fff24e6:	b002      	add	sp, #8
2fff24e8:	bd70      	pop	{r4, r5, r6, pc}
2fff24ea:	bf00      	nop
2fff24ec:	2fff7b61 	.word	0x2fff7b61

2fff24f0 <fdt_node_check_compatible>:
2fff24f0:	b513      	push	{r0, r1, r4, lr}
2fff24f2:	4614      	mov	r4, r2
2fff24f4:	4a07      	ldr	r2, [pc, #28]	@ (2fff2514 <fdt_node_check_compatible+0x24>)
2fff24f6:	ab01      	add	r3, sp, #4
2fff24f8:	f001 fcc0 	bl	2fff3e7c <fdt_getprop>
2fff24fc:	b910      	cbnz	r0, 2fff2504 <fdt_node_check_compatible+0x14>
2fff24fe:	9801      	ldr	r0, [sp, #4]
2fff2500:	b002      	add	sp, #8
2fff2502:	bd10      	pop	{r4, pc}
2fff2504:	9901      	ldr	r1, [sp, #4]
2fff2506:	4622      	mov	r2, r4
2fff2508:	f001 fd96 	bl	2fff4038 <fdt_stringlist_contains>
2fff250c:	fab0 f080 	clz	r0, r0
2fff2510:	0940      	lsrs	r0, r0, #5
2fff2512:	e7f5      	b.n	2fff2500 <fdt_node_check_compatible+0x10>
2fff2514:	2fff7b6a 	.word	0x2fff7b6a

2fff2518 <__assert>:
2fff2518:	460a      	mov	r2, r1
2fff251a:	4601      	mov	r1, r0
2fff251c:	b508      	push	{r3, lr}
2fff251e:	4803      	ldr	r0, [pc, #12]	@ (2fff252c <__assert+0x14>)
2fff2520:	f001 fe9a 	bl	2fff4258 <printf>
2fff2524:	f7fa f966 	bl	2ffec7f4 <console_flush>
2fff2528:	f7f7 eae2 	blx	2ffe9af0 <plat_panic_handler>
2fff252c:	2fff7b75 	.word	0x2fff7b75

2fff2530 <vprintf>:
2fff2530:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff2534:	2500      	movs	r5, #0
2fff2536:	4606      	mov	r6, r0
2fff2538:	460c      	mov	r4, r1
2fff253a:	46a8      	mov	r8, r5
2fff253c:	7830      	ldrb	r0, [r6, #0]
2fff253e:	b918      	cbnz	r0, 2fff2548 <vprintf+0x18>
2fff2540:	4628      	mov	r0, r5
2fff2542:	b003      	add	sp, #12
2fff2544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff2548:	2825      	cmp	r0, #37	@ 0x25
2fff254a:	f106 0601 	add.w	r6, r6, #1
2fff254e:	f040 80bd 	bne.w	2fff26cc <vprintf+0x19c>
2fff2552:	f04f 0a00 	mov.w	sl, #0
2fff2556:	4653      	mov	r3, sl
2fff2558:	e087      	b.n	2fff266a <vprintf+0x13a>
2fff255a:	3863      	subs	r0, #99	@ 0x63
2fff255c:	2817      	cmp	r0, #23
2fff255e:	f200 808e 	bhi.w	2fff267e <vprintf+0x14e>
2fff2562:	e8df f000 	tbb	[pc, r0]
2fff2566:	1034      	.short	0x1034
2fff2568:	8c8c8c8c 	.word	0x8c8c8c8c
2fff256c:	7e8c8c10 	.word	0x7e8c8c10
2fff2570:	4e8c8c8c 	.word	0x4e8c8c8c
2fff2574:	8c3a8c8c 	.word	0x8c3a8c8c
2fff2578:	6a8c8c8f 	.word	0x6a8c8c8f
2fff257c:	7f8c      	.short	0x7f8c
2fff257e:	f000 fba4 	bl	2fff2cca <putchar>
2fff2582:	3601      	adds	r6, #1
2fff2584:	e7da      	b.n	2fff253c <vprintf+0xc>
2fff2586:	2b01      	cmp	r3, #1
2fff2588:	bfcb      	itete	gt
2fff258a:	3407      	addgt	r4, #7
2fff258c:	f104 0904 	addle.w	r9, r4, #4
2fff2590:	f024 0407 	bicgt.w	r4, r4, #7
2fff2594:	6827      	ldrle	r7, [r4, #0]
2fff2596:	bfc5      	ittet	gt
2fff2598:	46a1      	movgt	r9, r4
2fff259a:	6864      	ldrgt	r4, [r4, #4]
2fff259c:	17fc      	asrle	r4, r7, #31
2fff259e:	f859 7b08 	ldrgt.w	r7, [r9], #8
2fff25a2:	2c00      	cmp	r4, #0
2fff25a4:	da10      	bge.n	2fff25c8 <vprintf+0x98>
2fff25a6:	202d      	movs	r0, #45	@ 0x2d
2fff25a8:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
2fff25ac:	f000 fb8d 	bl	2fff2cca <putchar>
2fff25b0:	4278      	negs	r0, r7
2fff25b2:	eb64 0144 	sbc.w	r1, r4, r4, lsl #1
2fff25b6:	f8cd a000 	str.w	sl, [sp]
2fff25ba:	4643      	mov	r3, r8
2fff25bc:	220a      	movs	r2, #10
2fff25be:	464c      	mov	r4, r9
2fff25c0:	f001 fe09 	bl	2fff41d6 <unsigned_num_print.part.0>
2fff25c4:	4405      	add	r5, r0
2fff25c6:	e7dc      	b.n	2fff2582 <vprintf+0x52>
2fff25c8:	4638      	mov	r0, r7
2fff25ca:	4621      	mov	r1, r4
2fff25cc:	e7f3      	b.n	2fff25b6 <vprintf+0x86>
2fff25ce:	f854 0b04 	ldr.w	r0, [r4], #4
2fff25d2:	3501      	adds	r5, #1
2fff25d4:	f000 fb79 	bl	2fff2cca <putchar>
2fff25d8:	e7d3      	b.n	2fff2582 <vprintf+0x52>
2fff25da:	f854 9b04 	ldr.w	r9, [r4], #4
2fff25de:	f1b9 0f00 	cmp.w	r9, #0
2fff25e2:	d10c      	bne.n	2fff25fe <vprintf+0xce>
2fff25e4:	483b      	ldr	r0, [pc, #236]	@ (2fff26d4 <vprintf+0x1a4>)
2fff25e6:	211c      	movs	r1, #28
2fff25e8:	f7ff ff96 	bl	2fff2518 <__assert>
2fff25ec:	3701      	adds	r7, #1
2fff25ee:	f000 fb6c 	bl	2fff2cca <putchar>
2fff25f2:	f819 0007 	ldrb.w	r0, [r9, r7]
2fff25f6:	2800      	cmp	r0, #0
2fff25f8:	d1f8      	bne.n	2fff25ec <vprintf+0xbc>
2fff25fa:	443d      	add	r5, r7
2fff25fc:	e7c1      	b.n	2fff2582 <vprintf+0x52>
2fff25fe:	2700      	movs	r7, #0
2fff2600:	e7f7      	b.n	2fff25f2 <vprintf+0xc2>
2fff2602:	f854 9b04 	ldr.w	r9, [r4], #4
2fff2606:	f1b9 0f00 	cmp.w	r9, #0
2fff260a:	d008      	beq.n	2fff261e <vprintf+0xee>
2fff260c:	f8df b0c8 	ldr.w	fp, [pc, #200]	@ 2fff26d8 <vprintf+0x1a8>
2fff2610:	2700      	movs	r7, #0
2fff2612:	f81b 0b01 	ldrb.w	r0, [fp], #1
2fff2616:	b960      	cbnz	r0, 2fff2632 <vprintf+0x102>
2fff2618:	443d      	add	r5, r7
2fff261a:	f1aa 0a02 	sub.w	sl, sl, #2
2fff261e:	f8cd a000 	str.w	sl, [sp]
2fff2622:	4643      	mov	r3, r8
2fff2624:	2210      	movs	r2, #16
2fff2626:	4648      	mov	r0, r9
2fff2628:	2100      	movs	r1, #0
2fff262a:	f001 fdd4 	bl	2fff41d6 <unsigned_num_print.part.0>
2fff262e:	4405      	add	r5, r0
2fff2630:	e7a7      	b.n	2fff2582 <vprintf+0x52>
2fff2632:	3701      	adds	r7, #1
2fff2634:	f000 fb49 	bl	2fff2cca <putchar>
2fff2638:	e7eb      	b.n	2fff2612 <vprintf+0xe2>
2fff263a:	2b01      	cmp	r3, #1
2fff263c:	f04f 0210 	mov.w	r2, #16
2fff2640:	bfcb      	itete	gt
2fff2642:	1de3      	addgt	r3, r4, #7
2fff2644:	2100      	movle	r1, #0
2fff2646:	f023 0307 	bicgt.w	r3, r3, #7
2fff264a:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff264e:	bfc4      	itt	gt
2fff2650:	461c      	movgt	r4, r3
2fff2652:	6859      	ldrgt	r1, [r3, #4]
2fff2654:	4643      	mov	r3, r8
2fff2656:	bfc8      	it	gt
2fff2658:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff265c:	f8cd a000 	str.w	sl, [sp]
2fff2660:	e7e3      	b.n	2fff262a <vprintf+0xfa>
2fff2662:	3301      	adds	r3, #1
2fff2664:	3601      	adds	r6, #1
2fff2666:	4640      	mov	r0, r8
2fff2668:	4680      	mov	r8, r0
2fff266a:	7830      	ldrb	r0, [r6, #0]
2fff266c:	287a      	cmp	r0, #122	@ 0x7a
2fff266e:	d806      	bhi.n	2fff267e <vprintf+0x14e>
2fff2670:	2862      	cmp	r0, #98	@ 0x62
2fff2672:	f63f af72 	bhi.w	2fff255a <vprintf+0x2a>
2fff2676:	2825      	cmp	r0, #37	@ 0x25
2fff2678:	d081      	beq.n	2fff257e <vprintf+0x4e>
2fff267a:	2830      	cmp	r0, #48	@ 0x30
2fff267c:	d016      	beq.n	2fff26ac <vprintf+0x17c>
2fff267e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2fff2682:	e75d      	b.n	2fff2540 <vprintf+0x10>
2fff2684:	2b01      	cmp	r3, #1
2fff2686:	f04f 020a 	mov.w	r2, #10
2fff268a:	bfcb      	itete	gt
2fff268c:	1de3      	addgt	r3, r4, #7
2fff268e:	2100      	movle	r1, #0
2fff2690:	f023 0307 	bicgt.w	r3, r3, #7
2fff2694:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff2698:	bfc4      	itt	gt
2fff269a:	461c      	movgt	r4, r3
2fff269c:	6859      	ldrgt	r1, [r3, #4]
2fff269e:	4643      	mov	r3, r8
2fff26a0:	bfc8      	it	gt
2fff26a2:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff26a6:	f8cd a000 	str.w	sl, [sp]
2fff26aa:	e7be      	b.n	2fff262a <vprintf+0xfa>
2fff26ac:	1c71      	adds	r1, r6, #1
2fff26ae:	f04f 0a00 	mov.w	sl, #0
2fff26b2:	270a      	movs	r7, #10
2fff26b4:	460e      	mov	r6, r1
2fff26b6:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff26ba:	3a30      	subs	r2, #48	@ 0x30
2fff26bc:	fa5f fc82 	uxtb.w	ip, r2
2fff26c0:	f1bc 0f09 	cmp.w	ip, #9
2fff26c4:	d8d0      	bhi.n	2fff2668 <vprintf+0x138>
2fff26c6:	fb07 2a0a 	mla	sl, r7, sl, r2
2fff26ca:	e7f3      	b.n	2fff26b4 <vprintf+0x184>
2fff26cc:	3501      	adds	r5, #1
2fff26ce:	f000 fafc 	bl	2fff2cca <putchar>
2fff26d2:	e733      	b.n	2fff253c <vprintf+0xc>
2fff26d4:	2fff7b84 	.word	0x2fff7b84
2fff26d8:	2fff7b96 	.word	0x2fff7b96

2fff26dc <vsnprintf>:
2fff26dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff26e0:	b08a      	sub	sp, #40	@ 0x28
2fff26e2:	461c      	mov	r4, r3
2fff26e4:	2300      	movs	r3, #0
2fff26e6:	9007      	str	r0, [sp, #28]
2fff26e8:	9309      	str	r3, [sp, #36]	@ 0x24
2fff26ea:	b111      	cbz	r1, 2fff26f2 <vsnprintf+0x16>
2fff26ec:	2901      	cmp	r1, #1
2fff26ee:	d102      	bne.n	2fff26f6 <vsnprintf+0x1a>
2fff26f0:	7003      	strb	r3, [r0, #0]
2fff26f2:	2500      	movs	r5, #0
2fff26f4:	e000      	b.n	2fff26f8 <vsnprintf+0x1c>
2fff26f6:	1e4d      	subs	r5, r1, #1
2fff26f8:	7813      	ldrb	r3, [r2, #0]
2fff26fa:	b933      	cbnz	r3, 2fff270a <vsnprintf+0x2e>
2fff26fc:	b10d      	cbz	r5, 2fff2702 <vsnprintf+0x26>
2fff26fe:	9a07      	ldr	r2, [sp, #28]
2fff2700:	7013      	strb	r3, [r2, #0]
2fff2702:	9809      	ldr	r0, [sp, #36]	@ 0x24
2fff2704:	b00a      	add	sp, #40	@ 0x28
2fff2706:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff270a:	2b25      	cmp	r3, #37	@ 0x25
2fff270c:	f102 0201 	add.w	r2, r2, #1
2fff2710:	f040 813f 	bne.w	2fff2992 <vsnprintf+0x2b6>
2fff2714:	2000      	movs	r0, #0
2fff2716:	4607      	mov	r7, r0
2fff2718:	4601      	mov	r1, r0
2fff271a:	4684      	mov	ip, r0
2fff271c:	e001      	b.n	2fff2722 <vsnprintf+0x46>
2fff271e:	2701      	movs	r7, #1
2fff2720:	4632      	mov	r2, r6
2fff2722:	4616      	mov	r6, r2
2fff2724:	f816 3b01 	ldrb.w	r3, [r6], #1
2fff2728:	2b7a      	cmp	r3, #122	@ 0x7a
2fff272a:	d809      	bhi.n	2fff2740 <vsnprintf+0x64>
2fff272c:	2b62      	cmp	r3, #98	@ 0x62
2fff272e:	d81d      	bhi.n	2fff276c <vsnprintf+0x90>
2fff2730:	2b39      	cmp	r3, #57	@ 0x39
2fff2732:	d853      	bhi.n	2fff27dc <vsnprintf+0x100>
2fff2734:	2b2f      	cmp	r3, #47	@ 0x2f
2fff2736:	d861      	bhi.n	2fff27fc <vsnprintf+0x120>
2fff2738:	2b25      	cmp	r3, #37	@ 0x25
2fff273a:	d053      	beq.n	2fff27e4 <vsnprintf+0x108>
2fff273c:	2b2d      	cmp	r3, #45	@ 0x2d
2fff273e:	d0ee      	beq.n	2fff271e <vsnprintf+0x42>
2fff2740:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2fff2742:	42ab      	cmp	r3, r5
2fff2744:	bf3f      	itttt	cc
2fff2746:	2025      	movcc	r0, #37	@ 0x25
2fff2748:	9907      	ldrcc	r1, [sp, #28]
2fff274a:	f801 0b01 	strbcc.w	r0, [r1], #1
2fff274e:	9107      	strcc	r1, [sp, #28]
2fff2750:	1c59      	adds	r1, r3, #1
2fff2752:	42a9      	cmp	r1, r5
2fff2754:	f103 0302 	add.w	r3, r3, #2
2fff2758:	9109      	str	r1, [sp, #36]	@ 0x24
2fff275a:	bf3f      	itttt	cc
2fff275c:	7811      	ldrbcc	r1, [r2, #0]
2fff275e:	9a07      	ldrcc	r2, [sp, #28]
2fff2760:	f802 1b01 	strbcc.w	r1, [r2], #1
2fff2764:	9207      	strcc	r2, [sp, #28]
2fff2766:	e047      	b.n	2fff27f8 <vsnprintf+0x11c>
2fff2768:	2001      	movs	r0, #1
2fff276a:	e7d9      	b.n	2fff2720 <vsnprintf+0x44>
2fff276c:	3b63      	subs	r3, #99	@ 0x63
2fff276e:	2b17      	cmp	r3, #23
2fff2770:	d8e6      	bhi.n	2fff2740 <vsnprintf+0x64>
2fff2772:	f20f 0e08 	addw	lr, pc, #8
2fff2776:	f85e f023 	ldr.w	pc, [lr, r3, lsl #2]
2fff277a:	bf00      	nop
2fff277c:	2fff2889 	.word	0x2fff2889
2fff2780:	2fff2835 	.word	0x2fff2835
2fff2784:	2fff2741 	.word	0x2fff2741
2fff2788:	2fff2741 	.word	0x2fff2741
2fff278c:	2fff2741 	.word	0x2fff2741
2fff2790:	2fff2741 	.word	0x2fff2741
2fff2794:	2fff2835 	.word	0x2fff2835
2fff2798:	2fff2741 	.word	0x2fff2741
2fff279c:	2fff2741 	.word	0x2fff2741
2fff27a0:	2fff2905 	.word	0x2fff2905
2fff27a4:	2fff2741 	.word	0x2fff2741
2fff27a8:	2fff2741 	.word	0x2fff2741
2fff27ac:	2fff2741 	.word	0x2fff2741
2fff27b0:	2fff2909 	.word	0x2fff2909
2fff27b4:	2fff2741 	.word	0x2fff2741
2fff27b8:	2fff2741 	.word	0x2fff2741
2fff27bc:	2fff28a1 	.word	0x2fff28a1
2fff27c0:	2fff2741 	.word	0x2fff2741
2fff27c4:	2fff28d5 	.word	0x2fff28d5
2fff27c8:	2fff2741 	.word	0x2fff2741
2fff27cc:	2fff2741 	.word	0x2fff2741
2fff27d0:	2fff296b 	.word	0x2fff296b
2fff27d4:	2fff2741 	.word	0x2fff2741
2fff27d8:	2fff2769 	.word	0x2fff2769
2fff27dc:	2b58      	cmp	r3, #88	@ 0x58
2fff27de:	d1af      	bne.n	2fff2740 <vsnprintf+0x64>
2fff27e0:	2701      	movs	r7, #1
2fff27e2:	e0c3      	b.n	2fff296c <vsnprintf+0x290>
2fff27e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2fff27e6:	42aa      	cmp	r2, r5
2fff27e8:	bf3c      	itt	cc
2fff27ea:	9907      	ldrcc	r1, [sp, #28]
2fff27ec:	f801 3b01 	strbcc.w	r3, [r1], #1
2fff27f0:	f102 0301 	add.w	r3, r2, #1
2fff27f4:	bf38      	it	cc
2fff27f6:	9107      	strcc	r1, [sp, #28]
2fff27f8:	9309      	str	r3, [sp, #36]	@ 0x24
2fff27fa:	e043      	b.n	2fff2884 <vsnprintf+0x1a8>
2fff27fc:	2b30      	cmp	r3, #48	@ 0x30
2fff27fe:	4616      	mov	r6, r2
2fff2800:	bf14      	ite	ne
2fff2802:	f04f 0c20 	movne.w	ip, #32
2fff2806:	f04f 0c30 	moveq.w	ip, #48	@ 0x30
2fff280a:	2100      	movs	r1, #0
2fff280c:	f04f 080a 	mov.w	r8, #10
2fff2810:	4632      	mov	r2, r6
2fff2812:	f812 3b01 	ldrb.w	r3, [r2], #1
2fff2816:	3b30      	subs	r3, #48	@ 0x30
2fff2818:	fa5f fe83 	uxtb.w	lr, r3
2fff281c:	f1be 0f09 	cmp.w	lr, #9
2fff2820:	d904      	bls.n	2fff282c <vsnprintf+0x150>
2fff2822:	2f00      	cmp	r7, #0
2fff2824:	f43f af7c 	beq.w	2fff2720 <vsnprintf+0x44>
2fff2828:	4249      	negs	r1, r1
2fff282a:	e779      	b.n	2fff2720 <vsnprintf+0x44>
2fff282c:	fb08 3101 	mla	r1, r8, r1, r3
2fff2830:	4616      	mov	r6, r2
2fff2832:	e7ed      	b.n	2fff2810 <vsnprintf+0x134>
2fff2834:	2801      	cmp	r0, #1
2fff2836:	bf8b      	itete	hi
2fff2838:	1de7      	addhi	r7, r4, #7
2fff283a:	1d27      	addls	r7, r4, #4
2fff283c:	f027 0707 	bichi.w	r7, r7, #7
2fff2840:	6823      	ldrls	r3, [r4, #0]
2fff2842:	bf88      	it	hi
2fff2844:	f857 3b08 	ldrhi.w	r3, [r7], #8
2fff2848:	2b00      	cmp	r3, #0
2fff284a:	da0b      	bge.n	2fff2864 <vsnprintf+0x188>
2fff284c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
2fff284e:	425b      	negs	r3, r3
2fff2850:	42aa      	cmp	r2, r5
2fff2852:	f102 0201 	add.w	r2, r2, #1
2fff2856:	9209      	str	r2, [sp, #36]	@ 0x24
2fff2858:	bf3f      	itttt	cc
2fff285a:	242d      	movcc	r4, #45	@ 0x2d
2fff285c:	9807      	ldrcc	r0, [sp, #28]
2fff285e:	f800 4b01 	strbcc.w	r4, [r0], #1
2fff2862:	9007      	strcc	r0, [sp, #28]
2fff2864:	17da      	asrs	r2, r3, #31
2fff2866:	2000      	movs	r0, #0
2fff2868:	9104      	str	r1, [sp, #16]
2fff286a:	210a      	movs	r1, #10
2fff286c:	9005      	str	r0, [sp, #20]
2fff286e:	463c      	mov	r4, r7
2fff2870:	9102      	str	r1, [sp, #8]
2fff2872:	a807      	add	r0, sp, #28
2fff2874:	e9cd 3200 	strd	r3, r2, [sp]
2fff2878:	f8cd c00c 	str.w	ip, [sp, #12]
2fff287c:	aa09      	add	r2, sp, #36	@ 0x24
2fff287e:	4629      	mov	r1, r5
2fff2880:	f001 fcf7 	bl	2fff4272 <unsigned_num_print>
2fff2884:	4632      	mov	r2, r6
2fff2886:	e737      	b.n	2fff26f8 <vsnprintf+0x1c>
2fff2888:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2fff288a:	42ab      	cmp	r3, r5
2fff288c:	f103 0301 	add.w	r3, r3, #1
2fff2890:	bf3f      	itttt	cc
2fff2892:	9a07      	ldrcc	r2, [sp, #28]
2fff2894:	f854 1b04 	ldrcc.w	r1, [r4], #4
2fff2898:	f802 1b01 	strbcc.w	r1, [r2], #1
2fff289c:	9207      	strcc	r2, [sp, #28]
2fff289e:	e7ab      	b.n	2fff27f8 <vsnprintf+0x11c>
2fff28a0:	f854 2b04 	ldr.w	r2, [r4], #4
2fff28a4:	2000      	movs	r0, #0
2fff28a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2fff28a8:	4607      	mov	r7, r0
2fff28aa:	9907      	ldr	r1, [sp, #28]
2fff28ac:	3a01      	subs	r2, #1
2fff28ae:	f812 cf01 	ldrb.w	ip, [r2, #1]!
2fff28b2:	f1bc 0f00 	cmp.w	ip, #0
2fff28b6:	d104      	bne.n	2fff28c2 <vsnprintf+0x1e6>
2fff28b8:	b100      	cbz	r0, 2fff28bc <vsnprintf+0x1e0>
2fff28ba:	9107      	str	r1, [sp, #28]
2fff28bc:	2f00      	cmp	r7, #0
2fff28be:	d19b      	bne.n	2fff27f8 <vsnprintf+0x11c>
2fff28c0:	e7e0      	b.n	2fff2884 <vsnprintf+0x1a8>
2fff28c2:	429d      	cmp	r5, r3
2fff28c4:	f04f 0701 	mov.w	r7, #1
2fff28c8:	bf84      	itt	hi
2fff28ca:	f801 cb01 	strbhi.w	ip, [r1], #1
2fff28ce:	2001      	movhi	r0, #1
2fff28d0:	3301      	adds	r3, #1
2fff28d2:	e7ec      	b.n	2fff28ae <vsnprintf+0x1d2>
2fff28d4:	2801      	cmp	r0, #1
2fff28d6:	f04f 0000 	mov.w	r0, #0
2fff28da:	bf8b      	itete	hi
2fff28dc:	1de3      	addhi	r3, r4, #7
2fff28de:	2300      	movls	r3, #0
2fff28e0:	f023 0307 	bichi.w	r3, r3, #7
2fff28e4:	f854 2b04 	ldrls.w	r2, [r4], #4
2fff28e8:	bf82      	ittt	hi
2fff28ea:	461c      	movhi	r4, r3
2fff28ec:	685b      	ldrhi	r3, [r3, #4]
2fff28ee:	f854 2b08 	ldrhi.w	r2, [r4], #8
2fff28f2:	9104      	str	r1, [sp, #16]
2fff28f4:	210a      	movs	r1, #10
2fff28f6:	9005      	str	r0, [sp, #20]
2fff28f8:	f8cd c00c 	str.w	ip, [sp, #12]
2fff28fc:	9102      	str	r1, [sp, #8]
2fff28fe:	e9cd 2300 	strd	r2, r3, [sp]
2fff2902:	e022      	b.n	2fff294a <vsnprintf+0x26e>
2fff2904:	3001      	adds	r0, #1
2fff2906:	e70b      	b.n	2fff2720 <vsnprintf+0x44>
2fff2908:	f854 7b04 	ldr.w	r7, [r4], #4
2fff290c:	2200      	movs	r2, #0
2fff290e:	b19f      	cbz	r7, 2fff2938 <vsnprintf+0x25c>
2fff2910:	9b09      	ldr	r3, [sp, #36]	@ 0x24
2fff2912:	4690      	mov	r8, r2
2fff2914:	9807      	ldr	r0, [sp, #28]
2fff2916:	4696      	mov	lr, r2
2fff2918:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 2fff29a8 <vsnprintf+0x2cc>
2fff291c:	f81a 9b01 	ldrb.w	r9, [sl], #1
2fff2920:	f1b9 0f00 	cmp.w	r9, #0
2fff2924:	d117      	bne.n	2fff2956 <vsnprintf+0x27a>
2fff2926:	f1b8 0f00 	cmp.w	r8, #0
2fff292a:	d000      	beq.n	2fff292e <vsnprintf+0x252>
2fff292c:	9007      	str	r0, [sp, #28]
2fff292e:	f1be 0f00 	cmp.w	lr, #0
2fff2932:	d000      	beq.n	2fff2936 <vsnprintf+0x25a>
2fff2934:	9309      	str	r3, [sp, #36]	@ 0x24
2fff2936:	3902      	subs	r1, #2
2fff2938:	9104      	str	r1, [sp, #16]
2fff293a:	2300      	movs	r3, #0
2fff293c:	9305      	str	r3, [sp, #20]
2fff293e:	2310      	movs	r3, #16
2fff2940:	f8cd c00c 	str.w	ip, [sp, #12]
2fff2944:	9302      	str	r3, [sp, #8]
2fff2946:	e9cd 7200 	strd	r7, r2, [sp]
2fff294a:	aa09      	add	r2, sp, #36	@ 0x24
2fff294c:	4629      	mov	r1, r5
2fff294e:	a807      	add	r0, sp, #28
2fff2950:	f001 fc8f 	bl	2fff4272 <unsigned_num_print>
2fff2954:	e796      	b.n	2fff2884 <vsnprintf+0x1a8>
2fff2956:	429d      	cmp	r5, r3
2fff2958:	f04f 0e01 	mov.w	lr, #1
2fff295c:	bf84      	itt	hi
2fff295e:	f800 9b01 	strbhi.w	r9, [r0], #1
2fff2962:	f04f 0801 	movhi.w	r8, #1
2fff2966:	3301      	adds	r3, #1
2fff2968:	e7d8      	b.n	2fff291c <vsnprintf+0x240>
2fff296a:	2700      	movs	r7, #0
2fff296c:	2801      	cmp	r0, #1
2fff296e:	bf8b      	itete	hi
2fff2970:	1de3      	addhi	r3, r4, #7
2fff2972:	2300      	movls	r3, #0
2fff2974:	f023 0307 	bichi.w	r3, r3, #7
2fff2978:	f854 2b04 	ldrls.w	r2, [r4], #4
2fff297c:	bf82      	ittt	hi
2fff297e:	461c      	movhi	r4, r3
2fff2980:	685b      	ldrhi	r3, [r3, #4]
2fff2982:	f854 2b08 	ldrhi.w	r2, [r4], #8
2fff2986:	9104      	str	r1, [sp, #16]
2fff2988:	2110      	movs	r1, #16
2fff298a:	9705      	str	r7, [sp, #20]
2fff298c:	f8cd c00c 	str.w	ip, [sp, #12]
2fff2990:	e7b4      	b.n	2fff28fc <vsnprintf+0x220>
2fff2992:	9909      	ldr	r1, [sp, #36]	@ 0x24
2fff2994:	42a9      	cmp	r1, r5
2fff2996:	f101 0101 	add.w	r1, r1, #1
2fff299a:	9109      	str	r1, [sp, #36]	@ 0x24
2fff299c:	bf3e      	ittt	cc
2fff299e:	9807      	ldrcc	r0, [sp, #28]
2fff29a0:	f800 3b01 	strbcc.w	r3, [r0], #1
2fff29a4:	9007      	strcc	r0, [sp, #28]
2fff29a6:	e6a7      	b.n	2fff26f8 <vsnprintf+0x1c>
2fff29a8:	2fff7b96 	.word	0x2fff7b96

2fff29ac <bl2_arch_setup>:
2fff29ac:	4770      	bx	lr

2fff29ae <bl2_el3_setup>:
2fff29ae:	b508      	push	{r3, lr}
2fff29b0:	f000 f96e 	bl	2fff2c90 <bl2_el3_early_platform_setup>
2fff29b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff29b8:	f7f9 b974 	b.w	2ffebca4 <bl2_el3_plat_arch_setup>

2fff29bc <cpu_to_fdt32>:
2fff29bc:	ba00      	rev	r0, r0
2fff29be:	4770      	bx	lr

2fff29c0 <fdt_read_uint32>:
2fff29c0:	b507      	push	{r0, r1, r2, lr}
2fff29c2:	9300      	str	r3, [sp, #0]
2fff29c4:	2301      	movs	r3, #1
2fff29c6:	f7f7 fa6f 	bl	2ffe9ea8 <fdt_read_uint32_array>
2fff29ca:	b003      	add	sp, #12
2fff29cc:	f85d fb04 	ldr.w	pc, [sp], #4

2fff29d0 <fdt_read_uint32_default>:
2fff29d0:	b513      	push	{r0, r1, r4, lr}
2fff29d2:	461c      	mov	r4, r3
2fff29d4:	9301      	str	r3, [sp, #4]
2fff29d6:	ab01      	add	r3, sp, #4
2fff29d8:	f7ff fff2 	bl	2fff29c0 <fdt_read_uint32>
2fff29dc:	2800      	cmp	r0, #0
2fff29de:	bfa8      	it	ge
2fff29e0:	9c01      	ldrge	r4, [sp, #4]
2fff29e2:	4620      	mov	r0, r4
2fff29e4:	b002      	add	sp, #8
2fff29e6:	bd10      	pop	{r4, pc}

2fff29e8 <fdt_read_uint64>:
2fff29e8:	b530      	push	{r4, r5, lr}
2fff29ea:	b085      	sub	sp, #20
2fff29ec:	461c      	mov	r4, r3
2fff29ee:	ab02      	add	r3, sp, #8
2fff29f0:	9300      	str	r3, [sp, #0]
2fff29f2:	2500      	movs	r5, #0
2fff29f4:	2302      	movs	r3, #2
2fff29f6:	e9cd 5502 	strd	r5, r5, [sp, #8]
2fff29fa:	f7f7 fa55 	bl	2ffe9ea8 <fdt_read_uint32_array>
2fff29fe:	2800      	cmp	r0, #0
2fff2a00:	db04      	blt.n	2fff2a0c <fdt_read_uint64+0x24>
2fff2a02:	9b03      	ldr	r3, [sp, #12]
2fff2a04:	4628      	mov	r0, r5
2fff2a06:	6023      	str	r3, [r4, #0]
2fff2a08:	9b02      	ldr	r3, [sp, #8]
2fff2a0a:	6063      	str	r3, [r4, #4]
2fff2a0c:	b005      	add	sp, #20
2fff2a0e:	bd30      	pop	{r4, r5, pc}

2fff2a10 <device_type_fip>:
2fff2a10:	2004      	movs	r0, #4
2fff2a12:	4770      	bx	lr

2fff2a14 <device_type_memmap>:
2fff2a14:	2002      	movs	r0, #2
2fff2a16:	4770      	bx	lr

2fff2a18 <memmap_dev_close>:
2fff2a18:	2000      	movs	r0, #0
2fff2a1a:	4770      	bx	lr

2fff2a1c <is_valid_dev>:
2fff2a1c:	b508      	push	{r3, lr}
2fff2a1e:	b140      	cbz	r0, 2fff2a32 <is_valid_dev+0x16>
2fff2a20:	6800      	ldr	r0, [r0, #0]
2fff2a22:	b130      	cbz	r0, 2fff2a32 <is_valid_dev+0x16>
2fff2a24:	6800      	ldr	r0, [r0, #0]
2fff2a26:	b120      	cbz	r0, 2fff2a32 <is_valid_dev+0x16>
2fff2a28:	4780      	blx	r0
2fff2a2a:	2808      	cmp	r0, #8
2fff2a2c:	bf8c      	ite	hi
2fff2a2e:	2000      	movhi	r0, #0
2fff2a30:	2001      	movls	r0, #1
2fff2a32:	bd08      	pop	{r3, pc}

2fff2a34 <is_valid_entity>:
2fff2a34:	b508      	push	{r3, lr}
2fff2a36:	b110      	cbz	r0, 2fff2a3e <is_valid_entity+0xa>
2fff2a38:	6800      	ldr	r0, [r0, #0]
2fff2a3a:	f7ff ffef 	bl	2fff2a1c <is_valid_dev>
2fff2a3e:	f000 0001 	and.w	r0, r0, #1
2fff2a42:	bd08      	pop	{r3, pc}

2fff2a44 <stm32mp1_mode_register_write.isra.0>:
2fff2a44:	6983      	ldr	r3, [r0, #24]
2fff2a46:	07db      	lsls	r3, r3, #31
2fff2a48:	d4fc      	bmi.n	2fff2a44 <stm32mp1_mode_register_write.isra.0>
2fff2a4a:	0309      	lsls	r1, r1, #12
2fff2a4c:	f041 0310 	orr.w	r3, r1, #16
2fff2a50:	f041 4100 	orr.w	r1, r1, #2147483648	@ 0x80000000
2fff2a54:	6103      	str	r3, [r0, #16]
2fff2a56:	f041 0110 	orr.w	r1, r1, #16
2fff2a5a:	6142      	str	r2, [r0, #20]
2fff2a5c:	6101      	str	r1, [r0, #16]
2fff2a5e:	6983      	ldr	r3, [r0, #24]
2fff2a60:	07db      	lsls	r3, r3, #31
2fff2a62:	d4fc      	bmi.n	2fff2a5e <stm32mp1_mode_register_write.isra.0+0x1a>
2fff2a64:	4770      	bx	lr

2fff2a66 <stm32mp1_ddrphy_idone_wait>:
2fff2a66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2a68:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2fff2a6c:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff2a70:	191a      	adds	r2, r3, r4
2fff2a72:	f240 3681 	movw	r6, #897	@ 0x381
2fff2a76:	f145 0700 	adc.w	r7, r5, #0
2fff2a7a:	68c3      	ldr	r3, [r0, #12]
2fff2a7c:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff2a80:	42a2      	cmp	r2, r4
2fff2a82:	eb77 0105 	sbcs.w	r1, r7, r5
2fff2a86:	d203      	bcs.n	2fff2a90 <stm32mp1_ddrphy_idone_wait+0x2a>
2fff2a88:	f7f9 feb4 	bl	2ffec7f4 <console_flush>
2fff2a8c:	f7f6 eca6 	blx	2ffe93dc <do_panic>
2fff2a90:	0659      	lsls	r1, r3, #25
2fff2a92:	d404      	bmi.n	2fff2a9e <stm32mp1_ddrphy_idone_wait+0x38>
2fff2a94:	f3c3 1140 	ubfx	r1, r3, #5, #1
2fff2a98:	4033      	ands	r3, r6
2fff2a9a:	4319      	orrs	r1, r3
2fff2a9c:	d0ed      	beq.n	2fff2a7a <stm32mp1_ddrphy_idone_wait+0x14>
2fff2a9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2fff2aa0 <stm32mp1_wait_operating_mode>:
2fff2aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2aa2:	460d      	mov	r5, r1
2fff2aa4:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2fff2aa8:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff2aac:	1992      	adds	r2, r2, r6
2fff2aae:	f147 0400 	adc.w	r4, r7, #0
2fff2ab2:	6900      	ldr	r0, [r0, #16]
2fff2ab4:	6843      	ldr	r3, [r0, #4]
2fff2ab6:	f003 0107 	and.w	r1, r3, #7
2fff2aba:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2fff2abe:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff2ac2:	42b2      	cmp	r2, r6
2fff2ac4:	eb74 0607 	sbcs.w	r6, r4, r7
2fff2ac8:	d311      	bcc.n	2fff2aee <stm32mp1_wait_operating_mode+0x4e>
2fff2aca:	2d03      	cmp	r5, #3
2fff2acc:	d11e      	bne.n	2fff2b0c <stm32mp1_wait_operating_mode+0x6c>
2fff2ace:	2903      	cmp	r1, #3
2fff2ad0:	d1f0      	bne.n	2fff2ab4 <stm32mp1_wait_operating_mode+0x14>
2fff2ad2:	2b20      	cmp	r3, #32
2fff2ad4:	d100      	bne.n	2fff2ad8 <stm32mp1_wait_operating_mode+0x38>
2fff2ad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2ad8:	6843      	ldr	r3, [r0, #4]
2fff2ada:	f003 0107 	and.w	r1, r3, #7
2fff2ade:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2fff2ae2:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff2ae6:	42b2      	cmp	r2, r6
2fff2ae8:	eb74 0607 	sbcs.w	r6, r4, r7
2fff2aec:	d2ef      	bcs.n	2fff2ace <stm32mp1_wait_operating_mode+0x2e>
2fff2aee:	f7f9 fe81 	bl	2ffec7f4 <console_flush>
2fff2af2:	f7f6 ec74 	blx	2ffe93dc <do_panic>
2fff2af6:	6843      	ldr	r3, [r0, #4]
2fff2af8:	f003 0107 	and.w	r1, r3, #7
2fff2afc:	f003 0330 	and.w	r3, r3, #48	@ 0x30
2fff2b00:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff2b04:	42b2      	cmp	r2, r6
2fff2b06:	eb74 0607 	sbcs.w	r6, r4, r7
2fff2b0a:	d3f0      	bcc.n	2fff2aee <stm32mp1_wait_operating_mode+0x4e>
2fff2b0c:	428d      	cmp	r5, r1
2fff2b0e:	d0e2      	beq.n	2fff2ad6 <stm32mp1_wait_operating_mode+0x36>
2fff2b10:	2d01      	cmp	r5, #1
2fff2b12:	d1f0      	bne.n	2fff2af6 <stm32mp1_wait_operating_mode+0x56>
2fff2b14:	2903      	cmp	r1, #3
2fff2b16:	d1ee      	bne.n	2fff2af6 <stm32mp1_wait_operating_mode+0x56>
2fff2b18:	2b30      	cmp	r3, #48	@ 0x30
2fff2b1a:	d1ec      	bne.n	2fff2af6 <stm32mp1_wait_operating_mode+0x56>
2fff2b1c:	e7db      	b.n	2fff2ad6 <stm32mp1_wait_operating_mode+0x36>

2fff2b1e <stm32mp_ddr_test_rw_access>:
2fff2b1e:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff2b22:	f04f 32aa 	mov.w	r2, #2863311530	@ 0xaaaaaaaa
2fff2b26:	6803      	ldr	r3, [r0, #0]
2fff2b28:	6002      	str	r2, [r0, #0]
2fff2b2a:	6802      	ldr	r2, [r0, #0]
2fff2b2c:	f1b2 3faa 	cmp.w	r2, #2863311530	@ 0xaaaaaaaa
2fff2b30:	bf04      	itt	eq
2fff2b32:	6003      	streq	r3, [r0, #0]
2fff2b34:	2000      	moveq	r0, #0
2fff2b36:	4770      	bx	lr

2fff2b38 <stm32mp_ddr_test_data_bus>:
2fff2b38:	2020      	movs	r0, #32
2fff2b3a:	2301      	movs	r3, #1
2fff2b3c:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2fff2b40:	6013      	str	r3, [r2, #0]
2fff2b42:	6811      	ldr	r1, [r2, #0]
2fff2b44:	4299      	cmp	r1, r3
2fff2b46:	d103      	bne.n	2fff2b50 <stm32mp_ddr_test_data_bus+0x18>
2fff2b48:	005b      	lsls	r3, r3, #1
2fff2b4a:	3801      	subs	r0, #1
2fff2b4c:	d1f8      	bne.n	2fff2b40 <stm32mp_ddr_test_data_bus+0x8>
2fff2b4e:	4770      	bx	lr
2fff2b50:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff2b54:	4770      	bx	lr

2fff2b56 <stm32mp_ddr_test_addr_bus>:
2fff2b56:	1e43      	subs	r3, r0, #1
2fff2b58:	2204      	movs	r2, #4
2fff2b5a:	f04f 31aa 	mov.w	r1, #2863311530	@ 0xaaaaaaaa
2fff2b5e:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff2b60:	421a      	tst	r2, r3
2fff2b62:	d113      	bne.n	2fff2b8c <stm32mp_ddr_test_addr_bus+0x36>
2fff2b64:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2fff2b68:	f04f 3155 	mov.w	r1, #1431655765	@ 0x55555555
2fff2b6c:	6011      	str	r1, [r2, #0]
2fff2b6e:	2204      	movs	r2, #4
2fff2b70:	421a      	tst	r2, r3
2fff2b72:	d110      	bne.n	2fff2b96 <stm32mp_ddr_test_addr_bus+0x40>
2fff2b74:	f04f 4440 	mov.w	r4, #3221225472	@ 0xc0000000
2fff2b78:	2204      	movs	r2, #4
2fff2b7a:	f04f 3755 	mov.w	r7, #1431655765	@ 0x55555555
2fff2b7e:	f04f 35aa 	mov.w	r5, #2863311530	@ 0xaaaaaaaa
2fff2b82:	6025      	str	r5, [r4, #0]
2fff2b84:	ea12 0003 	ands.w	r0, r2, r3
2fff2b88:	d10d      	bne.n	2fff2ba6 <stm32mp_ddr_test_addr_bus+0x50>
2fff2b8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff2b8c:	f102 4040 	add.w	r0, r2, #3221225472	@ 0xc0000000
2fff2b90:	0052      	lsls	r2, r2, #1
2fff2b92:	6001      	str	r1, [r0, #0]
2fff2b94:	e7e4      	b.n	2fff2b60 <stm32mp_ddr_test_addr_bus+0xa>
2fff2b96:	f102 4040 	add.w	r0, r2, #3221225472	@ 0xc0000000
2fff2b9a:	6801      	ldr	r1, [r0, #0]
2fff2b9c:	f1b1 3faa 	cmp.w	r1, #2863311530	@ 0xaaaaaaaa
2fff2ba0:	d1f3      	bne.n	2fff2b8a <stm32mp_ddr_test_addr_bus+0x34>
2fff2ba2:	0052      	lsls	r2, r2, #1
2fff2ba4:	e7e4      	b.n	2fff2b70 <stm32mp_ddr_test_addr_bus+0x1a>
2fff2ba6:	f102 4640 	add.w	r6, r2, #3221225472	@ 0xc0000000
2fff2baa:	6037      	str	r7, [r6, #0]
2fff2bac:	6821      	ldr	r1, [r4, #0]
2fff2bae:	f1b1 3faa 	cmp.w	r1, #2863311530	@ 0xaaaaaaaa
2fff2bb2:	d110      	bne.n	2fff2bd6 <stm32mp_ddr_test_addr_bus+0x80>
2fff2bb4:	2104      	movs	r1, #4
2fff2bb6:	4219      	tst	r1, r3
2fff2bb8:	d102      	bne.n	2fff2bc0 <stm32mp_ddr_test_addr_bus+0x6a>
2fff2bba:	0052      	lsls	r2, r2, #1
2fff2bbc:	6035      	str	r5, [r6, #0]
2fff2bbe:	e7e1      	b.n	2fff2b84 <stm32mp_ddr_test_addr_bus+0x2e>
2fff2bc0:	f101 4040 	add.w	r0, r1, #3221225472	@ 0xc0000000
2fff2bc4:	f8d0 c000 	ldr.w	ip, [r0]
2fff2bc8:	f1bc 3faa 	cmp.w	ip, #2863311530	@ 0xaaaaaaaa
2fff2bcc:	d001      	beq.n	2fff2bd2 <stm32mp_ddr_test_addr_bus+0x7c>
2fff2bce:	4291      	cmp	r1, r2
2fff2bd0:	d1db      	bne.n	2fff2b8a <stm32mp_ddr_test_addr_bus+0x34>
2fff2bd2:	0049      	lsls	r1, r1, #1
2fff2bd4:	e7ef      	b.n	2fff2bb6 <stm32mp_ddr_test_addr_bus+0x60>
2fff2bd6:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff2bda:	e7d6      	b.n	2fff2b8a <stm32mp_ddr_test_addr_bus+0x34>

2fff2bdc <stm32mp_ddr_check_size>:
2fff2bdc:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2fff2be0:	f04f 33aa 	mov.w	r3, #2863311530	@ 0xaaaaaaaa
2fff2be4:	b510      	push	{r4, lr}
2fff2be6:	2004      	movs	r0, #4
2fff2be8:	6013      	str	r3, [r2, #0]
2fff2bea:	f04f 3155 	mov.w	r1, #1431655765	@ 0x55555555
2fff2bee:	231c      	movs	r3, #28
2fff2bf0:	f100 4440 	add.w	r4, r0, #3221225472	@ 0xc0000000
2fff2bf4:	6021      	str	r1, [r4, #0]
2fff2bf6:	f3bf 8f4f 	dsb	sy
2fff2bfa:	6814      	ldr	r4, [r2, #0]
2fff2bfc:	f1b4 3faa 	cmp.w	r4, #2863311530	@ 0xaaaaaaaa
2fff2c00:	d102      	bne.n	2fff2c08 <stm32mp_ddr_check_size+0x2c>
2fff2c02:	0040      	lsls	r0, r0, #1
2fff2c04:	3b01      	subs	r3, #1
2fff2c06:	d1f3      	bne.n	2fff2bf0 <stm32mp_ddr_check_size+0x14>
2fff2c08:	bd10      	pop	{r4, pc}

2fff2c0a <stm32_uart_stop>:
2fff2c0a:	6803      	ldr	r3, [r0, #0]
2fff2c0c:	f023 0301 	bic.w	r3, r3, #1
2fff2c10:	6003      	str	r3, [r0, #0]
2fff2c12:	4770      	bx	lr

2fff2c14 <stm32_uart_putc>:
2fff2c14:	b538      	push	{r3, r4, r5, lr}
2fff2c16:	460d      	mov	r5, r1
2fff2c18:	4604      	mov	r4, r0
2fff2c1a:	b170      	cbz	r0, 2fff2c3a <stm32_uart_putc+0x26>
2fff2c1c:	2180      	movs	r1, #128	@ 0x80
2fff2c1e:	f7f8 f98b 	bl	2ffeaf38 <stm32_uart_wait_flag>
2fff2c22:	b948      	cbnz	r0, 2fff2c38 <stm32_uart_putc+0x24>
2fff2c24:	6823      	ldr	r3, [r4, #0]
2fff2c26:	629d      	str	r5, [r3, #40]	@ 0x28
2fff2c28:	6823      	ldr	r3, [r4, #0]
2fff2c2a:	69da      	ldr	r2, [r3, #28]
2fff2c2c:	0712      	lsls	r2, r2, #28
2fff2c2e:	d003      	beq.n	2fff2c38 <stm32_uart_putc+0x24>
2fff2c30:	f06f 000d 	mvn.w	r0, #13
2fff2c34:	220f      	movs	r2, #15
2fff2c36:	621a      	str	r2, [r3, #32]
2fff2c38:	bd38      	pop	{r3, r4, r5, pc}
2fff2c3a:	f06f 0015 	mvn.w	r0, #21
2fff2c3e:	e7fb      	b.n	2fff2c38 <stm32_uart_putc+0x24>

2fff2c40 <stm32_uart_flush>:
2fff2c40:	b510      	push	{r4, lr}
2fff2c42:	4604      	mov	r4, r0
2fff2c44:	b148      	cbz	r0, 2fff2c5a <stm32_uart_flush+0x1a>
2fff2c46:	2180      	movs	r1, #128	@ 0x80
2fff2c48:	f7f8 f976 	bl	2ffeaf38 <stm32_uart_wait_flag>
2fff2c4c:	b938      	cbnz	r0, 2fff2c5e <stm32_uart_flush+0x1e>
2fff2c4e:	4620      	mov	r0, r4
2fff2c50:	2140      	movs	r1, #64	@ 0x40
2fff2c52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2c56:	f7f8 b96f 	b.w	2ffeaf38 <stm32_uart_wait_flag>
2fff2c5a:	f06f 0015 	mvn.w	r0, #21
2fff2c5e:	bd10      	pop	{r4, pc}

2fff2c60 <stm32_uart_getc>:
2fff2c60:	b170      	cbz	r0, 2fff2c80 <stm32_uart_getc+0x20>
2fff2c62:	6802      	ldr	r2, [r0, #0]
2fff2c64:	69d3      	ldr	r3, [r2, #28]
2fff2c66:	0699      	lsls	r1, r3, #26
2fff2c68:	d50d      	bpl.n	2fff2c86 <stm32_uart_getc+0x26>
2fff2c6a:	6a53      	ldr	r3, [r2, #36]	@ 0x24
2fff2c6c:	6840      	ldr	r0, [r0, #4]
2fff2c6e:	4018      	ands	r0, r3
2fff2c70:	69d3      	ldr	r3, [r2, #28]
2fff2c72:	071b      	lsls	r3, r3, #28
2fff2c74:	d009      	beq.n	2fff2c8a <stm32_uart_getc+0x2a>
2fff2c76:	230f      	movs	r3, #15
2fff2c78:	f06f 000d 	mvn.w	r0, #13
2fff2c7c:	6213      	str	r3, [r2, #32]
2fff2c7e:	4770      	bx	lr
2fff2c80:	f06f 0015 	mvn.w	r0, #21
2fff2c84:	4770      	bx	lr
2fff2c86:	f06f 0022 	mvn.w	r0, #34	@ 0x22
2fff2c8a:	4770      	bx	lr

2fff2c8c <plat_try_backup_partitions>:
2fff2c8c:	2000      	movs	r0, #0
2fff2c8e:	4770      	bx	lr

2fff2c90 <bl2_el3_early_platform_setup>:
2fff2c90:	f7f9 be54 	b.w	2ffec93c <stm32mp_save_boot_ctx_address>

2fff2c94 <plat_flush_next_bl_params>:
2fff2c94:	f7f7 b802 	b.w	2ffe9c9c <flush_bl_params_desc>

2fff2c98 <plat_get_bl_image_load_info>:
2fff2c98:	f7f7 b848 	b.w	2ffe9d2c <get_bl_load_info_from_mem_params_desc>

2fff2c9c <plat_get_next_bl_params>:
2fff2c9c:	b510      	push	{r4, lr}
2fff2c9e:	f7f7 f86f 	bl	2ffe9d80 <get_next_bl_params_from_mem_params_desc>
2fff2ca2:	4604      	mov	r4, r0
2fff2ca4:	f7f7 f8cc 	bl	2ffe9e40 <populate_next_bl_params_config>
2fff2ca8:	4620      	mov	r0, r4
2fff2caa:	bd10      	pop	{r4, pc}

2fff2cac <stm32_pwr_cstop_critic_exit>:
2fff2cac:	b508      	push	{r3, lr}
2fff2cae:	f7fa ff11 	bl	2ffedad4 <stm32mp_stgen_restore_rate>
2fff2cb2:	f7fa fde1 	bl	2ffed878 <generic_delay_timer_init>
2fff2cb6:	f7fc fda5 	bl	2ffef804 <ddr_sw_self_refresh_exit>
2fff2cba:	b118      	cbz	r0, 2fff2cc4 <stm32_pwr_cstop_critic_exit+0x18>
2fff2cbc:	f7f9 fd9a 	bl	2ffec7f4 <console_flush>
2fff2cc0:	f7f6 eb8c 	blx	2ffe93dc <do_panic>
2fff2cc4:	bd08      	pop	{r3, pc}

2fff2cc6 <fdt32_to_cpu>:
2fff2cc6:	ba00      	rev	r0, r0
2fff2cc8:	4770      	bx	lr

2fff2cca <putchar>:
2fff2cca:	b510      	push	{r4, lr}
2fff2ccc:	4604      	mov	r4, r0
2fff2cce:	f7f9 fd65 	bl	2ffec79c <console_putc>
2fff2cd2:	2800      	cmp	r0, #0
2fff2cd4:	bf0c      	ite	eq
2fff2cd6:	4620      	moveq	r0, r4
2fff2cd8:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
2fff2cdc:	bd10      	pop	{r4, pc}

2fff2cde <plat_error_handler>:
2fff2cde:	bf30      	wfi
2fff2ce0:	e7fd      	b.n	2fff2cde <plat_error_handler>

2fff2ce2 <bl2_plat_preload_setup>:
2fff2ce2:	4770      	bx	lr

2fff2ce4 <plat_try_next_boot_source>:
2fff2ce4:	2000      	movs	r0, #0
2fff2ce6:	4770      	bx	lr

2fff2ce8 <__popcountsi2>:
2fff2ce8:	0843      	lsrs	r3, r0, #1
2fff2cea:	f003 3355 	and.w	r3, r3, #1431655765	@ 0x55555555
2fff2cee:	1ac3      	subs	r3, r0, r3
2fff2cf0:	0898      	lsrs	r0, r3, #2
2fff2cf2:	f003 3333 	and.w	r3, r3, #858993459	@ 0x33333333
2fff2cf6:	f000 3033 	and.w	r0, r0, #858993459	@ 0x33333333
2fff2cfa:	4418      	add	r0, r3
2fff2cfc:	eb00 1010 	add.w	r0, r0, r0, lsr #4
2fff2d00:	f000 300f 	and.w	r0, r0, #252645135	@ 0xf0f0f0f
2fff2d04:	eb00 4010 	add.w	r0, r0, r0, lsr #16
2fff2d08:	eb00 2010 	add.w	r0, r0, r0, lsr #8
2fff2d0c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
2fff2d10:	4770      	bx	lr

2fff2d12 <__ctzdi2>:
2fff2d12:	fab0 f380 	clz	r3, r0
2fff2d16:	095b      	lsrs	r3, r3, #5
2fff2d18:	425a      	negs	r2, r3
2fff2d1a:	3b01      	subs	r3, #1
2fff2d1c:	4003      	ands	r3, r0
2fff2d1e:	4011      	ands	r1, r2
2fff2d20:	430b      	orrs	r3, r1
2fff2d22:	f002 0020 	and.w	r0, r2, #32
2fff2d26:	fa93 f3a3 	rbit	r3, r3
2fff2d2a:	fab3 f383 	clz	r3, r3
2fff2d2e:	4418      	add	r0, r3
2fff2d30:	4770      	bx	lr

2fff2d32 <__udivmoddi4>:
2fff2d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff2d36:	469e      	mov	lr, r3
2fff2d38:	9e06      	ldr	r6, [sp, #24]
2fff2d3a:	b959      	cbnz	r1, 2fff2d54 <__udivmoddi4+0x22>
2fff2d3c:	bb63      	cbnz	r3, 2fff2d98 <__udivmoddi4+0x66>
2fff2d3e:	fbb0 f1f2 	udiv	r1, r0, r2
2fff2d42:	b11e      	cbz	r6, 2fff2d4c <__udivmoddi4+0x1a>
2fff2d44:	fb02 0011 	mls	r0, r2, r1, r0
2fff2d48:	e9c6 0300 	strd	r0, r3, [r6]
2fff2d4c:	4608      	mov	r0, r1
2fff2d4e:	2100      	movs	r1, #0
2fff2d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff2d54:	bb82      	cbnz	r2, 2fff2db8 <__udivmoddi4+0x86>
2fff2d56:	b903      	cbnz	r3, 2fff2d5a <__udivmoddi4+0x28>
2fff2d58:	deff      	udf	#255	@ 0xff
2fff2d5a:	b940      	cbnz	r0, 2fff2d6e <__udivmoddi4+0x3c>
2fff2d5c:	fbb1 f2f3 	udiv	r2, r1, r3
2fff2d60:	b11e      	cbz	r6, 2fff2d6a <__udivmoddi4+0x38>
2fff2d62:	fb03 1112 	mls	r1, r3, r2, r1
2fff2d66:	e9c6 0100 	strd	r0, r1, [r6]
2fff2d6a:	4610      	mov	r0, r2
2fff2d6c:	e7ef      	b.n	2fff2d4e <__udivmoddi4+0x1c>
2fff2d6e:	1e5c      	subs	r4, r3, #1
2fff2d70:	421c      	tst	r4, r3
2fff2d72:	d10a      	bne.n	2fff2d8a <__udivmoddi4+0x58>
2fff2d74:	b116      	cbz	r6, 2fff2d7c <__udivmoddi4+0x4a>
2fff2d76:	400c      	ands	r4, r1
2fff2d78:	e9c6 0400 	strd	r0, r4, [r6]
2fff2d7c:	fa93 f3a3 	rbit	r3, r3
2fff2d80:	fab3 f383 	clz	r3, r3
2fff2d84:	fa21 f003 	lsr.w	r0, r1, r3
2fff2d88:	e7e1      	b.n	2fff2d4e <__udivmoddi4+0x1c>
2fff2d8a:	fab3 f483 	clz	r4, r3
2fff2d8e:	fab1 f581 	clz	r5, r1
2fff2d92:	1b64      	subs	r4, r4, r5
2fff2d94:	2c1e      	cmp	r4, #30
2fff2d96:	d904      	bls.n	2fff2da2 <__udivmoddi4+0x70>
2fff2d98:	b10e      	cbz	r6, 2fff2d9e <__udivmoddi4+0x6c>
2fff2d9a:	e9c6 0100 	strd	r0, r1, [r6]
2fff2d9e:	2000      	movs	r0, #0
2fff2da0:	e7d5      	b.n	2fff2d4e <__udivmoddi4+0x1c>
2fff2da2:	f104 0c01 	add.w	ip, r4, #1
2fff2da6:	4617      	mov	r7, r2
2fff2da8:	f1c4 041f 	rsb	r4, r4, #31
2fff2dac:	fa21 fe0c 	lsr.w	lr, r1, ip
2fff2db0:	fa00 f804 	lsl.w	r8, r0, r4
2fff2db4:	40a1      	lsls	r1, r4
2fff2db6:	e031      	b.n	2fff2e1c <__udivmoddi4+0xea>
2fff2db8:	2b00      	cmp	r3, #0
2fff2dba:	d167      	bne.n	2fff2e8c <__udivmoddi4+0x15a>
2fff2dbc:	1e54      	subs	r4, r2, #1
2fff2dbe:	ea14 0502 	ands.w	r5, r4, r2
2fff2dc2:	d111      	bne.n	2fff2de8 <__udivmoddi4+0xb6>
2fff2dc4:	b116      	cbz	r6, 2fff2dcc <__udivmoddi4+0x9a>
2fff2dc6:	4004      	ands	r4, r0
2fff2dc8:	e9c6 4500 	strd	r4, r5, [r6]
2fff2dcc:	2a01      	cmp	r2, #1
2fff2dce:	d0bf      	beq.n	2fff2d50 <__udivmoddi4+0x1e>
2fff2dd0:	fa92 f2a2 	rbit	r2, r2
2fff2dd4:	fab2 f282 	clz	r2, r2
2fff2dd8:	f1c2 0320 	rsb	r3, r2, #32
2fff2ddc:	40d0      	lsrs	r0, r2
2fff2dde:	fa01 f303 	lsl.w	r3, r1, r3
2fff2de2:	4318      	orrs	r0, r3
2fff2de4:	40d1      	lsrs	r1, r2
2fff2de6:	e7b3      	b.n	2fff2d50 <__udivmoddi4+0x1e>
2fff2de8:	fab1 f581 	clz	r5, r1
2fff2dec:	fab2 f482 	clz	r4, r2
2fff2df0:	1b64      	subs	r4, r4, r5
2fff2df2:	1c65      	adds	r5, r4, #1
2fff2df4:	f104 0c21 	add.w	ip, r4, #33	@ 0x21
2fff2df8:	d105      	bne.n	2fff2e06 <__udivmoddi4+0xd4>
2fff2dfa:	461f      	mov	r7, r3
2fff2dfc:	4680      	mov	r8, r0
2fff2dfe:	2500      	movs	r5, #0
2fff2e00:	f04f 0c20 	mov.w	ip, #32
2fff2e04:	e00e      	b.n	2fff2e24 <__udivmoddi4+0xf2>
2fff2e06:	f1bc 0f1f 	cmp.w	ip, #31
2fff2e0a:	d833      	bhi.n	2fff2e74 <__udivmoddi4+0x142>
2fff2e0c:	f1cc 0520 	rsb	r5, ip, #32
2fff2e10:	461f      	mov	r7, r3
2fff2e12:	fa21 fe0c 	lsr.w	lr, r1, ip
2fff2e16:	fa00 f805 	lsl.w	r8, r0, r5
2fff2e1a:	40a9      	lsls	r1, r5
2fff2e1c:	fa20 f00c 	lsr.w	r0, r0, ip
2fff2e20:	4301      	orrs	r1, r0
2fff2e22:	4675      	mov	r5, lr
2fff2e24:	2000      	movs	r0, #0
2fff2e26:	0fcc      	lsrs	r4, r1, #31
2fff2e28:	ea44 0545 	orr.w	r5, r4, r5, lsl #1
2fff2e2c:	ea4f 74d8 	mov.w	r4, r8, lsr #31
2fff2e30:	ea44 0141 	orr.w	r1, r4, r1, lsl #1
2fff2e34:	0ffc      	lsrs	r4, r7, #31
2fff2e36:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2fff2e3a:	1a50      	subs	r0, r2, r1
2fff2e3c:	ea44 0848 	orr.w	r8, r4, r8, lsl #1
2fff2e40:	eb63 0405 	sbc.w	r4, r3, r5
2fff2e44:	3801      	subs	r0, #1
2fff2e46:	f144 34ff 	adc.w	r4, r4, #4294967295	@ 0xffffffff
2fff2e4a:	ea02 7ee4 	and.w	lr, r2, r4, asr #31
2fff2e4e:	ebb1 010e 	subs.w	r1, r1, lr
2fff2e52:	ea4f 70d4 	mov.w	r0, r4, lsr #31
2fff2e56:	ea03 74e4 	and.w	r4, r3, r4, asr #31
2fff2e5a:	eb65 0e04 	sbc.w	lr, r5, r4
2fff2e5e:	f1bc 0c01 	subs.w	ip, ip, #1
2fff2e62:	4675      	mov	r5, lr
2fff2e64:	d1df      	bne.n	2fff2e26 <__udivmoddi4+0xf4>
2fff2e66:	bb0e      	cbnz	r6, 2fff2eac <__udivmoddi4+0x17a>
2fff2e68:	19ff      	adds	r7, r7, r7
2fff2e6a:	eb48 0808 	adc.w	r8, r8, r8
2fff2e6e:	4338      	orrs	r0, r7
2fff2e70:	4641      	mov	r1, r8
2fff2e72:	e76d      	b.n	2fff2d50 <__udivmoddi4+0x1e>
2fff2e74:	f1cc 0840 	rsb	r8, ip, #64	@ 0x40
2fff2e78:	3401      	adds	r4, #1
2fff2e7a:	fa00 f708 	lsl.w	r7, r0, r8
2fff2e7e:	fa01 f808 	lsl.w	r8, r1, r8
2fff2e82:	40e0      	lsrs	r0, r4
2fff2e84:	ea48 0800 	orr.w	r8, r8, r0
2fff2e88:	40e1      	lsrs	r1, r4
2fff2e8a:	e7ca      	b.n	2fff2e22 <__udivmoddi4+0xf0>
2fff2e8c:	fab3 f483 	clz	r4, r3
2fff2e90:	fab1 f581 	clz	r5, r1
2fff2e94:	1b64      	subs	r4, r4, r5
2fff2e96:	2c1f      	cmp	r4, #31
2fff2e98:	f63f af7e 	bhi.w	2fff2d98 <__udivmoddi4+0x66>
2fff2e9c:	f104 0c01 	add.w	ip, r4, #1
2fff2ea0:	f04f 0700 	mov.w	r7, #0
2fff2ea4:	d0aa      	beq.n	2fff2dfc <__udivmoddi4+0xca>
2fff2ea6:	f1cc 0420 	rsb	r4, ip, #32
2fff2eaa:	e77f      	b.n	2fff2dac <__udivmoddi4+0x7a>
2fff2eac:	e9c6 1e00 	strd	r1, lr, [r6]
2fff2eb0:	e7da      	b.n	2fff2e68 <__udivmoddi4+0x136>

2fff2eb2 <hex_val>:
2fff2eb2:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
2fff2eb6:	b2db      	uxtb	r3, r3
2fff2eb8:	2b09      	cmp	r3, #9
2fff2eba:	d801      	bhi.n	2fff2ec0 <hex_val+0xe>
2fff2ebc:	b258      	sxtb	r0, r3
2fff2ebe:	4770      	bx	lr
2fff2ec0:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
2fff2ec4:	2b05      	cmp	r3, #5
2fff2ec6:	d802      	bhi.n	2fff2ece <hex_val+0x1c>
2fff2ec8:	3857      	subs	r0, #87	@ 0x57
2fff2eca:	b240      	sxtb	r0, r0
2fff2ecc:	4770      	bx	lr
2fff2ece:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
2fff2ed2:	2b05      	cmp	r3, #5
2fff2ed4:	d801      	bhi.n	2fff2eda <hex_val+0x28>
2fff2ed6:	3837      	subs	r0, #55	@ 0x37
2fff2ed8:	e7f7      	b.n	2fff2eca <hex_val+0x18>
2fff2eda:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff2ede:	4770      	bx	lr

2fff2ee0 <read_hex.part.0>:
2fff2ee0:	f022 0201 	bic.w	r2, r2, #1
2fff2ee4:	b538      	push	{r3, r4, r5, lr}
2fff2ee6:	4605      	mov	r5, r0
2fff2ee8:	440a      	add	r2, r1
2fff2eea:	7808      	ldrb	r0, [r1, #0]
2fff2eec:	f7ff ffe1 	bl	2fff2eb2 <hex_val>
2fff2ef0:	1e04      	subs	r4, r0, #0
2fff2ef2:	db0f      	blt.n	2fff2f14 <read_hex.part.0+0x34>
2fff2ef4:	7848      	ldrb	r0, [r1, #1]
2fff2ef6:	0124      	lsls	r4, r4, #4
2fff2ef8:	f7ff ffdb 	bl	2fff2eb2 <hex_val>
2fff2efc:	2800      	cmp	r0, #0
2fff2efe:	f004 04f0 	and.w	r4, r4, #240	@ 0xf0
2fff2f02:	db07      	blt.n	2fff2f14 <read_hex.part.0+0x34>
2fff2f04:	4304      	orrs	r4, r0
2fff2f06:	3102      	adds	r1, #2
2fff2f08:	4291      	cmp	r1, r2
2fff2f0a:	f805 4b01 	strb.w	r4, [r5], #1
2fff2f0e:	d1ec      	bne.n	2fff2eea <read_hex.part.0+0xa>
2fff2f10:	2000      	movs	r0, #0
2fff2f12:	bd38      	pop	{r3, r4, r5, pc}
2fff2f14:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff2f18:	e7fb      	b.n	2fff2f12 <read_hex.part.0+0x32>

2fff2f1a <plat_get_syscnt_freq2>:
2fff2f1a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff2f1e:	4770      	bx	lr

2fff2f20 <stm32mp_rcc_base>:
2fff2f20:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
2fff2f24:	4770      	bx	lr

2fff2f26 <stm32mp_lock_available>:
2fff2f26:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff2f2a:	f000 0005 	and.w	r0, r0, #5
2fff2f2e:	1f43      	subs	r3, r0, #5
2fff2f30:	4258      	negs	r0, r3
2fff2f32:	4158      	adcs	r0, r3
2fff2f34:	4770      	bx	lr

2fff2f36 <stm32mp_map_ddr_non_cacheable>:
2fff2f36:	2309      	movs	r3, #9
2fff2f38:	b507      	push	{r0, r1, r2, lr}
2fff2f3a:	f04f 4240 	mov.w	r2, #3221225472	@ 0xc0000000
2fff2f3e:	9300      	str	r3, [sp, #0]
2fff2f40:	2100      	movs	r1, #0
2fff2f42:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
2fff2f46:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff2f4a:	f7f9 ff47 	bl	2ffecddc <mmap_add_dynamic_region>
2fff2f4e:	b003      	add	sp, #12
2fff2f50:	f85d fb04 	ldr.w	pc, [sp], #4

2fff2f54 <stm32mp_unmap_ddr>:
2fff2f54:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
2fff2f58:	f04f 4040 	mov.w	r0, #3221225472	@ 0xc0000000
2fff2f5c:	f7f9 bf52 	b.w	2ffece04 <mmap_remove_dynamic_region>

2fff2f60 <stm32_save_boot_info>:
2fff2f60:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff2f62:	b085      	sub	sp, #20
2fff2f64:	7806      	ldrb	r6, [r0, #0]
2fff2f66:	2700      	movs	r7, #0
2fff2f68:	9701      	str	r7, [sp, #4]
2fff2f6a:	9702      	str	r7, [sp, #8]
2fff2f6c:	9703      	str	r7, [sp, #12]
2fff2f6e:	9700      	str	r7, [sp, #0]
2fff2f70:	f890 4090 	ldrb.w	r4, [r0, #144]	@ 0x90
2fff2f74:	f890 3058 	ldrb.w	r3, [r0, #88]	@ 0x58
2fff2f78:	0424      	lsls	r4, r4, #16
2fff2f7a:	051b      	lsls	r3, r3, #20
2fff2f7c:	f404 2470 	and.w	r4, r4, #983040	@ 0xf0000
2fff2f80:	7885      	ldrb	r5, [r0, #2]
2fff2f82:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
2fff2f86:	431c      	orrs	r4, r3
2fff2f88:	a801      	add	r0, sp, #4
2fff2f8a:	0336      	lsls	r6, r6, #12
2fff2f8c:	f7f9 fdb6 	bl	2ffecafc <stm32_get_boot_mode_cell>
2fff2f90:	2204      	movs	r2, #4
2fff2f92:	463b      	mov	r3, r7
2fff2f94:	eb0d 0002 	add.w	r0, sp, r2
2fff2f98:	4669      	mov	r1, sp
2fff2f9a:	f406 4670 	and.w	r6, r6, #61440	@ 0xf000
2fff2f9e:	f000 f99c 	bl	2fff32da <nvmem_cell_read>
2fff2fa2:	9b00      	ldr	r3, [sp, #0]
2fff2fa4:	2204      	movs	r2, #4
2fff2fa6:	022d      	lsls	r5, r5, #8
2fff2fa8:	4669      	mov	r1, sp
2fff2faa:	f423 037f 	bic.w	r3, r3, #16711680	@ 0xff0000
2fff2fae:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
2fff2fb2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
2fff2fb6:	4323      	orrs	r3, r4
2fff2fb8:	4333      	orrs	r3, r6
2fff2fba:	432b      	orrs	r3, r5
2fff2fbc:	eb0d 0002 	add.w	r0, sp, r2
2fff2fc0:	9300      	str	r3, [sp, #0]
2fff2fc2:	f000 f996 	bl	2fff32f2 <nvmem_cell_write>
2fff2fc6:	b005      	add	sp, #20
2fff2fc8:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff2fca <xlat_arch_get_pas>:
2fff2fca:	f000 0030 	and.w	r0, r0, #48	@ 0x30
2fff2fce:	f1a0 0310 	sub.w	r3, r0, #16
2fff2fd2:	4258      	negs	r0, r3
2fff2fd4:	4158      	adcs	r0, r3
2fff2fd6:	0140      	lsls	r0, r0, #5
2fff2fd8:	4770      	bx	lr

2fff2fda <xlat_arch_get_max_supported_pa>:
2fff2fda:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff2fde:	21ff      	movs	r1, #255	@ 0xff
2fff2fe0:	4770      	bx	lr

2fff2fe2 <xlat_get_min_virt_addr_space_size>:
2fff2fe2:	f04f 7000 	mov.w	r0, #33554432	@ 0x2000000
2fff2fe6:	4770      	bx	lr

2fff2fe8 <is_dcache_enabled>:
2fff2fe8:	f3ef 8300 	mrs	r3, CPSR
2fff2fec:	f003 031f 	and.w	r3, r3, #31
2fff2ff0:	2b1a      	cmp	r3, #26
2fff2ff2:	d104      	bne.n	2fff2ffe <is_dcache_enabled+0x16>
2fff2ff4:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff2ff8:	f3c0 0080 	ubfx	r0, r0, #2, #1
2fff2ffc:	4770      	bx	lr
2fff2ffe:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff3002:	e7f9      	b.n	2fff2ff8 <is_dcache_enabled+0x10>

2fff3004 <xlat_arch_tlbi_va_sync>:
2fff3004:	2300      	movs	r3, #0
2fff3006:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2fff300a:	f3bf 8f4b 	dsb	ish
2fff300e:	f3bf 8f6f 	isb	sy
2fff3012:	4770      	bx	lr

2fff3014 <mmap_add_region_check>:
2fff3014:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3018:	e9d1 3402 	ldrd	r3, r4, [r1, #8]
2fff301c:	e9d1 2e00 	ldrd	r2, lr, [r1]
2fff3020:	9401      	str	r4, [sp, #4]
2fff3022:	9d01      	ldr	r5, [sp, #4]
2fff3024:	1e54      	subs	r4, r2, #1
2fff3026:	f3c2 070b 	ubfx	r7, r2, #0, #12
2fff302a:	f14e 3cff 	adc.w	ip, lr, #4294967295	@ 0xffffffff
2fff302e:	eb14 0b05 	adds.w	fp, r4, r5
2fff3032:	eb03 0405 	add.w	r4, r3, r5
2fff3036:	694e      	ldr	r6, [r1, #20]
2fff3038:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
2fff303c:	f14c 0c00 	adc.w	ip, ip, #0
2fff3040:	2f00      	cmp	r7, #0
2fff3042:	d170      	bne.n	2fff3126 <mmap_add_region_check+0x112>
2fff3044:	ea43 0705 	orr.w	r7, r3, r5
2fff3048:	f3c7 070b 	ubfx	r7, r7, #0, #12
2fff304c:	2f00      	cmp	r7, #0
2fff304e:	d16a      	bne.n	2fff3126 <mmap_add_region_check+0x112>
2fff3050:	f1b6 4f80 	cmp.w	r6, #1073741824	@ 0x40000000
2fff3054:	d005      	beq.n	2fff3062 <mmap_add_region_check+0x4e>
2fff3056:	f5b6 1f00 	cmp.w	r6, #2097152	@ 0x200000
2fff305a:	d002      	beq.n	2fff3062 <mmap_add_region_check+0x4e>
2fff305c:	f5b6 5f80 	cmp.w	r6, #4096	@ 0x1000
2fff3060:	d161      	bne.n	2fff3126 <mmap_add_region_check+0x112>
2fff3062:	4593      	cmp	fp, r2
2fff3064:	eb7c 060e 	sbcs.w	r6, ip, lr
2fff3068:	d360      	bcc.n	2fff312c <mmap_add_region_check+0x118>
2fff306a:	42a3      	cmp	r3, r4
2fff306c:	d85e      	bhi.n	2fff312c <mmap_add_region_check+0x118>
2fff306e:	6886      	ldr	r6, [r0, #8]
2fff3070:	42a6      	cmp	r6, r4
2fff3072:	d35b      	bcc.n	2fff312c <mmap_add_region_check+0x118>
2fff3074:	e9d0 7600 	ldrd	r7, r6, [r0]
2fff3078:	455f      	cmp	r7, fp
2fff307a:	eb76 060c 	sbcs.w	r6, r6, ip
2fff307e:	d355      	bcc.n	2fff312c <mmap_add_region_check+0x118>
2fff3080:	68c6      	ldr	r6, [r0, #12]
2fff3082:	2718      	movs	r7, #24
2fff3084:	6900      	ldr	r0, [r0, #16]
2fff3086:	fb07 6000 	mla	r0, r7, r0, r6
2fff308a:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2fff308e:	2800      	cmp	r0, #0
2fff3090:	d14f      	bne.n	2fff3132 <mmap_add_region_check+0x11e>
2fff3092:	eb06 0807 	add.w	r8, r6, r7
2fff3096:	f858 0c0c 	ldr.w	r0, [r8, #-12]
2fff309a:	b910      	cbnz	r0, 2fff30a2 <mmap_add_region_check+0x8e>
2fff309c:	b003      	add	sp, #12
2fff309e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff30a2:	f858 9c10 	ldr.w	r9, [r8, #-16]
2fff30a6:	4599      	cmp	r9, r3
2fff30a8:	eb09 0a00 	add.w	sl, r9, r0
2fff30ac:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
2fff30b0:	d820      	bhi.n	2fff30f4 <mmap_add_region_check+0xe0>
2fff30b2:	4554      	cmp	r4, sl
2fff30b4:	d901      	bls.n	2fff30ba <mmap_add_region_check+0xa6>
2fff30b6:	4599      	cmp	r9, r3
2fff30b8:	d11e      	bne.n	2fff30f8 <mmap_add_region_check+0xe4>
2fff30ba:	690e      	ldr	r6, [r1, #16]
2fff30bc:	2e00      	cmp	r6, #0
2fff30be:	db16      	blt.n	2fff30ee <mmap_add_region_check+0xda>
2fff30c0:	f858 6c08 	ldr.w	r6, [r8, #-8]
2fff30c4:	2e00      	cmp	r6, #0
2fff30c6:	db12      	blt.n	2fff30ee <mmap_add_region_check+0xda>
2fff30c8:	e958 7606 	ldrd	r7, r6, [r8, #-24]
2fff30cc:	ebb9 0707 	subs.w	r7, r9, r7
2fff30d0:	eb66 0646 	sbc.w	r6, r6, r6, lsl #1
2fff30d4:	ebb3 0a02 	subs.w	sl, r3, r2
2fff30d8:	eb6e 054e 	sbc.w	r5, lr, lr, lsl #1
2fff30dc:	42ae      	cmp	r6, r5
2fff30de:	bf08      	it	eq
2fff30e0:	4557      	cmpeq	r7, sl
2fff30e2:	d104      	bne.n	2fff30ee <mmap_add_region_check+0xda>
2fff30e4:	4599      	cmp	r9, r3
2fff30e6:	d11b      	bne.n	2fff3120 <mmap_add_region_check+0x10c>
2fff30e8:	9d01      	ldr	r5, [sp, #4]
2fff30ea:	42a8      	cmp	r0, r5
2fff30ec:	d118      	bne.n	2fff3120 <mmap_add_region_check+0x10c>
2fff30ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff30f2:	e7d3      	b.n	2fff309c <mmap_add_region_check+0x88>
2fff30f4:	4554      	cmp	r4, sl
2fff30f6:	d2e0      	bcs.n	2fff30ba <mmap_add_region_check+0xa6>
2fff30f8:	e958 6706 	ldrd	r6, r7, [r8, #-24]
2fff30fc:	45b3      	cmp	fp, r6
2fff30fe:	eb7c 0507 	sbcs.w	r5, ip, r7
2fff3102:	d309      	bcc.n	2fff3118 <mmap_add_region_check+0x104>
2fff3104:	3e01      	subs	r6, #1
2fff3106:	f147 37ff 	adc.w	r7, r7, #4294967295	@ 0xffffffff
2fff310a:	1836      	adds	r6, r6, r0
2fff310c:	f147 0700 	adc.w	r7, r7, #0
2fff3110:	4296      	cmp	r6, r2
2fff3112:	eb77 070e 	sbcs.w	r7, r7, lr
2fff3116:	d2ea      	bcs.n	2fff30ee <mmap_add_region_check+0xda>
2fff3118:	45a1      	cmp	r9, r4
2fff311a:	d801      	bhi.n	2fff3120 <mmap_add_region_check+0x10c>
2fff311c:	4553      	cmp	r3, sl
2fff311e:	d9e6      	bls.n	2fff30ee <mmap_add_region_check+0xda>
2fff3120:	f108 0818 	add.w	r8, r8, #24
2fff3124:	e7b7      	b.n	2fff3096 <mmap_add_region_check+0x82>
2fff3126:	f06f 0015 	mvn.w	r0, #21
2fff312a:	e7b7      	b.n	2fff309c <mmap_add_region_check+0x88>
2fff312c:	f06f 0021 	mvn.w	r0, #33	@ 0x21
2fff3130:	e7b4      	b.n	2fff309c <mmap_add_region_check+0x88>
2fff3132:	f06f 000b 	mvn.w	r0, #11
2fff3136:	e7b1      	b.n	2fff309c <mmap_add_region_check+0x88>

2fff3138 <xlat_clean_dcache_range>:
2fff3138:	b538      	push	{r3, r4, r5, lr}
2fff313a:	4604      	mov	r4, r0
2fff313c:	460d      	mov	r5, r1
2fff313e:	f7ff ff53 	bl	2fff2fe8 <is_dcache_enabled>
2fff3142:	b128      	cbz	r0, 2fff3150 <xlat_clean_dcache_range+0x18>
2fff3144:	4629      	mov	r1, r5
2fff3146:	4620      	mov	r0, r4
2fff3148:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff314c:	f004 bd70 	b.w	2fff7c30 <__clean_dcache_range_from_thumb>
2fff3150:	bd38      	pop	{r3, r4, r5, pc}

2fff3152 <mmap_add_ctx>:
2fff3152:	b538      	push	{r3, r4, r5, lr}
2fff3154:	4605      	mov	r5, r0
2fff3156:	460c      	mov	r4, r1
2fff3158:	6963      	ldr	r3, [r4, #20]
2fff315a:	b903      	cbnz	r3, 2fff315e <mmap_add_ctx+0xc>
2fff315c:	bd38      	pop	{r3, r4, r5, pc}
2fff315e:	4621      	mov	r1, r4
2fff3160:	4628      	mov	r0, r5
2fff3162:	3418      	adds	r4, #24
2fff3164:	f7fa f88e 	bl	2ffed284 <mmap_add_region_ctx>
2fff3168:	e7f6      	b.n	2fff3158 <mmap_add_ctx+0x6>

2fff316a <xlat_mmap_print>:
2fff316a:	4770      	bx	lr

2fff316c <xlat_tables_print>:
2fff316c:	4770      	bx	lr

2fff316e <mdelay>:
2fff316e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2fff3172:	4358      	muls	r0, r3
2fff3174:	f7fa bb28 	b.w	2ffed7c8 <udelay>

2fff3178 <get_timer_value>:
2fff3178:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff317c:	43c0      	mvns	r0, r0
2fff317e:	4770      	bx	lr

2fff3180 <stm32mp_ddr_start_sw_done>:
2fff3180:	f8d0 3320 	ldr.w	r3, [r0, #800]	@ 0x320
2fff3184:	f023 0301 	bic.w	r3, r3, #1
2fff3188:	f8c0 3320 	str.w	r3, [r0, #800]	@ 0x320
2fff318c:	4770      	bx	lr

2fff318e <stm32mp_ddr_wait_sw_done_ack>:
2fff318e:	b538      	push	{r3, r4, r5, lr}
2fff3190:	f8d0 3320 	ldr.w	r3, [r0, #800]	@ 0x320
2fff3194:	f043 0301 	orr.w	r3, r3, #1
2fff3198:	f8c0 3320 	str.w	r3, [r0, #800]	@ 0x320
2fff319c:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2fff31a0:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff31a4:	191b      	adds	r3, r3, r4
2fff31a6:	f145 0100 	adc.w	r1, r5, #0
2fff31aa:	f8d0 2324 	ldr.w	r2, [r0, #804]	@ 0x324
2fff31ae:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff31b2:	42a3      	cmp	r3, r4
2fff31b4:	eb71 0405 	sbcs.w	r4, r1, r5
2fff31b8:	d203      	bcs.n	2fff31c2 <stm32mp_ddr_wait_sw_done_ack+0x34>
2fff31ba:	f7f9 fb1b 	bl	2ffec7f4 <console_flush>
2fff31be:	f7f6 e90e 	blx	2ffe93dc <do_panic>
2fff31c2:	07d2      	lsls	r2, r2, #31
2fff31c4:	d5f1      	bpl.n	2fff31aa <stm32mp_ddr_wait_sw_done_ack+0x1c>
2fff31c6:	bd38      	pop	{r3, r4, r5, pc}

2fff31c8 <stm32mp_ddr_enable_axi_port>:
2fff31c8:	f8d0 3490 	ldr.w	r3, [r0, #1168]	@ 0x490
2fff31cc:	f043 0301 	orr.w	r3, r3, #1
2fff31d0:	f8c0 3490 	str.w	r3, [r0, #1168]	@ 0x490
2fff31d4:	f8d0 3540 	ldr.w	r3, [r0, #1344]	@ 0x540
2fff31d8:	f043 0301 	orr.w	r3, r3, #1
2fff31dc:	f8c0 3540 	str.w	r3, [r0, #1344]	@ 0x540
2fff31e0:	4770      	bx	lr

2fff31e2 <stm32mp_ddr_disable_axi_port>:
2fff31e2:	f8d0 3490 	ldr.w	r3, [r0, #1168]	@ 0x490
2fff31e6:	b530      	push	{r4, r5, lr}
2fff31e8:	f023 0301 	bic.w	r3, r3, #1
2fff31ec:	f8c0 3490 	str.w	r3, [r0, #1168]	@ 0x490
2fff31f0:	f8d0 3540 	ldr.w	r3, [r0, #1344]	@ 0x540
2fff31f4:	f023 0301 	bic.w	r3, r3, #1
2fff31f8:	f8c0 3540 	str.w	r3, [r0, #1344]	@ 0x540
2fff31fc:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2fff3200:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff3204:	191a      	adds	r2, r3, r4
2fff3206:	f145 0100 	adc.w	r1, r5, #0
2fff320a:	f8d0 33fc 	ldr.w	r3, [r0, #1020]	@ 0x3fc
2fff320e:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff3212:	42a2      	cmp	r2, r4
2fff3214:	eb71 0405 	sbcs.w	r4, r1, r5
2fff3218:	d303      	bcc.n	2fff3222 <stm32mp_ddr_disable_axi_port+0x40>
2fff321a:	2b00      	cmp	r3, #0
2fff321c:	d1f5      	bne.n	2fff320a <stm32mp_ddr_disable_axi_port+0x28>
2fff321e:	4618      	mov	r0, r3
2fff3220:	bd30      	pop	{r4, r5, pc}
2fff3222:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff3226:	e7fb      	b.n	2fff3220 <stm32mp_ddr_disable_axi_port+0x3e>

2fff3228 <stm32mp_ddr_enable_host_interface>:
2fff3228:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2fff322c:	f023 0302 	bic.w	r3, r3, #2
2fff3230:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2fff3234:	4770      	bx	lr

2fff3236 <stm32mp_ddr_disable_host_interface>:
2fff3236:	f8d0 3304 	ldr.w	r3, [r0, #772]	@ 0x304
2fff323a:	b570      	push	{r4, r5, r6, lr}
2fff323c:	f043 0302 	orr.w	r3, r3, #2
2fff3240:	f8c0 3304 	str.w	r3, [r0, #772]	@ 0x304
2fff3244:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2fff3248:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff324c:	191b      	adds	r3, r3, r4
2fff324e:	f04f 0200 	mov.w	r2, #0
2fff3252:	f145 0600 	adc.w	r6, r5, #0
2fff3256:	f8d0 1308 	ldr.w	r1, [r0, #776]	@ 0x308
2fff325a:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff325e:	42a3      	cmp	r3, r4
2fff3260:	eb76 0405 	sbcs.w	r4, r6, r5
2fff3264:	d203      	bcs.n	2fff326e <stm32mp_ddr_disable_host_interface+0x38>
2fff3266:	f7f9 fac5 	bl	2ffec7f4 <console_flush>
2fff326a:	f7f6 e8b8 	blx	2ffe93dc <do_panic>
2fff326e:	f001 5158 	and.w	r1, r1, #905969664	@ 0x36000000
2fff3272:	3201      	adds	r2, #1
2fff3274:	f1b1 5f58 	cmp.w	r1, #905969664	@ 0x36000000
2fff3278:	d1ed      	bne.n	2fff3256 <stm32mp_ddr_disable_host_interface+0x20>
2fff327a:	2a01      	cmp	r2, #1
2fff327c:	d0eb      	beq.n	2fff3256 <stm32mp_ddr_disable_host_interface+0x20>
2fff327e:	bd70      	pop	{r4, r5, r6, pc}

2fff3280 <stm32mp_ddr_sw_selfref_exit>:
2fff3280:	6b03      	ldr	r3, [r0, #48]	@ 0x30
2fff3282:	f023 0320 	bic.w	r3, r3, #32
2fff3286:	6303      	str	r3, [r0, #48]	@ 0x30
2fff3288:	4770      	bx	lr

2fff328a <stm32mp_ddr_wait_refresh_update_done_ack>:
2fff328a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
2fff328c:	b570      	push	{r4, r5, r6, lr}
2fff328e:	f013 0302 	ands.w	r3, r3, #2
2fff3292:	bf15      	itete	ne
2fff3294:	6e03      	ldrne	r3, [r0, #96]	@ 0x60
2fff3296:	6e02      	ldreq	r2, [r0, #96]	@ 0x60
2fff3298:	f043 0302 	orrne.w	r3, r3, #2
2fff329c:	f022 0202 	biceq.w	r2, r2, #2
2fff32a0:	bf1a      	itte	ne
2fff32a2:	6603      	strne	r3, [r0, #96]	@ 0x60
2fff32a4:	2302      	movne	r3, #2
2fff32a6:	6602      	streq	r2, [r0, #96]	@ 0x60
2fff32a8:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2fff32ac:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff32b0:	1912      	adds	r2, r2, r4
2fff32b2:	f145 0600 	adc.w	r6, r5, #0
2fff32b6:	6e01      	ldr	r1, [r0, #96]	@ 0x60
2fff32b8:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff32bc:	42a2      	cmp	r2, r4
2fff32be:	eb76 0405 	sbcs.w	r4, r6, r5
2fff32c2:	d203      	bcs.n	2fff32cc <stm32mp_ddr_wait_refresh_update_done_ack+0x42>
2fff32c4:	f7f9 fa96 	bl	2ffec7f4 <console_flush>
2fff32c8:	f7f6 e888 	blx	2ffe93dc <do_panic>
2fff32cc:	f001 0102 	and.w	r1, r1, #2
2fff32d0:	4299      	cmp	r1, r3
2fff32d2:	d1f0      	bne.n	2fff32b6 <stm32mp_ddr_wait_refresh_update_done_ack+0x2c>
2fff32d4:	bd70      	pop	{r4, r5, r6, pc}

2fff32d6 <fdt32_to_cpu>:
2fff32d6:	ba00      	rev	r0, r0
2fff32d8:	4770      	bx	lr

2fff32da <nvmem_cell_read>:
2fff32da:	b410      	push	{r4}
2fff32dc:	6884      	ldr	r4, [r0, #8]
2fff32de:	6824      	ldr	r4, [r4, #0]
2fff32e0:	6824      	ldr	r4, [r4, #0]
2fff32e2:	b114      	cbz	r4, 2fff32ea <nvmem_cell_read+0x10>
2fff32e4:	46a4      	mov	ip, r4
2fff32e6:	bc10      	pop	{r4}
2fff32e8:	4760      	bx	ip
2fff32ea:	bc10      	pop	{r4}
2fff32ec:	f06f 002c 	mvn.w	r0, #44	@ 0x2c
2fff32f0:	4770      	bx	lr

2fff32f2 <nvmem_cell_write>:
2fff32f2:	6883      	ldr	r3, [r0, #8]
2fff32f4:	681b      	ldr	r3, [r3, #0]
2fff32f6:	685b      	ldr	r3, [r3, #4]
2fff32f8:	b103      	cbz	r3, 2fff32fc <nvmem_cell_write+0xa>
2fff32fa:	4718      	bx	r3
2fff32fc:	f06f 002c 	mvn.w	r0, #44	@ 0x2c
2fff3300:	4770      	bx	lr

2fff3302 <fdt32_to_cpu>:
2fff3302:	ba00      	rev	r0, r0
2fff3304:	4770      	bx	lr

2fff3306 <stm32_tamp_nvram_reg_get_zone>:
2fff3306:	6a43      	ldr	r3, [r0, #36]	@ 0x24
2fff3308:	69c2      	ldr	r2, [r0, #28]
2fff330a:	2000      	movs	r0, #0
2fff330c:	681b      	ldr	r3, [r3, #0]
2fff330e:	b510      	push	{r4, lr}
2fff3310:	4298      	cmp	r0, r3
2fff3312:	d102      	bne.n	2fff331a <stm32_tamp_nvram_reg_get_zone+0x14>
2fff3314:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff3318:	e007      	b.n	2fff332a <stm32_tamp_nvram_reg_get_zone+0x24>
2fff331a:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
2fff331e:	428c      	cmp	r4, r1
2fff3320:	db04      	blt.n	2fff332c <stm32_tamp_nvram_reg_get_zone+0x26>
2fff3322:	4298      	cmp	r0, r3
2fff3324:	bf28      	it	cs
2fff3326:	f04f 30ff 	movcs.w	r0, #4294967295	@ 0xffffffff
2fff332a:	bd10      	pop	{r4, pc}
2fff332c:	3001      	adds	r0, #1
2fff332e:	e7ef      	b.n	2fff3310 <stm32_tamp_nvram_reg_get_zone+0xa>

2fff3330 <stm32_tamp_nvram_reg_field_read>:
2fff3330:	b084      	sub	sp, #16
2fff3332:	f10d 0c10 	add.w	ip, sp, #16
2fff3336:	e90c 000e 	stmdb	ip, {r1, r2, r3}
2fff333a:	9b01      	ldr	r3, [sp, #4]
2fff333c:	4611      	mov	r1, r2
2fff333e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
2fff3342:	58c0      	ldr	r0, [r0, r3]
2fff3344:	9b03      	ldr	r3, [sp, #12]
2fff3346:	f1c3 031f 	rsb	r3, r3, #31
2fff334a:	fa22 f303 	lsr.w	r3, r2, r3
2fff334e:	408a      	lsls	r2, r1
2fff3350:	4013      	ands	r3, r2
2fff3352:	9a04      	ldr	r2, [sp, #16]
2fff3354:	4003      	ands	r3, r0
2fff3356:	2000      	movs	r0, #0
2fff3358:	40cb      	lsrs	r3, r1
2fff335a:	6013      	str	r3, [r2, #0]
2fff335c:	b004      	add	sp, #16
2fff335e:	4770      	bx	lr

2fff3360 <fdt32_to_cpu>:
2fff3360:	ba00      	rev	r0, r0
2fff3362:	4770      	bx	lr

2fff3364 <unlock_driver.isra.0>:
2fff3364:	6843      	ldr	r3, [r0, #4]
2fff3366:	69db      	ldr	r3, [r3, #28]
2fff3368:	b103      	cbz	r3, 2fff336c <unlock_driver.isra.0+0x8>
2fff336a:	4718      	bx	r3
2fff336c:	4770      	bx	lr

2fff336e <lock_driver.isra.0>:
2fff336e:	6843      	ldr	r3, [r0, #4]
2fff3370:	699b      	ldr	r3, [r3, #24]
2fff3372:	b103      	cbz	r3, 2fff3376 <lock_driver.isra.0+0x8>
2fff3374:	4718      	bx	r3
2fff3376:	4770      	bx	lr

2fff3378 <regulator_set_min_voltage>:
2fff3378:	8901      	ldrh	r1, [r0, #8]
2fff337a:	f7fb b8c5 	b.w	2ffee508 <regulator_set_voltage>

2fff337e <fixed_set_state>:
2fff337e:	2000      	movs	r0, #0
2fff3380:	4770      	bx	lr

2fff3382 <fixed_get_state>:
2fff3382:	2001      	movs	r0, #1
2fff3384:	4770      	bx	lr

2fff3386 <fdt32_to_cpu>:
2fff3386:	ba00      	rev	r0, r0
2fff3388:	4770      	bx	lr

2fff338a <dt_get_pwr_vdd_voltage>:
2fff338a:	b507      	push	{r0, r1, r2, lr}
2fff338c:	f7fb fc1e 	bl	2ffeebcc <dt_get_vdd_regulator>
2fff3390:	b148      	cbz	r0, 2fff33a6 <dt_get_pwr_vdd_voltage+0x1c>
2fff3392:	2200      	movs	r2, #0
2fff3394:	f10d 0106 	add.w	r1, sp, #6
2fff3398:	f7fb f95c 	bl	2ffee654 <regulator_get_range>
2fff339c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
2fff33a0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
2fff33a4:	4358      	muls	r0, r3
2fff33a6:	b003      	add	sp, #12
2fff33a8:	f85d fb04 	ldr.w	pc, [sp], #4

2fff33ac <stm32mp_is_wakeup_from_standby>:
2fff33ac:	2000      	movs	r0, #0
2fff33ae:	4770      	bx	lr

2fff33b0 <stm32mp_skip_boot_device_after_standby>:
2fff33b0:	2000      	movs	r0, #0
2fff33b2:	4770      	bx	lr

2fff33b4 <bsec_read_otp>:
2fff33b4:	b538      	push	{r3, r4, r5, lr}
2fff33b6:	4605      	mov	r5, r0
2fff33b8:	460c      	mov	r4, r1
2fff33ba:	f7fc f839 	bl	2ffef430 <is_otp_invalid_mode>
2fff33be:	b948      	cbnz	r0, 2fff33d4 <bsec_read_otp+0x20>
2fff33c0:	2c5f      	cmp	r4, #95	@ 0x5f
2fff33c2:	d80a      	bhi.n	2fff33da <bsec_read_otp+0x26>
2fff33c4:	f104 51b8 	add.w	r1, r4, #385875968	@ 0x17000000
2fff33c8:	f501 51a4 	add.w	r1, r1, #5248	@ 0x1480
2fff33cc:	0089      	lsls	r1, r1, #2
2fff33ce:	680b      	ldr	r3, [r1, #0]
2fff33d0:	602b      	str	r3, [r5, #0]
2fff33d2:	bd38      	pop	{r3, r4, r5, pc}
2fff33d4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff33d8:	e7fb      	b.n	2fff33d2 <bsec_read_otp+0x1e>
2fff33da:	f06f 0003 	mvn.w	r0, #3
2fff33de:	e7f8      	b.n	2fff33d2 <bsec_read_otp+0x1e>

2fff33e0 <ddr_enable_clock>:
2fff33e0:	b508      	push	{r3, lr}
2fff33e2:	f7fe f957 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2fff33e6:	f7ff fd9b 	bl	2fff2f20 <stm32mp_rcc_base>
2fff33ea:	f8d0 30d8 	ldr.w	r3, [r0, #216]	@ 0xd8
2fff33ee:	f443 7315 	orr.w	r3, r3, #596	@ 0x254
2fff33f2:	f043 0301 	orr.w	r3, r3, #1
2fff33f6:	f8c0 30d8 	str.w	r3, [r0, #216]	@ 0xd8
2fff33fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff33fe:	f7fe b94f 	b.w	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>

2fff3402 <ddr_get_io_calibration_val>:
2fff3402:	b508      	push	{r3, lr}
2fff3404:	f7f9 faca 	bl	2ffec99c <stm32mp_ddrphyc_base>
2fff3408:	f8d0 0180 	ldr.w	r0, [r0, #384]	@ 0x180
2fff340c:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
2fff3410:	bd08      	pop	{r3, pc}

2fff3412 <ddr_standby_sr_entry>:
2fff3412:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff3416:	f7f9 fac5 	bl	2ffec9a4 <stm32mp_pwr_base>
2fff341a:	4680      	mov	r8, r0
2fff341c:	f7ff fd80 	bl	2fff2f20 <stm32mp_rcc_base>
2fff3420:	4605      	mov	r5, r0
2fff3422:	f7f9 fabf 	bl	2ffec9a4 <stm32mp_pwr_base>
2fff3426:	4681      	mov	r9, r0
2fff3428:	f7f9 fab4 	bl	2ffec994 <stm32mp_ddrctrl_base>
2fff342c:	4606      	mov	r6, r0
2fff342e:	f7f9 fab5 	bl	2ffec99c <stm32mp_ddrphyc_base>
2fff3432:	4604      	mov	r4, r0
2fff3434:	f7fe f92e 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2fff3438:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2fff343c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
2fff3440:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2fff3444:	f7fe f92c 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2fff3448:	4630      	mov	r0, r6
2fff344a:	f7ff feca 	bl	2fff31e2 <stm32mp_ddr_disable_axi_port>
2fff344e:	b938      	cbnz	r0, 2fff3460 <ddr_standby_sr_entry+0x4e>
2fff3450:	4630      	mov	r0, r6
2fff3452:	f7fa fb6b 	bl	2ffedb2c <stm32mp_ddr_sw_selfref_entry>
2fff3456:	4607      	mov	r7, r0
2fff3458:	b140      	cbz	r0, 2fff346c <ddr_standby_sr_entry+0x5a>
2fff345a:	4630      	mov	r0, r6
2fff345c:	f7ff ff10 	bl	2fff3280 <stm32mp_ddr_sw_selfref_exit>
2fff3460:	4630      	mov	r0, r6
2fff3462:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
2fff3466:	f7ff feaf 	bl	2fff31c8 <stm32mp_ddr_enable_axi_port>
2fff346a:	e08e      	b.n	2fff358a <ddr_standby_sr_entry+0x178>
2fff346c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff346e:	200a      	movs	r0, #10
2fff3470:	f043 0308 	orr.w	r3, r3, #8
2fff3474:	6263      	str	r3, [r4, #36]	@ 0x24
2fff3476:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff3478:	f043 0310 	orr.w	r3, r3, #16
2fff347c:	6263      	str	r3, [r4, #36]	@ 0x24
2fff347e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff3480:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
2fff3484:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
2fff3488:	6263      	str	r3, [r4, #36]	@ 0x24
2fff348a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff348c:	f423 5360 	bic.w	r3, r3, #14336	@ 0x3800
2fff3490:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
2fff3494:	6263      	str	r3, [r4, #36]	@ 0x24
2fff3496:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff3498:	f423 1370 	bic.w	r3, r3, #3932160	@ 0x3c0000
2fff349c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
2fff34a0:	6263      	str	r3, [r4, #36]	@ 0x24
2fff34a2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
2fff34a4:	f023 0302 	bic.w	r3, r3, #2
2fff34a8:	6263      	str	r3, [r4, #36]	@ 0x24
2fff34aa:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2fff34ac:	f043 0304 	orr.w	r3, r3, #4
2fff34b0:	62a3      	str	r3, [r4, #40]	@ 0x28
2fff34b2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
2fff34b4:	f043 0308 	orr.w	r3, r3, #8
2fff34b8:	62a3      	str	r3, [r4, #40]	@ 0x28
2fff34ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2fff34bc:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
2fff34c0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
2fff34c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
2fff34c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2fff34c8:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2fff34cc:	62e3      	str	r3, [r4, #44]	@ 0x2c
2fff34ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2fff34d0:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
2fff34d4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
2fff34d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
2fff34da:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
2fff34de:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff34e2:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
2fff34e6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
2fff34e8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
2fff34ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
2fff34ee:	f7fa f96b 	bl	2ffed7c8 <udelay>
2fff34f2:	f7f9 fa5b 	bl	2ffec9ac <stm32mp_pwr_regs_lock>
2fff34f6:	f8d9 300c 	ldr.w	r3, [r9, #12]
2fff34fa:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
2fff34fe:	f8c9 300c 	str.w	r3, [r9, #12]
2fff3502:	f7f9 fa5f 	bl	2ffec9c4 <stm32mp_pwr_regs_unlock>
2fff3506:	f7fe f8c5 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2fff350a:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2fff350e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
2fff3512:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2fff3516:	f7fe f8c3 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2fff351a:	6963      	ldr	r3, [r4, #20]
2fff351c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff3520:	6163      	str	r3, [r4, #20]
2fff3522:	f8d4 31cc 	ldr.w	r3, [r4, #460]	@ 0x1cc
2fff3526:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff352a:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
2fff352e:	f8d4 320c 	ldr.w	r3, [r4, #524]	@ 0x20c
2fff3532:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff3536:	f8c4 320c 	str.w	r3, [r4, #524]	@ 0x20c
2fff353a:	f8d4 324c 	ldr.w	r3, [r4, #588]	@ 0x24c
2fff353e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff3542:	f8c4 324c 	str.w	r3, [r4, #588]	@ 0x24c
2fff3546:	f8d4 328c 	ldr.w	r3, [r4, #652]	@ 0x28c
2fff354a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
2fff354e:	f8c4 328c 	str.w	r3, [r4, #652]	@ 0x28c
2fff3552:	f7fe f89f 	bl	2fff1694 <stm32mp1_clk_rcc_regs_lock>
2fff3556:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2fff355a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
2fff355e:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2fff3562:	f8d5 30d8 	ldr.w	r3, [r5, #216]	@ 0xd8
2fff3566:	f423 7311 	bic.w	r3, r3, #580	@ 0x244
2fff356a:	f023 0301 	bic.w	r3, r3, #1
2fff356e:	f8c5 30d8 	str.w	r3, [r5, #216]	@ 0xd8
2fff3572:	f7fe f895 	bl	2fff16a0 <stm32mp1_clk_rcc_regs_unlock>
2fff3576:	f7f9 fa19 	bl	2ffec9ac <stm32mp_pwr_regs_lock>
2fff357a:	f8d8 300c 	ldr.w	r3, [r8, #12]
2fff357e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
2fff3582:	f8c8 300c 	str.w	r3, [r8, #12]
2fff3586:	f7f9 fa1d 	bl	2ffec9c4 <stm32mp_pwr_regs_unlock>
2fff358a:	4638      	mov	r0, r7
2fff358c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

2fff3590 <i2c_wait_flag>:
2fff3590:	6803      	ldr	r3, [r0, #0]
2fff3592:	f002 0201 	and.w	r2, r2, #1
2fff3596:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff3598:	3318      	adds	r3, #24
2fff359a:	9f05      	ldr	r7, [sp, #20]
2fff359c:	9e06      	ldr	r6, [sp, #24]
2fff359e:	681c      	ldr	r4, [r3, #0]
2fff35a0:	4221      	tst	r1, r4
2fff35a2:	bf14      	ite	ne
2fff35a4:	2401      	movne	r4, #1
2fff35a6:	2400      	moveq	r4, #0
2fff35a8:	4294      	cmp	r4, r2
2fff35aa:	d111      	bne.n	2fff35d0 <i2c_wait_flag+0x40>
2fff35ac:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff35b0:	42a7      	cmp	r7, r4
2fff35b2:	eb76 0405 	sbcs.w	r4, r6, r5
2fff35b6:	d2f2      	bcs.n	2fff359e <i2c_wait_flag+0xe>
2fff35b8:	6983      	ldr	r3, [r0, #24]
2fff35ba:	2220      	movs	r2, #32
2fff35bc:	6102      	str	r2, [r0, #16]
2fff35be:	f043 0320 	orr.w	r3, r3, #32
2fff35c2:	6183      	str	r3, [r0, #24]
2fff35c4:	2300      	movs	r3, #0
2fff35c6:	6143      	str	r3, [r0, #20]
2fff35c8:	7303      	strb	r3, [r0, #12]
2fff35ca:	f06f 0004 	mvn.w	r0, #4
2fff35ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff35d0:	2000      	movs	r0, #0
2fff35d2:	e7fc      	b.n	2fff35ce <i2c_wait_flag+0x3e>

2fff35d4 <i2c_ack_failed>:
2fff35d4:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff35d6:	4601      	mov	r1, r0
2fff35d8:	6804      	ldr	r4, [r0, #0]
2fff35da:	69a0      	ldr	r0, [r4, #24]
2fff35dc:	f104 0518 	add.w	r5, r4, #24
2fff35e0:	f010 0010 	ands.w	r0, r0, #16
2fff35e4:	d03b      	beq.n	2fff365e <i2c_ack_failed+0x8a>
2fff35e6:	6828      	ldr	r0, [r5, #0]
2fff35e8:	f010 0020 	ands.w	r0, r0, #32
2fff35ec:	d026      	beq.n	2fff363c <i2c_ack_failed+0x68>
2fff35ee:	2310      	movs	r3, #16
2fff35f0:	2220      	movs	r2, #32
2fff35f2:	61e3      	str	r3, [r4, #28]
2fff35f4:	680b      	ldr	r3, [r1, #0]
2fff35f6:	61da      	str	r2, [r3, #28]
2fff35f8:	680b      	ldr	r3, [r1, #0]
2fff35fa:	699a      	ldr	r2, [r3, #24]
2fff35fc:	0794      	lsls	r4, r2, #30
2fff35fe:	bf44      	itt	mi
2fff3600:	2200      	movmi	r2, #0
2fff3602:	629a      	strmi	r2, [r3, #40]	@ 0x28
2fff3604:	680b      	ldr	r3, [r1, #0]
2fff3606:	699a      	ldr	r2, [r3, #24]
2fff3608:	07d0      	lsls	r0, r2, #31
2fff360a:	bf5e      	ittt	pl
2fff360c:	699a      	ldrpl	r2, [r3, #24]
2fff360e:	f042 0201 	orrpl.w	r2, r2, #1
2fff3612:	619a      	strpl	r2, [r3, #24]
2fff3614:	680a      	ldr	r2, [r1, #0]
2fff3616:	6853      	ldr	r3, [r2, #4]
2fff3618:	f023 73ff 	bic.w	r3, r3, #33423360	@ 0x1fe0000
2fff361c:	f423 338b 	bic.w	r3, r3, #71168	@ 0x11600
2fff3620:	f423 73ff 	bic.w	r3, r3, #510	@ 0x1fe
2fff3624:	f023 0301 	bic.w	r3, r3, #1
2fff3628:	6053      	str	r3, [r2, #4]
2fff362a:	698b      	ldr	r3, [r1, #24]
2fff362c:	f043 0304 	orr.w	r3, r3, #4
2fff3630:	618b      	str	r3, [r1, #24]
2fff3632:	2320      	movs	r3, #32
2fff3634:	610b      	str	r3, [r1, #16]
2fff3636:	2300      	movs	r3, #0
2fff3638:	614b      	str	r3, [r1, #20]
2fff363a:	e00c      	b.n	2fff3656 <i2c_ack_failed+0x82>
2fff363c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff3640:	42b2      	cmp	r2, r6
2fff3642:	eb73 0607 	sbcs.w	r6, r3, r7
2fff3646:	d2ce      	bcs.n	2fff35e6 <i2c_ack_failed+0x12>
2fff3648:	698b      	ldr	r3, [r1, #24]
2fff364a:	6148      	str	r0, [r1, #20]
2fff364c:	f043 0320 	orr.w	r3, r3, #32
2fff3650:	618b      	str	r3, [r1, #24]
2fff3652:	2320      	movs	r3, #32
2fff3654:	610b      	str	r3, [r1, #16]
2fff3656:	f06f 0004 	mvn.w	r0, #4
2fff365a:	2300      	movs	r3, #0
2fff365c:	730b      	strb	r3, [r1, #12]
2fff365e:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff3660 <i2c_wait_txis>:
2fff3660:	b570      	push	{r4, r5, r6, lr}
2fff3662:	4604      	mov	r4, r0
2fff3664:	4615      	mov	r5, r2
2fff3666:	461e      	mov	r6, r3
2fff3668:	6823      	ldr	r3, [r4, #0]
2fff366a:	699b      	ldr	r3, [r3, #24]
2fff366c:	079b      	lsls	r3, r3, #30
2fff366e:	d501      	bpl.n	2fff3674 <i2c_wait_txis+0x14>
2fff3670:	2000      	movs	r0, #0
2fff3672:	e015      	b.n	2fff36a0 <i2c_wait_txis+0x40>
2fff3674:	462a      	mov	r2, r5
2fff3676:	4633      	mov	r3, r6
2fff3678:	4620      	mov	r0, r4
2fff367a:	f7ff ffab 	bl	2fff35d4 <i2c_ack_failed>
2fff367e:	b968      	cbnz	r0, 2fff369c <i2c_wait_txis+0x3c>
2fff3680:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff3684:	4295      	cmp	r5, r2
2fff3686:	eb76 0303 	sbcs.w	r3, r6, r3
2fff368a:	d2ed      	bcs.n	2fff3668 <i2c_wait_txis+0x8>
2fff368c:	69a3      	ldr	r3, [r4, #24]
2fff368e:	6160      	str	r0, [r4, #20]
2fff3690:	7320      	strb	r0, [r4, #12]
2fff3692:	f043 0320 	orr.w	r3, r3, #32
2fff3696:	61a3      	str	r3, [r4, #24]
2fff3698:	2320      	movs	r3, #32
2fff369a:	6123      	str	r3, [r4, #16]
2fff369c:	f06f 0004 	mvn.w	r0, #4
2fff36a0:	bd70      	pop	{r4, r5, r6, pc}

2fff36a2 <i2c_wait_stop>:
2fff36a2:	b570      	push	{r4, r5, r6, lr}
2fff36a4:	4604      	mov	r4, r0
2fff36a6:	4615      	mov	r5, r2
2fff36a8:	461e      	mov	r6, r3
2fff36aa:	6823      	ldr	r3, [r4, #0]
2fff36ac:	699b      	ldr	r3, [r3, #24]
2fff36ae:	069b      	lsls	r3, r3, #26
2fff36b0:	d501      	bpl.n	2fff36b6 <i2c_wait_stop+0x14>
2fff36b2:	2000      	movs	r0, #0
2fff36b4:	e015      	b.n	2fff36e2 <i2c_wait_stop+0x40>
2fff36b6:	462a      	mov	r2, r5
2fff36b8:	4633      	mov	r3, r6
2fff36ba:	4620      	mov	r0, r4
2fff36bc:	f7ff ff8a 	bl	2fff35d4 <i2c_ack_failed>
2fff36c0:	b968      	cbnz	r0, 2fff36de <i2c_wait_stop+0x3c>
2fff36c2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff36c6:	4295      	cmp	r5, r2
2fff36c8:	eb76 0303 	sbcs.w	r3, r6, r3
2fff36cc:	d2ed      	bcs.n	2fff36aa <i2c_wait_stop+0x8>
2fff36ce:	69a3      	ldr	r3, [r4, #24]
2fff36d0:	6160      	str	r0, [r4, #20]
2fff36d2:	7320      	strb	r0, [r4, #12]
2fff36d4:	f043 0320 	orr.w	r3, r3, #32
2fff36d8:	61a3      	str	r3, [r4, #24]
2fff36da:	2320      	movs	r3, #32
2fff36dc:	6123      	str	r3, [r4, #16]
2fff36de:	f06f 0004 	mvn.w	r0, #4
2fff36e2:	bd70      	pop	{r4, r5, r6, pc}

2fff36e4 <stm32_i2c_mem_write>:
2fff36e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff36e6:	2440      	movs	r4, #64	@ 0x40
2fff36e8:	9403      	str	r4, [sp, #12]
2fff36ea:	9c08      	ldr	r4, [sp, #32]
2fff36ec:	9402      	str	r4, [sp, #8]
2fff36ee:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2fff36f2:	9401      	str	r4, [sp, #4]
2fff36f4:	9c06      	ldr	r4, [sp, #24]
2fff36f6:	9400      	str	r4, [sp, #0]
2fff36f8:	f7fc fb84 	bl	2ffefe04 <i2c_write>
2fff36fc:	b004      	add	sp, #16
2fff36fe:	bd10      	pop	{r4, pc}

2fff3700 <stm32_i2c_mem_read>:
2fff3700:	b430      	push	{r4, r5}
2fff3702:	2540      	movs	r5, #64	@ 0x40
2fff3704:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2fff3708:	9504      	str	r5, [sp, #16]
2fff370a:	9403      	str	r4, [sp, #12]
2fff370c:	bc30      	pop	{r4, r5}
2fff370e:	f7fc ba81 	b.w	2ffefc14 <i2c_read.constprop.0>

2fff3712 <pmic_list_voltages>:
2fff3712:	6800      	ldr	r0, [r0, #0]
2fff3714:	f7fd b942 	b.w	2fff099c <stpmic1_regulator_levels_mv>

2fff3718 <pmic_get_voltage>:
2fff3718:	6800      	ldr	r0, [r0, #0]
2fff371a:	f7fd b973 	b.w	2fff0a04 <stpmic1_regulator_voltage_get>

2fff371e <pmic_set_voltage>:
2fff371e:	6800      	ldr	r0, [r0, #0]
2fff3720:	f7fd b9e8 	b.w	2fff0af4 <stpmic1_regulator_voltage_set>

2fff3724 <pmic_get_state>:
2fff3724:	b508      	push	{r3, lr}
2fff3726:	6800      	ldr	r0, [r0, #0]
2fff3728:	f000 f836 	bl	2fff3798 <stpmic1_is_regulator_enabled>
2fff372c:	bd08      	pop	{r3, pc}

2fff372e <pmic_set_flag>:
2fff372e:	2920      	cmp	r1, #32
2fff3730:	d019      	beq.n	2fff3766 <pmic_set_flag+0x38>
2fff3732:	d808      	bhi.n	2fff3746 <pmic_set_flag+0x18>
2fff3734:	2908      	cmp	r1, #8
2fff3736:	d010      	beq.n	2fff375a <pmic_set_flag+0x2c>
2fff3738:	2910      	cmp	r1, #16
2fff373a:	d011      	beq.n	2fff3760 <pmic_set_flag+0x32>
2fff373c:	2904      	cmp	r1, #4
2fff373e:	d009      	beq.n	2fff3754 <pmic_set_flag+0x26>
2fff3740:	f06f 0015 	mvn.w	r0, #21
2fff3744:	4770      	bx	lr
2fff3746:	2940      	cmp	r1, #64	@ 0x40
2fff3748:	d010      	beq.n	2fff376c <pmic_set_flag+0x3e>
2fff374a:	2980      	cmp	r1, #128	@ 0x80
2fff374c:	d1f8      	bne.n	2fff3740 <pmic_set_flag+0x12>
2fff374e:	6800      	ldr	r0, [r0, #0]
2fff3750:	f7fd ba34 	b.w	2fff0bbc <stpmic1_regulator_bypass_mode_set>
2fff3754:	6800      	ldr	r0, [r0, #0]
2fff3756:	f000 b88f 	b.w	2fff3878 <stpmic1_regulator_icc_set>
2fff375a:	6800      	ldr	r0, [r0, #0]
2fff375c:	f7fd ba46 	b.w	2fff0bec <stpmic1_active_discharge_mode_set>
2fff3760:	6800      	ldr	r0, [r0, #0]
2fff3762:	f000 b865 	b.w	2fff3830 <stpmic1_regulator_pull_down_set>
2fff3766:	6800      	ldr	r0, [r0, #0]
2fff3768:	f000 b874 	b.w	2fff3854 <stpmic1_regulator_mask_reset_set>
2fff376c:	6800      	ldr	r0, [r0, #0]
2fff376e:	f7fd ba0d 	b.w	2fff0b8c <stpmic1_regulator_sink_mode_set>

2fff3772 <pmic_set_state>:
2fff3772:	6800      	ldr	r0, [r0, #0]
2fff3774:	b109      	cbz	r1, 2fff377a <pmic_set_state+0x8>
2fff3776:	f000 b847 	b.w	2fff3808 <stpmic1_regulator_enable>
2fff377a:	f000 b84f 	b.w	2fff381c <stpmic1_regulator_disable>

2fff377e <pmic_voltages_init>:
2fff377e:	2000      	movs	r0, #0
2fff3780:	4770      	bx	lr

2fff3782 <pmic_switch_off>:
2fff3782:	b508      	push	{r3, lr}
2fff3784:	f000 f83b 	bl	2fff37fe <stpmic1_switch_off>
2fff3788:	b910      	cbnz	r0, 2fff3790 <pmic_switch_off+0xe>
2fff378a:	2064      	movs	r0, #100	@ 0x64
2fff378c:	f7fa f81c 	bl	2ffed7c8 <udelay>
2fff3790:	f7f9 f830 	bl	2ffec7f4 <console_flush>
2fff3794:	f7f5 ee22 	blx	2ffe93dc <do_panic>

2fff3798 <stpmic1_is_regulator_enabled>:
2fff3798:	b513      	push	{r0, r1, r4, lr}
2fff379a:	f7fd f8dd 	bl	2fff0958 <get_regulator_data>
2fff379e:	4604      	mov	r4, r0
2fff37a0:	f10d 0107 	add.w	r1, sp, #7
2fff37a4:	7a40      	ldrb	r0, [r0, #9]
2fff37a6:	f7fd f919 	bl	2fff09dc <stpmic1_register_read>
2fff37aa:	b118      	cbz	r0, 2fff37b4 <stpmic1_is_regulator_enabled+0x1c>
2fff37ac:	f7f9 f822 	bl	2ffec7f4 <console_flush>
2fff37b0:	f7f5 ee14 	blx	2ffe93dc <do_panic>
2fff37b4:	7aa3      	ldrb	r3, [r4, #10]
2fff37b6:	f89d 2007 	ldrb.w	r2, [sp, #7]
2fff37ba:	4393      	bics	r3, r2
2fff37bc:	bf0c      	ite	eq
2fff37be:	2001      	moveq	r0, #1
2fff37c0:	2000      	movne	r0, #0
2fff37c2:	b002      	add	sp, #8
2fff37c4:	bd10      	pop	{r4, pc}

2fff37c6 <stpmic1_register_update>:
2fff37c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff37c8:	460e      	mov	r6, r1
2fff37ca:	f10d 0107 	add.w	r1, sp, #7
2fff37ce:	4605      	mov	r5, r0
2fff37d0:	4614      	mov	r4, r2
2fff37d2:	f7fd f903 	bl	2fff09dc <stpmic1_register_read>
2fff37d6:	b958      	cbnz	r0, 2fff37f0 <stpmic1_register_update+0x2a>
2fff37d8:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff37dc:	4628      	mov	r0, r5
2fff37de:	ea23 0304 	bic.w	r3, r3, r4
2fff37e2:	4034      	ands	r4, r6
2fff37e4:	ea43 0104 	orr.w	r1, r3, r4
2fff37e8:	f88d 1007 	strb.w	r1, [sp, #7]
2fff37ec:	f7fd f952 	bl	2fff0a94 <stpmic1_register_write>
2fff37f0:	b002      	add	sp, #8
2fff37f2:	bd70      	pop	{r4, r5, r6, pc}

2fff37f4 <stpmic1_powerctrl_on>:
2fff37f4:	2204      	movs	r2, #4
2fff37f6:	2010      	movs	r0, #16
2fff37f8:	4611      	mov	r1, r2
2fff37fa:	f7ff bfe4 	b.w	2fff37c6 <stpmic1_register_update>

2fff37fe <stpmic1_switch_off>:
2fff37fe:	2201      	movs	r2, #1
2fff3800:	2010      	movs	r0, #16
2fff3802:	4611      	mov	r1, r2
2fff3804:	f7ff bfdf 	b.w	2fff37c6 <stpmic1_register_update>

2fff3808 <stpmic1_regulator_enable>:
2fff3808:	b508      	push	{r3, lr}
2fff380a:	f7fd f8a5 	bl	2fff0958 <get_regulator_data>
2fff380e:	7a82      	ldrb	r2, [r0, #10]
2fff3810:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3814:	7a40      	ldrb	r0, [r0, #9]
2fff3816:	4611      	mov	r1, r2
2fff3818:	f7ff bfd5 	b.w	2fff37c6 <stpmic1_register_update>

2fff381c <stpmic1_regulator_disable>:
2fff381c:	b508      	push	{r3, lr}
2fff381e:	f7fd f89b 	bl	2fff0958 <get_regulator_data>
2fff3822:	7a82      	ldrb	r2, [r0, #10]
2fff3824:	2100      	movs	r1, #0
2fff3826:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff382a:	7a40      	ldrb	r0, [r0, #9]
2fff382c:	f7ff bfcb 	b.w	2fff37c6 <stpmic1_register_update>

2fff3830 <stpmic1_regulator_pull_down_set>:
2fff3830:	b508      	push	{r3, lr}
2fff3832:	f7fd f891 	bl	2fff0958 <get_regulator_data>
2fff3836:	4603      	mov	r3, r0
2fff3838:	7b00      	ldrb	r0, [r0, #12]
2fff383a:	b150      	cbz	r0, 2fff3852 <stpmic1_regulator_pull_down_set+0x22>
2fff383c:	7b5b      	ldrb	r3, [r3, #13]
2fff383e:	2203      	movs	r2, #3
2fff3840:	2101      	movs	r1, #1
2fff3842:	409a      	lsls	r2, r3
2fff3844:	4099      	lsls	r1, r3
2fff3846:	b2d2      	uxtb	r2, r2
2fff3848:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff384c:	b2c9      	uxtb	r1, r1
2fff384e:	f7ff bfba 	b.w	2fff37c6 <stpmic1_register_update>
2fff3852:	bd08      	pop	{r3, pc}

2fff3854 <stpmic1_regulator_mask_reset_set>:
2fff3854:	b508      	push	{r3, lr}
2fff3856:	f7fd f87f 	bl	2fff0958 <get_regulator_data>
2fff385a:	4603      	mov	r3, r0
2fff385c:	7b80      	ldrb	r0, [r0, #14]
2fff385e:	b140      	cbz	r0, 2fff3872 <stpmic1_regulator_mask_reset_set+0x1e>
2fff3860:	7bdb      	ldrb	r3, [r3, #15]
2fff3862:	2201      	movs	r2, #1
2fff3864:	409a      	lsls	r2, r3
2fff3866:	b2d2      	uxtb	r2, r2
2fff3868:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff386c:	4611      	mov	r1, r2
2fff386e:	f7ff bfaa 	b.w	2fff37c6 <stpmic1_register_update>
2fff3872:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff3876:	bd08      	pop	{r3, pc}

2fff3878 <stpmic1_regulator_icc_set>:
2fff3878:	b508      	push	{r3, lr}
2fff387a:	f7fd f86d 	bl	2fff0958 <get_regulator_data>
2fff387e:	7b83      	ldrb	r3, [r0, #14]
2fff3880:	b14b      	cbz	r3, 2fff3896 <stpmic1_regulator_icc_set+0x1e>
2fff3882:	7c43      	ldrb	r3, [r0, #17]
2fff3884:	2201      	movs	r2, #1
2fff3886:	7c00      	ldrb	r0, [r0, #16]
2fff3888:	409a      	lsls	r2, r3
2fff388a:	b2d2      	uxtb	r2, r2
2fff388c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3890:	4611      	mov	r1, r2
2fff3892:	f7ff bf98 	b.w	2fff37c6 <stpmic1_register_update>
2fff3896:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff389a:	bd08      	pop	{r3, pc}

2fff389c <stpmic1_get_version>:
2fff389c:	b513      	push	{r0, r1, r4, lr}
2fff389e:	4604      	mov	r4, r0
2fff38a0:	f10d 0107 	add.w	r1, sp, #7
2fff38a4:	2006      	movs	r0, #6
2fff38a6:	f7fd f899 	bl	2fff09dc <stpmic1_register_read>
2fff38aa:	2800      	cmp	r0, #0
2fff38ac:	bfa2      	ittt	ge
2fff38ae:	2000      	movge	r0, #0
2fff38b0:	f89d 3007 	ldrbge.w	r3, [sp, #7]
2fff38b4:	6023      	strge	r3, [r4, #0]
2fff38b6:	b002      	add	sp, #8
2fff38b8:	bd10      	pop	{r4, pc}

2fff38ba <stm32mp_system_reset>:
2fff38ba:	b508      	push	{r3, lr}
2fff38bc:	f7ff fb30 	bl	2fff2f20 <stm32mp_rcc_base>
2fff38c0:	f8d0 3404 	ldr.w	r3, [r0, #1028]	@ 0x404
2fff38c4:	f043 0301 	orr.w	r3, r3, #1
2fff38c8:	f8c0 3404 	str.w	r3, [r0, #1028]	@ 0x404
2fff38cc:	e7fe      	b.n	2fff38cc <stm32mp_system_reset+0x12>

2fff38ce <stm32_clean_context>:
2fff38ce:	b508      	push	{r3, lr}
2fff38d0:	f7fb fc68 	bl	2ffef1a4 <stm32mp_bkpram_get_access>
2fff38d4:	b160      	cbz	r0, 2fff38f0 <stm32_clean_context+0x22>
2fff38d6:	2063      	movs	r0, #99	@ 0x63
2fff38d8:	f7f9 ff16 	bl	2ffed708 <clk_enable>
2fff38dc:	f04f 40a8 	mov.w	r0, #1409286144	@ 0x54000000
2fff38e0:	21a8      	movs	r1, #168	@ 0xa8
2fff38e2:	f7f5 ee7c 	blx	2ffe95dc <zero_normalmem>
2fff38e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff38ea:	2063      	movs	r0, #99	@ 0x63
2fff38ec:	f7f9 bf1e 	b.w	2ffed72c <clk_disable>
2fff38f0:	bd08      	pop	{r3, pc}

2fff38f2 <stm32_get_zdata_from_context>:
2fff38f2:	b510      	push	{r4, lr}
2fff38f4:	2063      	movs	r0, #99	@ 0x63
2fff38f6:	f7f9 ff07 	bl	2ffed708 <clk_enable>
2fff38fa:	f04f 43a8 	mov.w	r3, #1409286144	@ 0x54000000
2fff38fe:	2063      	movs	r0, #99	@ 0x63
2fff3900:	689c      	ldr	r4, [r3, #8]
2fff3902:	f7f9 ff13 	bl	2ffed72c <clk_disable>
2fff3906:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
2fff390a:	4620      	mov	r0, r4
2fff390c:	bd10      	pop	{r4, pc}

2fff390e <clock_is_always_on>:
2fff390e:	2805      	cmp	r0, #5
2fff3910:	d807      	bhi.n	2fff3922 <clock_is_always_on+0x14>
2fff3912:	2001      	movs	r0, #1
2fff3914:	4770      	bx	lr
2fff3916:	f64e 00ff 	movw	r0, #59647	@ 0xe8ff
2fff391a:	40d8      	lsrs	r0, r3
2fff391c:	f000 0001 	and.w	r0, r0, #1
2fff3920:	4770      	bx	lr
2fff3922:	f1a0 03b5 	sub.w	r3, r0, #181	@ 0xb5
2fff3926:	2b0f      	cmp	r3, #15
2fff3928:	d9f5      	bls.n	2fff3916 <clock_is_always_on+0x8>
2fff392a:	2000      	movs	r0, #0
2fff392c:	4770      	bx	lr

2fff392e <stm32mp1_clk_lock>:
2fff392e:	b510      	push	{r4, lr}
2fff3930:	4604      	mov	r4, r0
2fff3932:	f7ff faf8 	bl	2fff2f26 <stm32mp_lock_available>
2fff3936:	b120      	cbz	r0, 2fff3942 <stm32mp1_clk_lock+0x14>
2fff3938:	4620      	mov	r0, r4
2fff393a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff393e:	f004 b96f 	b.w	2fff7c20 <__spin_lock_from_thumb>
2fff3942:	bd10      	pop	{r4, pc}

2fff3944 <stm32mp1_clk_unlock>:
2fff3944:	b510      	push	{r4, lr}
2fff3946:	4604      	mov	r4, r0
2fff3948:	f7ff faed 	bl	2fff2f26 <stm32mp_lock_available>
2fff394c:	b120      	cbz	r0, 2fff3958 <stm32mp1_clk_unlock+0x14>
2fff394e:	4620      	mov	r0, r4
2fff3950:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3954:	f004 b95c 	b.w	2fff7c10 <__spin_unlock_from_thumb>
2fff3958:	bd10      	pop	{r4, pc}

2fff395a <stm32_clk_parse_fdt_by_name>:
2fff395a:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff395c:	461d      	mov	r5, r3
2fff395e:	2400      	movs	r4, #0
2fff3960:	ab01      	add	r3, sp, #4
2fff3962:	9401      	str	r4, [sp, #4]
2fff3964:	f000 fa8a 	bl	2fff3e7c <fdt_getprop>
2fff3968:	b180      	cbz	r0, 2fff398c <stm32_clk_parse_fdt_by_name+0x32>
2fff396a:	9901      	ldr	r1, [sp, #4]
2fff396c:	4622      	mov	r2, r4
2fff396e:	0889      	lsrs	r1, r1, #2
2fff3970:	4291      	cmp	r1, r2
2fff3972:	d104      	bne.n	2fff397e <stm32_clk_parse_fdt_by_name+0x24>
2fff3974:	9b06      	ldr	r3, [sp, #24]
2fff3976:	2000      	movs	r0, #0
2fff3978:	6019      	str	r1, [r3, #0]
2fff397a:	b003      	add	sp, #12
2fff397c:	bd30      	pop	{r4, r5, pc}
2fff397e:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
2fff3982:	ba1b      	rev	r3, r3
2fff3984:	f845 3022 	str.w	r3, [r5, r2, lsl #2]
2fff3988:	3201      	adds	r2, #1
2fff398a:	e7f1      	b.n	2fff3970 <stm32_clk_parse_fdt_by_name+0x16>
2fff398c:	4601      	mov	r1, r0
2fff398e:	e7f1      	b.n	2fff3974 <stm32_clk_parse_fdt_by_name+0x1a>

2fff3990 <stm32mp1_pll_configure_src>:
2fff3990:	6943      	ldr	r3, [r0, #20]
2fff3992:	2234      	movs	r2, #52	@ 0x34
2fff3994:	4351      	muls	r1, r2
2fff3996:	685b      	ldr	r3, [r3, #4]
2fff3998:	185a      	adds	r2, r3, r1
2fff399a:	5c5b      	ldrb	r3, [r3, r1]
2fff399c:	b113      	cbz	r3, 2fff39a4 <stm32mp1_pll_configure_src+0x14>
2fff399e:	6851      	ldr	r1, [r2, #4]
2fff39a0:	f7fd bc52 	b.w	2fff1248 <stm32_clk_configure_mux>
2fff39a4:	4618      	mov	r0, r3
2fff39a6:	4770      	bx	lr

2fff39a8 <fdt32_ld>:
2fff39a8:	7842      	ldrb	r2, [r0, #1]
2fff39aa:	7803      	ldrb	r3, [r0, #0]
2fff39ac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff39b0:	7882      	ldrb	r2, [r0, #2]
2fff39b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2fff39b6:	78c2      	ldrb	r2, [r0, #3]
2fff39b8:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
2fff39bc:	ba00      	rev	r0, r0
2fff39be:	4770      	bx	lr

2fff39c0 <fdt_header_size_>:
2fff39c0:	2801      	cmp	r0, #1
2fff39c2:	d906      	bls.n	2fff39d2 <fdt_header_size_+0x12>
2fff39c4:	2802      	cmp	r0, #2
2fff39c6:	d006      	beq.n	2fff39d6 <fdt_header_size_+0x16>
2fff39c8:	2810      	cmp	r0, #16
2fff39ca:	bf8c      	ite	hi
2fff39cc:	2028      	movhi	r0, #40	@ 0x28
2fff39ce:	2024      	movls	r0, #36	@ 0x24
2fff39d0:	4770      	bx	lr
2fff39d2:	201c      	movs	r0, #28
2fff39d4:	4770      	bx	lr
2fff39d6:	2020      	movs	r0, #32
2fff39d8:	4770      	bx	lr

2fff39da <fdt_header_size>:
2fff39da:	b508      	push	{r3, lr}
2fff39dc:	3014      	adds	r0, #20
2fff39de:	f7ff ffe3 	bl	2fff39a8 <fdt32_ld>
2fff39e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff39e6:	f7ff bfeb 	b.w	2fff39c0 <fdt_header_size_>

2fff39ea <fdt_offset_ptr>:
2fff39ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff39ee:	4607      	mov	r7, r0
2fff39f0:	3008      	adds	r0, #8
2fff39f2:	4616      	mov	r6, r2
2fff39f4:	f7ff ffd8 	bl	2fff39a8 <fdt32_ld>
2fff39f8:	1845      	adds	r5, r0, r1
2fff39fa:	bf2c      	ite	cs
2fff39fc:	2401      	movcs	r4, #1
2fff39fe:	2400      	movcc	r4, #0
2fff3a00:	2900      	cmp	r1, #0
2fff3a02:	db1a      	blt.n	2fff3a3a <fdt_offset_ptr+0x50>
2fff3a04:	b9cc      	cbnz	r4, 2fff3a3a <fdt_offset_ptr+0x50>
2fff3a06:	eb15 0806 	adds.w	r8, r5, r6
2fff3a0a:	d213      	bcs.n	2fff3a34 <fdt_offset_ptr+0x4a>
2fff3a0c:	1d38      	adds	r0, r7, #4
2fff3a0e:	f7ff ffcb 	bl	2fff39a8 <fdt32_ld>
2fff3a12:	4580      	cmp	r8, r0
2fff3a14:	d80e      	bhi.n	2fff3a34 <fdt_offset_ptr+0x4a>
2fff3a16:	f107 0014 	add.w	r0, r7, #20
2fff3a1a:	f7ff ffc5 	bl	2fff39a8 <fdt32_ld>
2fff3a1e:	2810      	cmp	r0, #16
2fff3a20:	d907      	bls.n	2fff3a32 <fdt_offset_ptr+0x48>
2fff3a22:	1989      	adds	r1, r1, r6
2fff3a24:	d206      	bcs.n	2fff3a34 <fdt_offset_ptr+0x4a>
2fff3a26:	f107 0024 	add.w	r0, r7, #36	@ 0x24
2fff3a2a:	f7ff ffbd 	bl	2fff39a8 <fdt32_ld>
2fff3a2e:	4281      	cmp	r1, r0
2fff3a30:	d800      	bhi.n	2fff3a34 <fdt_offset_ptr+0x4a>
2fff3a32:	197c      	adds	r4, r7, r5
2fff3a34:	4620      	mov	r0, r4
2fff3a36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff3a3a:	2400      	movs	r4, #0
2fff3a3c:	e7fa      	b.n	2fff3a34 <fdt_offset_ptr+0x4a>

2fff3a3e <fdt_next_tag>:
2fff3a3e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff3a42:	f06f 0307 	mvn.w	r3, #7
2fff3a46:	6013      	str	r3, [r2, #0]
2fff3a48:	4690      	mov	r8, r2
2fff3a4a:	2204      	movs	r2, #4
2fff3a4c:	4605      	mov	r5, r0
2fff3a4e:	460e      	mov	r6, r1
2fff3a50:	f7ff ffcb 	bl	2fff39ea <fdt_offset_ptr>
2fff3a54:	b180      	cbz	r0, 2fff3a78 <fdt_next_tag+0x3a>
2fff3a56:	6807      	ldr	r7, [r0, #0]
2fff3a58:	f06f 030a 	mvn.w	r3, #10
2fff3a5c:	f8c8 3000 	str.w	r3, [r8]
2fff3a60:	1d34      	adds	r4, r6, #4
2fff3a62:	ba3f      	rev	r7, r7
2fff3a64:	1e7b      	subs	r3, r7, #1
2fff3a66:	2b08      	cmp	r3, #8
2fff3a68:	d806      	bhi.n	2fff3a78 <fdt_next_tag+0x3a>
2fff3a6a:	e8df f003 	tbb	[pc, r3]
2fff3a6e:	1409      	.short	0x1409
2fff3a70:	05051421 	.word	0x05051421
2fff3a74:	0505      	.short	0x0505
2fff3a76:	14          	.byte	0x14
2fff3a77:	00          	.byte	0x00
2fff3a78:	2709      	movs	r7, #9
2fff3a7a:	4638      	mov	r0, r7
2fff3a7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff3a80:	4621      	mov	r1, r4
2fff3a82:	2201      	movs	r2, #1
2fff3a84:	4414      	add	r4, r2
2fff3a86:	4628      	mov	r0, r5
2fff3a88:	f7ff ffaf 	bl	2fff39ea <fdt_offset_ptr>
2fff3a8c:	2800      	cmp	r0, #0
2fff3a8e:	d0f3      	beq.n	2fff3a78 <fdt_next_tag+0x3a>
2fff3a90:	7803      	ldrb	r3, [r0, #0]
2fff3a92:	2b00      	cmp	r3, #0
2fff3a94:	d1f4      	bne.n	2fff3a80 <fdt_next_tag+0x42>
2fff3a96:	1ba2      	subs	r2, r4, r6
2fff3a98:	4631      	mov	r1, r6
2fff3a9a:	4628      	mov	r0, r5
2fff3a9c:	f7ff ffa5 	bl	2fff39ea <fdt_offset_ptr>
2fff3aa0:	2800      	cmp	r0, #0
2fff3aa2:	d0e9      	beq.n	2fff3a78 <fdt_next_tag+0x3a>
2fff3aa4:	3403      	adds	r4, #3
2fff3aa6:	f024 0403 	bic.w	r4, r4, #3
2fff3aaa:	f8c8 4000 	str.w	r4, [r8]
2fff3aae:	e7e4      	b.n	2fff3a7a <fdt_next_tag+0x3c>
2fff3ab0:	2204      	movs	r2, #4
2fff3ab2:	4621      	mov	r1, r4
2fff3ab4:	4628      	mov	r0, r5
2fff3ab6:	f7ff ff98 	bl	2fff39ea <fdt_offset_ptr>
2fff3aba:	2800      	cmp	r0, #0
2fff3abc:	d0dc      	beq.n	2fff3a78 <fdt_next_tag+0x3a>
2fff3abe:	6801      	ldr	r1, [r0, #0]
2fff3ac0:	f105 0014 	add.w	r0, r5, #20
2fff3ac4:	f106 090c 	add.w	r9, r6, #12
2fff3ac8:	f7ff ff6e 	bl	2fff39a8 <fdt32_ld>
2fff3acc:	ba09      	rev	r1, r1
2fff3ace:	280f      	cmp	r0, #15
2fff3ad0:	eb09 0401 	add.w	r4, r9, r1
2fff3ad4:	d8df      	bhi.n	2fff3a96 <fdt_next_tag+0x58>
2fff3ad6:	2907      	cmp	r1, #7
2fff3ad8:	d9dd      	bls.n	2fff3a96 <fdt_next_tag+0x58>
2fff3ada:	f019 0f07 	tst.w	r9, #7
2fff3ade:	bf18      	it	ne
2fff3ae0:	3404      	addne	r4, #4
2fff3ae2:	e7d8      	b.n	2fff3a96 <fdt_next_tag+0x58>

2fff3ae4 <fdt_check_node_offset_>:
2fff3ae4:	1e0b      	subs	r3, r1, #0
2fff3ae6:	b507      	push	{r0, r1, r2, lr}
2fff3ae8:	9101      	str	r1, [sp, #4]
2fff3aea:	da04      	bge.n	2fff3af6 <fdt_check_node_offset_+0x12>
2fff3aec:	f06f 0003 	mvn.w	r0, #3
2fff3af0:	b003      	add	sp, #12
2fff3af2:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3af6:	079b      	lsls	r3, r3, #30
2fff3af8:	d1f8      	bne.n	2fff3aec <fdt_check_node_offset_+0x8>
2fff3afa:	aa01      	add	r2, sp, #4
2fff3afc:	f7ff ff9f 	bl	2fff3a3e <fdt_next_tag>
2fff3b00:	2801      	cmp	r0, #1
2fff3b02:	d1f3      	bne.n	2fff3aec <fdt_check_node_offset_+0x8>
2fff3b04:	9801      	ldr	r0, [sp, #4]
2fff3b06:	e7f3      	b.n	2fff3af0 <fdt_check_node_offset_+0xc>

2fff3b08 <fdt_check_prop_offset_>:
2fff3b08:	1e0b      	subs	r3, r1, #0
2fff3b0a:	b507      	push	{r0, r1, r2, lr}
2fff3b0c:	9101      	str	r1, [sp, #4]
2fff3b0e:	da04      	bge.n	2fff3b1a <fdt_check_prop_offset_+0x12>
2fff3b10:	f06f 0003 	mvn.w	r0, #3
2fff3b14:	b003      	add	sp, #12
2fff3b16:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3b1a:	079b      	lsls	r3, r3, #30
2fff3b1c:	d1f8      	bne.n	2fff3b10 <fdt_check_prop_offset_+0x8>
2fff3b1e:	aa01      	add	r2, sp, #4
2fff3b20:	f7ff ff8d 	bl	2fff3a3e <fdt_next_tag>
2fff3b24:	2803      	cmp	r0, #3
2fff3b26:	d1f3      	bne.n	2fff3b10 <fdt_check_prop_offset_+0x8>
2fff3b28:	9801      	ldr	r0, [sp, #4]
2fff3b2a:	e7f3      	b.n	2fff3b14 <fdt_check_prop_offset_+0xc>

2fff3b2c <fdt_next_node>:
2fff3b2c:	2300      	movs	r3, #0
2fff3b2e:	4299      	cmp	r1, r3
2fff3b30:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff3b32:	4606      	mov	r6, r0
2fff3b34:	9301      	str	r3, [sp, #4]
2fff3b36:	4615      	mov	r5, r2
2fff3b38:	db05      	blt.n	2fff3b46 <fdt_next_node+0x1a>
2fff3b3a:	f7ff ffd3 	bl	2fff3ae4 <fdt_check_node_offset_>
2fff3b3e:	9001      	str	r0, [sp, #4]
2fff3b40:	2800      	cmp	r0, #0
2fff3b42:	4604      	mov	r4, r0
2fff3b44:	db0f      	blt.n	2fff3b66 <fdt_next_node+0x3a>
2fff3b46:	9c01      	ldr	r4, [sp, #4]
2fff3b48:	aa01      	add	r2, sp, #4
2fff3b4a:	4630      	mov	r0, r6
2fff3b4c:	4621      	mov	r1, r4
2fff3b4e:	f7ff ff76 	bl	2fff3a3e <fdt_next_tag>
2fff3b52:	2802      	cmp	r0, #2
2fff3b54:	d00a      	beq.n	2fff3b6c <fdt_next_node+0x40>
2fff3b56:	2809      	cmp	r0, #9
2fff3b58:	d011      	beq.n	2fff3b7e <fdt_next_node+0x52>
2fff3b5a:	2801      	cmp	r0, #1
2fff3b5c:	d1f3      	bne.n	2fff3b46 <fdt_next_node+0x1a>
2fff3b5e:	b115      	cbz	r5, 2fff3b66 <fdt_next_node+0x3a>
2fff3b60:	682b      	ldr	r3, [r5, #0]
2fff3b62:	3301      	adds	r3, #1
2fff3b64:	602b      	str	r3, [r5, #0]
2fff3b66:	4620      	mov	r0, r4
2fff3b68:	b002      	add	sp, #8
2fff3b6a:	bd70      	pop	{r4, r5, r6, pc}
2fff3b6c:	2d00      	cmp	r5, #0
2fff3b6e:	d0ea      	beq.n	2fff3b46 <fdt_next_node+0x1a>
2fff3b70:	682b      	ldr	r3, [r5, #0]
2fff3b72:	3b01      	subs	r3, #1
2fff3b74:	602b      	str	r3, [r5, #0]
2fff3b76:	2b00      	cmp	r3, #0
2fff3b78:	dae5      	bge.n	2fff3b46 <fdt_next_node+0x1a>
2fff3b7a:	9c01      	ldr	r4, [sp, #4]
2fff3b7c:	e7f3      	b.n	2fff3b66 <fdt_next_node+0x3a>
2fff3b7e:	9c01      	ldr	r4, [sp, #4]
2fff3b80:	2c00      	cmp	r4, #0
2fff3b82:	da07      	bge.n	2fff3b94 <fdt_next_node+0x68>
2fff3b84:	f114 0f08 	cmn.w	r4, #8
2fff3b88:	d1ed      	bne.n	2fff3b66 <fdt_next_node+0x3a>
2fff3b8a:	2d00      	cmp	r5, #0
2fff3b8c:	bf08      	it	eq
2fff3b8e:	f04f 34ff 	moveq.w	r4, #4294967295	@ 0xffffffff
2fff3b92:	e7e8      	b.n	2fff3b66 <fdt_next_node+0x3a>
2fff3b94:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2fff3b98:	e7e5      	b.n	2fff3b66 <fdt_next_node+0x3a>

2fff3b9a <fdt_first_subnode>:
2fff3b9a:	b507      	push	{r0, r1, r2, lr}
2fff3b9c:	2300      	movs	r3, #0
2fff3b9e:	9301      	str	r3, [sp, #4]
2fff3ba0:	aa01      	add	r2, sp, #4
2fff3ba2:	f7ff ffc3 	bl	2fff3b2c <fdt_next_node>
2fff3ba6:	2800      	cmp	r0, #0
2fff3ba8:	db07      	blt.n	2fff3bba <fdt_first_subnode+0x20>
2fff3baa:	9b01      	ldr	r3, [sp, #4]
2fff3bac:	2b01      	cmp	r3, #1
2fff3bae:	bf18      	it	ne
2fff3bb0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
2fff3bb4:	b003      	add	sp, #12
2fff3bb6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3bba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff3bbe:	e7f9      	b.n	2fff3bb4 <fdt_first_subnode+0x1a>

2fff3bc0 <fdt_next_subnode>:
2fff3bc0:	b513      	push	{r0, r1, r4, lr}
2fff3bc2:	4604      	mov	r4, r0
2fff3bc4:	2301      	movs	r3, #1
2fff3bc6:	9301      	str	r3, [sp, #4]
2fff3bc8:	aa01      	add	r2, sp, #4
2fff3bca:	4620      	mov	r0, r4
2fff3bcc:	f7ff ffae 	bl	2fff3b2c <fdt_next_node>
2fff3bd0:	1e01      	subs	r1, r0, #0
2fff3bd2:	db07      	blt.n	2fff3be4 <fdt_next_subnode+0x24>
2fff3bd4:	9b01      	ldr	r3, [sp, #4]
2fff3bd6:	2b00      	cmp	r3, #0
2fff3bd8:	dd04      	ble.n	2fff3be4 <fdt_next_subnode+0x24>
2fff3bda:	2b01      	cmp	r3, #1
2fff3bdc:	d1f4      	bne.n	2fff3bc8 <fdt_next_subnode+0x8>
2fff3bde:	4608      	mov	r0, r1
2fff3be0:	b002      	add	sp, #8
2fff3be2:	bd10      	pop	{r4, pc}
2fff3be4:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff3be8:	e7f9      	b.n	2fff3bde <fdt_next_subnode+0x1e>

2fff3bea <fdt_cells>:
2fff3bea:	b507      	push	{r0, r1, r2, lr}
2fff3bec:	ab01      	add	r3, sp, #4
2fff3bee:	f000 f945 	bl	2fff3e7c <fdt_getprop>
2fff3bf2:	4603      	mov	r3, r0
2fff3bf4:	9801      	ldr	r0, [sp, #4]
2fff3bf6:	b13b      	cbz	r3, 2fff3c08 <fdt_cells+0x1e>
2fff3bf8:	2804      	cmp	r0, #4
2fff3bfa:	d108      	bne.n	2fff3c0e <fdt_cells+0x24>
2fff3bfc:	6818      	ldr	r0, [r3, #0]
2fff3bfe:	ba00      	rev	r0, r0
2fff3c00:	2804      	cmp	r0, #4
2fff3c02:	bf88      	it	hi
2fff3c04:	f06f 000d 	mvnhi.w	r0, #13
2fff3c08:	b003      	add	sp, #12
2fff3c0a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3c0e:	f06f 000d 	mvn.w	r0, #13
2fff3c12:	e7f9      	b.n	2fff3c08 <fdt_cells+0x1e>

2fff3c14 <fdt32_ld>:
2fff3c14:	7842      	ldrb	r2, [r0, #1]
2fff3c16:	7803      	ldrb	r3, [r0, #0]
2fff3c18:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff3c1c:	7882      	ldrb	r2, [r0, #2]
2fff3c1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2fff3c22:	78c2      	ldrb	r2, [r0, #3]
2fff3c24:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
2fff3c28:	ba00      	rev	r0, r0
2fff3c2a:	4770      	bx	lr

2fff3c2c <nextprop_>:
2fff3c2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff3c2e:	4605      	mov	r5, r0
2fff3c30:	460c      	mov	r4, r1
2fff3c32:	aa01      	add	r2, sp, #4
2fff3c34:	4621      	mov	r1, r4
2fff3c36:	4628      	mov	r0, r5
2fff3c38:	f7ff ff01 	bl	2fff3a3e <fdt_next_tag>
2fff3c3c:	2803      	cmp	r0, #3
2fff3c3e:	d006      	beq.n	2fff3c4e <nextprop_+0x22>
2fff3c40:	9c01      	ldr	r4, [sp, #4]
2fff3c42:	2809      	cmp	r0, #9
2fff3c44:	d106      	bne.n	2fff3c54 <nextprop_+0x28>
2fff3c46:	2c00      	cmp	r4, #0
2fff3c48:	bfa8      	it	ge
2fff3c4a:	f06f 040a 	mvnge.w	r4, #10
2fff3c4e:	4620      	mov	r0, r4
2fff3c50:	b003      	add	sp, #12
2fff3c52:	bd30      	pop	{r4, r5, pc}
2fff3c54:	2804      	cmp	r0, #4
2fff3c56:	d0ec      	beq.n	2fff3c32 <nextprop_+0x6>
2fff3c58:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
2fff3c5c:	e7f7      	b.n	2fff3c4e <nextprop_+0x22>

2fff3c5e <fdt32_ld_.isra.0>:
2fff3c5e:	ba00      	rev	r0, r0
2fff3c60:	4770      	bx	lr

2fff3c62 <fdt_get_property_by_offset_>:
2fff3c62:	b570      	push	{r4, r5, r6, lr}
2fff3c64:	4604      	mov	r4, r0
2fff3c66:	460e      	mov	r6, r1
2fff3c68:	4615      	mov	r5, r2
2fff3c6a:	f7ff ff4d 	bl	2fff3b08 <fdt_check_prop_offset_>
2fff3c6e:	2800      	cmp	r0, #0
2fff3c70:	da04      	bge.n	2fff3c7c <fdt_get_property_by_offset_+0x1a>
2fff3c72:	b105      	cbz	r5, 2fff3c76 <fdt_get_property_by_offset_+0x14>
2fff3c74:	6028      	str	r0, [r5, #0]
2fff3c76:	2400      	movs	r4, #0
2fff3c78:	4620      	mov	r0, r4
2fff3c7a:	bd70      	pop	{r4, r5, r6, pc}
2fff3c7c:	f104 0008 	add.w	r0, r4, #8
2fff3c80:	f7ff ffc8 	bl	2fff3c14 <fdt32_ld>
2fff3c84:	4406      	add	r6, r0
2fff3c86:	4434      	add	r4, r6
2fff3c88:	2d00      	cmp	r5, #0
2fff3c8a:	d0f5      	beq.n	2fff3c78 <fdt_get_property_by_offset_+0x16>
2fff3c8c:	6860      	ldr	r0, [r4, #4]
2fff3c8e:	f7ff ffe6 	bl	2fff3c5e <fdt32_ld_.isra.0>
2fff3c92:	6028      	str	r0, [r5, #0]
2fff3c94:	e7f0      	b.n	2fff3c78 <fdt_get_property_by_offset_+0x16>

2fff3c96 <fdt_get_name>:
2fff3c96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3c98:	4606      	mov	r6, r0
2fff3c9a:	3008      	adds	r0, #8
2fff3c9c:	4615      	mov	r5, r2
2fff3c9e:	460c      	mov	r4, r1
2fff3ca0:	f7ff ffb8 	bl	2fff3c14 <fdt32_ld>
2fff3ca4:	4607      	mov	r7, r0
2fff3ca6:	4630      	mov	r0, r6
2fff3ca8:	f7fe fae4 	bl	2fff2274 <fdt_ro_probe_>
2fff3cac:	2800      	cmp	r0, #0
2fff3cae:	db1e      	blt.n	2fff3cee <fdt_get_name+0x58>
2fff3cb0:	4621      	mov	r1, r4
2fff3cb2:	4630      	mov	r0, r6
2fff3cb4:	f7ff ff16 	bl	2fff3ae4 <fdt_check_node_offset_>
2fff3cb8:	2800      	cmp	r0, #0
2fff3cba:	db18      	blt.n	2fff3cee <fdt_get_name+0x58>
2fff3cbc:	443c      	add	r4, r7
2fff3cbe:	f106 0014 	add.w	r0, r6, #20
2fff3cc2:	4434      	add	r4, r6
2fff3cc4:	f7ff ffa6 	bl	2fff3c14 <fdt32_ld>
2fff3cc8:	280f      	cmp	r0, #15
2fff3cca:	f104 0404 	add.w	r4, r4, #4
2fff3cce:	d805      	bhi.n	2fff3cdc <fdt_get_name+0x46>
2fff3cd0:	212f      	movs	r1, #47	@ 0x2f
2fff3cd2:	4620      	mov	r0, r4
2fff3cd4:	f000 fb90 	bl	2fff43f8 <strrchr>
2fff3cd8:	b138      	cbz	r0, 2fff3cea <fdt_get_name+0x54>
2fff3cda:	1c44      	adds	r4, r0, #1
2fff3cdc:	b11d      	cbz	r5, 2fff3ce6 <fdt_get_name+0x50>
2fff3cde:	4620      	mov	r0, r4
2fff3ce0:	f000 fb64 	bl	2fff43ac <strlen>
2fff3ce4:	6028      	str	r0, [r5, #0]
2fff3ce6:	4620      	mov	r0, r4
2fff3ce8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3cea:	f06f 000a 	mvn.w	r0, #10
2fff3cee:	b90d      	cbnz	r5, 2fff3cf4 <fdt_get_name+0x5e>
2fff3cf0:	2400      	movs	r4, #0
2fff3cf2:	e7f8      	b.n	2fff3ce6 <fdt_get_name+0x50>
2fff3cf4:	6028      	str	r0, [r5, #0]
2fff3cf6:	e7fb      	b.n	2fff3cf0 <fdt_get_name+0x5a>

2fff3cf8 <fdt_subnode_offset_namelen>:
2fff3cf8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff3cfc:	4607      	mov	r7, r0
2fff3cfe:	460e      	mov	r6, r1
2fff3d00:	4690      	mov	r8, r2
2fff3d02:	461d      	mov	r5, r3
2fff3d04:	f7fe fab6 	bl	2fff2274 <fdt_ro_probe_>
2fff3d08:	1e04      	subs	r4, r0, #0
2fff3d0a:	db0a      	blt.n	2fff3d22 <fdt_subnode_offset_namelen+0x2a>
2fff3d0c:	4634      	mov	r4, r6
2fff3d0e:	2300      	movs	r3, #0
2fff3d10:	9300      	str	r3, [sp, #0]
2fff3d12:	9b00      	ldr	r3, [sp, #0]
2fff3d14:	ea54 0203 	orrs.w	r2, r4, r3
2fff3d18:	d507      	bpl.n	2fff3d2a <fdt_subnode_offset_namelen+0x32>
2fff3d1a:	2b00      	cmp	r3, #0
2fff3d1c:	bfb8      	it	lt
2fff3d1e:	f04f 34ff 	movlt.w	r4, #4294967295	@ 0xffffffff
2fff3d22:	4620      	mov	r0, r4
2fff3d24:	b002      	add	sp, #8
2fff3d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff3d2a:	2b01      	cmp	r3, #1
2fff3d2c:	d11a      	bne.n	2fff3d64 <fdt_subnode_offset_namelen+0x6c>
2fff3d2e:	aa01      	add	r2, sp, #4
2fff3d30:	4621      	mov	r1, r4
2fff3d32:	4638      	mov	r0, r7
2fff3d34:	f7ff ffaf 	bl	2fff3c96 <fdt_get_name>
2fff3d38:	4606      	mov	r6, r0
2fff3d3a:	b198      	cbz	r0, 2fff3d64 <fdt_subnode_offset_namelen+0x6c>
2fff3d3c:	9b01      	ldr	r3, [sp, #4]
2fff3d3e:	429d      	cmp	r5, r3
2fff3d40:	dc10      	bgt.n	2fff3d64 <fdt_subnode_offset_namelen+0x6c>
2fff3d42:	462a      	mov	r2, r5
2fff3d44:	4641      	mov	r1, r8
2fff3d46:	f000 f9f6 	bl	2fff4136 <memcmp>
2fff3d4a:	b958      	cbnz	r0, 2fff3d64 <fdt_subnode_offset_namelen+0x6c>
2fff3d4c:	5d73      	ldrb	r3, [r6, r5]
2fff3d4e:	2b00      	cmp	r3, #0
2fff3d50:	d0e7      	beq.n	2fff3d22 <fdt_subnode_offset_namelen+0x2a>
2fff3d52:	462a      	mov	r2, r5
2fff3d54:	2140      	movs	r1, #64	@ 0x40
2fff3d56:	4640      	mov	r0, r8
2fff3d58:	f000 f9df 	bl	2fff411a <memchr>
2fff3d5c:	b910      	cbnz	r0, 2fff3d64 <fdt_subnode_offset_namelen+0x6c>
2fff3d5e:	5d73      	ldrb	r3, [r6, r5]
2fff3d60:	2b40      	cmp	r3, #64	@ 0x40
2fff3d62:	d0de      	beq.n	2fff3d22 <fdt_subnode_offset_namelen+0x2a>
2fff3d64:	4621      	mov	r1, r4
2fff3d66:	466a      	mov	r2, sp
2fff3d68:	4638      	mov	r0, r7
2fff3d6a:	f7ff fedf 	bl	2fff3b2c <fdt_next_node>
2fff3d6e:	4604      	mov	r4, r0
2fff3d70:	e7cf      	b.n	2fff3d12 <fdt_subnode_offset_namelen+0x1a>

2fff3d72 <fdt_subnode_offset>:
2fff3d72:	b570      	push	{r4, r5, r6, lr}
2fff3d74:	4605      	mov	r5, r0
2fff3d76:	4610      	mov	r0, r2
2fff3d78:	460e      	mov	r6, r1
2fff3d7a:	4614      	mov	r4, r2
2fff3d7c:	f000 fb16 	bl	2fff43ac <strlen>
2fff3d80:	4603      	mov	r3, r0
2fff3d82:	4622      	mov	r2, r4
2fff3d84:	4631      	mov	r1, r6
2fff3d86:	4628      	mov	r0, r5
2fff3d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff3d8c:	f7ff bfb4 	b.w	2fff3cf8 <fdt_subnode_offset_namelen>

2fff3d90 <fdt_first_property_offset>:
2fff3d90:	b510      	push	{r4, lr}
2fff3d92:	4604      	mov	r4, r0
2fff3d94:	f7ff fea6 	bl	2fff3ae4 <fdt_check_node_offset_>
2fff3d98:	1e01      	subs	r1, r0, #0
2fff3d9a:	db04      	blt.n	2fff3da6 <fdt_first_property_offset+0x16>
2fff3d9c:	4620      	mov	r0, r4
2fff3d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3da2:	f7ff bf43 	b.w	2fff3c2c <nextprop_>
2fff3da6:	bd10      	pop	{r4, pc}

2fff3da8 <fdt_next_property_offset>:
2fff3da8:	b510      	push	{r4, lr}
2fff3daa:	4604      	mov	r4, r0
2fff3dac:	f7ff feac 	bl	2fff3b08 <fdt_check_prop_offset_>
2fff3db0:	1e01      	subs	r1, r0, #0
2fff3db2:	db04      	blt.n	2fff3dbe <fdt_next_property_offset+0x16>
2fff3db4:	4620      	mov	r0, r4
2fff3db6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3dba:	f7ff bf37 	b.w	2fff3c2c <nextprop_>
2fff3dbe:	bd10      	pop	{r4, pc}

2fff3dc0 <fdt_get_property_namelen_>:
2fff3dc0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff3dc4:	4606      	mov	r6, r0
2fff3dc6:	4691      	mov	r9, r2
2fff3dc8:	461f      	mov	r7, r3
2fff3dca:	e9dd 8a0a 	ldrd	r8, sl, [sp, #40]	@ 0x28
2fff3dce:	f7ff ffdf 	bl	2fff3d90 <fdt_first_property_offset>
2fff3dd2:	2800      	cmp	r0, #0
2fff3dd4:	4604      	mov	r4, r0
2fff3dd6:	da04      	bge.n	2fff3de2 <fdt_get_property_namelen_+0x22>
2fff3dd8:	f1b8 0f00 	cmp.w	r8, #0
2fff3ddc:	d12b      	bne.n	2fff3e36 <fdt_get_property_namelen_+0x76>
2fff3dde:	2500      	movs	r5, #0
2fff3de0:	e022      	b.n	2fff3e28 <fdt_get_property_namelen_+0x68>
2fff3de2:	4642      	mov	r2, r8
2fff3de4:	4621      	mov	r1, r4
2fff3de6:	4630      	mov	r0, r6
2fff3de8:	f7ff ff3b 	bl	2fff3c62 <fdt_get_property_by_offset_>
2fff3dec:	4605      	mov	r5, r0
2fff3dee:	b1f8      	cbz	r0, 2fff3e30 <fdt_get_property_namelen_+0x70>
2fff3df0:	6880      	ldr	r0, [r0, #8]
2fff3df2:	aa01      	add	r2, sp, #4
2fff3df4:	f7ff ff33 	bl	2fff3c5e <fdt32_ld_.isra.0>
2fff3df8:	4601      	mov	r1, r0
2fff3dfa:	4630      	mov	r0, r6
2fff3dfc:	f7fe fae8 	bl	2fff23d0 <fdt_get_string>
2fff3e00:	b110      	cbz	r0, 2fff3e08 <fdt_get_property_namelen_+0x48>
2fff3e02:	9b01      	ldr	r3, [sp, #4]
2fff3e04:	429f      	cmp	r7, r3
2fff3e06:	d004      	beq.n	2fff3e12 <fdt_get_property_namelen_+0x52>
2fff3e08:	4621      	mov	r1, r4
2fff3e0a:	4630      	mov	r0, r6
2fff3e0c:	f7ff ffcc 	bl	2fff3da8 <fdt_next_property_offset>
2fff3e10:	e7df      	b.n	2fff3dd2 <fdt_get_property_namelen_+0x12>
2fff3e12:	463a      	mov	r2, r7
2fff3e14:	4649      	mov	r1, r9
2fff3e16:	f000 f98e 	bl	2fff4136 <memcmp>
2fff3e1a:	2800      	cmp	r0, #0
2fff3e1c:	d1f4      	bne.n	2fff3e08 <fdt_get_property_namelen_+0x48>
2fff3e1e:	f1ba 0f00 	cmp.w	sl, #0
2fff3e22:	d001      	beq.n	2fff3e28 <fdt_get_property_namelen_+0x68>
2fff3e24:	f8ca 4000 	str.w	r4, [sl]
2fff3e28:	4628      	mov	r0, r5
2fff3e2a:	b002      	add	sp, #8
2fff3e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff3e30:	f06f 040c 	mvn.w	r4, #12
2fff3e34:	e7d0      	b.n	2fff3dd8 <fdt_get_property_namelen_+0x18>
2fff3e36:	f8c8 4000 	str.w	r4, [r8]
2fff3e3a:	e7d0      	b.n	2fff3dde <fdt_get_property_namelen_+0x1e>

2fff3e3c <fdt_getprop_namelen>:
2fff3e3c:	b530      	push	{r4, r5, lr}
2fff3e3e:	b085      	sub	sp, #20
2fff3e40:	ad03      	add	r5, sp, #12
2fff3e42:	4604      	mov	r4, r0
2fff3e44:	9501      	str	r5, [sp, #4]
2fff3e46:	9d08      	ldr	r5, [sp, #32]
2fff3e48:	9500      	str	r5, [sp, #0]
2fff3e4a:	f7ff ffb9 	bl	2fff3dc0 <fdt_get_property_namelen_>
2fff3e4e:	4601      	mov	r1, r0
2fff3e50:	b178      	cbz	r0, 2fff3e72 <fdt_getprop_namelen+0x36>
2fff3e52:	f104 0014 	add.w	r0, r4, #20
2fff3e56:	f7ff fedd 	bl	2fff3c14 <fdt32_ld>
2fff3e5a:	280f      	cmp	r0, #15
2fff3e5c:	d80c      	bhi.n	2fff3e78 <fdt_getprop_namelen+0x3c>
2fff3e5e:	9b03      	ldr	r3, [sp, #12]
2fff3e60:	330c      	adds	r3, #12
2fff3e62:	075b      	lsls	r3, r3, #29
2fff3e64:	d008      	beq.n	2fff3e78 <fdt_getprop_namelen+0x3c>
2fff3e66:	6848      	ldr	r0, [r1, #4]
2fff3e68:	f7ff fef9 	bl	2fff3c5e <fdt32_ld_.isra.0>
2fff3e6c:	2807      	cmp	r0, #7
2fff3e6e:	d903      	bls.n	2fff3e78 <fdt_getprop_namelen+0x3c>
2fff3e70:	3110      	adds	r1, #16
2fff3e72:	4608      	mov	r0, r1
2fff3e74:	b005      	add	sp, #20
2fff3e76:	bd30      	pop	{r4, r5, pc}
2fff3e78:	310c      	adds	r1, #12
2fff3e7a:	e7fa      	b.n	2fff3e72 <fdt_getprop_namelen+0x36>

2fff3e7c <fdt_getprop>:
2fff3e7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff3e7e:	4605      	mov	r5, r0
2fff3e80:	4610      	mov	r0, r2
2fff3e82:	461f      	mov	r7, r3
2fff3e84:	460e      	mov	r6, r1
2fff3e86:	4614      	mov	r4, r2
2fff3e88:	f000 fa90 	bl	2fff43ac <strlen>
2fff3e8c:	9700      	str	r7, [sp, #0]
2fff3e8e:	4603      	mov	r3, r0
2fff3e90:	4622      	mov	r2, r4
2fff3e92:	4631      	mov	r1, r6
2fff3e94:	4628      	mov	r0, r5
2fff3e96:	f7ff ffd1 	bl	2fff3e3c <fdt_getprop_namelen>
2fff3e9a:	b003      	add	sp, #12
2fff3e9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff3e9e <fdt_path_offset_namelen>:
2fff3e9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff3ea2:	4607      	mov	r7, r0
2fff3ea4:	460c      	mov	r4, r1
2fff3ea6:	4690      	mov	r8, r2
2fff3ea8:	f7fe f9e4 	bl	2fff2274 <fdt_ro_probe_>
2fff3eac:	1e05      	subs	r5, r0, #0
2fff3eae:	db38      	blt.n	2fff3f22 <fdt_path_offset_namelen+0x84>
2fff3eb0:	7823      	ldrb	r3, [r4, #0]
2fff3eb2:	eb04 0608 	add.w	r6, r4, r8
2fff3eb6:	2b2f      	cmp	r3, #47	@ 0x2f
2fff3eb8:	d036      	beq.n	2fff3f28 <fdt_path_offset_namelen+0x8a>
2fff3eba:	4642      	mov	r2, r8
2fff3ebc:	212f      	movs	r1, #47	@ 0x2f
2fff3ebe:	4620      	mov	r0, r4
2fff3ec0:	f000 f92b 	bl	2fff411a <memchr>
2fff3ec4:	2800      	cmp	r0, #0
2fff3ec6:	bf14      	ite	ne
2fff3ec8:	4680      	movne	r8, r0
2fff3eca:	46b0      	moveq	r8, r6
2fff3ecc:	4621      	mov	r1, r4
2fff3ece:	eba8 0204 	sub.w	r2, r8, r4
2fff3ed2:	4638      	mov	r0, r7
2fff3ed4:	f7fe faf6 	bl	2fff24c4 <fdt_get_alias_namelen>
2fff3ed8:	4601      	mov	r1, r0
2fff3eda:	b338      	cbz	r0, 2fff3f2c <fdt_path_offset_namelen+0x8e>
2fff3edc:	4638      	mov	r0, r7
2fff3ede:	4644      	mov	r4, r8
2fff3ee0:	f000 f827 	bl	2fff3f32 <fdt_path_offset>
2fff3ee4:	4605      	mov	r5, r0
2fff3ee6:	42b4      	cmp	r4, r6
2fff3ee8:	d302      	bcc.n	2fff3ef0 <fdt_path_offset_namelen+0x52>
2fff3eea:	e01a      	b.n	2fff3f22 <fdt_path_offset_namelen+0x84>
2fff3eec:	42a6      	cmp	r6, r4
2fff3eee:	d018      	beq.n	2fff3f22 <fdt_path_offset_namelen+0x84>
2fff3ef0:	46a0      	mov	r8, r4
2fff3ef2:	3401      	adds	r4, #1
2fff3ef4:	f898 3000 	ldrb.w	r3, [r8]
2fff3ef8:	2b2f      	cmp	r3, #47	@ 0x2f
2fff3efa:	d0f7      	beq.n	2fff3eec <fdt_path_offset_namelen+0x4e>
2fff3efc:	eba6 0208 	sub.w	r2, r6, r8
2fff3f00:	212f      	movs	r1, #47	@ 0x2f
2fff3f02:	4640      	mov	r0, r8
2fff3f04:	f000 f909 	bl	2fff411a <memchr>
2fff3f08:	2800      	cmp	r0, #0
2fff3f0a:	bf14      	ite	ne
2fff3f0c:	4604      	movne	r4, r0
2fff3f0e:	4634      	moveq	r4, r6
2fff3f10:	4629      	mov	r1, r5
2fff3f12:	eba4 0308 	sub.w	r3, r4, r8
2fff3f16:	4642      	mov	r2, r8
2fff3f18:	4638      	mov	r0, r7
2fff3f1a:	f7ff feed 	bl	2fff3cf8 <fdt_subnode_offset_namelen>
2fff3f1e:	1e05      	subs	r5, r0, #0
2fff3f20:	dae1      	bge.n	2fff3ee6 <fdt_path_offset_namelen+0x48>
2fff3f22:	4628      	mov	r0, r5
2fff3f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff3f28:	2500      	movs	r5, #0
2fff3f2a:	e7dc      	b.n	2fff3ee6 <fdt_path_offset_namelen+0x48>
2fff3f2c:	f06f 0504 	mvn.w	r5, #4
2fff3f30:	e7f7      	b.n	2fff3f22 <fdt_path_offset_namelen+0x84>

2fff3f32 <fdt_path_offset>:
2fff3f32:	b538      	push	{r3, r4, r5, lr}
2fff3f34:	4605      	mov	r5, r0
2fff3f36:	4608      	mov	r0, r1
2fff3f38:	460c      	mov	r4, r1
2fff3f3a:	f000 fa37 	bl	2fff43ac <strlen>
2fff3f3e:	4602      	mov	r2, r0
2fff3f40:	4621      	mov	r1, r4
2fff3f42:	4628      	mov	r0, r5
2fff3f44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff3f48:	f7ff bfa9 	b.w	2fff3e9e <fdt_path_offset_namelen>

2fff3f4c <fdt_supernode_atdepth_offset>:
2fff3f4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff3f50:	4607      	mov	r7, r0
2fff3f52:	460c      	mov	r4, r1
2fff3f54:	4615      	mov	r5, r2
2fff3f56:	461e      	mov	r6, r3
2fff3f58:	f7fe f98c 	bl	2fff2274 <fdt_ro_probe_>
2fff3f5c:	2800      	cmp	r0, #0
2fff3f5e:	db03      	blt.n	2fff3f68 <fdt_supernode_atdepth_offset+0x1c>
2fff3f60:	2d00      	cmp	r5, #0
2fff3f62:	da04      	bge.n	2fff3f6e <fdt_supernode_atdepth_offset+0x22>
2fff3f64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
2fff3f68:	b002      	add	sp, #8
2fff3f6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff3f6e:	2000      	movs	r0, #0
2fff3f70:	4284      	cmp	r4, r0
2fff3f72:	9001      	str	r0, [sp, #4]
2fff3f74:	db16      	blt.n	2fff3fa4 <fdt_supernode_atdepth_offset+0x58>
2fff3f76:	f06f 080c 	mvn.w	r8, #12
2fff3f7a:	9b01      	ldr	r3, [sp, #4]
2fff3f7c:	42ab      	cmp	r3, r5
2fff3f7e:	bf08      	it	eq
2fff3f80:	4680      	moveq	r8, r0
2fff3f82:	4284      	cmp	r4, r0
2fff3f84:	d105      	bne.n	2fff3f92 <fdt_supernode_atdepth_offset+0x46>
2fff3f86:	b106      	cbz	r6, 2fff3f8a <fdt_supernode_atdepth_offset+0x3e>
2fff3f88:	6033      	str	r3, [r6, #0]
2fff3f8a:	42ab      	cmp	r3, r5
2fff3f8c:	dbea      	blt.n	2fff3f64 <fdt_supernode_atdepth_offset+0x18>
2fff3f8e:	4640      	mov	r0, r8
2fff3f90:	e7ea      	b.n	2fff3f68 <fdt_supernode_atdepth_offset+0x1c>
2fff3f92:	4601      	mov	r1, r0
2fff3f94:	aa01      	add	r2, sp, #4
2fff3f96:	4638      	mov	r0, r7
2fff3f98:	f7ff fdc8 	bl	2fff3b2c <fdt_next_node>
2fff3f9c:	2800      	cmp	r0, #0
2fff3f9e:	db04      	blt.n	2fff3faa <fdt_supernode_atdepth_offset+0x5e>
2fff3fa0:	4284      	cmp	r4, r0
2fff3fa2:	daea      	bge.n	2fff3f7a <fdt_supernode_atdepth_offset+0x2e>
2fff3fa4:	f06f 0003 	mvn.w	r0, #3
2fff3fa8:	e7de      	b.n	2fff3f68 <fdt_supernode_atdepth_offset+0x1c>
2fff3faa:	1c42      	adds	r2, r0, #1
2fff3fac:	d0fa      	beq.n	2fff3fa4 <fdt_supernode_atdepth_offset+0x58>
2fff3fae:	1d03      	adds	r3, r0, #4
2fff3fb0:	bf08      	it	eq
2fff3fb2:	f06f 000a 	mvneq.w	r0, #10
2fff3fb6:	e7d7      	b.n	2fff3f68 <fdt_supernode_atdepth_offset+0x1c>

2fff3fb8 <fdt_node_depth>:
2fff3fb8:	b507      	push	{r0, r1, r2, lr}
2fff3fba:	2200      	movs	r2, #0
2fff3fbc:	ab01      	add	r3, sp, #4
2fff3fbe:	f7ff ffc5 	bl	2fff3f4c <fdt_supernode_atdepth_offset>
2fff3fc2:	2800      	cmp	r0, #0
2fff3fc4:	d005      	beq.n	2fff3fd2 <fdt_node_depth+0x1a>
2fff3fc6:	db01      	blt.n	2fff3fcc <fdt_node_depth+0x14>
2fff3fc8:	f06f 000c 	mvn.w	r0, #12
2fff3fcc:	b003      	add	sp, #12
2fff3fce:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3fd2:	9801      	ldr	r0, [sp, #4]
2fff3fd4:	e7fa      	b.n	2fff3fcc <fdt_node_depth+0x14>

2fff3fd6 <fdt_parent_offset>:
2fff3fd6:	b570      	push	{r4, r5, r6, lr}
2fff3fd8:	4604      	mov	r4, r0
2fff3fda:	460d      	mov	r5, r1
2fff3fdc:	f7ff ffec 	bl	2fff3fb8 <fdt_node_depth>
2fff3fe0:	1e02      	subs	r2, r0, #0
2fff3fe2:	db07      	blt.n	2fff3ff4 <fdt_parent_offset+0x1e>
2fff3fe4:	4629      	mov	r1, r5
2fff3fe6:	4620      	mov	r0, r4
2fff3fe8:	2300      	movs	r3, #0
2fff3fea:	3a01      	subs	r2, #1
2fff3fec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff3ff0:	f7ff bfac 	b.w	2fff3f4c <fdt_supernode_atdepth_offset>
2fff3ff4:	bd70      	pop	{r4, r5, r6, pc}

2fff3ff6 <fdt_node_offset_by_phandle>:
2fff3ff6:	1e4b      	subs	r3, r1, #1
2fff3ff8:	3303      	adds	r3, #3
2fff3ffa:	b570      	push	{r4, r5, r6, lr}
2fff3ffc:	4605      	mov	r5, r0
2fff3ffe:	460e      	mov	r6, r1
2fff4000:	d817      	bhi.n	2fff4032 <fdt_node_offset_by_phandle+0x3c>
2fff4002:	f7fe f937 	bl	2fff2274 <fdt_ro_probe_>
2fff4006:	1e04      	subs	r4, r0, #0
2fff4008:	db08      	blt.n	2fff401c <fdt_node_offset_by_phandle+0x26>
2fff400a:	2200      	movs	r2, #0
2fff400c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
2fff4010:	4628      	mov	r0, r5
2fff4012:	f7ff fd8b 	bl	2fff3b2c <fdt_next_node>
2fff4016:	2800      	cmp	r0, #0
2fff4018:	4604      	mov	r4, r0
2fff401a:	da01      	bge.n	2fff4020 <fdt_node_offset_by_phandle+0x2a>
2fff401c:	4620      	mov	r0, r4
2fff401e:	bd70      	pop	{r4, r5, r6, pc}
2fff4020:	4621      	mov	r1, r4
2fff4022:	4628      	mov	r0, r5
2fff4024:	f7fe fa2c 	bl	2fff2480 <fdt_get_phandle>
2fff4028:	42b0      	cmp	r0, r6
2fff402a:	d0f7      	beq.n	2fff401c <fdt_node_offset_by_phandle+0x26>
2fff402c:	2200      	movs	r2, #0
2fff402e:	4621      	mov	r1, r4
2fff4030:	e7ee      	b.n	2fff4010 <fdt_node_offset_by_phandle+0x1a>
2fff4032:	f06f 0405 	mvn.w	r4, #5
2fff4036:	e7f1      	b.n	2fff401c <fdt_node_offset_by_phandle+0x26>

2fff4038 <fdt_stringlist_contains>:
2fff4038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff403c:	4604      	mov	r4, r0
2fff403e:	4610      	mov	r0, r2
2fff4040:	460d      	mov	r5, r1
2fff4042:	4617      	mov	r7, r2
2fff4044:	f000 f9b2 	bl	2fff43ac <strlen>
2fff4048:	4606      	mov	r6, r0
2fff404a:	f100 0801 	add.w	r8, r0, #1
2fff404e:	42b5      	cmp	r5, r6
2fff4050:	db0b      	blt.n	2fff406a <fdt_stringlist_contains+0x32>
2fff4052:	4642      	mov	r2, r8
2fff4054:	4621      	mov	r1, r4
2fff4056:	4638      	mov	r0, r7
2fff4058:	f000 f86d 	bl	2fff4136 <memcmp>
2fff405c:	b168      	cbz	r0, 2fff407a <fdt_stringlist_contains+0x42>
2fff405e:	462a      	mov	r2, r5
2fff4060:	2100      	movs	r1, #0
2fff4062:	4620      	mov	r0, r4
2fff4064:	f000 f859 	bl	2fff411a <memchr>
2fff4068:	b910      	cbnz	r0, 2fff4070 <fdt_stringlist_contains+0x38>
2fff406a:	2000      	movs	r0, #0
2fff406c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4070:	1b04      	subs	r4, r0, r4
2fff4072:	3401      	adds	r4, #1
2fff4074:	1b2d      	subs	r5, r5, r4
2fff4076:	1c44      	adds	r4, r0, #1
2fff4078:	e7e9      	b.n	2fff404e <fdt_stringlist_contains+0x16>
2fff407a:	2001      	movs	r0, #1
2fff407c:	e7f6      	b.n	2fff406c <fdt_stringlist_contains+0x34>

2fff407e <fdt_stringlist_search>:
2fff407e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff4082:	4698      	mov	r8, r3
2fff4084:	ab01      	add	r3, sp, #4
2fff4086:	f7ff fef9 	bl	2fff3e7c <fdt_getprop>
2fff408a:	4604      	mov	r4, r0
2fff408c:	b920      	cbnz	r0, 2fff4098 <fdt_stringlist_search+0x1a>
2fff408e:	9d01      	ldr	r5, [sp, #4]
2fff4090:	4628      	mov	r0, r5
2fff4092:	b003      	add	sp, #12
2fff4094:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff4098:	4640      	mov	r0, r8
2fff409a:	2500      	movs	r5, #0
2fff409c:	f000 f986 	bl	2fff43ac <strlen>
2fff40a0:	9e01      	ldr	r6, [sp, #4]
2fff40a2:	1c47      	adds	r7, r0, #1
2fff40a4:	4426      	add	r6, r4
2fff40a6:	42b4      	cmp	r4, r6
2fff40a8:	d302      	bcc.n	2fff40b0 <fdt_stringlist_search+0x32>
2fff40aa:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
2fff40ae:	e7ef      	b.n	2fff4090 <fdt_stringlist_search+0x12>
2fff40b0:	1b31      	subs	r1, r6, r4
2fff40b2:	4620      	mov	r0, r4
2fff40b4:	f000 f996 	bl	2fff43e4 <strnlen>
2fff40b8:	3001      	adds	r0, #1
2fff40ba:	eb04 0900 	add.w	r9, r4, r0
2fff40be:	45b1      	cmp	r9, r6
2fff40c0:	9001      	str	r0, [sp, #4]
2fff40c2:	d80c      	bhi.n	2fff40de <fdt_stringlist_search+0x60>
2fff40c4:	42b8      	cmp	r0, r7
2fff40c6:	d002      	beq.n	2fff40ce <fdt_stringlist_search+0x50>
2fff40c8:	3501      	adds	r5, #1
2fff40ca:	464c      	mov	r4, r9
2fff40cc:	e7eb      	b.n	2fff40a6 <fdt_stringlist_search+0x28>
2fff40ce:	463a      	mov	r2, r7
2fff40d0:	4641      	mov	r1, r8
2fff40d2:	4620      	mov	r0, r4
2fff40d4:	f000 f82f 	bl	2fff4136 <memcmp>
2fff40d8:	2800      	cmp	r0, #0
2fff40da:	d1f5      	bne.n	2fff40c8 <fdt_stringlist_search+0x4a>
2fff40dc:	e7d8      	b.n	2fff4090 <fdt_stringlist_search+0x12>
2fff40de:	f06f 050e 	mvn.w	r5, #14
2fff40e2:	e7d5      	b.n	2fff4090 <fdt_stringlist_search+0x12>

2fff40e4 <fdt_node_offset_by_compatible>:
2fff40e4:	b570      	push	{r4, r5, r6, lr}
2fff40e6:	4605      	mov	r5, r0
2fff40e8:	460c      	mov	r4, r1
2fff40ea:	4616      	mov	r6, r2
2fff40ec:	f7fe f8c2 	bl	2fff2274 <fdt_ro_probe_>
2fff40f0:	2800      	cmp	r0, #0
2fff40f2:	db11      	blt.n	2fff4118 <fdt_node_offset_by_compatible+0x34>
2fff40f4:	4621      	mov	r1, r4
2fff40f6:	2200      	movs	r2, #0
2fff40f8:	4628      	mov	r0, r5
2fff40fa:	f7ff fd17 	bl	2fff3b2c <fdt_next_node>
2fff40fe:	2800      	cmp	r0, #0
2fff4100:	4604      	mov	r4, r0
2fff4102:	db08      	blt.n	2fff4116 <fdt_node_offset_by_compatible+0x32>
2fff4104:	4632      	mov	r2, r6
2fff4106:	4621      	mov	r1, r4
2fff4108:	4628      	mov	r0, r5
2fff410a:	f7fe f9f1 	bl	2fff24f0 <fdt_node_check_compatible>
2fff410e:	1c43      	adds	r3, r0, #1
2fff4110:	db02      	blt.n	2fff4118 <fdt_node_offset_by_compatible+0x34>
2fff4112:	2800      	cmp	r0, #0
2fff4114:	d1ee      	bne.n	2fff40f4 <fdt_node_offset_by_compatible+0x10>
2fff4116:	4620      	mov	r0, r4
2fff4118:	bd70      	pop	{r4, r5, r6, pc}

2fff411a <memchr>:
2fff411a:	4402      	add	r2, r0
2fff411c:	4603      	mov	r3, r0
2fff411e:	b2c9      	uxtb	r1, r1
2fff4120:	b510      	push	{r4, lr}
2fff4122:	4618      	mov	r0, r3
2fff4124:	4293      	cmp	r3, r2
2fff4126:	d101      	bne.n	2fff412c <memchr+0x12>
2fff4128:	2000      	movs	r0, #0
2fff412a:	e003      	b.n	2fff4134 <memchr+0x1a>
2fff412c:	7804      	ldrb	r4, [r0, #0]
2fff412e:	3301      	adds	r3, #1
2fff4130:	428c      	cmp	r4, r1
2fff4132:	d1f6      	bne.n	2fff4122 <memchr+0x8>
2fff4134:	bd10      	pop	{r4, pc}

2fff4136 <memcmp>:
2fff4136:	4402      	add	r2, r0
2fff4138:	b510      	push	{r4, lr}
2fff413a:	4290      	cmp	r0, r2
2fff413c:	d101      	bne.n	2fff4142 <memcmp+0xc>
2fff413e:	2000      	movs	r0, #0
2fff4140:	e006      	b.n	2fff4150 <memcmp+0x1a>
2fff4142:	f810 3b01 	ldrb.w	r3, [r0], #1
2fff4146:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff414a:	42a3      	cmp	r3, r4
2fff414c:	d0f5      	beq.n	2fff413a <memcmp+0x4>
2fff414e:	1b18      	subs	r0, r3, r4
2fff4150:	bd10      	pop	{r4, pc}

2fff4152 <memcpy>:
2fff4152:	440a      	add	r2, r1
2fff4154:	1e43      	subs	r3, r0, #1
2fff4156:	b510      	push	{r4, lr}
2fff4158:	4291      	cmp	r1, r2
2fff415a:	d100      	bne.n	2fff415e <memcpy+0xc>
2fff415c:	bd10      	pop	{r4, pc}
2fff415e:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff4162:	f803 4f01 	strb.w	r4, [r3, #1]!
2fff4166:	e7f7      	b.n	2fff4158 <memcpy+0x6>

2fff4168 <memmove>:
2fff4168:	b470      	push	{r4, r5, r6}
2fff416a:	4613      	mov	r3, r2
2fff416c:	1a46      	subs	r6, r0, r1
2fff416e:	4605      	mov	r5, r0
2fff4170:	4296      	cmp	r6, r2
2fff4172:	460c      	mov	r4, r1
2fff4174:	d302      	bcc.n	2fff417c <memmove+0x14>
2fff4176:	bc70      	pop	{r4, r5, r6}
2fff4178:	f7ff bfeb 	b.w	2fff4152 <memcpy>
2fff417c:	4414      	add	r4, r2
2fff417e:	4403      	add	r3, r0
2fff4180:	429d      	cmp	r5, r3
2fff4182:	d102      	bne.n	2fff418a <memmove+0x22>
2fff4184:	4628      	mov	r0, r5
2fff4186:	bc70      	pop	{r4, r5, r6}
2fff4188:	4770      	bx	lr
2fff418a:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2fff418e:	f803 2d01 	strb.w	r2, [r3, #-1]!
2fff4192:	e7f5      	b.n	2fff4180 <memmove+0x18>

2fff4194 <memset>:
2fff4194:	b570      	push	{r4, r5, r6, lr}
2fff4196:	b1ca      	cbz	r2, 2fff41cc <memset+0x38>
2fff4198:	b2c9      	uxtb	r1, r1
2fff419a:	4603      	mov	r3, r0
2fff419c:	075c      	lsls	r4, r3, #29
2fff419e:	d111      	bne.n	2fff41c4 <memset+0x30>
2fff41a0:	f022 0407 	bic.w	r4, r2, #7
2fff41a4:	f04f 3501 	mov.w	r5, #16843009	@ 0x1010101
2fff41a8:	fba1 5605 	umull	r5, r6, r1, r5
2fff41ac:	441c      	add	r4, r3
2fff41ae:	442e      	add	r6, r5
2fff41b0:	42a3      	cmp	r3, r4
2fff41b2:	d10c      	bne.n	2fff41ce <memset+0x3a>
2fff41b4:	f002 0207 	and.w	r2, r2, #7
2fff41b8:	4422      	add	r2, r4
2fff41ba:	4294      	cmp	r4, r2
2fff41bc:	d006      	beq.n	2fff41cc <memset+0x38>
2fff41be:	f804 1b01 	strb.w	r1, [r4], #1
2fff41c2:	e7fa      	b.n	2fff41ba <memset+0x26>
2fff41c4:	f803 1b01 	strb.w	r1, [r3], #1
2fff41c8:	3a01      	subs	r2, #1
2fff41ca:	d1e7      	bne.n	2fff419c <memset+0x8>
2fff41cc:	bd70      	pop	{r4, r5, r6, pc}
2fff41ce:	e9c3 5600 	strd	r5, r6, [r3]
2fff41d2:	3308      	adds	r3, #8
2fff41d4:	e7ec      	b.n	2fff41b0 <memset+0x1c>

2fff41d6 <unsigned_num_print.part.0>:
2fff41d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff41da:	b089      	sub	sp, #36	@ 0x24
2fff41dc:	f10d 0a0c 	add.w	sl, sp, #12
2fff41e0:	4605      	mov	r5, r0
2fff41e2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
2fff41e4:	460c      	mov	r4, r1
2fff41e6:	9301      	str	r3, [sp, #4]
2fff41e8:	4690      	mov	r8, r2
2fff41ea:	2600      	movs	r6, #0
2fff41ec:	46d3      	mov	fp, sl
2fff41ee:	4621      	mov	r1, r4
2fff41f0:	4642      	mov	r2, r8
2fff41f2:	2300      	movs	r3, #0
2fff41f4:	4628      	mov	r0, r5
2fff41f6:	f106 0901 	add.w	r9, r6, #1
2fff41fa:	f7fe e82a 	blx	2fff2250 <__aeabi_uldivmod>
2fff41fe:	b2d3      	uxtb	r3, r2
2fff4200:	2a09      	cmp	r2, #9
2fff4202:	bf94      	ite	ls
2fff4204:	3330      	addls	r3, #48	@ 0x30
2fff4206:	3357      	addhi	r3, #87	@ 0x57
2fff4208:	4545      	cmp	r5, r8
2fff420a:	b2db      	uxtb	r3, r3
2fff420c:	f174 0400 	sbcs.w	r4, r4, #0
2fff4210:	f80a 3b01 	strb.w	r3, [sl], #1
2fff4214:	d20e      	bcs.n	2fff4234 <unsigned_num_print.part.0+0x5e>
2fff4216:	2f00      	cmp	r7, #0
2fff4218:	dc1c      	bgt.n	2fff4254 <unsigned_num_print.part.0+0x7e>
2fff421a:	2400      	movs	r4, #0
2fff421c:	4635      	mov	r5, r6
2fff421e:	f81b 0005 	ldrb.w	r0, [fp, r5]
2fff4222:	f7fe fd52 	bl	2fff2cca <putchar>
2fff4226:	3d01      	subs	r5, #1
2fff4228:	d2f9      	bcs.n	2fff421e <unsigned_num_print.part.0+0x48>
2fff422a:	1c60      	adds	r0, r4, #1
2fff422c:	4430      	add	r0, r6
2fff422e:	b009      	add	sp, #36	@ 0x24
2fff4230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4234:	464e      	mov	r6, r9
2fff4236:	4605      	mov	r5, r0
2fff4238:	460c      	mov	r4, r1
2fff423a:	e7d8      	b.n	2fff41ee <unsigned_num_print.part.0+0x18>
2fff423c:	9801      	ldr	r0, [sp, #4]
2fff423e:	3c01      	subs	r4, #1
2fff4240:	f7fe fd43 	bl	2fff2cca <putchar>
2fff4244:	45a1      	cmp	r9, r4
2fff4246:	dbf9      	blt.n	2fff423c <unsigned_num_print.part.0+0x66>
2fff4248:	eba7 0409 	sub.w	r4, r7, r9
2fff424c:	45b9      	cmp	r9, r7
2fff424e:	bfc8      	it	gt
2fff4250:	2400      	movgt	r4, #0
2fff4252:	e7e3      	b.n	2fff421c <unsigned_num_print.part.0+0x46>
2fff4254:	463c      	mov	r4, r7
2fff4256:	e7f5      	b.n	2fff4244 <unsigned_num_print.part.0+0x6e>

2fff4258 <printf>:
2fff4258:	b40f      	push	{r0, r1, r2, r3}
2fff425a:	b507      	push	{r0, r1, r2, lr}
2fff425c:	a904      	add	r1, sp, #16
2fff425e:	f851 0b04 	ldr.w	r0, [r1], #4
2fff4262:	9101      	str	r1, [sp, #4]
2fff4264:	f7fe f964 	bl	2fff2530 <vprintf>
2fff4268:	b003      	add	sp, #12
2fff426a:	f85d eb04 	ldr.w	lr, [sp], #4
2fff426e:	b004      	add	sp, #16
2fff4270:	4770      	bx	lr

2fff4272 <unsigned_num_print>:
2fff4272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4276:	b089      	sub	sp, #36	@ 0x24
2fff4278:	4604      	mov	r4, r0
2fff427a:	460f      	mov	r7, r1
2fff427c:	f89d 305c 	ldrb.w	r3, [sp, #92]	@ 0x5c
2fff4280:	4615      	mov	r5, r2
2fff4282:	e9dd 9812 	ldrd	r9, r8, [sp, #72]	@ 0x48
2fff4286:	f89d a054 	ldrb.w	sl, [sp, #84]	@ 0x54
2fff428a:	2b00      	cmp	r3, #0
2fff428c:	bf0c      	ite	eq
2fff428e:	2361      	moveq	r3, #97	@ 0x61
2fff4290:	2341      	movne	r3, #65	@ 0x41
2fff4292:	f10d 0b0c 	add.w	fp, sp, #12
2fff4296:	2600      	movs	r6, #0
2fff4298:	3b0a      	subs	r3, #10
2fff429a:	9301      	str	r3, [sp, #4]
2fff429c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
2fff429e:	4641      	mov	r1, r8
2fff42a0:	2300      	movs	r3, #0
2fff42a2:	4648      	mov	r0, r9
2fff42a4:	3601      	adds	r6, #1
2fff42a6:	f7fd efd4 	blx	2fff2250 <__aeabi_uldivmod>
2fff42aa:	2a09      	cmp	r2, #9
2fff42ac:	b2d3      	uxtb	r3, r2
2fff42ae:	bf92      	itee	ls
2fff42b0:	3330      	addls	r3, #48	@ 0x30
2fff42b2:	9a01      	ldrhi	r2, [sp, #4]
2fff42b4:	189b      	addhi	r3, r3, r2
2fff42b6:	b2db      	uxtb	r3, r3
2fff42b8:	f80b 3b01 	strb.w	r3, [fp], #1
2fff42bc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
2fff42be:	4599      	cmp	r9, r3
2fff42c0:	f178 0800 	sbcs.w	r8, r8, #0
2fff42c4:	d21c      	bcs.n	2fff4300 <unsigned_num_print+0x8e>
2fff42c6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
2fff42c8:	1b9b      	subs	r3, r3, r6
2fff42ca:	682a      	ldr	r2, [r5, #0]
2fff42cc:	2b00      	cmp	r3, #0
2fff42ce:	dc1a      	bgt.n	2fff4306 <unsigned_num_print+0x94>
2fff42d0:	4633      	mov	r3, r6
2fff42d2:	a903      	add	r1, sp, #12
2fff42d4:	682a      	ldr	r2, [r5, #0]
2fff42d6:	3b01      	subs	r3, #1
2fff42d8:	42ba      	cmp	r2, r7
2fff42da:	d205      	bcs.n	2fff42e8 <unsigned_num_print+0x76>
2fff42dc:	6822      	ldr	r2, [r4, #0]
2fff42de:	5c58      	ldrb	r0, [r3, r1]
2fff42e0:	7010      	strb	r0, [r2, #0]
2fff42e2:	6822      	ldr	r2, [r4, #0]
2fff42e4:	3201      	adds	r2, #1
2fff42e6:	6022      	str	r2, [r4, #0]
2fff42e8:	682a      	ldr	r2, [r5, #0]
2fff42ea:	3201      	adds	r2, #1
2fff42ec:	602a      	str	r2, [r5, #0]
2fff42ee:	2b00      	cmp	r3, #0
2fff42f0:	d1f0      	bne.n	2fff42d4 <unsigned_num_print+0x62>
2fff42f2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
2fff42f4:	441e      	add	r6, r3
2fff42f6:	2e00      	cmp	r6, #0
2fff42f8:	db12      	blt.n	2fff4320 <unsigned_num_print+0xae>
2fff42fa:	b009      	add	sp, #36	@ 0x24
2fff42fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4300:	4681      	mov	r9, r0
2fff4302:	4688      	mov	r8, r1
2fff4304:	e7ca      	b.n	2fff429c <unsigned_num_print+0x2a>
2fff4306:	4297      	cmp	r7, r2
2fff4308:	d905      	bls.n	2fff4316 <unsigned_num_print+0xa4>
2fff430a:	6822      	ldr	r2, [r4, #0]
2fff430c:	f882 a000 	strb.w	sl, [r2]
2fff4310:	6822      	ldr	r2, [r4, #0]
2fff4312:	3201      	adds	r2, #1
2fff4314:	6022      	str	r2, [r4, #0]
2fff4316:	682a      	ldr	r2, [r5, #0]
2fff4318:	3b01      	subs	r3, #1
2fff431a:	3201      	adds	r2, #1
2fff431c:	602a      	str	r2, [r5, #0]
2fff431e:	e7d4      	b.n	2fff42ca <unsigned_num_print+0x58>
2fff4320:	682b      	ldr	r3, [r5, #0]
2fff4322:	42bb      	cmp	r3, r7
2fff4324:	d205      	bcs.n	2fff4332 <unsigned_num_print+0xc0>
2fff4326:	6823      	ldr	r3, [r4, #0]
2fff4328:	f883 a000 	strb.w	sl, [r3]
2fff432c:	6823      	ldr	r3, [r4, #0]
2fff432e:	3301      	adds	r3, #1
2fff4330:	6023      	str	r3, [r4, #0]
2fff4332:	682b      	ldr	r3, [r5, #0]
2fff4334:	3601      	adds	r6, #1
2fff4336:	3301      	adds	r3, #1
2fff4338:	602b      	str	r3, [r5, #0]
2fff433a:	e7dc      	b.n	2fff42f6 <unsigned_num_print+0x84>

2fff433c <snprintf>:
2fff433c:	b40c      	push	{r2, r3}
2fff433e:	b507      	push	{r0, r1, r2, lr}
2fff4340:	ab04      	add	r3, sp, #16
2fff4342:	f853 2b04 	ldr.w	r2, [r3], #4
2fff4346:	9301      	str	r3, [sp, #4]
2fff4348:	f7fe f9c8 	bl	2fff26dc <vsnprintf>
2fff434c:	b003      	add	sp, #12
2fff434e:	f85d eb04 	ldr.w	lr, [sp], #4
2fff4352:	b002      	add	sp, #8
2fff4354:	4770      	bx	lr

2fff4356 <strchr>:
2fff4356:	b2c9      	uxtb	r1, r1
2fff4358:	4603      	mov	r3, r0
2fff435a:	781a      	ldrb	r2, [r3, #0]
2fff435c:	4618      	mov	r0, r3
2fff435e:	3301      	adds	r3, #1
2fff4360:	428a      	cmp	r2, r1
2fff4362:	d002      	beq.n	2fff436a <strchr+0x14>
2fff4364:	2a00      	cmp	r2, #0
2fff4366:	d1f8      	bne.n	2fff435a <strchr+0x4>
2fff4368:	4610      	mov	r0, r2
2fff436a:	4770      	bx	lr

2fff436c <strcmp>:
2fff436c:	1e43      	subs	r3, r0, #1
2fff436e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff4372:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff4376:	4290      	cmp	r0, r2
2fff4378:	d001      	beq.n	2fff437e <strcmp+0x12>
2fff437a:	1a80      	subs	r0, r0, r2
2fff437c:	e001      	b.n	2fff4382 <strcmp+0x16>
2fff437e:	2800      	cmp	r0, #0
2fff4380:	d1f5      	bne.n	2fff436e <strcmp+0x2>
2fff4382:	4770      	bx	lr

2fff4384 <strlcpy>:
2fff4384:	460b      	mov	r3, r1
2fff4386:	b510      	push	{r4, lr}
2fff4388:	b962      	cbnz	r2, 2fff43a4 <strlcpy+0x20>
2fff438a:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff438e:	2a00      	cmp	r2, #0
2fff4390:	d1fb      	bne.n	2fff438a <strlcpy+0x6>
2fff4392:	e004      	b.n	2fff439e <strlcpy+0x1a>
2fff4394:	f813 4b01 	ldrb.w	r4, [r3], #1
2fff4398:	f800 4b01 	strb.w	r4, [r0], #1
2fff439c:	b914      	cbnz	r4, 2fff43a4 <strlcpy+0x20>
2fff439e:	1a58      	subs	r0, r3, r1
2fff43a0:	3801      	subs	r0, #1
2fff43a2:	bd10      	pop	{r4, pc}
2fff43a4:	3a01      	subs	r2, #1
2fff43a6:	d1f5      	bne.n	2fff4394 <strlcpy+0x10>
2fff43a8:	7002      	strb	r2, [r0, #0]
2fff43aa:	e7ee      	b.n	2fff438a <strlcpy+0x6>

2fff43ac <strlen>:
2fff43ac:	4603      	mov	r3, r0
2fff43ae:	461a      	mov	r2, r3
2fff43b0:	3301      	adds	r3, #1
2fff43b2:	7811      	ldrb	r1, [r2, #0]
2fff43b4:	2900      	cmp	r1, #0
2fff43b6:	d1fa      	bne.n	2fff43ae <strlen+0x2>
2fff43b8:	1a10      	subs	r0, r2, r0
2fff43ba:	4770      	bx	lr

2fff43bc <strncmp>:
2fff43bc:	4603      	mov	r3, r0
2fff43be:	4610      	mov	r0, r2
2fff43c0:	b510      	push	{r4, lr}
2fff43c2:	b142      	cbz	r2, 2fff43d6 <strncmp+0x1a>
2fff43c4:	188c      	adds	r4, r1, r2
2fff43c6:	3b01      	subs	r3, #1
2fff43c8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff43cc:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff43d0:	4290      	cmp	r0, r2
2fff43d2:	d001      	beq.n	2fff43d8 <strncmp+0x1c>
2fff43d4:	1a80      	subs	r0, r0, r2
2fff43d6:	bd10      	pop	{r4, pc}
2fff43d8:	2800      	cmp	r0, #0
2fff43da:	d0fc      	beq.n	2fff43d6 <strncmp+0x1a>
2fff43dc:	42a1      	cmp	r1, r4
2fff43de:	d1f3      	bne.n	2fff43c8 <strncmp+0xc>
2fff43e0:	2000      	movs	r0, #0
2fff43e2:	e7f8      	b.n	2fff43d6 <strncmp+0x1a>

2fff43e4 <strnlen>:
2fff43e4:	4603      	mov	r3, r0
2fff43e6:	2000      	movs	r0, #0
2fff43e8:	4288      	cmp	r0, r1
2fff43ea:	d100      	bne.n	2fff43ee <strnlen+0xa>
2fff43ec:	4770      	bx	lr
2fff43ee:	5c1a      	ldrb	r2, [r3, r0]
2fff43f0:	2a00      	cmp	r2, #0
2fff43f2:	d0fb      	beq.n	2fff43ec <strnlen+0x8>
2fff43f4:	3001      	adds	r0, #1
2fff43f6:	e7f7      	b.n	2fff43e8 <strnlen+0x4>

2fff43f8 <strrchr>:
2fff43f8:	4603      	mov	r3, r0
2fff43fa:	b2c9      	uxtb	r1, r1
2fff43fc:	2000      	movs	r0, #0
2fff43fe:	b510      	push	{r4, lr}
2fff4400:	461c      	mov	r4, r3
2fff4402:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff4406:	428a      	cmp	r2, r1
2fff4408:	bf08      	it	eq
2fff440a:	4620      	moveq	r0, r4
2fff440c:	2a00      	cmp	r2, #0
2fff440e:	d1f7      	bne.n	2fff4400 <strrchr+0x8>
2fff4410:	bd10      	pop	{r4, pc}
2fff4412:	0000      	movs	r0, r0
2fff4414:	0000      	movs	r0, r0
	...

2fff4418 <stm32mp1_mmap>:
2fff4418:	0000 2ffc 0000 0000 0000 2ffc 0000 0004     .../......./....
2fff4428:	004a 0000 0000 4000 0000 4000 0000 0000     J......@...@....
2fff4438:	0000 4000 0000 4000 0048 0000 0000 4000     ...@...@H......@
	...

2fff4460 <fip_dev_funcs>:
2fff4460:	2a11 2fff a1fd 2ffe 0000 0000 a1d9 2ffe     .*./.../......./
2fff4470:	a125 2ffe 0000 0000 a069 2ffe a089 2ffe     %../....i../.../
2fff4480:	a2ed 2ffe                                   .../

2fff4484 <fip_dev_connector>:
2fff4484:	a33d 2ffe                                   =../

2fff4488 <memmap_dev_funcs>:
2fff4488:	2a15 2fff a511 2ffe a4b5 2ffe a495 2ffe     .*./.../.../.../
2fff4498:	a415 2ffe a3b5 2ffe a4ed 2ffe 0000 0000     .../.../.../....
2fff44a8:	2a19 2fff                                   .*./

2fff44ac <memmap_dev_connector>:
2fff44ac:	a479 2ffe                                   y../

2fff44b0 <ddr_registers>:
2fff44b0:	56df 2fff 4bc0 2fff 0019 0000 0000 0000     .V./.K./........
2fff44c0:	5849 2fff 4b90 2fff 000c 0000 0000 0000     IX./.K./........
2fff44d0:	5862 2fff 4b28 2fff 0011 0000 0000 0000     bX./(K./........
2fff44e0:	5857 2fff 4b6c 2fff 0009 0000 0000 0000     WX./lK./........
2fff44f0:	56df 2fff 4afc 2fff 000b 0000 0001 0000     .V./.J./........
2fff4500:	5849 2fff 4ad4 2fff 000a 0000 0001 0000     IX./.J./........
2fff4510:	5837 2fff 000c 0000 0019 0000 5842 2fff     7X./........BX./
2fff4520:	0070 0000 000c 0000 5850 2fff 00a0 0000     p.......PX./....
2fff4530:	0009 0000 585b 2fff 00c4 0000 0011 0000     ....[X./........
2fff4540:	5867 2fff 0108 0000 000b 0000 5872 2fff     gX./........rX./
2fff4550:	0134 0000 000a 0000                         4.......

2fff4558 <init>:
2fff4558:	c200 0001 1000 0000 0000 0000 0400 0000     ................
2fff4568:	000c 0000 0000 0000 0000 0000 0000 0000     ................
2fff4578:	0000 2000 0000 0000 0000 0000               ... ........

2fff4584 <load_info>:
2fff4584:	0001 0000 5f3f 2fff 0004 0000 5ef9 2fff     ....?_./.....^./
2fff4594:	0008 0000 5f03 2fff 0009 0000 5f14 2fff     ....._./....._./
2fff45a4:	0005 0000 5f25 2fff 0002 0000 5f2f 2fff     ....%_./..../_./
2fff45b4:	0010 0000 5f3b 2fff 0004 0000 0005 0000     ....;_./........
2fff45c4:	0002 0000 0010 0000                         ........

2fff45cc <plat_prefix_str>:
2fff45cc:	6710 2fff 671a 2fff 6724 2fff 672e 2fff     .g./.g./$g./.g./
2fff45dc:	6738 2fff                                   8g./

2fff45e0 <stm32_tamp_nvram_nvmem_ops>:
2fff45e0:	e0e1 2ffe e185 2ffe                         .../.../

2fff45e8 <CSWTCH.26>:
2fff45e8:	719f 2fff 7194 2fff 714f 2fff 7196 2fff     .q./.q./Oq./.q./

2fff45f8 <CSWTCH.25>:
2fff45f8:	7198 2fff 719b 2fff 719e 2fff 71a1 2fff     .q./.q./.q./.q./

2fff4608 <stm32mp1_uart_addresses>:
2fff4608:	0000 5c00 e000 4000 f000 4000 0000 4001     ...\...@...@...@
2fff4618:	1000 4001 3000 4400 8000 4001 9000 4001     ...@.0.D...@...@

2fff4628 <i2c_specs>:
2fff4628:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fff4638:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fff4648:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fff4658:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fff4668:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fff4678:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........

2fff4688 <pmic_regs>:
2fff4688:	7655 2fff 47a0 2fff 0000 0000 0000 0000     Uv./.G./........
2fff4698:	03e8 0000 652d 2fff 47a0 2fff 0000 0000     ....-e./.G./....
2fff46a8:	0000 0000 03e8 0000 6541 2fff 47a0 2fff     ........Ae./.G./
	...
2fff46c0:	03e8 0000 765b 2fff 47a0 2fff 0000 0000     ....[v./.G./....
2fff46d0:	0000 0000 03e8 0000 7661 2fff 47a0 2fff     ........av./.G./
	...
2fff46e8:	03e8 0000 7666 2fff 47a0 2fff 0000 0000     ....fv./.G./....
2fff46f8:	0000 0000 03e8 0000 6533 2fff 47a0 2fff     ........3e./.G./
	...
2fff4710:	03e8 0000 766b 2fff 47a0 2fff 0000 0000     ....kv./.G./....
2fff4720:	0000 0000 03e8 0000 7670 2fff 47a0 2fff     ........pv./.G./
	...
2fff4738:	03e8 0000 7675 2fff 47a0 2fff 0000 0000     ....uv./.G./....
2fff4748:	0000 0000 03e8 0000 6538 2fff 47a0 2fff     ........8e./.G./
	...
2fff4760:	03e8 0000 767a 2fff 47a0 2fff 0000 0000     ....zv./.G./....
2fff4770:	0000 0000 03e8 0000 7680 2fff 47a0 2fff     .........v./.G./
	...
2fff4788:	03e8 0000 7688 2fff 47a0 2fff 0000 0000     .....v./.G./....
2fff4798:	0000 0000 03e8 0000                         ........

2fff47a0 <pmic_ops>:
2fff47a0:	3773 2fff 3725 2fff 371f 2fff 3719 2fff     s7./%7./.7./.7./
2fff47b0:	3713 2fff 372f 2fff 0000 0000 0000 0000     .7.//7./........

2fff47c0 <regulators_table>:
2fff47c0:	7655 2fff 4e8a 2fff 2040 3001 0012 0018     Uv./.N./@ .0....
2fff47d0:	001d 0000 652d 2fff 4e40 2fff 2125 3101     ....-e./@N./%!.1
2fff47e0:	0212 0118 011d 0000 6541 2fff 4dd0 2fff     ........Ae./.M./
2fff47f0:	2238 3201 0412 0218 021d 0000 765b 2fff     8".2........[v./
2fff4800:	4d56 2fff 233d 3301 0612 0318 031d 0000     VM./=#.3........
2fff4810:	7661 2fff 4d24 2fff 2519 3501 0000 001a     av./$M./.%.5....
2fff4820:	001e 0000 7666 2fff 4cf2 2fff 2619 3601     ....fv./.L./.&.6
2fff4830:	0000 011a 011e 0000 6533 2fff 4cb4 2fff     ........3e./.L./
2fff4840:	271f 3701 0000 021a 021e 0000 766b 2fff     .'.7........kv./
2fff4850:	4c40 2fff 2801 3801 0000 031a 031e 0000     @L./.(.8........
2fff4860:	7670 2fff 4c74 2fff 291f 3901 0000 041a     pv./tL./.).9....
2fff4870:	041e 0000 7675 2fff 4c42 2fff 2a19 3a01     ....uv./BL./.*.:
2fff4880:	0000 051a 051e 0000 6538 2fff 4c3e 2fff     ........8e./>L./
2fff4890:	2401 3401 0000 061a 0000 0000 767a 2fff     .$.4........zv./
2fff48a0:	4c3c 2fff 4001 0001 0000 0000 061d 0000     <L./.@..........
2fff48b0:	7680 2fff 4c3c 2fff 4001 0002 0000 0000     .v./<L./.@......
2fff48c0:	041d 0000 7688 2fff 4c3c 2fff 4001 0004     .....v./<L./.@..
2fff48d0:	0000 0000 051d 0000                         ........

2fff48d8 <stm32mp1_tamp_nvram>:
2fff48d8:	0003 0000 48e0 2fff                         .....H./

2fff48e0 <mp1_zone_cfg_fields>:
2fff48e0:	0020 0000 0000 0000 0007 0000 0020 0000      ........... ...
2fff48f0:	0010 0000 0017 0000                         ........

2fff48f8 <stm32mp_clk_ops>:
2fff48f8:	11bd 2fff 112d 2fff 1385 2fff 1075 2fff     .../-../.../u../
2fff4908:	10ed 2fff                                   .../

2fff490c <stm32mp1_clk_pll>:
2fff490c:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2fff491c:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fff492c:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2fff493c:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fff494c:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2fff495c:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2fff496c:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2fff497c:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2fff498c <stm32mp1_clk_sel>:
2fff498c:	08c0 0700 0004 0000 7999 2fff 08c4 0700     .........y./....
2fff499c:	0004 0000 7995 2fff 00d4 0300 0002 0000     .....y./........
2fff49ac:	7993 2fff 00c0 0700 0004 0000 798f 2fff     .y./.........y./
2fff49bc:	00c4 0700 0006 0000 7989 2fff 00c8 0700     .........y./....
2fff49cc:	0006 0000 7983 2fff 00cc 0300 0004 0000     .....y./........
2fff49dc:	797f 2fff 08e4 0700 0005 0000 797a 2fff     .y./........zy./
2fff49ec:	08e8 0700 0005 0000 7975 2fff 08ec 0700     ........uy./....
2fff49fc:	0005 0000 7975 2fff 08f0 0700 0005 0000     ....uy./........
2fff4a0c:	7975 2fff 08f4 0700 0004 0000 7971 2fff     uy./........qy./
2fff4a1c:	08f8 0700 0004 0000 796d 2fff 0900 0300     ........my./....
2fff4a2c:	0004 0000 7969 2fff 0904 0300 0004 0000     ....iy./........
2fff4a3c:	7965 2fff 0024 0700 0003 0000 7962 2fff     ey./$.......by./
2fff4a4c:	0048 0300 0004 0000 795e 2fff 091c 0300     H.......^y./....
2fff4a5c:	0003 0000 795b 2fff 091c 0104 0002 0000     ....[y./........
2fff4a6c:	7959 2fff 0020 0300 0004 0000 7955 2fff     Yy./ .......Uy./
2fff4a7c:	00d0 0300 0003 0000 7952 2fff 0140 0310     ........Ry./@...
2fff4a8c:	0004 0000 794e 2fff 00e4 0000 0045 0000     ....Ny./....E...
2fff4a9c:	00dc 0000 00dd 0000 00de 0000 00df 0000     ................
2fff4aac:	00e2 0000 00e5 0000 00e6 0000 00e0 0000     ................
2fff4abc:	00e1 0000 0041 0000 0042 0000 0071 0000     ....A...B...q...
2fff4acc:	0043 0000 0080 0000                         C.......

2fff4ad4 <ddrphy_timing>:
2fff4ad4:	0018 0000 001c 0004 0020 0008 0034 000c     ........ ...4...
2fff4ae4:	0038 0010 003c 0014 0040 0018 0044 001c     8...<...@...D...
2fff4af4:	0048 0020 004c 0024                         H. .L.$.

2fff4afc <ddrphy_reg>:
2fff4afc:	0008 0000 0024 0004 0028 0008 002c 000c     ....$...(...,...
2fff4b0c:	0030 0010 0050 0014 0184 0018 01c0 001c     0...P...........
2fff4b1c:	0200 0020 0240 0024 0280 0028               .. .@.$...(.

2fff4b28 <ddr_perf>:
2fff4b28:	0250 0000 0254 0004 025c 0008 0264 000c     P...T...\...d...
2fff4b38:	026c 0010 0404 0014 0408 0018 0494 001c     l...............
2fff4b48:	0498 0020 049c 0024 04a0 0028 04b4 002c     .. ...$...(...,.
2fff4b58:	04b8 0030 0544 0034 0548 0038 054c 003c     ..0.D.4.H.8.L.<.
2fff4b68:	0550 0040                                   P.@.

2fff4b6c <ddr_map>:
2fff4b6c:	0204 0000 0208 0004 020c 0008 0210 000c     ................
2fff4b7c:	0214 0010 0218 0014 0224 0018 0228 001c     ........$...(...
2fff4b8c:	022c 0020                                   ,. .

2fff4b90 <ddr_timing>:
2fff4b90:	0064 0000 0100 0004 0104 0008 0108 000c     d...............
2fff4ba0:	010c 0010 0110 0014 0114 0018 0118 001c     ................
2fff4bb0:	011c 0020 0120 0024 0138 0028 0240 002c     .. . .$.8.(.@.,.

2fff4bc0 <ddr_reg>:
2fff4bc0:	0000 0000 0010 0004 0014 0008 0020 000c     ............ ...
2fff4bd0:	0024 0010 0030 0014 0034 0018 0038 001c     $...0...4...8...
2fff4be0:	0050 0020 0060 0024 00c0 0028 0180 002c     P. .`.$...(...,.
2fff4bf0:	0190 0030 0194 0034 0198 0038 01a0 003c     ..0...4...8...<.
2fff4c00:	01a4 0040 01a8 0044 01c4 0048 0244 004c     ..@...D...H.D.L.
2fff4c10:	0300 0050 0304 0054 030c 0058 036c 005c     ..P...T...X.l.\.
2fff4c20:	0400 0060                                   ..`.

2fff4c24 <presc_table>:
2fff4c24:	0001 0002 0004 0006 0008 000a 000c 0010     ................
2fff4c34:	0020 0040 0080 0100                          .@.....

2fff4c3c <fixed_5v_voltage_table>:
2fff4c3c:	1388                                        ..

2fff4c3e <vref_ddr_voltage_table>:
2fff4c3e:	0ce4                                        ..

2fff4c40 <ldo4_voltage_table>:
2fff4c40:	0ce4                                        ..

2fff4c42 <ldo6_voltage_table>:
2fff4c42:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fff4c52:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff4c62:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff4c72:	0ce4                                        ..

2fff4c74 <ldo5_voltage_table>:
2fff4c74:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff4c84:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff4c94:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff4ca4:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fff4cb2 <ldo3_special_mode_table>:
	...

2fff4cb4 <ldo3_voltage_table>:
2fff4cb4:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff4cc4:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff4cd4:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff4ce4:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4          ..............

2fff4cf2 <ldo2_voltage_table>:
2fff4cf2:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff4d02:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff4d12:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff4d22:	0ce4                                        ..

2fff4d24 <ldo1_voltage_table>:
2fff4d24:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fff4d34:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fff4d44:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fff4d54:	0ce4                                        ..

2fff4d56 <buck4_voltage_table>:
2fff4d56:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fff4d66:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fff4d76:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fff4d86:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fff4d96:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fff4da6:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fff4db6:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fff4dc6:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fff4dd0 <buck3_voltage_table>:
2fff4dd0:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff4de0:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff4df0:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fff4e00:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fff4e10:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fff4e20:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fff4e30:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fff4e40 <buck2_voltage_table>:
2fff4e40:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff4e50:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fff4e60:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fff4e70:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fff4e80:	0578 0578 05aa 05aa 05dc                    x.x.......

2fff4e8a <buck1_voltage_table>:
2fff4e8a:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fff4e9a:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fff4eaa:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fff4eba:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fff4eca:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fff4eda:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fff4eea:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fff4efa:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fff4f0a <stm32mp1_clk_gate>:
2fff4f0a:	00d8 dc00 0100 17ff 00d8 dd01 0100 17ff     ................
2fff4f1a:	00d8 de02 0100 17ff 00d8 df03 0100 17ff     ................
2fff4f2a:	00d8 e004 0100 10ff 00d8 e105 0100 10ff     ................
2fff4f3a:	00d8 e206 0100 1bff 00d8 e307 0100 1bff     ................
2fff4f4a:	00d8 e408 0100 17ff 00d8 e509 0100 1bff     ................
2fff4f5a:	00d8 e60a 0100 1bff 0a00 950e 0001 ff08     ................
2fff4f6a:	0a00 960f 0001 ff09 0a00 9710 0001 ff08     ................
2fff4f7a:	0a00 9811 0001 ff09 0a00 9a12 0001 ff0a     ................
2fff4f8a:	0a00 9b13 0001 ff0a 0a00 8915 0001 ff00     ................
2fff4f9a:	0a00 8a16 0001 ff00 0a00 8b17 0001 ff01     ................
2fff4faa:	0a00 8d18 0001 ff01 0a08 990d 0001 ff07     ................
2fff4fba:	0a10 330b 0001 ffff 0200 e708 0001 ffff     ...3............
2fff4fca:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2fff4fda:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2fff4fea:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2fff4ffa:	0208 4108 0101 1cff 0208 420b 0101 1cff     ...A.......B....
2fff500a:	0208 710c 0101 1cff 0208 430d 0101 1cff     ...q.......C....
2fff501a:	0208 440f 0101 1cff 0208 4510 0101 1cff     ...D.......E....
2fff502a:	0208 8014 0101 ff02 0a28 5400 0001 ffff     ........(..T....
2fff503a:	0a28 5501 0001 ffff 0a28 5602 0001 ffff     (..U....(..V....
2fff504a:	0a28 5703 0001 ffff 0a28 5804 0001 ffff     (..W....(..X....
2fff505a:	0a28 5905 0001 ffff 0a28 5a06 0001 ffff     (..Y....(..Z....
2fff506a:	0a28 5b07 0001 ffff 0a28 5c08 0001 ffff     (..[....(..\....
2fff507a:	0a28 5d09 0001 ffff 0a28 5e0a 0001 ffff     (..]....(..^....
2fff508a:	0210 5f00 0101 1cff 0210 6004 0101 1cff     ..._.......`....
2fff509a:	0210 6105 0101 1cff 0210 7c06 0101 ff06     ...a.......|....
2fff50aa:	0210 6308 0101 1cff 0218 790c 0001 ff0e     ...c.......y....
2fff50ba:	0218 7a0e 0001 ff0d 0218 7610 0001 ff0b     ...z.......v....
2fff50ca:	0218 7711 0001 ff0b 0140 c014 0100 ff15     ...w....@.......
2fff50da:	080c d608 0000 ffff                         ........

2fff50e2 <parent_mp15>:
2fff50e2:	0020 0200 001f 0024 0300 001f 0048 0200      .....$.....H...
2fff50f2:	001f 0028 0200 00ff 0820 0200 00ff 0824     ..(..... .....$.
2fff5102:	0200 00ff 00d0 0200 00ff 0140 0210 00ff     ..........@.....
2fff5112:	08f4 0300 00ff 08f8 0300 00ff 0904 0200     ................
2fff5122:	00ff 0900 0200 00ff 00cc 0200 00ff 0920     .............. .
2fff5132:	0200 00ff 091c 0200 00ff 091c 0104 00ff     ................
2fff5142:	00d4 0200 00ff 0914 0200 00ff 08d8 0300     ................
2fff5152:	00ff 08dc 0300 00ff 08e0 0300 00ff 00c4     ................
2fff5162:	0300 00ff 0918 0200 00ff 08c0 0300 00ff     ................
2fff5172:	08c4 0300 00ff 00c0 0300 00ff 0934 0300     ............4...
2fff5182:	00ff 0930 0300 00ff 092c 0300 00ff 00c8     ..0.....,.......
2fff5192:	0300 00ff 08e8 0300 00ff 08ec 0300 00ff     ................
2fff51a2:	08e4 0300 00ff 08f0 0300 00ff 08c8 0300     ................
2fff51b2:	00ff 08cc 0300 00ff 08d0 0300 00ff 08d4     ................
2fff51c2:	0300 00ff 0924 0100 00ff 090c 0200 00ff     ....$...........
2fff51d2:	0928 0200 00ff 08fc 0200 00ff 0800 0300     (...............
2fff51e2:	00ff 0804 0300 00ff                         ........

2fff51ea <dividers_mp15>:
	...
2fff5226:	002c 0400 001f 0030 0300 001f 0830 0400     ,.....0.....0...
2fff5236:	001f 0834 0300 001f 0838 0300 001f 083c     ..4.....8.....<.
2fff5246:	0300 001f 003c 0300 001f 0040 0300 001f     ....<.....@.....
2fff5256:	0000 0000 0000 0044 0600 00ff 0800 0404     ......D.........
2fff5266:	00ff 0804 0404 00ff 0000 0000 0000 080c     ................
2fff5276:	0300 00ff 08fc 0404 00ff                    ..........

2fff5280 <version_string>:
2fff5280:	3276 382e 732d 6d74 3233 706d 2d31 3272     v2.8-stm32mp1-r2
2fff5290:	302e 6428 6265 6775 3a29 6366 6135 6237     .0(debug):fc5a7b
2fff52a0:	3330 2d38 6964 7472 2879 6366 6135 6237     038-dirty(fc5a7b
2fff52b0:	3330 0029                                   03).

2fff52b4 <build_message>:
2fff52b4:	7542 6c69 2074 203a 3032 323a 3a33 3331     Built : 20:23:13
2fff52c4:	202c 7541 2067 3720 3220 3230 0034 6c62     , Aug  7 2024.bl
2fff52d4:	2f32 6c62 5f32 6d69 6761 5f65 6f6c 6461     2/bl2_image_load
2fff52e4:	765f 2e32 0063 421e 324c 203a 6c50 7461     _v2.c..BL2: Plat
2fff52f4:	6f66 6d72 7320 7465 7075 6120 726c 6165     form setup alrea
2fff5304:	7964 6420 6e6f 2165 0a21 2800 4c42 3a32     dy done!!..(BL2:
2fff5314:	4420 696f 676e 7020 616c 6674 726f 206d      Doing platform 
2fff5324:	6573 7574 0a70 0a00 4c42 3a32 4620 6961     setup...BL2: Fai
2fff5334:	756c 6572 6920 206e 7270 2065 6d69 6761     lure in pre imag
2fff5344:	2065 6f6c 6461 6820 6e61 6c64 6e69 2067     e load handling 
2fff5354:	2528 2969 000a 4228 324c 203a 6f4c 6461     (%i)..(BL2: Load
2fff5364:	6e69 2067 6d69 6761 2065 6469 2520 0a75     ing image id %u.
2fff5374:	0a00 4c42 3a32 4620 6961 656c 2064 6f74     ..BL2: Failed to
2fff5384:	6c20 616f 2064 6d69 6761 2065 6469 2520      load image id %
2fff5394:	2075 2528 2969 000a 4228 324c 203a 6b53     u (%i)..(BL2: Sk
2fff53a4:	7069 6c20 616f 6964 676e 6920 616d 6567     ip loading image
2fff53b4:	6920 2064 7525 000a 420a 324c 203a 6146      id %u...BL2: Fa
2fff53c4:	6c69 7275 2065 6e69 7020 736f 2074 6d69     ilure in post im
2fff53d4:	6761 2065 6f6c 6461 6820 6e61 6c64 6e69     age load handlin
2fff53e4:	2067 2528 2969 000a 4214 324c 203a 7325     g (%i)...BL2: %s
2fff53f4:	000a 4214 324c 203a 6f42 746f 6e69 2067     ...BL2: Booting 
2fff5404:	4c42 3233 000a 6f63 6d6d 6e6f 642f 7365     BL32..common/des
2fff5414:	5f63 6d69 6761 5f65 6f6c 6461 632e           c_image_load.c.

2fff5423 <CSWTCH.28>:
2fff5423:	1019 631b 6d6f 6f6d 2f6e 6466 5f74 7277     ...common/fdt_wr
2fff5433:	7061 6570 7372 632e 1e00 7250 706f 7265     appers.c..Proper
2fff5443:	7974 6c20 6e65 7467 2068 696d 6d73 7461     ty length mismat
2fff5453:	6863 000a 431e 756f 646c 276e 2074 6966     ch...Couldn't fi
2fff5463:	646e 7020 6f72 6570 7472 2079 7325 6920     nd property %s i
2fff5473:	206e 7464 0a62 1e00 7453 6972 676e 6f20     n dtb...String o
2fff5483:	2066 7270 706f 7265 7974 2520 2073 6e69     f property %s in
2fff5493:	6420 6274 6820 7361 6220 6565 206e 7274      dtb has been tr
2fff54a3:	6e75 6163 6574 0a64 2f00 6573 7563 6572     uncated../secure
2fff54b3:	632d 6f68 6573 006e 632f 6f68 6573 006e     -chosen./chosen.
2fff54c3:	7473 6f64 7475 702d 7461 0068 7264 7669     stdout-path.driv
2fff54d3:	7265 2f73 6f69 692f 5f6f 6966 2e70 0063     ers/io/io_fip.c.
2fff54e3:	461e 6961 656c 2064 6f74 6f20 7462 6961     .Failed to obtai
2fff54f3:	206e 6572 6566 6572 636e 2065 6f74 6920     n reference to i
2fff5503:	616d 6567 6920 3d64 7525 2820 6925 0a29     mage id=%u (%i).
2fff5513:	1e00 6146 6c69 6465 7420 206f 6361 6563     ..Failed to acce
2fff5523:	7373 6920 616d 6567 6920 3d64 7525 2820     ss image id=%u (
2fff5533:	6925 0a29 1e00 6946 6d72 6177 6572 4920     %i)...Firmware I
2fff5543:	616d 6567 5020 6361 616b 6567 6820 6165     mage Package hea
2fff5553:	6564 2072 6863 6365 206b 6166 6c69 6465     der check failed
2fff5563:	0a2e 1e00 6146 6c69 6465 7420 206f 706f     ....Failed to op
2fff5573:	6e65 4620 5049 2820 6925 0a29 1e00 6966     en FIP (%i)...fi
2fff5583:	5f70 6966 656c 725f 6165 3a64 6620 6961     p_file_read: fai
2fff5593:	656c 2064 6f74 7320 6565 0a6b 1e00 6146     led to seek...Fa
2fff55a3:	6c69 6465 7420 206f 6572 6461 7020 7961     iled to read pay
2fff55b3:	6f6c 6461 2820 6925 0a29 1e00 6966 5f70     load (%i)...fip_
2fff55c3:	6966 656c 6f5f 6570 206e 203a 6e4f 796c     file_open : Only
2fff55d3:	6f20 656e 6f20 6570 206e 6966 656c 6120      one open file a
2fff55e3:	2074 2061 6974 656d 0a2e 1e00 6146 6c69     t a time....Fail
2fff55f3:	6465 7420 206f 706f 6e65 4620 7269 776d     ed to open Firmw
2fff5603:	7261 2065 6d49 6761 2065 6150 6b63 6761     are Image Packag
2fff5613:	2065 2528 2969 000a 661e 7069 665f 6c69     e (%i)...fip_fil
2fff5623:	5f65 706f 6e65 203a 6166 6c69 6465 7420     e_open: failed t
2fff5633:	206f 6573 6b65 000a 461e 6961 656c 2064     o seek...Failed 
2fff5643:	6f74 7220 6165 2064 4946 2050 2528 2969     to read FIP (%i)
2fff5653:	000a                                        ..

2fff5655 <uuid_null.0>:
	...
2fff5665:	7264 7669 7265 2f73 6f69 692f 5f6f 656d     drivers/io/io_me
2fff5675:	6d6d 7061 632e 1e00 2041 654d 6d6d 7061     mmap.c..A Memmap
2fff5685:	6420 7665 6369 2065 7369 6120 726c 6165      device is alrea
2fff5695:	7964 6120 7463 7669 2e65 4320 6f6c 6573     dy active. Close
2fff56a5:	6620 7269 7473 0a2e 6400 6972 6576 7372      first...drivers
2fff56b5:	692f 2f6f 6f69 735f 6f74 6172 6567 632e     /io/io_storage.c
2fff56c5:	0a00 4444 2052 7974 6570 6e20 746f 7320     ..DDR type not s
2fff56d5:	7075 6f70 7472 6465 000a 7473 7461 6369     upported..static
2fff56e5:	7300 2c74 7473 336d 6d32 3170 642d 7264     .st,stm32mp1-ddr
2fff56f5:	0a00 7325 203a 6143 6e6e 746f 7220 6165     ..%s: Cannot rea
2fff5705:	2064 4444 2052 6f6e 6564 6920 206e 5444     d DDR node in DT
2fff5715:	000a 440a 5244 7220 2077 6574 7473 203a     ...DDR rw test: 
2fff5725:	6143 276e 2074 6361 6563 7373 6d20 6d65     Can't access mem
2fff5735:	726f 2079 2040 7830 6c25 0a78 0a00 4444     ory @ 0x%lx...DD
2fff5745:	2052 6164 6174 6220 7375 7420 7365 3a74     R data bus test:
2fff5755:	6320 6e61 7427 6120 6363 7365 2073 656d      can't access me
2fff5765:	6f6d 7972 4020 3020 2578 786c 000a 440a     mory @ 0x%lx...D
2fff5775:	5244 6120 6464 2072 7562 2073 6574 7473     DR addr bus test
2fff5785:	203a 6163 276e 2074 6361 6563 7373 6d20     : can't access m
2fff5795:	6d65 726f 2079 2040 7830 6c25 0a78 0a00     emory @ 0x%lx...
2fff57a5:	4444 2052 6973 657a 203a 7830 7a25 2078     DDR size: 0x%zx 
2fff57b5:	6f64 7365 6e20 746f 6d20 7461 6863 4420     does not match D
2fff57c5:	2054 6f63 666e 6769 203a 7830 7a25 0a78     T config: 0x%zx.
2fff57d5:	2800 654d 6f6d 7972 7320 7a69 2065 203d     .(Memory size = 
2fff57e5:	7830 7a25 2078 2528 757a 4d20 2942 000a     0x%zx (%zu MB)..
2fff57f5:	440a 5244 6520 7078 6365 6574 2064 7266     .DDR expected fr
2fff5805:	7165 2520 2075 486b 2c7a 6320 7275 6572     eq %u kHz, curre
2fff5815:	746e 6920 2073 6c25 2075 486b 0a7a           nt is %lu kHz..

2fff5824 <__func__.0>:
2fff5824:	7473 336d 6d32 3170 645f 7264 735f 7465     stm32mp1_ddr_set
2fff5834:	7075 7300 2c74 7463 2d6c 6572 0067 7473     up.st,ctl-reg.st
2fff5844:	632c 6c74 742d 6d69 6e69 0067 7473 632c     ,ctl-timing.st,c
2fff5854:	6c74 6d2d 7061 7300 2c74 7463 2d6c 6570     tl-map.st,ctl-pe
2fff5864:	6672 7300 2c74 6870 2d79 6572 0067 7473     rf.st,phy-reg.st
2fff5874:	702c 7968 742d 6d69 6e69 0067 7473 6d2c     ,phy-timing.st,m
2fff5884:	6d65 732d 6570 6465 7300 2c74 656d 2d6d     em-speed.st,mem-
2fff5894:	616e 656d 2800 4152 3a4d 2520 0a73 0a00     name.(RAM: %s...
2fff58a4:	7325 203a 6143 6e6e 746f 7220 6165 2064     %s: Cannot read 
2fff58b4:	7325 202c 7265 6f72 3d72 6425 000a          %s, error=%d..

2fff58c2 <__func__.0>:
2fff58c2:	7473 336d 6d32 5f70 6464 5f72 7464 675f     stm32mp_ddr_dt_g
2fff58d2:	7465 705f 7261 6d61 7300 2c74 7473 336d     et_param.st,stm3
2fff58e2:	6832 2d37 6175 7472 6400 6972 6576 7372     2h7-uart.drivers
2fff58f2:	732f 2f74 6175 7472 732f 6d74 3233 755f     /st/uart/stm32_u
2fff5902:	7261 2e74 0063 696c 2f62 6366 6e6f 2f66     art.c.lib/fconf/
2fff5912:	6366 6e6f 2e66 0063 4628 4f43 464e 203a     fconf.c.(FCONF: 
2fff5922:	6f43 666e 6769 6620 6c69 2065 6977 6874     Config file with
2fff5932:	6920 616d 6567 4920 3a44 7525 6c20 616f      image ID:%u loa
2fff5942:	6564 2064 7461 6120 6464 6572 7373 3d20     ded at address =
2fff5952:	3020 2578 786c 000a 460a 4f43 464e 203a      0x%lx...FCONF: 
2fff5962:	6e49 6176 696c 2064 5444 2042 6966 656c     Invalid DTB file
2fff5972:	7020 7361 6573 2064 6f66 2072 7325 000a      passed for %s..
2fff5982:	4628 4f43 464e 203a 6552 6461 6e69 2067     (FCONF: Reading 
2fff5992:	7325 6620 7269 776d 7261 2065 6f63 666e     %s firmware conf
2fff59a2:	6769 7275 7461 6f69 206e 6966 656c 6620     iguration file f
2fff59b2:	6f72 3a6d 3020 2578 786c 000a 4628 4f43     rom: 0x%lx..(FCO
2fff59c2:	464e 203a 6552 6461 6e69 2067 6966 6d72     NF: Reading firm
2fff59d2:	6177 6572 6320 6e6f 6966 7567 6172 6974     ware configurati
2fff59e2:	6e6f 6920 666e 726f 616d 6974 6e6f 6620     on information f
2fff59f2:	726f 203a 7325 000a 430a 6e61 6f6e 2074     or: %s...Cannot 
2fff5a02:	6c61 6f6c 6163 6574 2520 757a 6f20 6a62     allocate %zu obj
2fff5a12:	6365 7374 6f20 7475 6f20 2066 6f70 6c6f     ects out of pool
2fff5a22:	2820 7a25 2075 626f 656a 7463 2073 656c      (%zu objects le
2fff5a32:	7466 2e29 000a 6366 6e6f 2c66 7964 5f6e     ft)...fconf,dyn_
2fff5a42:	6663 2d67 7464 5f62 6572 6967 7473 7972     cfg-dtb_registry
2fff5a52:	0a00 4346 4e4f 3a46 4320 6e61 7427 6620     ..FCONF: Can't f
2fff5a62:	6e69 2064 7325 6320 6d6f 6170 6974 6c62     ind %s compatibl
2fff5a72:	2065 6e69 6420 6274 000a 460a 4f43 464e     e in dtb...FCONF
2fff5a82:	203a 6e49 6f63 706d 656c 6574 6320 6e6f     : Incomplete con
2fff5a92:	6966 7567 6172 6974 6e6f 7020 6f72 6570     figuration prope
2fff5aa2:	7472 2079 6e69 6420 6274 722d 6765 7369     rty in dtb-regis
2fff5ab2:	7274 2e79 000a 616d 2d78 6973 657a 6e00     try...max-size.n
2fff5ac2:	2d73 6f6c 6461 612d 6464 6572 7373 0a00     s-load-address..
2fff5ad2:	6425 203a 6466 5f74 6f66 5f72 6165 6863     %d: fdt_for_each
2fff5ae2:	735f 6275 6f6e 6564 2928 203a 6425 000a     _subnode(): %d..
2fff5af2:	461e 4f43 464e 203a 6e49 6176 696c 2064     .FCONF: Invalid 
2fff5b02:	6f63 666e 6769 6920 2064 7525 000a 5746     config id %u..FW
2fff5b12:	435f 4e4f 4946 0047 7964 5f6e 6663 0067     _CONFIG.dyn_cfg.
2fff5b22:	541e 6568 6c20 616f 2064 6461 7264 7365     .The load addres
2fff5b32:	2073 6e69 6f20 7470 6565 6820 6165 6564     s in optee heade
2fff5b42:	2072 7025 2d20 2520 2070 7369 6e20 746f     r %p - %p is not
2fff5b52:	6920 206e 6572 6573 7672 6465 6120 6572      in reserved are
2fff5b62:	3a61 2520 2070 202d 7025 0a2e 6c00 6269     a: %p - %p...lib
2fff5b72:	6f2f 7470 6565 6f2f 7470 6565 755f 6974     /optee/optee_uti
2fff5b82:	736c 632e 2800 504f 4554 2045 7065 303d     ls.c.(OPTEE ep=0
2fff5b92:	2578 0a78 2800 504f 4554 2045 6568 6461     x%x..(OPTEE head
2fff5ba2:	7265 6920 666e 3a6f 000a 2028 2020 2020     er info:..(     
2fff5bb2:	6d20 6761 6369 303d 2578 0a78 2800 2020      magic=0x%x..(  
2fff5bc2:	2020 2020 6576 7372 6f69 3d6e 7830 7825         version=0x%x
2fff5bd2:	000a 2028 2020 2020 6120 6372 3d68 7830     ..(      arch=0x
2fff5be2:	7825 000a 2028 2020 2020 6620 616c 7367     %x..(      flags
2fff5bf2:	303d 2578 0a78 2800 2020 2020 2020 626e     =0x%x..(      nb
2fff5c02:	695f 616d 6567 3d73 7830 7825 000a 4928     _images=0x%x..(I
2fff5c12:	766e 6c61 6469 4f20 5450 4545 6820 6165     nvalid OPTEE hea
2fff5c22:	6564 2c72 7320 7465 6c20 6765 6361 2079     der, set legacy 
2fff5c32:	6f6d 6564 0a2e 0a00 6150 6567 2064 6d69     mode....Paged im
2fff5c42:	6761 2065 7369 6e20 746f 7320 7075 6f70     age is not suppo
2fff5c52:	7472 6465 000a 500a 7261 6573 6f20 7470     rted...Parse opt
2fff5c62:	6565 6920 616d 6567 6620 6961 656c 2e64     ee image failed.
2fff5c72:	000a 430a 6e61 6f6e 2074 6f62 746f 6120     ...Cannot boot a
2fff5c82:	206e 4141 6372 3668 2034 504f 542d 4545     n AArch64 OP-TEE
2fff5c92:	000a 5528 6973 676e 5320 4d44 434d 000a     ..(Using SDMMC..
2fff5ca2:	5528 6973 676e 4520 4d4d 0a43 2800 7355     (Using EMMC..(Us
2fff5cb2:	6e69 2067 5053 2049 4f4e 0a52 2800 7355     ing SPI NOR..(Us
2fff5cc2:	6e69 2067 4d46 2043 414e 444e 000a 5528     ing FMC NAND..(U
2fff5cd2:	6973 676e 5320 4950 4e20 4e41 0a44 2800     sing SPI NAND..(
2fff5ce2:	7355 6e69 2067 4155 5452 000a 5528 6973     Using UART..(Usi
2fff5cf2:	676e 5520 4253 000a 420a 6f6f 2074 6e69     ng USB...Boot in
2fff5d02:	6574 6672 6361 2065 7525 6e20 746f 6620     terface %u not f
2fff5d12:	756f 646e 000a 2028 4920 736e 6174 636e     ound..(  Instanc
2fff5d22:	2065 6425 000a 4228 6f6f 2074 7375 6465     e %d..(Boot used
2fff5d32:	7020 7261 6974 6974 6e6f 6620 6273 256c      partition fsbl%
2fff5d42:	0a75 7000 616c 2f74 7473 632f 6d6f 6f6d     u..plat/st/commo
2fff5d52:	2f6e 6c62 5f32 6f69 735f 6f74 6172 6567     n/bl2_io_storage
2fff5d62:	632e 0a00 6f42 746f 6920 746e 7265 6166     .c..Boot interfa
2fff5d72:	6563 2520 2064 6f6e 2074 7573 7070 726f     ce %d not suppor
2fff5d82:	6574 0a64 0a00 4946 2050 6f4e 2074 6f66     ted...FIP Not fo
2fff5d92:	6e75 0a64 2800 4155 5452 203a 6572 6461     und..(UART: read
2fff5da2:	7020 6168 6573 2520 2075 7461 3020 2578      phase %u at 0x%
2fff5db2:	786c 7320 7a69 2065 7830 7a25 0a78 2800     lx size 0x%zx..(
2fff5dc2:	4155 5452 203a 6f43 6e6e 6365 6574 0a64     UART: Connected.
2fff5dd2:	2800 4155 5452 203a 6552 6573 0a74 1e00     .(UART: Reset...
2fff5de2:	4155 5452 203a 6142 2064 6170 6b63 7465     UART: Bad packet
2fff5df2:	6e20 6d75 6562 2072 6572 6563 7669 3a65      number receive:
2fff5e02:	2520 2c75 6520 7078 6365 6574 2064 7525      %u, expected %u
2fff5e12:	000a 440a 776f 6c6e 616f 2064 766f 7265     ...Download over
2fff5e22:	6c66 776f 6120 2074 7025 000a 490a 766e     flow at %p...Inv
2fff5e32:	6c61 6469 7320 6174 7472 6120 2074 7825     alid start at %x
2fff5e42:	202c 6f66 2072 6870 7361 2065 7525 000a     , for phase %u..
2fff5e52:	460a 5049 4820 6165 6564 2072 6863 6365     .FIP Header chec
2fff5e62:	206b 6166 6c69 6465 2520 786c 202c 6f66     k failed %lx, fo
2fff5e72:	2072 6870 7361 2065 7525 000a 5528 5241     r phase %u..(UAR
2fff5e82:	3a54 5320 6174 7472 7020 6168 6573 2520     T: Start phase %
2fff5e92:	0a75 1e00 4155 5452 203a 6e55 6e6b 776f     u...UART: Unknow
2fff5ea2:	206e 6f63 6d6d 6e61 0a64                     n command..

2fff5ead <command_tab>:
2fff5ead:	0100 0302 3121 0002 7300 2c74 6f69 662d     ....!1...st,io-f
2fff5ebd:	7069 682d 6e61 6c64 0065 461e 4f43 464e     ip-handle..FCONF
2fff5ecd:	203a 6552 6461 6320 6c65 206c 6166 6c69     : Read cell fail
2fff5edd:	6465 6620 726f 2520 0a73 5400 5f42 5746     ed for %s..TB_FW
2fff5eed:	7300 6d74 3233 706d 695f 006f 6c62 3233     .stm32mp_io.bl32
2fff5efd:	755f 6975 0064 6c62 3233 655f 7478 6172     _uuid.bl32_extra
2fff5f0d:	5f31 7575 6469 6200 336c 5f32 7865 7274     1_uuid.bl32_extr
2fff5f1d:	3261 755f 6975 0064 6c62 3333 755f 6975     a2_uuid.bl33_uui
2fff5f2d:	0064 7768 635f 6766 755f 6975 0064 6f74     d.hw_cfg_uuid.to
2fff5f3d:	5f73 7766 635f 6766 755f 6975 0064 490a     s_fw_cfg_uuid..I
2fff5f4d:	766e 6c61 6469 4420 5244 6920 696e 3a74     nvalid DDR init:
2fff5f5d:	6520 7272 726f 2520 0a64 0a00 4444 2052      error %d...DDR 
2fff5f6d:	616d 7070 6e69 3a67 6520 7272 726f 2520     mapping: error %
2fff5f7d:	0a64 6600 6961 656c 0064 7573 6363 6565     d..failed.succee
2fff5f8d:	6564 0064 4e49 4554 4e52 4c41 4500 5458     ded.INTERNAL.EXT
2fff5f9d:	5245 414e 004c 4d14 646f 6c65 203a 7325     ERNAL..Model: %s
2fff5fad:	000a 4214 6f6f 7274 6d6f 6120 7475 6568     ...Bootrom authe
2fff5fbd:	746e 6369 7461 6f69 206e 7325 000a 2a0a     ntication %s...*
2fff5fcd:	202a 4e49 5254 5355 4f49 204e 4c41 5245     * INTRUSION ALER
2fff5fdd:	3a54 4c20 4553 4d20 4e4f 5449 524f 4e49     T: LSE MONITORIN
2fff5fed:	2047 4154 504d 5245 4420 5445 4345 4554     G TAMPER DETECTE
2fff5ffd:	2044 2a2a 000a 2a0a 202a 6552 6f62 746f     D **...** Reboot
2fff600d:	6e69 2e67 2e2e 2a20 0a2a 0a00 2a2a 4920     ing... **...** I
2fff601d:	544e 5552 4953 4e4f 4120 454c 5452 203a     NTRUSION ALERT: 
2fff602d:	7325 5420 4d41 4550 2052 7525 4420 5445     %s TAMPER %u DET
2fff603d:	4345 4554 2044 2a2a 000a 530a 6365 7275     ECTED **...Secur
2fff604d:	2065 6863 7069 203a 5254 5355 4554 5f44     e chip: TRUSTED_
2fff605d:	4f42 5241 5f44 4f42 544f 6d20 7375 2074     BOARD_BOOT must 
2fff606d:	6562 6520 616e 6c62 6465 000a 500a 494d     be enabled...PMI
2fff607d:	2043 6f76 746c 6761 7365 6920 696e 2074     C voltages init 
2fff608d:	6166 6c69 6465 000a 0a1e 7325 1e00 6552     failed....%s..Re
2fff609d:	6573 2074 6572 7361 6e6f 7520 6b6e 6f6e     set reason unkno
2fff60ad:	6e77 000a 5228 7365 7465 7220 6165 6f73     wn..(Reset reaso
2fff60bd:	206e 3028 2578 2978 0a3a 2800 7953 7473     n (0x%x):..(Syst
2fff60cd:	6d65 6520 6978 7374 6620 6f72 206d 5453     em exits from ST
2fff60dd:	4e41 4244 0a59 2800 504d 2055 7865 7469     ANDBY..(MPU exit
2fff60ed:	2073 7266 6d6f 4320 5453 4e41 4244 0a59     s from CSTANDBY.
2fff60fd:	2800 2020 6f50 6577 2d72 6e6f 5220 7365     .(  Power-on Res
2fff610d:	7465 2820 7372 5f74 6f70 2972 000a 2028     et (rst_por)..( 
2fff611d:	4220 6f72 6e77 756f 2074 6552 6573 2074      Brownout Reset 
2fff612d:	7228 7473 625f 726f 0a29 2800 2020 7953     (rst_bor)..(  Sy
2fff613d:	7473 6d65 7220 7365 7465 6720 6e65 7265     stem reset gener
2fff614d:	7461 6465 6220 2079 434d 2055 4d28 5343     ated by MCU (MCS
2fff615d:	5359 5352 2954 000a 2028 4c20 636f 6c61     YSRST)..(  Local
2fff616d:	7220 7365 7465 6720 6e65 7265 7461 6465      reset generated
2fff617d:	6220 2079 434d 2055 4d28 5343 5359 5352      by MCU (MCSYSRS
2fff618d:	2954 000a 2028 5320 7379 6574 206d 6572     T)..(  System re
2fff619d:	6573 2074 6567 656e 6172 6574 2064 7962     set generated by
2fff61ad:	4d20 5550 2820 504d 5953 5253 5453 0a29      MPU (MPSYSRST).
2fff61bd:	2800 2020 6552 6573 2074 7564 2065 6f74     .(  Reset due to
2fff61cd:	6120 6320 6f6c 6b63 6620 6961 756c 6572      a clock failure
2fff61dd:	6f20 206e 5348 0a45 2800 2020 5749 4744      on HSE..(  IWDG
2fff61ed:	2031 6552 6573 2074 7228 7473 695f 6477     1 Reset (rst_iwd
2fff61fd:	3167 0a29 2800 2020 5749 4744 2032 6552     g1)..(  IWDG2 Re
2fff620d:	6573 2074 7228 7473 695f 6477 3267 0a29     set (rst_iwdg2).
2fff621d:	2800 2020 504d 2055 7250 636f 7365 6f73     .(  MPU Processo
2fff622d:	2072 2030 6552 6573 0a74 2800 2020 504d     r 0 Reset..(  MP
2fff623d:	2055 7250 636f 7365 6f73 2072 2031 6552     U Processor 1 Re
2fff624d:	6573 0a74 2800 2020 6150 2064 6552 6573     set..(  Pad Rese
2fff625d:	2074 7266 6d6f 4e20 5352 0a54 2800 2020     t from NRST..(  
2fff626d:	6552 6573 2074 7564 2065 6f74 6120 6620     Reset due to a f
2fff627d:	6961 756c 6572 6f20 2066 4456 5f44 4f43     ailure of VDD_CO
2fff628d:	4552 000a 200a 5520 696e 6564 746e 6669     RE...  Unidentif
2fff629d:	6569 2064 6572 6573 2074 6572 7361 6e6f     ied reset reason
2fff62ad:	000a 6f6d 6f6e 6f74 696e 5f63 746f 0070     ..monotonic_otp.
2fff62bd:	420a 4553 3a43 4d20 4e4f 544f 4e4f 4349     .BSEC: MONOTONIC
2fff62cd:	4f5f 5054 7020 6f72 7267 6d61 4520 7272     _OTP program Err
2fff62dd:	726f 2520 0a75 2800 6f4d 6f6e 6f74 696e     or %u..(Monotoni
2fff62ed:	2063 6f63 6e75 6574 2072 6168 2073 6562     c counter has be
2fff62fd:	6e65 6920 636e 6572 656d 746e 6465 2820     en incremented (
2fff630d:	6176 756c 2065 7830 7825 0a29 7000 616c     value 0x%x)..pla
2fff631d:	2f74 7473 732f 6d74 3233 706d 2f31 6c62     t/st/stm32mp1/bl
2fff632d:	5f32 6c70 7461 735f 7465 7075 632e 0a00     2_plat_setup.c..
2fff633d:	504f 4554 2045 6568 6461 7265 7020 7261     OPTEE header par
2fff634d:	6573 6520 7272 726f 0a2e                     se error...

2fff6358 <debug_msg>:
2fff6358:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6368:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6378:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6388:	2a2a 0a2a 2a2a 4420 4245 4755 4120 4343     ***.** DEBUG ACC
2fff6398:	5345 2053 4f50 5452 4920 2053 504f 4e45     ESS PORT IS OPEN
2fff63a8:	2021 2020 2020 2020 2020 2020 2020 2020     !               
2fff63b8:	2020 2020 2a20 0a2a 2a2a 5420 6968 2073          **.** This 
2fff63c8:	6f62 746f 6920 616d 6567 6920 2073 6e6f     boot image is on
2fff63d8:	796c 6620 726f 6420 6265 6775 6967 676e     ly for debugging
2fff63e8:	7020 7275 6f70 6573 2a20 0a2a 2a2a 6120      purpose **.** a
2fff63f8:	646e 6920 2073 6e75 6173 6566 6620 726f     nd is unsafe for
2fff6408:	7020 6f72 7564 7463 6f69 206e 7375 2e65      production use.
2fff6418:	2020 2020 2020 2020 2020 2020 2a20 0a2a                  **.
2fff6428:	2a2a 2020 2020 2020 2020 2020 2020 2020     **              
2fff6438:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff6448:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff6458:	2a20 0a2a 2a2a 4920 2066 6f79 2075 6573      **.** If you se
2fff6468:	2065 6874 7369 6d20 7365 6173 6567 6120     e this message a
2fff6478:	646e 7920 756f 6120 6572 6e20 746f 2020     nd you are not  
2fff6488:	2020 2020 2a20 0a2a 2a2a 6420 6265 6775          **.** debug
2fff6498:	6967 676e 7220 7065 726f 2074 6874 7369     ging report this
2fff64a8:	6920 6d6d 6465 6169 6574 796c 7420 206f      immediately to 
2fff64b8:	6f79 7275 2020 2020 2a20 0a2a 2a2a 7620     your     **.** v
2fff64c8:	6e65 6f64 2172 2020 2020 2020 2020 2020     endor!          
2fff64d8:	2020 2020 2020 2020 2020 2020 2020 2020                     
2fff64e8:	2020 2020 2020 2020 2020 2020 2a20 0a2a                  **.
2fff64f8:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6508:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6518:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2fff6528:	2a2a 0a2a 6200 6375 326b 6c00 6f64 0033     ***..buck2.ldo3.
2fff6538:	7276 6665 645f 7264 6200 6375 336b 0a00     vref_ddr.buck3..
2fff6548:	504c 564c 532d 6f74 3270 6d20 646f 2065     LPLV-Stop2 mode 
2fff6558:	6f6e 2074 7573 7070 726f 6574 0a64 0a00     not supported...
2fff6568:	6e55 6261 656c 7420 206f 7570 2074 4444     Unable to put DD
2fff6578:	2052 6e69 5320 0a52 7300 2c74 656d 2d6d     R in SR..st,mem-
2fff6588:	6966 6572 6177 6c6c 6d00 6d65 726f 2d79     firewall.memory-
2fff6598:	6172 676e 7365 7000 616c 2f74 7473 732f     ranges.plat/st/s
2fff65a8:	6d74 3233 706d 2f31 7473 336d 6d32 3170     tm32mp1/stm32mp1
2fff65b8:	665f 6f63 666e 665f 7269 7765 6c61 2e6c     _fconf_firewall.
2fff65c8:	0063 7473 336d 6d32 3170 665f 7269 7765     c.stm32mp1_firew
2fff65d8:	6c61 006c 6f63 6d6d 6e6f 622f 5f6c 6f63     all.common/bl_co
2fff65e8:	6d6d 6e6f 632e 2800 6f4c 6461 6e69 2067     mmon.c.(Loading 
2fff65f8:	6d69 6761 2065 6469 253d 2075 7461 6120     image id=%u at a
2fff6608:	6464 6572 7373 3020 2578 786c 000a 461e     ddress 0x%lx...F
2fff6618:	6961 656c 2064 6f74 6420 7465 7265 696d     ailed to determi
2fff6628:	656e 7420 6568 7320 7a69 2065 666f 7420     ne the size of t
2fff6638:	6568 6920 616d 6567 6920 3d64 7525 2820     he image id=%u (
2fff6648:	6925 0a29 1e00 6d49 6761 2065 6469 253d     %i)...Image id=%
2fff6658:	2075 6973 657a 6f20 7475 6f20 2066 6f62     u size out of bo
2fff6668:	6e75 7364 000a 461e 6961 656c 2064 6f74     unds...Failed to
2fff6678:	6c20 616f 2064 6d69 6761 2065 6469 253d      load image id=%
2fff6688:	2075 2528 2969 000a 4928 616d 6567 6920     u (%i)..(Image i
2fff6698:	3d64 7525 6c20 616f 6564 3a64 3020 2578     d=%u loaded: 0x%
2fff66a8:	786c 2d20 3020 2578 786c 000a 4528 746e     lx - 0x%lx..(Ent
2fff66b8:	7972 7020 696f 746e 6120 6464 6572 7373     ry point address
2fff66c8:	3d20 3020 2578 786c 000a 5328 5350 2052      = 0x%lx..(SPSR 
2fff66d8:	203d 7830 7825 000a 6f63 6d6d 6e6f 742f     = 0x%x..common/t
2fff66e8:	5f66 6f6c 2e67 0063 7264 7669 7265 2f73     f_log.c.drivers/
2fff66f8:	6f63 736e 6c6f 2f65 756d 746c 5f69 6f63     console/multi_co
2fff6708:	736e 6c6f 2e65 0063 5245 4f52 3a52 2020     nsole.c.ERROR:  
2fff6718:	0020 4f4e 4954 4543 203a 0020 4157 4e52      .NOTICE:  .WARN
2fff6728:	4e49 3a47 0020 4e49 4f46 203a 2020 0020     ING: .INFO:    .
2fff6738:	4556 4252 534f 3a45 0020 551e 4955 2044     VERBOSE: ..UUID 
2fff6748:	7473 6972 676e 6920 2073 6f74 206f 6873     string is too sh
2fff6758:	726f 0a74 1e00 7245 6f72 2072 6170 7372     ort...Error pars
2fff6768:	6e69 2067 5555 4449 000a 7473 732c 6d74     ing UUID..st,stm
2fff6778:	3233 706d 622d 6f6f 6974 666e 006f 6c70     32mp-bootinfo.pl
2fff6788:	7461 732f 2f74 6f63 6d6d 6e6f 732f 6d74     at/st/common/stm
2fff6798:	3233 706d 635f 6d6f 6f6d 2e6e 0063 420a     32mp_common.c..B
2fff67a8:	4553 3a43 6920 7864 253d 2075 6552 6461     SEC: idx=%u Read
2fff67b8:	4520 7272 726f 000a 420a 4553 3a43 2520      Error...BSEC: %
2fff67c8:	2073 6552 6461 4520 7272 726f 000a 4214     s Read Error...B
2fff67d8:	616f 6472 203a 424d 3025 7834 5620 7261     oard: MB%04x Var
2fff67e8:	7525 252e 2075 6552 2e76 6325 252d 3230     %u.%u Rev.%c-%02
2fff67f8:	0a75 6d00 6761 6369 6e2d 6d75 6562 0072     u..magic-number.
2fff6808:	6f63 6572 2d31 7262 6e61 6863 612d 6464     core1-branch-add
2fff6818:	6572 7373 6200 6f6f 2d74 6f6d 6564 6c00     ress.boot-mode.l
2fff6828:	6269 782f 616c 5f74 6174 6c62 7365 765f     ib/xlat_tables_v
2fff6838:	2f32 6161 6372 3368 2f32 6c78 7461 745f     2/aarch32/xlat_t
2fff6848:	6261 656c 5f73 7261 6863 632e 6c00 6269     ables_arch.c.lib
2fff6858:	782f 616c 5f74 6174 6c62 7365 765f 2f32     /xlat_tables_v2/
2fff6868:	6c78 7461 745f 6261 656c 5f73 6f63 746e     xlat_tables_cont
2fff6878:	7865 2e74 0063 696c 2f62 6c78 7461 745f     ext.c.lib/xlat_t
2fff6888:	6261 656c 5f73 3276 782f 616c 5f74 6174     ables_v2/xlat_ta
2fff6898:	6c62 7365 635f 726f 2e65 0063 6d0a 616d     bles_core.c..mma
2fff68a8:	5f70 6461 5f64 6572 6967 6e6f 635f 6568     p_add_region_che
2fff68b8:	6b63 2928 6620 6961 656c 2e64 6520 7272     ck() failed. err
2fff68c8:	726f 2520 0a64 0a00 6f4e 2074 6e65 756f     or %d...Not enou
2fff68d8:	6867 6d20 6d65 726f 2079 6f74 6d20 7061     gh memory to map
2fff68e8:	7220 6765 6f69 3a6e 200a 4156 303a 2578      region:. VA:0x%
2fff68f8:	786c 2020 4150 303a 2578 6c6c 2078 7320     lx  PA:0x%llx  s
2fff6908:	7a69 3a65 7830 7a25 2078 6120 7474 3a72     ize:0x%zx  attr:
2fff6918:	7830 7825 000a 7264 7669 7265 2f73 6c63     0x%x..drivers/cl
2fff6928:	2f6b 6c63 2e6b 0063 7264 7669 7265 2f73     k/clk.c.drivers/
2fff6938:	6564 616c 5f79 6974 656d 2f72 6564 616c     delay_timer/dela
2fff6948:	5f79 6974 656d 2e72 0063 7264 7669 7265     y_timer.c.driver
2fff6958:	2f73 6564 616c 5f79 6974 656d 2f72 6567     s/delay_timer/ge
2fff6968:	656e 6972 5f63 6564 616c 5f79 6974 656d     neric_delay_time
2fff6978:	2e72 0063 632f 6f6c 6b63 0073 6c63 636f     r.c./clocks.cloc
2fff6988:	2d6b 7266 7165 6575 636e 0079 690a 766e     k-frequency..inv
2fff6998:	6c61 6469 7020 7261 6d61 7465 7265 6f20     alid parameter o
2fff69a8:	6666 6573 0a74 6400 6972 6576 7372 732f     ffset..drivers/s
2fff69b8:	2f74 7067 6f69 732f 6d74 3233 675f 6970     t/gpio/stm32_gpi
2fff69c8:	2e6f 0063 6970 636e 7274 2d6c 0030 6970     o.c.pinctrl-0.pi
2fff69d8:	6d6e 7875 7300 656c 2d77 6172 6574 6200     nmux.slew-rate.b
2fff69e8:	6169 2d73 7570 6c6c 752d 0070 6962 7361     ias-pull-up.bias
2fff69f8:	702d 6c75 2d6c 6f64 6e77 6400 6972 6576     -pull-down.drive
2fff6a08:	6f2d 6570 2d6e 7264 6961 006e 756f 7074     -open-drain.outp
2fff6a18:	7475 682d 6769 0068 756f 7074 7475 6c2d     ut-high.output-l
2fff6a28:	776f 6700 6970 2d6f 6f63 746e 6f72 6c6c     ow.gpio-controll
2fff6a38:	7265 0a00 4950 434e 5254 204c 6e69 6f63     er..PINCTRL inco
2fff6a48:	736e 7369 6574 746e 6920 206e 5444 000a     nsistent in DT..
2fff6a58:	4e1e 746f 6520 6f6e 6775 2068 6c70 6361     .Not enough plac
2fff6a68:	2065 6f66 2072 564e 454d 204d 6564 2c76     e for NVMEM dev,
2fff6a78:	5020 414c 5f54 424e 4e5f 4d56 4d45 445f      PLAT_NB_NVMEM_D
2fff6a88:	5645 2053 6873 756f 646c 6220 2065 6e69     EVS should be in
2fff6a98:	7263 6165 6573 2e64 000a 766e 656d 2d6d     creased...nvmem-
2fff6aa8:	6563 6c6c 0073 430a 6e61 7427 6620 6e69     cells..Can't fin
2fff6ab8:	2064 766e 656d 206d 6563 6c6c 1e00 7325     d nvmem cell..%s
2fff6ac8:	203a 6f6e 6564 2520 2064 6f6e 2074 6f66     : node %d not fo
2fff6ad8:	6e75 0a64 6e00 6d76 6d65 632d 6c65 2d6c     und..nvmem-cell-
2fff6ae8:	616e 656d 0073                              names.

2fff6aee <__func__.0>:
2fff6aee:	766e 656d 5f6d 6567 5f74 7962 6e5f 646f     nvmem_get_by_nod
2fff6afe:	0065 570a 6f72 676e 6120 6363 7365 2073     e..Wrong access 
2fff6b0e:	6972 6867 7374 6620 726f 7a20 6e6f 2065     rights for zone 
2fff6b1e:	6425 2820 7525 0a29 0a00 6146 6c69 6465     %d (%u)...Failed
2fff6b2e:	7420 206f 6572 6461 6220 706b 2520 757a      to read bkp %zu
2fff6b3e:	000a 430a 6e61 7427 7220 6165 2064 6966     ...Can't read fi
2fff6b4e:	6c65 2064 6f66 2072 6572 6967 7473 7265     eld for register
2fff6b5e:	2073 6f7a 656e 0a73 1400 6146 6c69 6465     s zones...Failed
2fff6b6e:	7420 206f 6567 2074 6874 2065 6162 6b63      to get the back
2fff6b7e:	7075 7a20 6e6f 2065 7266 6d6f 7420 6d61     up zone from tam
2fff6b8e:	2070 6572 7367 0a0a 0a00 6146 6c69 6465     p regs....Failed
2fff6b9e:	7420 206f 6567 2074 6874 2065 6162 6b63      to get the back
2fff6bae:	7075 7a20 6e6f 2065 6361 6563 7373 7220     up zone access r
2fff6bbe:	6769 7468 0a73 000a 7473 732c 6d74 3233     ights...st,stm32
2fff6bce:	706d 3531 742d 6d61 2d70 766e 6172 006d     mp15-tamp-nvram.
2fff6bde:	7264 7669 7265 2f73 7473 722f 6765 6c75     drivers/st/regul
2fff6bee:	7461 726f 722f 6765 6c75 7461 726f 635f     ator/regulator_c
2fff6bfe:	726f 2e65 0063 251e 3a73 2520 2073 6f6e     ore.c..%s: %s no
2fff6c0e:	2074 6f66 6e75 0a64 2500 2d73 7573 7070     t found..%s-supp
2fff6c1e:	796c 1e00 7325 203a 6870 6e61 6c64 2065     ly..%s: phandle 
2fff6c2e:	6425 6e20 746f 6620 756f 646e 000a 720a     %d not found...r
2fff6c3e:	6765 6c75 2520 2073 6567 2074 6f76 746c     egul %s get volt
2fff6c4e:	6761 2065 6166 6c69 6465 203a 7265 3a72     age failed: err:
2fff6c5e:	6425 000a 720a 6765 6c75 2520 2073 6573     %d...regul %s se
2fff6c6e:	2074 6f76 746c 6620 6961 656c 3a64 6520     t volt failed: e
2fff6c7e:	7272 253a 0a64 0a00 6572 7567 206c 7325     rr:%d...regul %s
2fff6c8e:	6c20 7369 5f74 6f76 746c 6761 7365 6620      list_voltages f
2fff6c9e:	6961 656c 3a64 6520 7272 203a 6425 000a     ailed: err: %d..
2fff6cae:	720a 6765 6c75 2520 3a73 6d20 7861 7620     .regul %s: max v
2fff6cbe:	6c61 6575 2520 2075 7369 6920 766e 6c61     alue %u is inval
2fff6cce:	6469 000a 720a 6765 6c75 2520 2073 6573     id...regul %s se
2fff6cde:	2074 696d 206e 6f76 746c 6761 2065 7369     t min voltage is
2fff6cee:	7420 6f6f 6820 6769 0a68 0a00 6572 7567      too high...regu
2fff6cfe:	206c 7325 203a 696d 206e 6176 756c 2065     l %s: min value 
2fff6d0e:	7525 6920 2073 6e69 6176 696c 0a64 0a00     %u is invalid...
2fff6d1e:	7325 6320 6e61 6e20 746f 7320 7465 6120     %s can not set a
2fff6d2e:	796e 6620 616c 0a67 0a00 7325 203a 6f63     ny flag...%s: co
2fff6d3e:	6c75 2064 6f6e 2074 6573 2074 6c66 6761     uld not set flag
2fff6d4e:	2520 2064 6572 3d74 6425 000a 4e1e 746f      %d ret=%d...Not
2fff6d5e:	6520 6f6e 6775 2068 6c70 6361 2065 6f66      enough place fo
2fff6d6e:	2072 6572 7567 616c 6f74 7372 202c 4c50     r regulators, PL
2fff6d7e:	5441 4e5f 5f42 4452 5645 2053 6873 756f     AT_NB_RDEVS shou
2fff6d8e:	646c 6220 2065 6e69 7263 6165 6573 2e64     ld be increased.
2fff6d9e:	000a 720a 6765 6c75 2520 2073 6573 2074     ...regul %s set 
2fff6dae:	7473 7461 2065 6166 6c69 6465 203a 7265     state failed: er
2fff6dbe:	3a72 6425 000a 6572 7567 616c 6f74 2d72     r:%d..regulator-
2fff6dce:	696d 2d6e 696d 7263 766f 6c6f 0074 250a     min-microvolt..%
2fff6dde:	3a73 6d20 6e69 6d5f 3d76 6425 6920 2073     s: min_mv=%d is 
2fff6dee:	6f74 206f 6968 6867 000a 6572 7567 616c     too high..regula
2fff6dfe:	6f74 2d72 616d 2d78 696d 7263 766f 6c6f     tor-max-microvol
2fff6e0e:	0074 250a 3a73 6d20 7861 6d5f 3d76 6425     t..%s: max_mv=%d
2fff6e1e:	6920 2073 6f74 206f 6f6c 0a77 7200 6765      is too low..reg
2fff6e2e:	6c75 7461 726f 612d 776c 7961 2d73 6e6f     ulator-always-on
2fff6e3e:	7200 6765 6c75 7461 726f 652d 616e 6c62     .regulator-enabl
2fff6e4e:	2d65 6172 706d 642d 6c65 7961                e-ramp-delay.

2fff6e5b <__func__.0>:
2fff6e5b:	6572 7567 616c 6f74 5f72 6567 5f74 7962     regulator_get_by
2fff6e6b:	705f 6168 646e 656c                          _phandle.

2fff6e74 <__func__.1>:
2fff6e74:	6572 7567 616c 6f74 5f72 6567 5f74 7962     regulator_get_by
2fff6e84:	6e5f 6d61 0065 6572 7567 616c 6f74 2d72     _name.regulator-
2fff6e94:	6966 6578 0064 7264 7669 7265 2f73 7473     fixed.drivers/st
2fff6ea4:	722f 6765 6c75 7461 726f 722f 6765 6c75     /regulator/regul
2fff6eb4:	7461 726f 665f 7869 6465 632e 1e00 7325     ator_fixed.c..%s
2fff6ec4:	253a 2064 6166 6c69 6465 7420 206f 6572     :%d failed to re
2fff6ed4:	6967 7473 7265 2520 0a73                     gister %s..

2fff6edf <__func__.0>:
2fff6edf:	6966 6578 5f64 6572 7567 616c 6f74 5f72     fixed_regulator_
2fff6eef:	6572 6967 7473 7265 6f00 616b 0079 6573     register.okay.se
2fff6eff:	7563 6572 732d 6174 7574 0073 6c70 7461     cure-status.plat
2fff6f0f:	732f 2f74 6f63 6d6d 6e6f 732f 6d74 3233     /st/common/stm32
2fff6f1f:	706d 645f 2e74 0063 6572 6573 7374 2800     mp_dt.c.resets.(
2fff6f2f:	7325 203a 6143 6e6e 746f 7220 6165 2064     %s: Cannot read 
2fff6f3f:	4444 2052 6f6e 6564 6920 206e 5444 000a     DDR node in DT..
2fff6f4f:	7473 6d2c 6d65 732d 7a69 0065 7473 732c     st,mem-size.st,s
2fff6f5f:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2fff6f6f:	6476 0064 002f 6f6d 6564 006c 7473 732c     vdd./.model.st,s
2fff6f7f:	6d74 3233 706d 3531 622d 6573 0063 6e0a     tm32mp15-bsec..n
2fff6f8f:	6d76 6d65 6e20 646f 2065 7325 6e20 746f     vmem node %s not
2fff6f9f:	6620 756f 646e 000a 4d0a 6c61 6f66 6d72      found...Malform
2fff6faf:	6465 6e20 6d76 6d65 6e20 646f 2065 7325     ed nvmem node %s
2fff6fbf:	203a 6769 6f6e 6572 0a64 0a00 694d 6173     : ignored...Misa
2fff6fcf:	696c 6e67 6465 6e20 6d76 6d65 2520 2073     ligned nvmem %s 
2fff6fdf:	6c65 6d65 6e65 3a74 6920 6e67 726f 6465     element: ignored
2fff6fef:	000a                                        ..

2fff6ff1 <__func__.0>:
2fff6ff1:	7464 675f 7465 645f 7264 735f 7a69 0065     dt_get_ddr_size.
2fff7001:	7473 702c 6f72 6976 6973 6e6f 6e69 0067     st,provisioning.
2fff7011:	501e 6168 646e 656c 6e20 746f 6620 756f     .Phandle not fou
2fff7021:	646e 000a 7473 732c 6168 6f64 2d77 6176     nd..st,shadow-va
2fff7031:	756c 0065 491e 766e 6c61 6469 4f20 5054     lue..Invalid OTP
2fff7041:	7320 7a69 0a65 1e00 6853 6461 776f 7720      size...Shadow w
2fff7051:	6972 6574 6c20 636f 0a6b 2800 764f 7265     rite lock..(Over
2fff7061:	6972 6564 7420 6568 4f20 5054 2520 2075     ride the OTP %u 
2fff7071:	6e69 7469 6169 206c 6176 756c 0a65 7300     initial value..s
2fff7081:	6d74 3233 706d 665f 7375 0065 6c70 7461     tm32mp_fuse.plat
2fff7091:	732f 2f74 7473 336d 6d32 3170 732f 6d74     /st/stm32mp1/stm
2fff70a1:	3233 706d 5f31 7270 7669 7461 2e65 0063     32mp1_private.c.
2fff70b1:	4328 6e61 6f6e 2074 6567 2074 5043 2055     (Cannot get CPU 
2fff70c1:	6576 7372 6f69 2c6e 6420 6265 6775 6420     version, debug d
2fff70d1:	7369 6261 656c 0a64 2800 7355 2065 6564     isabled..(Use de
2fff70e1:	6166 6c75 2074 6863 7069 4920 2c44 6420     fault chip ID, d
2fff70f1:	6265 6775 6420 7369 6261 656c 0a64 7000     ebug disabled..p
2fff7101:	7261 5f74 756e 626d 7265 6f5f 7074 3100     art_number_otp.1
2fff7111:	3735 0043 3531 4137 3100 3335 0043 3531     57C.157A.153C.15
2fff7121:	4133 3100 3135 0043 3531 4131 3100 3735     3A.151C.151A.157
2fff7131:	0046 3531 4437 3100 3335 0046 3531 4433     F.157D.153F.153D
2fff7141:	3100 3135 0046 3531 4431 3f00 3f3f 003f     .151F.151D.????.
2fff7151:	6170 6b63 6761 5f65 746f 0070 5453 334d     package_otp.STM3
2fff7161:	4d32 2550 2573 2073 6552 2e76 7325 1400     2MP%s%s Rev.%s..
2fff7171:	5043 3a55 2520 0a73 6200 616f 6472 695f     CPU: %s..board_i
2fff7181:	0064 6663 3067 6f5f 7074 6800 3277 6f5f     d.cfg0_otp.hw2_o
2fff7191:	7074 5a00 5900 4100 0044 4341 4100 0042     tp.Z.Y.AD.AC.AB.
2fff71a1:	4141 6400 6972 6576 7372 612f 6d72 742f     AA.drivers/arm/t
2fff71b1:	637a 742f 637a 3034 2e30 0063 540a 435a     zc/tzc400.c..TZC
2fff71c1:	342d 3030 3a20 5720 6f72 676e 6420 7665     -400 : Wrong dev
2fff71d1:	6369 2065 4449 2820 7830 7825 2e29 000a     ice ID (0x%x)...
2fff71e1:	540a 435a 342d 3030 3a20 4620 6c69 6574     .TZC-400 : Filte
2fff71f1:	2072 7525 4720 7461 6b65 6565 6570 2072     r %u Gatekeeper 
2fff7201:	6c61 6572 6461 2079 6e65 6261 656c 2e64     already enabled.
2fff7211:	000a 4f0a 5054 6d20 646f 2065 7369 4f20     ...OTP mode is O
2fff7221:	5054 492d 564e 4c41 4449 000a 7264 7669     TP-INVALID..driv
2fff7231:	7265 2f73 7473 622f 6573 2f63 7362 6365     ers/st/bsec/bsec
2fff7241:	2e32 0063 420a 4553 3a43 2520 2075 7453     2.c..BSEC: %u St
2fff7251:	6369 796b 772d 6972 6574 6220 7469 7220     icky-write bit r
2fff7261:	6165 2064 7245 6f72 2072 7525 000a 420a     ead Error %u...B
2fff7271:	4553 3a43 2520 2075 7453 6369 796b 702d     SEC: %u Sticky-p
2fff7281:	6f72 2067 6962 2074 6572 6461 4520 7272     rog bit read Err
2fff7291:	726f 2520 0a75 0a00 5342 4345 203a 7525     or %u...BSEC: %u
2fff72a1:	7020 7265 616d 656e 746e 6220 7469 7220      permanent bit r
2fff72b1:	6165 2064 7245 6f72 2072 7525 000a 421e     ead Error %u...B
2fff72c1:	4553 3a43 4f20 5054 6c20 636f 656b 2c64     SEC: OTP locked,
2fff72d1:	7020 6f72 2067 6977 6c6c 6220 2065 6769      prog will be ig
2fff72e1:	6f6e 6572 0a64 1e00 5342 4345 203a 5047     nored...BSEC: GP
2fff72f1:	4f4c 4b43 6120 7463 7669 7461 6465 202c     LOCK activated, 
2fff7301:	7270 676f 7720 6c69 206c 6562 6920 6e67     prog will be ign
2fff7311:	726f 6465 000a 420a 4553 3a43 2520 2075     ored...BSEC: %u 
2fff7321:	7453 6369 796b 722d 6165 2064 6962 2074     Sticky-read bit 
2fff7331:	6572 6461 4520 7272 726f 2520 0a75 0a00     read Error %u...
2fff7341:	5342 4345 203a 7525 5320 6168 6f64 6977     BSEC: %u Shadowi
2fff7351:	676e 4520 7272 726f 2520 0a75 0a00 5342     ng Error %u...BS
2fff7361:	4345 203a 7525 5220 6165 2064 7245 6f72     EC: %u Read Erro
2fff7371:	2072 7525 000a 550a 6b6e 6f6e 6e77 5320     r %u...Unknown S
2fff7381:	6c65 2066 6552 7266 7365 2068 6f6d 6564     elf Refresh mode
2fff7391:	000a                                        ..

2fff7393 <CSWTCH.37>:
2fff7393:	0001 0000 0000 0000 0302 3269 2d63 6373     ..........i2c-sc
2fff73a3:	2d6c 6972 6973 676e 742d 6d69 2d65 736e     l-rising-time-ns
2fff73b3:	6900 6332 732d 6c63 662d 6c61 696c 676e     .i2c-scl-falling
2fff73c3:	742d 6d69 2d65 736e 0a00 6e49 6176 696c     -time-ns..Invali
2fff73d3:	2064 7562 2073 7073 6565 2064 2528 2075     d bus speed (%u 
2fff73e3:	203e 7525 0a29 0a00 3249 2043 6c63 636f     > %u)...I2C cloc
2fff73f3:	206b 6172 6574 6920 2073 0a30 0a00 3249     k rate is 0...I2
2fff7403:	2043 7073 6565 2064 756f 2074 666f 6220     C speed out of b
2fff7413:	756f 646e 7b20 7525 0a7d 0a00 4920 4332     ound {%u}... I2C
2fff7423:	7420 6d69 6e69 7367 6f20 7475 6f20 2066      timings out of 
2fff7433:	6f62 6e75 2064 6952 6573 257b 3e75 7525     bound Rise{%u>%u
2fff7443:	2f7d 6146 6c6c 257b 3e75 7525 0a7d 0a00     }/Fall{%u>%u}...
2fff7453:	4e44 2046 756f 2074 666f 6220 756f 646e     DNF out of bound
2fff7463:	2520 2f75 7525 000a 200a 3249 2043 6f6e      %u/%u... I2C no
2fff7473:	5020 6572 6373 6c61 7265 7320 6c6f 7475      Prescaler solut
2fff7483:	6f69 0a6e 0a00 4920 4332 6e20 206f 6f73     ion... I2C no so
2fff7493:	756c 6974 6e6f 6120 2074 6c61 0a6c 0a00     lution at all...
2fff74a3:	6146 6c69 6465 7420 206f 6f63 706d 7475     Failed to comput
2fff74b3:	2065 3249 2043 6974 696d 676e 0a73 1e00     e I2C timings...
2fff74c3:	6f44 6e77 7267 6461 2065 3249 2043 7073     Downgrade I2C sp
2fff74d3:	6565 2064 6f74 2520 4875 297a 000a 490a     eed to %uHz)...I
2fff74e3:	706d 736f 6973 6c62 2065 6f74 6320 6d6f     mpossible to com
2fff74f3:	7570 6574 4920 4332 7420 6d69 6e69 7367     pute I2C timings
2fff7503:	000a 430a 6e61 6f6e 2074 6e69 7469 6169     ...Cannot initia
2fff7513:	696c 657a 4920 4332 6120 616e 6f6c 2067     lize I2C analog 
2fff7523:	6966 746c 7265 2820 6425 0a29 7300 2c74     filter (%d)..st,
2fff7533:	7473 336d 6d32 3170 692d 6477 0067 4f0a     stm32mp1-iwdg..O
2fff7543:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2fff7553:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2fff7563:	0a64 7300 2c74 7473 6d70 6369 0031 490a     d..st,stpmic1..I
2fff7573:	4332 6320 6e6f 6966 7567 6172 6974 6e6f     2C configuration
2fff7583:	6620 6961 656c 2064 6425 000a 430a 6e61      failed %d...Can
2fff7593:	6f6e 2074 6e69 7469 6169 696c 657a 4920     not initialize I
2fff75a3:	4332 2520 2078 2528 2964 000a 490a 4332     2C %x (%d)...I2C
2fff75b3:	6420 7665 6369 2065 6f6e 2074 6572 6461      device not read
2fff75c3:	0a79 7200 6765 6c75 7461 726f 0073 7264     y..regulators.dr
2fff75d3:	7669 7265 2f73 7473 702f 696d 2f63 7473     ivers/st/pmic/st
2fff75e3:	336d 6d32 5f70 6d70 6369 632e 7300 2c74     m32mp_pmic.c.st,
2fff75f3:	616d 6b73 722d 7365 7465 0a00 6573 2074     mask-reset..set 
2fff7603:	616d 6b73 722d 7365 7465 6620 6961 656c     mask-reset faile
2fff7613:	0a64 0a00 6146 6c69 6465 7420 206f 6361     d...Failed to ac
2fff7623:	6563 7373 5020 494d 0a43 2800 4d50 4349     cess PMIC..(PMIC
2fff7633:	7620 7265 6973 6e6f 3d20 3020 2578 3230      version = 0x%02
2fff7643:	786c 000a                                   lx..

2fff7647 <__func__.0>:
2fff7647:	6572 6967 7473 7265 705f 696d 0063 7562     register_pmic.bu
2fff7657:	6b63 0031 7562 6b63 0034 646c 316f 6c00     ck1.buck4.ldo1.l
2fff7667:	6f64 0032 646c 346f 6c00 6f64 0035 646c     do2.ldo4.ldo5.ld
2fff7677:	366f 6200 6f6f 7473 7000 7277 735f 3177     o6.boost.pwr_sw1
2fff7687:	7000 7277 735f 3277 6200 6375 006b 646c     .pwr_sw2.buck.ld
2fff7697:	006f 5328 666f 7774 7261 2065 6361 6563     o.(Software acce
2fff76a7:	7373 7420 206f 6c61 206c 6564 7562 2067     ss to all debug 
2fff76b7:	6f63 706d 6e6f 6e65 7374 6920 2073 6964     components is di
2fff76c7:	6173 6c62 6465 000a 6c70 7461 732f 2f74     sabled..plat/st/
2fff76d7:	7473 336d 6d32 3170 732f 6d74 3233 706d     stm32mp1/stm32mp
2fff76e7:	5f31 6264 6d67 7563 632e 1e00 4456 2044     1_dbgmcu.c..VDD 
2fff76f7:	6e75 6e6b 776f 0a6e 2800 7250 646f 6375     unknown..(Produc
2fff7707:	5f74 6562 6f6c 5f77 7632 3d35 3a30 4820     t_below_2v5=0: H
2fff7717:	4c53 4556 204e 7270 746f 6365 6574 2064     SLVEN protected 
2fff7727:	7962 4820 0a57 0a00 7250 646f 6375 5f74     by HW...Product_
2fff7737:	6562 6f6c 5f77 7632 3d35 3a31 000a 090a     below_2v5=1:....
2fff7747:	5348 564c 4e45 7520 6470 7461 2065 7369     HSLVEN update is
2fff7757:	6420 7365 7274 6375 6974 6576 0a2c 0a00      destructive,...
2fff7767:	6e09 206f 7075 6164 6574 6120 2073 4456     .no update as VD
2fff7777:	2044 203e 2e32 5637 000a 491e 204f 6f63     D > 2.7V...IO co
2fff7787:	706d 6e65 6173 6974 6e6f 6320 6c65 206c     mpensation cell 
2fff7797:	6f6e 2074 6572 6461 0a79 0a00 7325 203a     not ready...%s: 
2fff77a7:	6c63 206b 6469 2520 756c 6e20 746f 6620     clk id %lu not f
2fff77b7:	756f 646e 000a 430a 6f6c 6b63 2520 756c     ound...Clock %lu
2fff77c7:	6320 6e61 7427 6220 2065 6964 6173 6c62      can't be disabl
2fff77d7:	6465 000a 430a 6f6c 6b63 2520 756c 7220     ed...Clock %lu r
2fff77e7:	6665 6f63 6e75 2074 6572 6361 6568 2064     efcount reached 
2fff77f7:	0a30 0a00 6c43 636f 206b 6c25 2075 6163     0...Clock %lu ca
2fff7807:	276e 2074 6562 6520 616e 6c62 6465 000a     n't be enabled..
2fff7817:	430a 6f6c 6b63 2520 756c 7220 6665 6f63     .Clock %lu refco
2fff7827:	6e75 2074 6572 6361 6568 2064 616d 2078     unt reached max 
2fff7837:	6176 756c 0a65 0a00 534f 2043 7825 4020     value...OSC %x @
2fff7847:	2520 786c 7420 6d69 6f65 7475 6620 726f      %lx timeout for
2fff7857:	6520 616e 6c62 3d65 6425 3a20 3020 2578      enable=%d : 0x%
2fff7867:	0a78 7300 2c74 7962 6170 7373 7300 2c74     x..st,bypass.st,
2fff7877:	6964 6267 7079 7361 0073 7473 632c 7373     digbypass.st,css
2fff7887:	7300 2c74 7264 7669 0065 480a 4953 4944     .st,drive..HSIDI
2fff7897:	2056 6166 6c69 6465 4020 3020 2578 786c     V failed @ 0x%lx
2fff78a7:	203a 7830 7825 000a 7473 732c 6d74 3233     : 0x%x..st,stm32
2fff78b7:	706d 2d31 6372 0063 7473 702c 6c6c 2540     mp1-rcc.st,pll@%
2fff78c7:	0075 7473 702c 6c6c 7300 2c74 6c70 5f6c     u.st,pll.st,pll_
2fff78d7:	6376 006f 6964 6d76 006e 7363 0067 7266     vco.divmn.csg.fr
2fff78e7:	6361 7300 2c74 6c70 5f6c 6964 5f76 7170     ac.st,pll_div_pq
2fff78f7:	0072 7473 632c 6b6c 6964 0076 7473 632c     r.st,clkdiv.st,c
2fff7907:	6b6c 7273 0063                              lksrc.

2fff790d <__func__.0>:
2fff790d:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2fff791d:	675f 7461 6465 695f 0064                    _gated_id.

2fff7927 <stm32mp1_axi_div>:
2fff7927:	0201 0403 0404 0404                         ........

2fff792f <stm32mp1_mpu_apbx_div>:
2fff792f:	0100 0302 0404 0404                         ........

2fff7937 <stm32mp1_mcu_div>:
2fff7937:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2fff7947 <pllncfgr2>:
2fff7947:	0800                                         ...

2fff794a <stm32mp1_pll>:
2fff794a:	1004 1008                                   ....

2fff794e <rtc_parents>:
2fff794e:	04ff 0903                                   ....

2fff7952 <per_parents>:
2fff7952:	0100                                         ...

2fff7955 <mpu_parents>:
2fff7955:	0100 0b0b                                   ....

2fff7959 <usbo_parents>:
2fff7959:	2216                                        ."

2fff795b <usbphy_parents>:
2fff795b:	1607                                         ...

2fff795e <mcuss_parents>:
2fff795e:	0100 1102                                   ....

2fff7962 <axiss_parents>:
2fff7962:	0100                                         ...

2fff7965 <fmc_parents>:
2fff7965:	1317 1f14                                   ....

2fff7969 <qspi_parents>:
2fff7969:	1317 1f14                                   ....

2fff796d <sdmmc3_parents>:
2fff796d:	131e 0614                                   ....

2fff7971 <sdmmc12_parents>:
2fff7971:	131d 0614                                   ....

2fff7975 <uart234578_parents>:
2fff7975:	1518 0a06                                    .....

2fff797a <uart6_parents>:
2fff797a:	1519 0a06                                    .....

2fff797f <rng1_parents>:
2fff797f:	1602 0304                                   ....

2fff7983 <usart1_parents>:
2fff7983:	121c 0a06 0715                              ......

2fff7989 <spi6_parents>:
2fff7989:	151c 0a06 1207                              ......

2fff798f <i2c46_parents>:
2fff798f:	121c 0a06                                   ....

2fff7993 <stgen_parents>:
2fff7993:	0706                                        ..

2fff7995 <i2c35_parents>:
2fff7995:	1618 0a06                                   ....

2fff7999 <i2c12_parents>:
2fff7999:	1618 0a06                                   ....

2fff799d <parent_id_clock_id>:
2fff799d:	0004 0201 ff03 0004 ff05 b401 b6b5 b8b7     ................
2fff79ad:	bab9 bcbb bebd c3bf c3c3 c3c3 00c3 c100     ................
2fff79bd:	c4c2 63ff 6b6c 682d 6973 6300 6b6c 682d     ...clk-hsi.clk-h
2fff79cd:	6573 6300 6b6c 632d 6973 6300 6b6c 6c2d     se.clk-csi.clk-l
2fff79dd:	6973 6300 6b6c 6c2d 6573 6900 7332 635f     si.clk-lse.i2s_c
2fff79ed:	696b 006e 6e69 6c63 6475 2f65 7261 6863     kin.include/arch
2fff79fd:	612f 7261 6863 3233 652f 336c 635f 6d6f     /aarch32/el3_com
2fff7a0d:	6f6d 5f6e 616d 7263 736f 532e 6c00 6269     mon_macros.S.lib
2fff7a1d:	632f 7570 2f73 6161 6372 3368 2f32 7063     /cpus/aarch32/cp
2fff7a2d:	5f75 6568 706c 7265 2e73 0053               u_helpers.S.

2fff7a39 <assert_msg1>:
2fff7a39:	41          	.byte	0x41
2fff7a3a:	5353      	.short	0x5353
2fff7a3c:	3a545245 	.word	0x3a545245
2fff7a40:	6c694620 	.word	0x6c694620
2fff7a44:	2065      	.short	0x2065
	...

2fff7a47 <assert_msg2>:
2fff7a47:	20          	.byte	0x20
2fff7a48:	656e694c 	.word	0x656e694c
2fff7a4c:	0020      	.short	0x0020

2fff7a4e <panic_msg>:
2fff7a4e:	4150      	.short	0x4150
2fff7a50:	2043494e 	.word	0x2043494e
2fff7a54:	50207461 	.word	0x50207461
2fff7a58:	203a2043 	.word	0x203a2043
2fff7a5c:	7830      	.short	0x7830
	...

2fff7a5f <panic_end>:
2fff7a5f:	0d          	.byte	0x0d
2fff7a60:	000a      	.short	0x000a
2fff7a62:	696c      	.short	0x696c
2fff7a64:	6c782f62 	.word	0x6c782f62
2fff7a68:	745f7461 	.word	0x745f7461
2fff7a6c:	656c6261 	.word	0x656c6261
2fff7a70:	32765f73 	.word	0x32765f73
2fff7a74:	7261612f 	.word	0x7261612f
2fff7a78:	32336863 	.word	0x32336863
2fff7a7c:	616e652f 	.word	0x616e652f
2fff7a80:	5f656c62 	.word	0x5f656c62
2fff7a84:	2e756d6d 	.word	0x2e756d6d
2fff7a88:	0053      	.short	0x0053
2fff7a8a:	7264      	.short	0x7264
2fff7a8c:	72657669 	.word	0x72657669
2fff7a90:	74732f73 	.word	0x74732f73
2fff7a94:	7261752f 	.word	0x7261752f
2fff7a98:	61612f74 	.word	0x61612f74
2fff7a9c:	33686372 	.word	0x33686372
2fff7aa0:	74732f32 	.word	0x74732f32
2fff7aa4:	5f32336d 	.word	0x5f32336d
2fff7aa8:	736e6f63 	.word	0x736e6f63
2fff7aac:	2e656c6f 	.word	0x2e656c6f
2fff7ab0:	0053      	.short	0x0053

2fff7ab2 <cortex_a7_errata_list_end>:
2fff7ab2:	500a      	.short	0x500a
2fff7ab4:	65666572 	.word	0x65666572
2fff7ab8:	20686374 	.word	0x20686374
2fff7abc:	726f6241 	.word	0x726f6241
2fff7ac0:	74612074 	.word	0x74612074
2fff7ac4:	7830203a 	.word	0x7830203a
	...

2fff7ac9 <data_abort_str>:
2fff7ac9:	0a          	.byte	0x0a
2fff7aca:	6144      	.short	0x6144
2fff7acc:	41206174 	.word	0x41206174
2fff7ad0:	74726f62 	.word	0x74726f62
2fff7ad4:	3a746120 	.word	0x3a746120
2fff7ad8:	00783020 	.word	0x00783020

2fff7adc <undefined_str>:
2fff7adc:	646e550a 	.word	0x646e550a
2fff7ae0:	6e696665 	.word	0x6e696665
2fff7ae4:	69206465 	.word	0x69206465
2fff7ae8:	7274736e 	.word	0x7274736e
2fff7aec:	69746375 	.word	0x69746375
2fff7af0:	61206e6f 	.word	0x61206e6f
2fff7af4:	30203a74 	.word	0x30203a74
2fff7af8:	0078      	.short	0x0078

2fff7afa <exception_start_str>:
2fff7afa:	450a      	.short	0x450a
2fff7afc:	70656378 	.word	0x70656378
2fff7b00:	6e6f6974 	.word	0x6e6f6974
2fff7b04:	646f6d20 	.word	0x646f6d20
2fff7b08:	78303d65 	.word	0x78303d65
	...

2fff7b0d <exception_end_str>:
2fff7b0d:	20          	.byte	0x20
2fff7b0e:	7461      	.short	0x7461
2fff7b10:	7830203a 	.word	0x7830203a
	...

2fff7b15 <dfsr_str>:
2fff7b15:	20          	.byte	0x20
2fff7b16:	4644      	.short	0x4644
2fff7b18:	3d205253 	.word	0x3d205253
2fff7b1c:	00783020 	.word	0x00783020

2fff7b20 <dfar_str>:
2fff7b20:	41464420 	.word	0x41464420
2fff7b24:	203d2052 	.word	0x203d2052
2fff7b28:	7830      	.short	0x7830
	...

2fff7b2b <ifsr_str>:
2fff7b2b:	20          	.byte	0x20
2fff7b2c:	52534649 	.word	0x52534649
2fff7b30:	30203d20 	.word	0x30203d20
2fff7b34:	0078      	.short	0x0078

2fff7b36 <ifar_str>:
2fff7b36:	4920      	.short	0x4920
2fff7b38:	20524146 	.word	0x20524146
2fff7b3c:	7830203d 	.word	0x7830203d
	...

2fff7b41 <end_error_str>:
2fff7b41:	0a          	.byte	0x0a
2fff7b42:	000d      	.short	0x000d
2fff7b44:	64646123 	.word	0x64646123
2fff7b48:	73736572 	.word	0x73736572
2fff7b4c:	6c65632d 	.word	0x6c65632d
2fff7b50:	736c      	.short	0x736c
2fff7b52:	00          	.byte	0x00
2fff7b53:	6c          	.byte	0x6c
2fff7b54:	78756e69 	.word	0x78756e69
2fff7b58:	6168702c 	.word	0x6168702c
2fff7b5c:	656c646e 	.word	0x656c646e
2fff7b60:	00          	.byte	0x00
2fff7b61:	2f          	.byte	0x2f
2fff7b62:	6c61      	.short	0x6c61
2fff7b64:	65736169 	.word	0x65736169
2fff7b68:	0073      	.short	0x0073
2fff7b6a:	6f63      	.short	0x6f63
2fff7b6c:	7461706d 	.word	0x7461706d
2fff7b70:	656c6269 	.word	0x656c6269
2fff7b74:	00          	.byte	0x00
2fff7b75:	41          	.byte	0x41
2fff7b76:	5353      	.short	0x5353
2fff7b78:	3a545245 	.word	0x3a545245
2fff7b7c:	3a732520 	.word	0x3a732520
2fff7b80:	000a7525 	.word	0x000a7525
2fff7b84:	2f62696c 	.word	0x2f62696c
2fff7b88:	6362696c 	.word	0x6362696c
2fff7b8c:	6972702f 	.word	0x6972702f
2fff7b90:	2e66746e 	.word	0x2e66746e
2fff7b94:	78300063 	.word	0x78300063
2fff7b98:	00000000 	.word	0x00000000

2fff7b9c <dyn_cfg__populator>:
2fff7b9c:	2fff5b10 2fff5b1a 2ffeb1e9              .[./.[./.../

2fff7ba8 <stm32mp_io__populator>:
2fff7ba8:	2fff5ee8 2fff5eee 2ffebb59              .^./.^./Y../

2fff7bb4 <stm32mp1_firewall__populator>:
2fff7bb4:	2fff5b10 2fff65ca 2ffec411              .[./.e./.../

2fff7bc0 <stm32mp_fuse__populator>:
2fff7bc0:	2fff5ee8 2fff7080 2ffeed5d              .^./.p./]../

2fff7bcc <__CPU_OPS_START__>:
2fff7bcc:	410fc070 	.word	0x410fc070
2fff7bd0:	2ffe98cc 	.word	0x2ffe98cc
2fff7bd4:	2fff7ab2 	.word	0x2fff7ab2
2fff7bd8:	2fff7ab2 	.word	0x2fff7ab2

2fff7bdc <__CPU_OPS_END__>:
2fff7bdc:	00000000 	.word	0x00000000

2fff7be0 <bl2_vector_table>:
2fff7be0:	eaffc506 	b	2ffe9000 <bl2_entrypoint>
2fff7be4:	eaffc60b 	b	2ffe9418 <report_exception>
2fff7be8:	eaffc60a 	b	2ffe9418 <report_exception>
2fff7bec:	eaffc60e 	b	2ffe942c <report_prefetch_abort>
2fff7bf0:	eaffc611 	b	2ffe943c <report_data_abort>
2fff7bf4:	eaffc607 	b	2ffe9418 <report_exception>
2fff7bf8:	eaffc606 	b	2ffe9418 <report_exception>
2fff7bfc:	eaffc605 	b	2ffe9418 <report_exception>

2fff7c00 <__enable_mmu_direct_svc_mon_from_thumb>:
2fff7c00:	4778      	bx	pc
2fff7c02:	e7fd      	b.n	2fff7c00 <__enable_mmu_direct_svc_mon_from_thumb>
2fff7c04:	eaffc697 	b	2ffe9668 <enable_mmu_direct_svc_mon>

2fff7c08 <__bl2_run_next_image_from_thumb>:
2fff7c08:	4778      	bx	pc
2fff7c0a:	e7fd      	b.n	2fff7c08 <__bl2_run_next_image_from_thumb>
2fff7c0c:	eaffc553 	b	2ffe9160 <bl2_run_next_image>

2fff7c10 <__spin_unlock_from_thumb>:
2fff7c10:	4778      	bx	pc
2fff7c12:	e7fd      	b.n	2fff7c10 <__spin_unlock_from_thumb>
2fff7c14:	eaffc591 	b	2ffe9260 <spin_unlock>

2fff7c18 <__flush_dcache_range_from_thumb>:
2fff7c18:	4778      	bx	pc
2fff7c1a:	e7fd      	b.n	2fff7c18 <__flush_dcache_range_from_thumb>
2fff7c1c:	eaffc60a 	b	2ffe944c <flush_dcache_range>

2fff7c20 <__spin_lock_from_thumb>:
2fff7c20:	4778      	bx	pc
2fff7c22:	e7fd      	b.n	2fff7c20 <__spin_lock_from_thumb>
2fff7c24:	eaffc584 	b	2ffe923c <spin_lock>

2fff7c28 <__console_register_from_arm>:
2fff7c28:	e51ff004 	ldr	pc, [pc, #-4]	@ 2fff7c2c <__console_register_from_arm+0x4>
2fff7c2c:	2ffec741 	.word	0x2ffec741

2fff7c30 <__clean_dcache_range_from_thumb>:
2fff7c30:	4778      	bx	pc
2fff7c32:	e7fd      	b.n	2fff7c30 <__clean_dcache_range_from_thumb>
2fff7c34:	eaffc613 	b	2ffe9488 <clean_dcache_range>

2fff7c38 <__RO_END_UNALIGNED__>:
	...
